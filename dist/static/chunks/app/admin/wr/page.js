/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/admin/wr/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Csirba%5COneDrive%5CDocuments%5Cequip-velo-for-nextjs%5Capp%5Cadmin%5Cwr%5Cpage.jsx&server=false!":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Csirba%5COneDrive%5CDocuments%5Cequip-velo-for-nextjs%5Capp%5Cadmin%5Cwr%5Cpage.jsx&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/admin/wr/page.jsx */ \"(app-pages-browser)/./app/admin/wr/page.jsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNzaXJiYSU1Q09uZURyaXZlJTVDRG9jdW1lbnRzJTVDZXF1aXAtdmVsby1mb3ItbmV4dGpzJTVDYXBwJTVDYWRtaW4lNUN3ciU1Q3BhZ2UuanN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz85MGI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcc2lyYmFcXFxcT25lRHJpdmVcXFxcRG9jdW1lbnRzXFxcXGVxdWlwLXZlbG8tZm9yLW5leHRqc1xcXFxhcHBcXFxcYWRtaW5cXFxcd3JcXFxccGFnZS5qc3hcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Csirba%5COneDrive%5CDocuments%5Cequip-velo-for-nextjs%5Capp%5Cadmin%5Cwr%5Cpage.jsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ exports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */ var __toString = Object.prototype.toString;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */ var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */ function parse(str, options) {\n    if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n    }\n    var obj = {};\n    var opt = options || {};\n    var dec = opt.decode || decode;\n    var index = 0;\n    while(index < str.length){\n        var eqIdx = str.indexOf(\"=\", index);\n        // no more cookie pairs\n        if (eqIdx === -1) {\n            break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n            endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        // only assign once\n        if (undefined === obj[key]) {\n            var val = str.slice(eqIdx + 1, endIdx).trim();\n            // quoted values\n            if (val.charCodeAt(0) === 0x22) {\n                val = val.slice(1, -1);\n            }\n            obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n    }\n    return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */ function serialize(name, val, options) {\n    var opt = options || {};\n    var enc = opt.encode || encode;\n    if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n    }\n    var value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n    }\n    var str = name + \"=\" + value;\n    if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n    }\n    if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n            throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (opt.secure) {\n        str += \"; Secure\";\n    }\n    if (opt.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(\"option priority is invalid\");\n        }\n    }\n    if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch(sameSite){\n            case true:\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(\"option sameSite is invalid\");\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */ function decode(str) {\n    return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n}\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */ function encode(val) {\n    return encodeURIComponent(val);\n}\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */ function isDate(val) {\n    return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */ function tryDecode(str, decode) {\n    try {\n        return decode(str);\n    } catch (e) {\n        return str;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/cookie/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/AtomicBlockUtils.js":
/*!*******************************************************!*\
  !*** ./node_modules/draft-js/lib/AtomicBlockUtils.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar BlockMapBuilder = __webpack_require__(/*! ./BlockMapBuilder */ \"(app-pages-browser)/./node_modules/draft-js/lib/BlockMapBuilder.js\");\nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar ContentBlock = __webpack_require__(/*! ./ContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\");\nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar moveBlockInContentState = __webpack_require__(/*! ./moveBlockInContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/moveBlockInContentState.js\");\nvar experimentalTreeDataSupport = gkx(\"draft_tree_data_support\");\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar List = Immutable.List, Repeat = Immutable.Repeat;\nvar AtomicBlockUtils = {\n    insertAtomicBlock: function insertAtomicBlock(editorState, entityKey, character) {\n        var contentState = editorState.getCurrentContent();\n        var selectionState = editorState.getSelection();\n        var afterRemoval = DraftModifier.removeRange(contentState, selectionState, \"backward\");\n        var targetSelection = afterRemoval.getSelectionAfter();\n        var afterSplit = DraftModifier.splitBlock(afterRemoval, targetSelection);\n        var insertionTarget = afterSplit.getSelectionAfter();\n        var asAtomicBlock = DraftModifier.setBlockType(afterSplit, insertionTarget, \"atomic\");\n        var charData = CharacterMetadata.create({\n            entity: entityKey\n        });\n        var atomicBlockConfig = {\n            key: generateRandomKey(),\n            type: \"atomic\",\n            text: character,\n            characterList: List(Repeat(charData, character.length))\n        };\n        var atomicDividerBlockConfig = {\n            key: generateRandomKey(),\n            type: \"unstyled\"\n        };\n        if (experimentalTreeDataSupport) {\n            atomicBlockConfig = _objectSpread({}, atomicBlockConfig, {\n                nextSibling: atomicDividerBlockConfig.key\n            });\n            atomicDividerBlockConfig = _objectSpread({}, atomicDividerBlockConfig, {\n                prevSibling: atomicBlockConfig.key\n            });\n        }\n        var fragmentArray = [\n            new ContentBlockRecord(atomicBlockConfig),\n            new ContentBlockRecord(atomicDividerBlockConfig)\n        ];\n        var fragment = BlockMapBuilder.createFromArray(fragmentArray);\n        var withAtomicBlock = DraftModifier.replaceWithFragment(asAtomicBlock, insertionTarget, fragment);\n        var newContent = withAtomicBlock.merge({\n            selectionBefore: selectionState,\n            selectionAfter: withAtomicBlock.getSelectionAfter().set(\"hasFocus\", true)\n        });\n        return EditorState.push(editorState, newContent, \"insert-fragment\");\n    },\n    moveAtomicBlock: function moveAtomicBlock(editorState, atomicBlock, targetRange, insertionMode) {\n        var contentState = editorState.getCurrentContent();\n        var selectionState = editorState.getSelection();\n        var withMovedAtomicBlock;\n        if (insertionMode === \"before\" || insertionMode === \"after\") {\n            var targetBlock = contentState.getBlockForKey(insertionMode === \"before\" ? targetRange.getStartKey() : targetRange.getEndKey());\n            withMovedAtomicBlock = moveBlockInContentState(contentState, atomicBlock, targetBlock, insertionMode);\n        } else {\n            var afterRemoval = DraftModifier.removeRange(contentState, targetRange, \"backward\");\n            var selectionAfterRemoval = afterRemoval.getSelectionAfter();\n            var _targetBlock = afterRemoval.getBlockForKey(selectionAfterRemoval.getFocusKey());\n            if (selectionAfterRemoval.getStartOffset() === 0) {\n                withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, \"before\");\n            } else if (selectionAfterRemoval.getEndOffset() === _targetBlock.getLength()) {\n                withMovedAtomicBlock = moveBlockInContentState(afterRemoval, atomicBlock, _targetBlock, \"after\");\n            } else {\n                var afterSplit = DraftModifier.splitBlock(afterRemoval, selectionAfterRemoval);\n                var selectionAfterSplit = afterSplit.getSelectionAfter();\n                var _targetBlock2 = afterSplit.getBlockForKey(selectionAfterSplit.getFocusKey());\n                withMovedAtomicBlock = moveBlockInContentState(afterSplit, atomicBlock, _targetBlock2, \"before\");\n            }\n        }\n        var newContent = withMovedAtomicBlock.merge({\n            selectionBefore: selectionState,\n            selectionAfter: withMovedAtomicBlock.getSelectionAfter().set(\"hasFocus\", true)\n        });\n        return EditorState.push(editorState, newContent, \"move-block\");\n    }\n};\nmodule.exports = AtomicBlockUtils;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/AtomicBlockUtils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/BlockMapBuilder.js":
/*!******************************************************!*\
  !*** ./node_modules/draft-js/lib/BlockMapBuilder.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar OrderedMap = Immutable.OrderedMap;\nvar BlockMapBuilder = {\n    createFromArray: function createFromArray(blocks) {\n        return OrderedMap(blocks.map(function(block) {\n            return [\n                block.getKey(),\n                block\n            ];\n        }));\n    }\n};\nmodule.exports = BlockMapBuilder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvQmxvY2tNYXBCdWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsdUdBQVc7QUFFbkMsSUFBSUMsYUFBYUYsVUFBVUUsVUFBVTtBQUNyQyxJQUFJQyxrQkFBa0I7SUFDcEJDLGlCQUFpQixTQUFTQSxnQkFBZ0JDLE1BQU07UUFDOUMsT0FBT0gsV0FBV0csT0FBT0MsR0FBRyxDQUFDLFNBQVVDLEtBQUs7WUFDMUMsT0FBTztnQkFBQ0EsTUFBTUMsTUFBTTtnQkFBSUQ7YUFBTTtRQUNoQztJQUNGO0FBQ0Y7QUFDQUUsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL0Jsb2NrTWFwQnVpbGRlci5qcz8xNGE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBJbW11dGFibGUgPSByZXF1aXJlKFwiaW1tdXRhYmxlXCIpO1xuXG52YXIgT3JkZXJlZE1hcCA9IEltbXV0YWJsZS5PcmRlcmVkTWFwO1xudmFyIEJsb2NrTWFwQnVpbGRlciA9IHtcbiAgY3JlYXRlRnJvbUFycmF5OiBmdW5jdGlvbiBjcmVhdGVGcm9tQXJyYXkoYmxvY2tzKSB7XG4gICAgcmV0dXJuIE9yZGVyZWRNYXAoYmxvY2tzLm1hcChmdW5jdGlvbiAoYmxvY2spIHtcbiAgICAgIHJldHVybiBbYmxvY2suZ2V0S2V5KCksIGJsb2NrXTtcbiAgICB9KSk7XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IEJsb2NrTWFwQnVpbGRlcjsiXSwibmFtZXMiOlsiSW1tdXRhYmxlIiwicmVxdWlyZSIsIk9yZGVyZWRNYXAiLCJCbG9ja01hcEJ1aWxkZXIiLCJjcmVhdGVGcm9tQXJyYXkiLCJibG9ja3MiLCJtYXAiLCJibG9jayIsImdldEtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/BlockMapBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/BlockTree.js":
/*!************************************************!*\
  !*** ./node_modules/draft-js/lib/BlockTree.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nvar findRangesImmutable = __webpack_require__(/*! ./findRangesImmutable */ \"(app-pages-browser)/./node_modules/draft-js/lib/findRangesImmutable.js\");\nvar getOwnObjectValues = __webpack_require__(/*! ./getOwnObjectValues */ \"(app-pages-browser)/./node_modules/draft-js/lib/getOwnObjectValues.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar List = Immutable.List, Repeat = Immutable.Repeat, Record = Immutable.Record;\nvar returnTrue = function returnTrue() {\n    return true;\n};\nvar defaultLeafRange = {\n    start: null,\n    end: null\n};\nvar LeafRange = Record(defaultLeafRange);\nvar defaultDecoratorRange = {\n    start: null,\n    end: null,\n    decoratorKey: null,\n    leaves: null\n};\nvar DecoratorRange = Record(defaultDecoratorRange);\nvar BlockTree = {\n    /**\n   * Generate a block tree for a given ContentBlock/decorator pair.\n   */ generate: function generate(contentState, block, decorator) {\n        var textLength = block.getLength();\n        if (!textLength) {\n            return List.of(new DecoratorRange({\n                start: 0,\n                end: 0,\n                decoratorKey: null,\n                leaves: List.of(new LeafRange({\n                    start: 0,\n                    end: 0\n                }))\n            }));\n        }\n        var leafSets = [];\n        var decorations = decorator ? decorator.getDecorations(block, contentState) : List(Repeat(null, textLength));\n        var chars = block.getCharacterList();\n        findRangesImmutable(decorations, areEqual, returnTrue, function(start, end) {\n            leafSets.push(new DecoratorRange({\n                start: start,\n                end: end,\n                decoratorKey: decorations.get(start),\n                leaves: generateLeaves(chars.slice(start, end).toList(), start)\n            }));\n        });\n        return List(leafSets);\n    },\n    fromJS: function fromJS(_ref) {\n        var leaves = _ref.leaves, other = _objectWithoutPropertiesLoose(_ref, [\n            \"leaves\"\n        ]);\n        return new DecoratorRange(_objectSpread({}, other, {\n            leaves: leaves != null ? List(Array.isArray(leaves) ? leaves : getOwnObjectValues(leaves)).map(function(leaf) {\n                return LeafRange(leaf);\n            }) : null\n        }));\n    }\n};\n/**\n * Generate LeafRange records for a given character list.\n */ function generateLeaves(characters, offset) {\n    var leaves = [];\n    var inlineStyles = characters.map(function(c) {\n        return c.getStyle();\n    }).toList();\n    findRangesImmutable(inlineStyles, areEqual, returnTrue, function(start, end) {\n        leaves.push(new LeafRange({\n            start: start + offset,\n            end: end + offset\n        }));\n    });\n    return List(leaves);\n}\nfunction areEqual(a, b) {\n    return a === b;\n}\nmodule.exports = BlockTree;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/BlockTree.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js":
/*!********************************************************!*\
  !*** ./node_modules/draft-js/lib/CharacterMetadata.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar _require = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\"), Map = _require.Map, OrderedSet = _require.OrderedSet, Record = _require.Record; // Immutable.map is typed such that the value for every key in the map\n// must be the same type\nvar EMPTY_SET = OrderedSet();\nvar defaultRecord = {\n    style: EMPTY_SET,\n    entity: null\n};\nvar CharacterMetadataRecord = Record(defaultRecord);\nvar CharacterMetadata = /*#__PURE__*/ function(_CharacterMetadataRec) {\n    _inheritsLoose(CharacterMetadata, _CharacterMetadataRec);\n    function CharacterMetadata() {\n        return _CharacterMetadataRec.apply(this, arguments) || this;\n    }\n    var _proto = CharacterMetadata.prototype;\n    _proto.getStyle = function getStyle() {\n        return this.get(\"style\");\n    };\n    _proto.getEntity = function getEntity() {\n        return this.get(\"entity\");\n    };\n    _proto.hasStyle = function hasStyle(style) {\n        return this.getStyle().includes(style);\n    };\n    CharacterMetadata.applyStyle = function applyStyle(record, style) {\n        var withStyle = record.set(\"style\", record.getStyle().add(style));\n        return CharacterMetadata.create(withStyle);\n    };\n    CharacterMetadata.removeStyle = function removeStyle(record, style) {\n        var withoutStyle = record.set(\"style\", record.getStyle().remove(style));\n        return CharacterMetadata.create(withoutStyle);\n    };\n    CharacterMetadata.applyEntity = function applyEntity(record, entityKey) {\n        var withEntity = record.getEntity() === entityKey ? record : record.set(\"entity\", entityKey);\n        return CharacterMetadata.create(withEntity);\n    } /**\n   * Use this function instead of the `CharacterMetadata` constructor.\n   * Since most content generally uses only a very small number of\n   * style/entity permutations, we can reuse these objects as often as\n   * possible.\n   */ ;\n    CharacterMetadata.create = function create(config) {\n        if (!config) {\n            return EMPTY;\n        }\n        var defaultConfig = {\n            style: EMPTY_SET,\n            entity: null\n        }; // Fill in unspecified properties, if necessary.\n        var configMap = Map(defaultConfig).merge(config);\n        var existing = pool.get(configMap);\n        if (existing) {\n            return existing;\n        }\n        var newCharacter = new CharacterMetadata(configMap);\n        pool = pool.set(configMap, newCharacter);\n        return newCharacter;\n    };\n    CharacterMetadata.fromJS = function fromJS(_ref) {\n        var style = _ref.style, entity = _ref.entity;\n        return new CharacterMetadata({\n            style: Array.isArray(style) ? OrderedSet(style) : style,\n            entity: Array.isArray(entity) ? OrderedSet(entity) : entity\n        });\n    };\n    return CharacterMetadata;\n}(CharacterMetadataRecord);\nvar EMPTY = new CharacterMetadata();\nvar pool = Map([\n    [\n        Map(defaultRecord),\n        EMPTY\n    ]\n]);\nCharacterMetadata.EMPTY = EMPTY;\nmodule.exports = CharacterMetadata;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/CompositeDraftDecorator.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/CompositeDraftDecorator.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar List = Immutable.List;\nvar DELIMITER = \".\";\n/**\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\n * instances to identify sections of a ContentBlock that should be rendered\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\n * be intended to stand out visually, be rendered as anchors, etc.\n *\n * The list of decorators supplied to the constructor will be used in the\n * order they are provided. This allows the caller to specify a priority for\n * string matching, in case of match collisions among decorators.\n *\n * For instance, I may have a link with a `#` in its text. Though this section\n * of text may match our hashtag decorator, it should not be treated as a\n * hashtag. I should therefore list my link DraftDecorator\n * before my hashtag DraftDecorator when constructing this composite\n * decorator instance.\n *\n * Thus, when a collision like this is encountered, the earlier match is\n * preserved and the new match is discarded.\n */ var CompositeDraftDecorator = /*#__PURE__*/ function() {\n    function CompositeDraftDecorator(decorators) {\n        _defineProperty(this, \"_decorators\", void 0);\n        // Copy the decorator array, since we use this array order to determine\n        // precedence of decoration matching. If the array is mutated externally,\n        // we don't want to be affected here.\n        this._decorators = decorators.slice();\n    }\n    var _proto = CompositeDraftDecorator.prototype;\n    _proto.getDecorations = function getDecorations(block, contentState) {\n        var decorations = Array(block.getText().length).fill(null);\n        this._decorators.forEach(function(/*object*/ decorator, /*number*/ ii) {\n            var counter = 0;\n            var strategy = decorator.strategy;\n            var callback = function callback(/*number*/ start, /*number*/ end) {\n                // Find out if any of our matching range is already occupied\n                // by another decorator. If so, discard the match. Otherwise, store\n                // the component key for rendering.\n                if (canOccupySlice(decorations, start, end)) {\n                    occupySlice(decorations, start, end, ii + DELIMITER + counter);\n                    counter++;\n                }\n            };\n            strategy(block, callback, contentState);\n        });\n        return List(decorations);\n    };\n    _proto.getComponentForKey = function getComponentForKey(key) {\n        var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n        return this._decorators[componentKey].component;\n    };\n    _proto.getPropsForKey = function getPropsForKey(key) {\n        var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n        return this._decorators[componentKey].props;\n    };\n    return CompositeDraftDecorator;\n}();\n/**\n * Determine whether we can occupy the specified slice of the decorations\n * array.\n */ function canOccupySlice(decorations, start, end) {\n    for(var ii = start; ii < end; ii++){\n        if (decorations[ii] != null) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Splice the specified component into our decoration array at the desired\n * range.\n */ function occupySlice(targetArr, start, end, componentKey) {\n    for(var ii = start; ii < end; ii++){\n        targetArr[ii] = componentKey;\n    }\n}\nmodule.exports = CompositeDraftDecorator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/CompositeDraftDecorator.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js":
/*!***************************************************!*\
  !*** ./node_modules/draft-js/lib/ContentBlock.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar findRangesImmutable = __webpack_require__(/*! ./findRangesImmutable */ \"(app-pages-browser)/./node_modules/draft-js/lib/findRangesImmutable.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar List = Immutable.List, Map = Immutable.Map, OrderedSet = Immutable.OrderedSet, Record = Immutable.Record, Repeat = Immutable.Repeat;\nvar EMPTY_SET = OrderedSet();\nvar defaultRecord = {\n    key: \"\",\n    type: \"unstyled\",\n    text: \"\",\n    characterList: List(),\n    depth: 0,\n    data: Map()\n};\nvar ContentBlockRecord = Record(defaultRecord);\nvar decorateCharacterList = function decorateCharacterList(config) {\n    if (!config) {\n        return config;\n    }\n    var characterList = config.characterList, text = config.text;\n    if (text && !characterList) {\n        config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\n    }\n    return config;\n};\nvar ContentBlock = /*#__PURE__*/ function(_ContentBlockRecord) {\n    _inheritsLoose(ContentBlock, _ContentBlockRecord);\n    function ContentBlock(config) {\n        return _ContentBlockRecord.call(this, decorateCharacterList(config)) || this;\n    }\n    var _proto = ContentBlock.prototype;\n    _proto.getKey = function getKey() {\n        return this.get(\"key\");\n    };\n    _proto.getType = function getType() {\n        return this.get(\"type\");\n    };\n    _proto.getText = function getText() {\n        return this.get(\"text\");\n    };\n    _proto.getCharacterList = function getCharacterList() {\n        return this.get(\"characterList\");\n    };\n    _proto.getLength = function getLength() {\n        return this.getText().length;\n    };\n    _proto.getDepth = function getDepth() {\n        return this.get(\"depth\");\n    };\n    _proto.getData = function getData() {\n        return this.get(\"data\");\n    };\n    _proto.getInlineStyleAt = function getInlineStyleAt(offset) {\n        var character = this.getCharacterList().get(offset);\n        return character ? character.getStyle() : EMPTY_SET;\n    };\n    _proto.getEntityAt = function getEntityAt(offset) {\n        var character = this.getCharacterList().get(offset);\n        return character ? character.getEntity() : null;\n    } /**\n   * Execute a callback for every contiguous range of styles within the block.\n   */ ;\n    _proto.findStyleRanges = function findStyleRanges(filterFn, callback) {\n        findRangesImmutable(this.getCharacterList(), haveEqualStyle, filterFn, callback);\n    } /**\n   * Execute a callback for every contiguous range of entities within the block.\n   */ ;\n    _proto.findEntityRanges = function findEntityRanges(filterFn, callback) {\n        findRangesImmutable(this.getCharacterList(), haveEqualEntity, filterFn, callback);\n    };\n    return ContentBlock;\n}(ContentBlockRecord);\nfunction haveEqualStyle(charA, charB) {\n    return charA.getStyle() === charB.getStyle();\n}\nfunction haveEqualEntity(charA, charB) {\n    return charA.getEntity() === charB.getEntity();\n}\nmodule.exports = ContentBlock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js":
/*!*******************************************************!*\
  !*** ./node_modules/draft-js/lib/ContentBlockNode.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This file is a fork of ContentBlock adding support for nesting references by\n * providing links to children, parent, prevSibling, and nextSibling.\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ \nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar findRangesImmutable = __webpack_require__(/*! ./findRangesImmutable */ \"(app-pages-browser)/./node_modules/draft-js/lib/findRangesImmutable.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar List = Immutable.List, Map = Immutable.Map, OrderedSet = Immutable.OrderedSet, Record = Immutable.Record, Repeat = Immutable.Repeat;\nvar EMPTY_SET = OrderedSet();\nvar defaultRecord = {\n    parent: null,\n    characterList: List(),\n    data: Map(),\n    depth: 0,\n    key: \"\",\n    text: \"\",\n    type: \"unstyled\",\n    children: List(),\n    prevSibling: null,\n    nextSibling: null\n};\nvar haveEqualStyle = function haveEqualStyle(charA, charB) {\n    return charA.getStyle() === charB.getStyle();\n};\nvar haveEqualEntity = function haveEqualEntity(charA, charB) {\n    return charA.getEntity() === charB.getEntity();\n};\nvar decorateCharacterList = function decorateCharacterList(config) {\n    if (!config) {\n        return config;\n    }\n    var characterList = config.characterList, text = config.text;\n    if (text && !characterList) {\n        config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\n    }\n    return config;\n};\nvar ContentBlockNode = /*#__PURE__*/ function(_ref) {\n    _inheritsLoose(ContentBlockNode, _ref);\n    function ContentBlockNode() {\n        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultRecord;\n        /* eslint-disable-next-line constructor-super */ return _ref.call(this, decorateCharacterList(props)) || this;\n    }\n    var _proto = ContentBlockNode.prototype;\n    _proto.getKey = function getKey() {\n        return this.get(\"key\");\n    };\n    _proto.getType = function getType() {\n        return this.get(\"type\");\n    };\n    _proto.getText = function getText() {\n        return this.get(\"text\");\n    };\n    _proto.getCharacterList = function getCharacterList() {\n        return this.get(\"characterList\");\n    };\n    _proto.getLength = function getLength() {\n        return this.getText().length;\n    };\n    _proto.getDepth = function getDepth() {\n        return this.get(\"depth\");\n    };\n    _proto.getData = function getData() {\n        return this.get(\"data\");\n    };\n    _proto.getInlineStyleAt = function getInlineStyleAt(offset) {\n        var character = this.getCharacterList().get(offset);\n        return character ? character.getStyle() : EMPTY_SET;\n    };\n    _proto.getEntityAt = function getEntityAt(offset) {\n        var character = this.getCharacterList().get(offset);\n        return character ? character.getEntity() : null;\n    };\n    _proto.getChildKeys = function getChildKeys() {\n        return this.get(\"children\");\n    };\n    _proto.getParentKey = function getParentKey() {\n        return this.get(\"parent\");\n    };\n    _proto.getPrevSiblingKey = function getPrevSiblingKey() {\n        return this.get(\"prevSibling\");\n    };\n    _proto.getNextSiblingKey = function getNextSiblingKey() {\n        return this.get(\"nextSibling\");\n    };\n    _proto.findStyleRanges = function findStyleRanges(filterFn, callback) {\n        findRangesImmutable(this.getCharacterList(), haveEqualStyle, filterFn, callback);\n    };\n    _proto.findEntityRanges = function findEntityRanges(filterFn, callback) {\n        findRangesImmutable(this.getCharacterList(), haveEqualEntity, filterFn, callback);\n    };\n    return ContentBlockNode;\n}(Record(defaultRecord));\nmodule.exports = ContentBlockNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/ContentState.js":
/*!***************************************************!*\
  !*** ./node_modules/draft-js/lib/ContentState.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar BlockMapBuilder = __webpack_require__(/*! ./BlockMapBuilder */ \"(app-pages-browser)/./node_modules/draft-js/lib/BlockMapBuilder.js\");\nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar ContentBlock = __webpack_require__(/*! ./ContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\");\nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar DraftEntity = __webpack_require__(/*! ./DraftEntity */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEntity.js\");\nvar SelectionState = __webpack_require__(/*! ./SelectionState */ \"(app-pages-browser)/./node_modules/draft-js/lib/SelectionState.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar getOwnObjectValues = __webpack_require__(/*! ./getOwnObjectValues */ \"(app-pages-browser)/./node_modules/draft-js/lib/getOwnObjectValues.js\");\nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar sanitizeDraftText = __webpack_require__(/*! ./sanitizeDraftText */ \"(app-pages-browser)/./node_modules/draft-js/lib/sanitizeDraftText.js\");\nvar List = Immutable.List, Record = Immutable.Record, Repeat = Immutable.Repeat, ImmutableMap = Immutable.Map, OrderedMap = Immutable.OrderedMap;\nvar defaultRecord = {\n    entityMap: null,\n    blockMap: null,\n    selectionBefore: null,\n    selectionAfter: null\n};\nvar ContentStateRecord = Record(defaultRecord);\n/* $FlowFixMe[signature-verification-failure] Supressing a `signature-\n * verification-failure` error here. TODO: T65949050 Clean up the branch for\n * this GK */ var ContentBlockNodeRecord = gkx(\"draft_tree_data_support\") ? ContentBlockNode : ContentBlock;\nvar ContentState = /*#__PURE__*/ function(_ContentStateRecord) {\n    _inheritsLoose(ContentState, _ContentStateRecord);\n    function ContentState() {\n        return _ContentStateRecord.apply(this, arguments) || this;\n    }\n    var _proto = ContentState.prototype;\n    _proto.getEntityMap = function getEntityMap() {\n        // TODO: update this when we fully remove DraftEntity\n        return DraftEntity;\n    };\n    _proto.getBlockMap = function getBlockMap() {\n        return this.get(\"blockMap\");\n    };\n    _proto.getSelectionBefore = function getSelectionBefore() {\n        return this.get(\"selectionBefore\");\n    };\n    _proto.getSelectionAfter = function getSelectionAfter() {\n        return this.get(\"selectionAfter\");\n    };\n    _proto.getBlockForKey = function getBlockForKey(key) {\n        var block = this.getBlockMap().get(key);\n        return block;\n    };\n    _proto.getKeyBefore = function getKeyBefore(key) {\n        return this.getBlockMap().reverse().keySeq().skipUntil(function(v) {\n            return v === key;\n        }).skip(1).first();\n    };\n    _proto.getKeyAfter = function getKeyAfter(key) {\n        return this.getBlockMap().keySeq().skipUntil(function(v) {\n            return v === key;\n        }).skip(1).first();\n    };\n    _proto.getBlockAfter = function getBlockAfter(key) {\n        return this.getBlockMap().skipUntil(function(_, k) {\n            return k === key;\n        }).skip(1).first();\n    };\n    _proto.getBlockBefore = function getBlockBefore(key) {\n        return this.getBlockMap().reverse().skipUntil(function(_, k) {\n            return k === key;\n        }).skip(1).first();\n    };\n    _proto.getBlocksAsArray = function getBlocksAsArray() {\n        return this.getBlockMap().toArray();\n    };\n    _proto.getFirstBlock = function getFirstBlock() {\n        return this.getBlockMap().first();\n    };\n    _proto.getLastBlock = function getLastBlock() {\n        return this.getBlockMap().last();\n    };\n    _proto.getPlainText = function getPlainText(delimiter) {\n        return this.getBlockMap().map(function(block) {\n            return block ? block.getText() : \"\";\n        }).join(delimiter || \"\\n\");\n    };\n    _proto.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n        // TODO: update this when we fully remove DraftEntity\n        return DraftEntity.__getLastCreatedEntityKey();\n    };\n    _proto.hasText = function hasText() {\n        var blockMap = this.getBlockMap();\n        return blockMap.size > 1 || // make sure that there are no zero width space chars\n        escape(blockMap.first().getText()).replace(/%u200B/g, \"\").length > 0;\n    };\n    _proto.createEntity = function createEntity(type, mutability, data) {\n        // TODO: update this when we fully remove DraftEntity\n        DraftEntity.__create(type, mutability, data);\n        return this;\n    };\n    _proto.mergeEntityData = function mergeEntityData(key, toMerge) {\n        // TODO: update this when we fully remove DraftEntity\n        DraftEntity.__mergeData(key, toMerge);\n        return this;\n    };\n    _proto.replaceEntityData = function replaceEntityData(key, newData) {\n        // TODO: update this when we fully remove DraftEntity\n        DraftEntity.__replaceData(key, newData);\n        return this;\n    };\n    _proto.addEntity = function addEntity(instance) {\n        // TODO: update this when we fully remove DraftEntity\n        DraftEntity.__add(instance);\n        return this;\n    };\n    _proto.getEntity = function getEntity(key) {\n        // TODO: update this when we fully remove DraftEntity\n        return DraftEntity.__get(key);\n    };\n    _proto.getAllEntities = function getAllEntities() {\n        return DraftEntity.__getAll();\n    };\n    _proto.loadWithEntities = function loadWithEntities(entities) {\n        return DraftEntity.__loadWithEntities(entities);\n    };\n    ContentState.createFromBlockArray = function createFromBlockArray(blocks, entityMap) {\n        // TODO: remove this when we completely deprecate the old entity API\n        var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n        var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n        var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n        return new ContentState({\n            blockMap: blockMap,\n            entityMap: entityMap || DraftEntity,\n            selectionBefore: selectionState,\n            selectionAfter: selectionState\n        });\n    };\n    ContentState.createFromText = function createFromText(text) {\n        var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n        var strings = text.split(delimiter);\n        var blocks = strings.map(function(block) {\n            block = sanitizeDraftText(block);\n            return new ContentBlockNodeRecord({\n                key: generateRandomKey(),\n                text: block,\n                type: \"unstyled\",\n                characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n            });\n        });\n        return ContentState.createFromBlockArray(blocks);\n    };\n    ContentState.fromJS = function fromJS(state) {\n        return new ContentState(_objectSpread({}, state, {\n            blockMap: OrderedMap(state.blockMap).map(ContentState.createContentBlockFromJS),\n            selectionBefore: new SelectionState(state.selectionBefore),\n            selectionAfter: new SelectionState(state.selectionAfter)\n        }));\n    };\n    ContentState.createContentBlockFromJS = function createContentBlockFromJS(block) {\n        var characterList = block.characterList;\n        return new ContentBlockNodeRecord(_objectSpread({}, block, {\n            data: ImmutableMap(block.data),\n            characterList: characterList != null ? List((Array.isArray(characterList) ? characterList : getOwnObjectValues(characterList)).map(function(c) {\n                return CharacterMetadata.fromJS(c);\n            })) : undefined\n        }));\n    };\n    return ContentState;\n}(ContentStateRecord);\nmodule.exports = ContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/ContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/ContentStateInlineStyle.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/ContentStateInlineStyle.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar _require = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\"), Map = _require.Map;\nvar ContentStateInlineStyle = {\n    add: function add(contentState, selectionState, inlineStyle) {\n        return modifyInlineStyle(contentState, selectionState, inlineStyle, true);\n    },\n    remove: function remove(contentState, selectionState, inlineStyle) {\n        return modifyInlineStyle(contentState, selectionState, inlineStyle, false);\n    }\n};\nfunction modifyInlineStyle(contentState, selectionState, inlineStyle, addOrRemove) {\n    var blockMap = contentState.getBlockMap();\n    var startKey = selectionState.getStartKey();\n    var startOffset = selectionState.getStartOffset();\n    var endKey = selectionState.getEndKey();\n    var endOffset = selectionState.getEndOffset();\n    var newBlocks = blockMap.skipUntil(function(_, k) {\n        return k === startKey;\n    }).takeUntil(function(_, k) {\n        return k === endKey;\n    }).concat(Map([\n        [\n            endKey,\n            blockMap.get(endKey)\n        ]\n    ])).map(function(block, blockKey) {\n        var sliceStart;\n        var sliceEnd;\n        if (startKey === endKey) {\n            sliceStart = startOffset;\n            sliceEnd = endOffset;\n        } else {\n            sliceStart = blockKey === startKey ? startOffset : 0;\n            sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n        }\n        var chars = block.getCharacterList();\n        var current;\n        while(sliceStart < sliceEnd){\n            current = chars.get(sliceStart);\n            chars = chars.set(sliceStart, addOrRemove ? CharacterMetadata.applyStyle(current, inlineStyle) : CharacterMetadata.removeStyle(current, inlineStyle));\n            sliceStart++;\n        }\n        return block.set(\"characterList\", chars);\n    });\n    return contentState.merge({\n        blockMap: blockMap.merge(newBlocks),\n        selectionBefore: selectionState,\n        selectionAfter: selectionState\n    });\n}\nmodule.exports = ContentStateInlineStyle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvQ29udGVudFN0YXRlSW5saW5lU3R5bGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxvQkFBb0JDLG1CQUFPQSxDQUFDLGlHQUFxQjtBQUVyRCxJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQyx1R0FBVyxHQUM5QkUsTUFBTUQsU0FBU0MsR0FBRztBQUV0QixJQUFJQywwQkFBMEI7SUFDNUJDLEtBQUssU0FBU0EsSUFBSUMsWUFBWSxFQUFFQyxjQUFjLEVBQUVDLFdBQVc7UUFDekQsT0FBT0Msa0JBQWtCSCxjQUFjQyxnQkFBZ0JDLGFBQWE7SUFDdEU7SUFDQUUsUUFBUSxTQUFTQSxPQUFPSixZQUFZLEVBQUVDLGNBQWMsRUFBRUMsV0FBVztRQUMvRCxPQUFPQyxrQkFBa0JILGNBQWNDLGdCQUFnQkMsYUFBYTtJQUN0RTtBQUNGO0FBRUEsU0FBU0Msa0JBQWtCSCxZQUFZLEVBQUVDLGNBQWMsRUFBRUMsV0FBVyxFQUFFRyxXQUFXO0lBQy9FLElBQUlDLFdBQVdOLGFBQWFPLFdBQVc7SUFDdkMsSUFBSUMsV0FBV1AsZUFBZVEsV0FBVztJQUN6QyxJQUFJQyxjQUFjVCxlQUFlVSxjQUFjO0lBQy9DLElBQUlDLFNBQVNYLGVBQWVZLFNBQVM7SUFDckMsSUFBSUMsWUFBWWIsZUFBZWMsWUFBWTtJQUMzQyxJQUFJQyxZQUFZVixTQUFTVyxTQUFTLENBQUMsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQy9DLE9BQU9BLE1BQU1YO0lBQ2YsR0FBR1ksU0FBUyxDQUFDLFNBQVVGLENBQUMsRUFBRUMsQ0FBQztRQUN6QixPQUFPQSxNQUFNUDtJQUNmLEdBQUdTLE1BQU0sQ0FBQ3hCLElBQUk7UUFBQztZQUFDZTtZQUFRTixTQUFTZ0IsR0FBRyxDQUFDVjtTQUFRO0tBQUMsR0FBR1csR0FBRyxDQUFDLFNBQVVDLEtBQUssRUFBRUMsUUFBUTtRQUM1RSxJQUFJQztRQUNKLElBQUlDO1FBRUosSUFBSW5CLGFBQWFJLFFBQVE7WUFDdkJjLGFBQWFoQjtZQUNiaUIsV0FBV2I7UUFDYixPQUFPO1lBQ0xZLGFBQWFELGFBQWFqQixXQUFXRSxjQUFjO1lBQ25EaUIsV0FBV0YsYUFBYWIsU0FBU0UsWUFBWVUsTUFBTUksU0FBUztRQUM5RDtRQUVBLElBQUlDLFFBQVFMLE1BQU1NLGdCQUFnQjtRQUNsQyxJQUFJQztRQUVKLE1BQU9MLGFBQWFDLFNBQVU7WUFDNUJJLFVBQVVGLE1BQU1QLEdBQUcsQ0FBQ0k7WUFDcEJHLFFBQVFBLE1BQU1HLEdBQUcsQ0FBQ04sWUFBWXJCLGNBQWNYLGtCQUFrQnVDLFVBQVUsQ0FBQ0YsU0FBUzdCLGVBQWVSLGtCQUFrQndDLFdBQVcsQ0FBQ0gsU0FBUzdCO1lBQ3hJd0I7UUFDRjtRQUVBLE9BQU9GLE1BQU1RLEdBQUcsQ0FBQyxpQkFBaUJIO0lBQ3BDO0lBQ0EsT0FBTzdCLGFBQWFtQyxLQUFLLENBQUM7UUFDeEI3QixVQUFVQSxTQUFTNkIsS0FBSyxDQUFDbkI7UUFDekJvQixpQkFBaUJuQztRQUNqQm9DLGdCQUFnQnBDO0lBQ2xCO0FBQ0Y7QUFFQXFDLE9BQU9DLE9BQU8sR0FBR3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvQ29udGVudFN0YXRlSW5saW5lU3R5bGUuanM/NzlkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2hhcmFjdGVyTWV0YWRhdGEgPSByZXF1aXJlKFwiLi9DaGFyYWN0ZXJNZXRhZGF0YVwiKTtcblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZShcImltbXV0YWJsZVwiKSxcbiAgICBNYXAgPSBfcmVxdWlyZS5NYXA7XG5cbnZhciBDb250ZW50U3RhdGVJbmxpbmVTdHlsZSA9IHtcbiAgYWRkOiBmdW5jdGlvbiBhZGQoY29udGVudFN0YXRlLCBzZWxlY3Rpb25TdGF0ZSwgaW5saW5lU3R5bGUpIHtcbiAgICByZXR1cm4gbW9kaWZ5SW5saW5lU3R5bGUoY29udGVudFN0YXRlLCBzZWxlY3Rpb25TdGF0ZSwgaW5saW5lU3R5bGUsIHRydWUpO1xuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShjb250ZW50U3RhdGUsIHNlbGVjdGlvblN0YXRlLCBpbmxpbmVTdHlsZSkge1xuICAgIHJldHVybiBtb2RpZnlJbmxpbmVTdHlsZShjb250ZW50U3RhdGUsIHNlbGVjdGlvblN0YXRlLCBpbmxpbmVTdHlsZSwgZmFsc2UpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBtb2RpZnlJbmxpbmVTdHlsZShjb250ZW50U3RhdGUsIHNlbGVjdGlvblN0YXRlLCBpbmxpbmVTdHlsZSwgYWRkT3JSZW1vdmUpIHtcbiAgdmFyIGJsb2NrTWFwID0gY29udGVudFN0YXRlLmdldEJsb2NrTWFwKCk7XG4gIHZhciBzdGFydEtleSA9IHNlbGVjdGlvblN0YXRlLmdldFN0YXJ0S2V5KCk7XG4gIHZhciBzdGFydE9mZnNldCA9IHNlbGVjdGlvblN0YXRlLmdldFN0YXJ0T2Zmc2V0KCk7XG4gIHZhciBlbmRLZXkgPSBzZWxlY3Rpb25TdGF0ZS5nZXRFbmRLZXkoKTtcbiAgdmFyIGVuZE9mZnNldCA9IHNlbGVjdGlvblN0YXRlLmdldEVuZE9mZnNldCgpO1xuICB2YXIgbmV3QmxvY2tzID0gYmxvY2tNYXAuc2tpcFVudGlsKGZ1bmN0aW9uIChfLCBrKSB7XG4gICAgcmV0dXJuIGsgPT09IHN0YXJ0S2V5O1xuICB9KS50YWtlVW50aWwoZnVuY3Rpb24gKF8sIGspIHtcbiAgICByZXR1cm4gayA9PT0gZW5kS2V5O1xuICB9KS5jb25jYXQoTWFwKFtbZW5kS2V5LCBibG9ja01hcC5nZXQoZW5kS2V5KV1dKSkubWFwKGZ1bmN0aW9uIChibG9jaywgYmxvY2tLZXkpIHtcbiAgICB2YXIgc2xpY2VTdGFydDtcbiAgICB2YXIgc2xpY2VFbmQ7XG5cbiAgICBpZiAoc3RhcnRLZXkgPT09IGVuZEtleSkge1xuICAgICAgc2xpY2VTdGFydCA9IHN0YXJ0T2Zmc2V0O1xuICAgICAgc2xpY2VFbmQgPSBlbmRPZmZzZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNsaWNlU3RhcnQgPSBibG9ja0tleSA9PT0gc3RhcnRLZXkgPyBzdGFydE9mZnNldCA6IDA7XG4gICAgICBzbGljZUVuZCA9IGJsb2NrS2V5ID09PSBlbmRLZXkgPyBlbmRPZmZzZXQgOiBibG9jay5nZXRMZW5ndGgoKTtcbiAgICB9XG5cbiAgICB2YXIgY2hhcnMgPSBibG9jay5nZXRDaGFyYWN0ZXJMaXN0KCk7XG4gICAgdmFyIGN1cnJlbnQ7XG5cbiAgICB3aGlsZSAoc2xpY2VTdGFydCA8IHNsaWNlRW5kKSB7XG4gICAgICBjdXJyZW50ID0gY2hhcnMuZ2V0KHNsaWNlU3RhcnQpO1xuICAgICAgY2hhcnMgPSBjaGFycy5zZXQoc2xpY2VTdGFydCwgYWRkT3JSZW1vdmUgPyBDaGFyYWN0ZXJNZXRhZGF0YS5hcHBseVN0eWxlKGN1cnJlbnQsIGlubGluZVN0eWxlKSA6IENoYXJhY3Rlck1ldGFkYXRhLnJlbW92ZVN0eWxlKGN1cnJlbnQsIGlubGluZVN0eWxlKSk7XG4gICAgICBzbGljZVN0YXJ0Kys7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJsb2NrLnNldCgnY2hhcmFjdGVyTGlzdCcsIGNoYXJzKTtcbiAgfSk7XG4gIHJldHVybiBjb250ZW50U3RhdGUubWVyZ2Uoe1xuICAgIGJsb2NrTWFwOiBibG9ja01hcC5tZXJnZShuZXdCbG9ja3MpLFxuICAgIHNlbGVjdGlvbkJlZm9yZTogc2VsZWN0aW9uU3RhdGUsXG4gICAgc2VsZWN0aW9uQWZ0ZXI6IHNlbGVjdGlvblN0YXRlXG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbnRlbnRTdGF0ZUlubGluZVN0eWxlOyJdLCJuYW1lcyI6WyJDaGFyYWN0ZXJNZXRhZGF0YSIsInJlcXVpcmUiLCJfcmVxdWlyZSIsIk1hcCIsIkNvbnRlbnRTdGF0ZUlubGluZVN0eWxlIiwiYWRkIiwiY29udGVudFN0YXRlIiwic2VsZWN0aW9uU3RhdGUiLCJpbmxpbmVTdHlsZSIsIm1vZGlmeUlubGluZVN0eWxlIiwicmVtb3ZlIiwiYWRkT3JSZW1vdmUiLCJibG9ja01hcCIsImdldEJsb2NrTWFwIiwic3RhcnRLZXkiLCJnZXRTdGFydEtleSIsInN0YXJ0T2Zmc2V0IiwiZ2V0U3RhcnRPZmZzZXQiLCJlbmRLZXkiLCJnZXRFbmRLZXkiLCJlbmRPZmZzZXQiLCJnZXRFbmRPZmZzZXQiLCJuZXdCbG9ja3MiLCJza2lwVW50aWwiLCJfIiwiayIsInRha2VVbnRpbCIsImNvbmNhdCIsImdldCIsIm1hcCIsImJsb2NrIiwiYmxvY2tLZXkiLCJzbGljZVN0YXJ0Iiwic2xpY2VFbmQiLCJnZXRMZW5ndGgiLCJjaGFycyIsImdldENoYXJhY3Rlckxpc3QiLCJjdXJyZW50Iiwic2V0IiwiYXBwbHlTdHlsZSIsInJlbW92ZVN0eWxlIiwibWVyZ2UiLCJzZWxlY3Rpb25CZWZvcmUiLCJzZWxlY3Rpb25BZnRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/ContentStateInlineStyle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DOMObserver.js":
/*!**************************************************!*\
  !*** ./node_modules/draft-js/lib/DOMObserver.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar findAncestorOffsetKey = __webpack_require__(/*! ./findAncestorOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/findAncestorOffsetKey.js\");\nvar getWindowForNode = __webpack_require__(/*! ./getWindowForNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getWindowForNode.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar Map = Immutable.Map;\n// Heavily based on Prosemirror's DOMObserver https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\nvar DOM_OBSERVER_OPTIONS = {\n    subtree: true,\n    characterData: true,\n    childList: true,\n    characterDataOldValue: false,\n    attributes: false\n}; // IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nvar USE_CHAR_DATA = UserAgent.isBrowser(\"IE <= 11\");\nvar DOMObserver = /*#__PURE__*/ function() {\n    function DOMObserver(container) {\n        var _this = this;\n        _defineProperty(this, \"observer\", void 0);\n        _defineProperty(this, \"container\", void 0);\n        _defineProperty(this, \"mutations\", void 0);\n        _defineProperty(this, \"onCharData\", void 0);\n        this.container = container;\n        this.mutations = Map();\n        var containerWindow = getWindowForNode(container);\n        if (containerWindow.MutationObserver && !USE_CHAR_DATA) {\n            this.observer = new containerWindow.MutationObserver(function(mutations) {\n                return _this.registerMutations(mutations);\n            });\n        } else {\n            this.onCharData = function(e) {\n                !(e.target instanceof Node) ?  true ? invariant(false, \"Expected target to be an instance of Node\") : 0 : void 0;\n                _this.registerMutation({\n                    type: \"characterData\",\n                    target: e.target\n                });\n            };\n        }\n    }\n    var _proto = DOMObserver.prototype;\n    _proto.start = function start() {\n        if (this.observer) {\n            this.observer.observe(this.container, DOM_OBSERVER_OPTIONS);\n        } else {\n            /* $FlowFixMe[incompatible-call] (>=0.68.0 site=www,mobile) This event\n       * type is not defined by Flow's standard library */ this.container.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        }\n    };\n    _proto.stopAndFlushMutations = function stopAndFlushMutations() {\n        var observer = this.observer;\n        if (observer) {\n            this.registerMutations(observer.takeRecords());\n            observer.disconnect();\n        } else {\n            /* $FlowFixMe[incompatible-call] (>=0.68.0 site=www,mobile) This event\n       * type is not defined by Flow's standard library */ this.container.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        }\n        var mutations = this.mutations;\n        this.mutations = Map();\n        return mutations;\n    };\n    _proto.registerMutations = function registerMutations(mutations) {\n        for(var i = 0; i < mutations.length; i++){\n            this.registerMutation(mutations[i]);\n        }\n    };\n    _proto.getMutationTextContent = function getMutationTextContent(mutation) {\n        var type = mutation.type, target = mutation.target, removedNodes = mutation.removedNodes;\n        if (type === \"characterData\") {\n            // When `textContent` is '', there is a race condition that makes\n            // getting the offsetKey from the target not possible.\n            // These events are also followed by a `childList`, which is the one\n            // we are able to retrieve the offsetKey and apply the '' text.\n            if (target.textContent !== \"\") {\n                // IE 11 considers the enter keypress that concludes the composition\n                // as an input char. This strips that newline character so the draft\n                // state does not receive spurious newlines.\n                if (USE_CHAR_DATA) {\n                    return target.textContent.replace(\"\\n\", \"\");\n                }\n                return target.textContent;\n            }\n        } else if (type === \"childList\") {\n            if (removedNodes && removedNodes.length) {\n                // `characterData` events won't happen or are ignored when\n                // removing the last character of a leaf node, what happens\n                // instead is a `childList` event with a `removedNodes` array.\n                // For this case the textContent should be '' and\n                // `DraftModifier.replaceText` will make sure the content is\n                // updated properly.\n                return \"\";\n            } else if (target.textContent !== \"\") {\n                // Typing Chinese in an empty block in MS Edge results in a\n                // `childList` event with non-empty textContent.\n                // See https://github.com/facebook/draft-js/issues/2082\n                return target.textContent;\n            }\n        }\n        return null;\n    };\n    _proto.registerMutation = function registerMutation(mutation) {\n        var textContent = this.getMutationTextContent(mutation);\n        if (textContent != null) {\n            var offsetKey = nullthrows(findAncestorOffsetKey(mutation.target));\n            this.mutations = this.mutations.set(offsetKey, textContent);\n        }\n    };\n    return DOMObserver;\n}();\nmodule.exports = DOMObserver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DOMObserver.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftBlockRenderMap.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/DefaultDraftBlockRenderMap.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar cx = __webpack_require__(/*! fbjs/lib/cx */ \"(app-pages-browser)/./node_modules/fbjs/lib/cx.js\");\nvar _require = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\"), Map = _require.Map;\nvar UL_WRAP = React.createElement(\"ul\", {\n    className: cx(\"public/DraftStyleDefault/ul\")\n});\nvar OL_WRAP = React.createElement(\"ol\", {\n    className: cx(\"public/DraftStyleDefault/ol\")\n});\nvar PRE_WRAP = React.createElement(\"pre\", {\n    className: cx(\"public/DraftStyleDefault/pre\")\n});\nvar DefaultDraftBlockRenderMap = Map({\n    \"header-one\": {\n        element: \"h1\"\n    },\n    \"header-two\": {\n        element: \"h2\"\n    },\n    \"header-three\": {\n        element: \"h3\"\n    },\n    \"header-four\": {\n        element: \"h4\"\n    },\n    \"header-five\": {\n        element: \"h5\"\n    },\n    \"header-six\": {\n        element: \"h6\"\n    },\n    section: {\n        element: \"section\"\n    },\n    article: {\n        element: \"article\"\n    },\n    \"unordered-list-item\": {\n        element: \"li\",\n        wrapper: UL_WRAP\n    },\n    \"ordered-list-item\": {\n        element: \"li\",\n        wrapper: OL_WRAP\n    },\n    blockquote: {\n        element: \"blockquote\"\n    },\n    atomic: {\n        element: \"figure\"\n    },\n    \"code-block\": {\n        element: \"pre\",\n        wrapper: PRE_WRAP\n    },\n    unstyled: {\n        element: \"div\",\n        aliasedElements: [\n            \"p\"\n        ]\n    }\n});\nmodule.exports = DefaultDraftBlockRenderMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRGVmYXVsdERyYWZ0QmxvY2tSZW5kZXJNYXAuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxRQUFRQyxtQkFBT0EsQ0FBQyxtRkFBTztBQUUzQixJQUFJQyxLQUFLRCxtQkFBT0EsQ0FBQyxzRUFBYTtBQUU5QixJQUFJRSxXQUFXRixtQkFBT0EsQ0FBQyx1R0FBVyxHQUM5QkcsTUFBTUQsU0FBU0MsR0FBRztBQUV0QixJQUFJQyxVQUFVTCxNQUFNTSxhQUFhLENBQUMsTUFBTTtJQUN0Q0MsV0FBV0wsR0FBRztBQUNoQjtBQUNBLElBQUlNLFVBQVVSLE1BQU1NLGFBQWEsQ0FBQyxNQUFNO0lBQ3RDQyxXQUFXTCxHQUFHO0FBQ2hCO0FBQ0EsSUFBSU8sV0FBV1QsTUFBTU0sYUFBYSxDQUFDLE9BQU87SUFDeENDLFdBQVdMLEdBQUc7QUFDaEI7QUFDQSxJQUFJUSw2QkFBNkJOLElBQUk7SUFDbkMsY0FBYztRQUNaTyxTQUFTO0lBQ1g7SUFDQSxjQUFjO1FBQ1pBLFNBQVM7SUFDWDtJQUNBLGdCQUFnQjtRQUNkQSxTQUFTO0lBQ1g7SUFDQSxlQUFlO1FBQ2JBLFNBQVM7SUFDWDtJQUNBLGVBQWU7UUFDYkEsU0FBUztJQUNYO0lBQ0EsY0FBYztRQUNaQSxTQUFTO0lBQ1g7SUFDQUMsU0FBUztRQUNQRCxTQUFTO0lBQ1g7SUFDQUUsU0FBUztRQUNQRixTQUFTO0lBQ1g7SUFDQSx1QkFBdUI7UUFDckJBLFNBQVM7UUFDVEcsU0FBU1Q7SUFDWDtJQUNBLHFCQUFxQjtRQUNuQk0sU0FBUztRQUNURyxTQUFTTjtJQUNYO0lBQ0FPLFlBQVk7UUFDVkosU0FBUztJQUNYO0lBQ0FLLFFBQVE7UUFDTkwsU0FBUztJQUNYO0lBQ0EsY0FBYztRQUNaQSxTQUFTO1FBQ1RHLFNBQVNMO0lBQ1g7SUFDQVEsVUFBVTtRQUNSTixTQUFTO1FBQ1RPLGlCQUFpQjtZQUFDO1NBQUk7SUFDeEI7QUFDRjtBQUNBQyxPQUFPQyxPQUFPLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRGVmYXVsdERyYWZ0QmxvY2tSZW5kZXJNYXAuanM/ZjVhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5cbnZhciBjeCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9jeFwiKTtcblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZShcImltbXV0YWJsZVwiKSxcbiAgICBNYXAgPSBfcmVxdWlyZS5NYXA7XG5cbnZhciBVTF9XUkFQID0gUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIHtcbiAgY2xhc3NOYW1lOiBjeCgncHVibGljL0RyYWZ0U3R5bGVEZWZhdWx0L3VsJylcbn0pO1xudmFyIE9MX1dSQVAgPSBSZWFjdC5jcmVhdGVFbGVtZW50KFwib2xcIiwge1xuICBjbGFzc05hbWU6IGN4KCdwdWJsaWMvRHJhZnRTdHlsZURlZmF1bHQvb2wnKVxufSk7XG52YXIgUFJFX1dSQVAgPSBSZWFjdC5jcmVhdGVFbGVtZW50KFwicHJlXCIsIHtcbiAgY2xhc3NOYW1lOiBjeCgncHVibGljL0RyYWZ0U3R5bGVEZWZhdWx0L3ByZScpXG59KTtcbnZhciBEZWZhdWx0RHJhZnRCbG9ja1JlbmRlck1hcCA9IE1hcCh7XG4gICdoZWFkZXItb25lJzoge1xuICAgIGVsZW1lbnQ6ICdoMSdcbiAgfSxcbiAgJ2hlYWRlci10d28nOiB7XG4gICAgZWxlbWVudDogJ2gyJ1xuICB9LFxuICAnaGVhZGVyLXRocmVlJzoge1xuICAgIGVsZW1lbnQ6ICdoMydcbiAgfSxcbiAgJ2hlYWRlci1mb3VyJzoge1xuICAgIGVsZW1lbnQ6ICdoNCdcbiAgfSxcbiAgJ2hlYWRlci1maXZlJzoge1xuICAgIGVsZW1lbnQ6ICdoNSdcbiAgfSxcbiAgJ2hlYWRlci1zaXgnOiB7XG4gICAgZWxlbWVudDogJ2g2J1xuICB9LFxuICBzZWN0aW9uOiB7XG4gICAgZWxlbWVudDogJ3NlY3Rpb24nXG4gIH0sXG4gIGFydGljbGU6IHtcbiAgICBlbGVtZW50OiAnYXJ0aWNsZSdcbiAgfSxcbiAgJ3Vub3JkZXJlZC1saXN0LWl0ZW0nOiB7XG4gICAgZWxlbWVudDogJ2xpJyxcbiAgICB3cmFwcGVyOiBVTF9XUkFQXG4gIH0sXG4gICdvcmRlcmVkLWxpc3QtaXRlbSc6IHtcbiAgICBlbGVtZW50OiAnbGknLFxuICAgIHdyYXBwZXI6IE9MX1dSQVBcbiAgfSxcbiAgYmxvY2txdW90ZToge1xuICAgIGVsZW1lbnQ6ICdibG9ja3F1b3RlJ1xuICB9LFxuICBhdG9taWM6IHtcbiAgICBlbGVtZW50OiAnZmlndXJlJ1xuICB9LFxuICAnY29kZS1ibG9jayc6IHtcbiAgICBlbGVtZW50OiAncHJlJyxcbiAgICB3cmFwcGVyOiBQUkVfV1JBUFxuICB9LFxuICB1bnN0eWxlZDoge1xuICAgIGVsZW1lbnQ6ICdkaXYnLFxuICAgIGFsaWFzZWRFbGVtZW50czogWydwJ11cbiAgfVxufSk7XG5tb2R1bGUuZXhwb3J0cyA9IERlZmF1bHREcmFmdEJsb2NrUmVuZGVyTWFwOyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJjeCIsIl9yZXF1aXJlIiwiTWFwIiwiVUxfV1JBUCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJPTF9XUkFQIiwiUFJFX1dSQVAiLCJEZWZhdWx0RHJhZnRCbG9ja1JlbmRlck1hcCIsImVsZW1lbnQiLCJzZWN0aW9uIiwiYXJ0aWNsZSIsIndyYXBwZXIiLCJibG9ja3F1b3RlIiwiYXRvbWljIiwidW5zdHlsZWQiLCJhbGlhc2VkRWxlbWVudHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftBlockRenderMap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftInlineStyle.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/DefaultDraftInlineStyle.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nmodule.exports = {\n    BOLD: {\n        fontWeight: \"bold\"\n    },\n    CODE: {\n        fontFamily: \"monospace\",\n        wordWrap: \"break-word\"\n    },\n    ITALIC: {\n        fontStyle: \"italic\"\n    },\n    STRIKETHROUGH: {\n        textDecoration: \"line-through\"\n    },\n    UNDERLINE: {\n        textDecoration: \"underline\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRGVmYXVsdERyYWZ0SW5saW5lU3R5bGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQUEsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZDLE1BQU07UUFDSkMsWUFBWTtJQUNkO0lBQ0FDLE1BQU07UUFDSkMsWUFBWTtRQUNaQyxVQUFVO0lBQ1o7SUFDQUMsUUFBUTtRQUNOQyxXQUFXO0lBQ2I7SUFDQUMsZUFBZTtRQUNiQyxnQkFBZ0I7SUFDbEI7SUFDQUMsV0FBVztRQUNURCxnQkFBZ0I7SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL0RlZmF1bHREcmFmdElubGluZVN0eWxlLmpzPzZmMzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEJPTEQ6IHtcbiAgICBmb250V2VpZ2h0OiAnYm9sZCdcbiAgfSxcbiAgQ09ERToge1xuICAgIGZvbnRGYW1pbHk6ICdtb25vc3BhY2UnLFxuICAgIHdvcmRXcmFwOiAnYnJlYWstd29yZCdcbiAgfSxcbiAgSVRBTElDOiB7XG4gICAgZm9udFN0eWxlOiAnaXRhbGljJ1xuICB9LFxuICBTVFJJS0VUSFJPVUdIOiB7XG4gICAgdGV4dERlY29yYXRpb246ICdsaW5lLXRocm91Z2gnXG4gIH0sXG4gIFVOREVSTElORToge1xuICAgIHRleHREZWNvcmF0aW9uOiAndW5kZXJsaW5lJ1xuICB9XG59OyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQk9MRCIsImZvbnRXZWlnaHQiLCJDT0RFIiwiZm9udEZhbWlseSIsIndvcmRXcmFwIiwiSVRBTElDIiwiZm9udFN0eWxlIiwiU1RSSUtFVEhST1VHSCIsInRleHREZWNvcmF0aW9uIiwiVU5ERVJMSU5FIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftInlineStyle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/Draft.js":
/*!********************************************!*\
  !*** ./node_modules/draft-js/lib/Draft.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */ \nvar AtomicBlockUtils = __webpack_require__(/*! ./AtomicBlockUtils */ \"(app-pages-browser)/./node_modules/draft-js/lib/AtomicBlockUtils.js\");\nvar BlockMapBuilder = __webpack_require__(/*! ./BlockMapBuilder */ \"(app-pages-browser)/./node_modules/draft-js/lib/BlockMapBuilder.js\");\nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar CompositeDraftDecorator = __webpack_require__(/*! ./CompositeDraftDecorator */ \"(app-pages-browser)/./node_modules/draft-js/lib/CompositeDraftDecorator.js\");\nvar ContentBlock = __webpack_require__(/*! ./ContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\");\nvar ContentState = __webpack_require__(/*! ./ContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentState.js\");\nvar DefaultDraftBlockRenderMap = __webpack_require__(/*! ./DefaultDraftBlockRenderMap */ \"(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftBlockRenderMap.js\");\nvar DefaultDraftInlineStyle = __webpack_require__(/*! ./DefaultDraftInlineStyle */ \"(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftInlineStyle.js\");\nvar DraftEditor = __webpack_require__(/*! ./DraftEditor.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditor.react.js\");\nvar DraftEditorBlock = __webpack_require__(/*! ./DraftEditorBlock.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorBlock.react.js\");\nvar DraftEntity = __webpack_require__(/*! ./DraftEntity */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEntity.js\");\nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar DraftEntityInstance = __webpack_require__(/*! ./DraftEntityInstance */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEntityInstance.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar KeyBindingUtil = __webpack_require__(/*! ./KeyBindingUtil */ \"(app-pages-browser)/./node_modules/draft-js/lib/KeyBindingUtil.js\");\nvar RawDraftContentState = __webpack_require__(/*! ./RawDraftContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/RawDraftContentState.js\");\nvar RichTextEditorUtil = __webpack_require__(/*! ./RichTextEditorUtil */ \"(app-pages-browser)/./node_modules/draft-js/lib/RichTextEditorUtil.js\");\nvar SelectionState = __webpack_require__(/*! ./SelectionState */ \"(app-pages-browser)/./node_modules/draft-js/lib/SelectionState.js\");\nvar convertFromDraftStateToRaw = __webpack_require__(/*! ./convertFromDraftStateToRaw */ \"(app-pages-browser)/./node_modules/draft-js/lib/convertFromDraftStateToRaw.js\");\nvar convertFromRawToDraftState = __webpack_require__(/*! ./convertFromRawToDraftState */ \"(app-pages-browser)/./node_modules/draft-js/lib/convertFromRawToDraftState.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar getDefaultKeyBinding = __webpack_require__(/*! ./getDefaultKeyBinding */ \"(app-pages-browser)/./node_modules/draft-js/lib/getDefaultKeyBinding.js\");\nvar getVisibleSelectionRect = __webpack_require__(/*! ./getVisibleSelectionRect */ \"(app-pages-browser)/./node_modules/draft-js/lib/getVisibleSelectionRect.js\");\nvar convertFromHTML = __webpack_require__(/*! ./convertFromHTMLToContentBlocks */ \"(app-pages-browser)/./node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js\");\nvar DraftPublic = {\n    Editor: DraftEditor,\n    EditorBlock: DraftEditorBlock,\n    EditorState: EditorState,\n    CompositeDecorator: CompositeDraftDecorator,\n    Entity: DraftEntity,\n    EntityInstance: DraftEntityInstance,\n    BlockMapBuilder: BlockMapBuilder,\n    CharacterMetadata: CharacterMetadata,\n    ContentBlock: ContentBlock,\n    ContentState: ContentState,\n    RawDraftContentState: RawDraftContentState,\n    SelectionState: SelectionState,\n    AtomicBlockUtils: AtomicBlockUtils,\n    KeyBindingUtil: KeyBindingUtil,\n    Modifier: DraftModifier,\n    RichUtils: RichTextEditorUtil,\n    DefaultDraftBlockRenderMap: DefaultDraftBlockRenderMap,\n    DefaultDraftInlineStyle: DefaultDraftInlineStyle,\n    convertFromHTML: convertFromHTML,\n    convertFromRaw: convertFromRawToDraftState,\n    convertToRaw: convertFromDraftStateToRaw,\n    genKey: generateRandomKey,\n    getDefaultKeyBinding: getDefaultKeyBinding,\n    getVisibleSelectionRect: getVisibleSelectionRect\n};\nmodule.exports = DraftPublic;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0NBUUMsR0FDRDtBQUVBLElBQUlBLG1CQUFtQkMsbUJBQU9BLENBQUMsK0ZBQW9CO0FBRW5ELElBQUlDLGtCQUFrQkQsbUJBQU9BLENBQUMsNkZBQW1CO0FBRWpELElBQUlFLG9CQUFvQkYsbUJBQU9BLENBQUMsaUdBQXFCO0FBRXJELElBQUlHLDBCQUEwQkgsbUJBQU9BLENBQUMsNkdBQTJCO0FBRWpFLElBQUlJLGVBQWVKLG1CQUFPQSxDQUFDLHVGQUFnQjtBQUUzQyxJQUFJSyxlQUFlTCxtQkFBT0EsQ0FBQyx1RkFBZ0I7QUFFM0MsSUFBSU0sNkJBQTZCTixtQkFBT0EsQ0FBQyxtSEFBOEI7QUFFdkUsSUFBSU8sMEJBQTBCUCxtQkFBT0EsQ0FBQyw2R0FBMkI7QUFFakUsSUFBSVEsY0FBY1IsbUJBQU9BLENBQUMsaUdBQXFCO0FBRS9DLElBQUlTLG1CQUFtQlQsbUJBQU9BLENBQUMsMkdBQTBCO0FBRXpELElBQUlVLGNBQWNWLG1CQUFPQSxDQUFDLHFGQUFlO0FBRXpDLElBQUlXLGdCQUFnQlgsbUJBQU9BLENBQUMseUZBQWlCO0FBRTdDLElBQUlZLHNCQUFzQlosbUJBQU9BLENBQUMscUdBQXVCO0FBRXpELElBQUlhLGNBQWNiLG1CQUFPQSxDQUFDLHFGQUFlO0FBRXpDLElBQUljLGlCQUFpQmQsbUJBQU9BLENBQUMsMkZBQWtCO0FBRS9DLElBQUllLHVCQUF1QmYsbUJBQU9BLENBQUMsdUdBQXdCO0FBRTNELElBQUlnQixxQkFBcUJoQixtQkFBT0EsQ0FBQyxtR0FBc0I7QUFFdkQsSUFBSWlCLGlCQUFpQmpCLG1CQUFPQSxDQUFDLDJGQUFrQjtBQUUvQyxJQUFJa0IsNkJBQTZCbEIsbUJBQU9BLENBQUMsbUhBQThCO0FBRXZFLElBQUltQiw2QkFBNkJuQixtQkFBT0EsQ0FBQyxtSEFBOEI7QUFFdkUsSUFBSW9CLG9CQUFvQnBCLG1CQUFPQSxDQUFDLGlHQUFxQjtBQUVyRCxJQUFJcUIsdUJBQXVCckIsbUJBQU9BLENBQUMsdUdBQXdCO0FBRTNELElBQUlzQiwwQkFBMEJ0QixtQkFBT0EsQ0FBQyw2R0FBMkI7QUFFakUsSUFBSXVCLGtCQUFrQnZCLG1CQUFPQSxDQUFDLDJIQUFrQztBQUVoRSxJQUFJd0IsY0FBYztJQUNoQkMsUUFBUWpCO0lBQ1JrQixhQUFhakI7SUFDYkksYUFBYUE7SUFDYmMsb0JBQW9CeEI7SUFDcEJ5QixRQUFRbEI7SUFDUm1CLGdCQUFnQmpCO0lBQ2hCWCxpQkFBaUJBO0lBQ2pCQyxtQkFBbUJBO0lBQ25CRSxjQUFjQTtJQUNkQyxjQUFjQTtJQUNkVSxzQkFBc0JBO0lBQ3RCRSxnQkFBZ0JBO0lBQ2hCbEIsa0JBQWtCQTtJQUNsQmUsZ0JBQWdCQTtJQUNoQmdCLFVBQVVuQjtJQUNWb0IsV0FBV2Y7SUFDWFYsNEJBQTRCQTtJQUM1QkMseUJBQXlCQTtJQUN6QmdCLGlCQUFpQkE7SUFDakJTLGdCQUFnQmI7SUFDaEJjLGNBQWNmO0lBQ2RnQixRQUFRZDtJQUNSQyxzQkFBc0JBO0lBQ3RCQyx5QkFBeUJBO0FBQzNCO0FBQ0FhLE9BQU9DLE9BQU8sR0FBR1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdC5qcz80NGVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIEF0b21pY0Jsb2NrVXRpbHMgPSByZXF1aXJlKFwiLi9BdG9taWNCbG9ja1V0aWxzXCIpO1xuXG52YXIgQmxvY2tNYXBCdWlsZGVyID0gcmVxdWlyZShcIi4vQmxvY2tNYXBCdWlsZGVyXCIpO1xuXG52YXIgQ2hhcmFjdGVyTWV0YWRhdGEgPSByZXF1aXJlKFwiLi9DaGFyYWN0ZXJNZXRhZGF0YVwiKTtcblxudmFyIENvbXBvc2l0ZURyYWZ0RGVjb3JhdG9yID0gcmVxdWlyZShcIi4vQ29tcG9zaXRlRHJhZnREZWNvcmF0b3JcIik7XG5cbnZhciBDb250ZW50QmxvY2sgPSByZXF1aXJlKFwiLi9Db250ZW50QmxvY2tcIik7XG5cbnZhciBDb250ZW50U3RhdGUgPSByZXF1aXJlKFwiLi9Db250ZW50U3RhdGVcIik7XG5cbnZhciBEZWZhdWx0RHJhZnRCbG9ja1JlbmRlck1hcCA9IHJlcXVpcmUoXCIuL0RlZmF1bHREcmFmdEJsb2NrUmVuZGVyTWFwXCIpO1xuXG52YXIgRGVmYXVsdERyYWZ0SW5saW5lU3R5bGUgPSByZXF1aXJlKFwiLi9EZWZhdWx0RHJhZnRJbmxpbmVTdHlsZVwiKTtcblxudmFyIERyYWZ0RWRpdG9yID0gcmVxdWlyZShcIi4vRHJhZnRFZGl0b3IucmVhY3RcIik7XG5cbnZhciBEcmFmdEVkaXRvckJsb2NrID0gcmVxdWlyZShcIi4vRHJhZnRFZGl0b3JCbG9jay5yZWFjdFwiKTtcblxudmFyIERyYWZ0RW50aXR5ID0gcmVxdWlyZShcIi4vRHJhZnRFbnRpdHlcIik7XG5cbnZhciBEcmFmdE1vZGlmaWVyID0gcmVxdWlyZShcIi4vRHJhZnRNb2RpZmllclwiKTtcblxudmFyIERyYWZ0RW50aXR5SW5zdGFuY2UgPSByZXF1aXJlKFwiLi9EcmFmdEVudGl0eUluc3RhbmNlXCIpO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcblxudmFyIEtleUJpbmRpbmdVdGlsID0gcmVxdWlyZShcIi4vS2V5QmluZGluZ1V0aWxcIik7XG5cbnZhciBSYXdEcmFmdENvbnRlbnRTdGF0ZSA9IHJlcXVpcmUoXCIuL1Jhd0RyYWZ0Q29udGVudFN0YXRlXCIpO1xuXG52YXIgUmljaFRleHRFZGl0b3JVdGlsID0gcmVxdWlyZShcIi4vUmljaFRleHRFZGl0b3JVdGlsXCIpO1xuXG52YXIgU2VsZWN0aW9uU3RhdGUgPSByZXF1aXJlKFwiLi9TZWxlY3Rpb25TdGF0ZVwiKTtcblxudmFyIGNvbnZlcnRGcm9tRHJhZnRTdGF0ZVRvUmF3ID0gcmVxdWlyZShcIi4vY29udmVydEZyb21EcmFmdFN0YXRlVG9SYXdcIik7XG5cbnZhciBjb252ZXJ0RnJvbVJhd1RvRHJhZnRTdGF0ZSA9IHJlcXVpcmUoXCIuL2NvbnZlcnRGcm9tUmF3VG9EcmFmdFN0YXRlXCIpO1xuXG52YXIgZ2VuZXJhdGVSYW5kb21LZXkgPSByZXF1aXJlKFwiLi9nZW5lcmF0ZVJhbmRvbUtleVwiKTtcblxudmFyIGdldERlZmF1bHRLZXlCaW5kaW5nID0gcmVxdWlyZShcIi4vZ2V0RGVmYXVsdEtleUJpbmRpbmdcIik7XG5cbnZhciBnZXRWaXNpYmxlU2VsZWN0aW9uUmVjdCA9IHJlcXVpcmUoXCIuL2dldFZpc2libGVTZWxlY3Rpb25SZWN0XCIpO1xuXG52YXIgY29udmVydEZyb21IVE1MID0gcmVxdWlyZShcIi4vY29udmVydEZyb21IVE1MVG9Db250ZW50QmxvY2tzXCIpO1xuXG52YXIgRHJhZnRQdWJsaWMgPSB7XG4gIEVkaXRvcjogRHJhZnRFZGl0b3IsXG4gIEVkaXRvckJsb2NrOiBEcmFmdEVkaXRvckJsb2NrLFxuICBFZGl0b3JTdGF0ZTogRWRpdG9yU3RhdGUsXG4gIENvbXBvc2l0ZURlY29yYXRvcjogQ29tcG9zaXRlRHJhZnREZWNvcmF0b3IsXG4gIEVudGl0eTogRHJhZnRFbnRpdHksXG4gIEVudGl0eUluc3RhbmNlOiBEcmFmdEVudGl0eUluc3RhbmNlLFxuICBCbG9ja01hcEJ1aWxkZXI6IEJsb2NrTWFwQnVpbGRlcixcbiAgQ2hhcmFjdGVyTWV0YWRhdGE6IENoYXJhY3Rlck1ldGFkYXRhLFxuICBDb250ZW50QmxvY2s6IENvbnRlbnRCbG9jayxcbiAgQ29udGVudFN0YXRlOiBDb250ZW50U3RhdGUsXG4gIFJhd0RyYWZ0Q29udGVudFN0YXRlOiBSYXdEcmFmdENvbnRlbnRTdGF0ZSxcbiAgU2VsZWN0aW9uU3RhdGU6IFNlbGVjdGlvblN0YXRlLFxuICBBdG9taWNCbG9ja1V0aWxzOiBBdG9taWNCbG9ja1V0aWxzLFxuICBLZXlCaW5kaW5nVXRpbDogS2V5QmluZGluZ1V0aWwsXG4gIE1vZGlmaWVyOiBEcmFmdE1vZGlmaWVyLFxuICBSaWNoVXRpbHM6IFJpY2hUZXh0RWRpdG9yVXRpbCxcbiAgRGVmYXVsdERyYWZ0QmxvY2tSZW5kZXJNYXA6IERlZmF1bHREcmFmdEJsb2NrUmVuZGVyTWFwLFxuICBEZWZhdWx0RHJhZnRJbmxpbmVTdHlsZTogRGVmYXVsdERyYWZ0SW5saW5lU3R5bGUsXG4gIGNvbnZlcnRGcm9tSFRNTDogY29udmVydEZyb21IVE1MLFxuICBjb252ZXJ0RnJvbVJhdzogY29udmVydEZyb21SYXdUb0RyYWZ0U3RhdGUsXG4gIGNvbnZlcnRUb1JhdzogY29udmVydEZyb21EcmFmdFN0YXRlVG9SYXcsXG4gIGdlbktleTogZ2VuZXJhdGVSYW5kb21LZXksXG4gIGdldERlZmF1bHRLZXlCaW5kaW5nOiBnZXREZWZhdWx0S2V5QmluZGluZyxcbiAgZ2V0VmlzaWJsZVNlbGVjdGlvblJlY3Q6IGdldFZpc2libGVTZWxlY3Rpb25SZWN0XG59O1xubW9kdWxlLmV4cG9ydHMgPSBEcmFmdFB1YmxpYzsiXSwibmFtZXMiOlsiQXRvbWljQmxvY2tVdGlscyIsInJlcXVpcmUiLCJCbG9ja01hcEJ1aWxkZXIiLCJDaGFyYWN0ZXJNZXRhZGF0YSIsIkNvbXBvc2l0ZURyYWZ0RGVjb3JhdG9yIiwiQ29udGVudEJsb2NrIiwiQ29udGVudFN0YXRlIiwiRGVmYXVsdERyYWZ0QmxvY2tSZW5kZXJNYXAiLCJEZWZhdWx0RHJhZnRJbmxpbmVTdHlsZSIsIkRyYWZ0RWRpdG9yIiwiRHJhZnRFZGl0b3JCbG9jayIsIkRyYWZ0RW50aXR5IiwiRHJhZnRNb2RpZmllciIsIkRyYWZ0RW50aXR5SW5zdGFuY2UiLCJFZGl0b3JTdGF0ZSIsIktleUJpbmRpbmdVdGlsIiwiUmF3RHJhZnRDb250ZW50U3RhdGUiLCJSaWNoVGV4dEVkaXRvclV0aWwiLCJTZWxlY3Rpb25TdGF0ZSIsImNvbnZlcnRGcm9tRHJhZnRTdGF0ZVRvUmF3IiwiY29udmVydEZyb21SYXdUb0RyYWZ0U3RhdGUiLCJnZW5lcmF0ZVJhbmRvbUtleSIsImdldERlZmF1bHRLZXlCaW5kaW5nIiwiZ2V0VmlzaWJsZVNlbGVjdGlvblJlY3QiLCJjb252ZXJ0RnJvbUhUTUwiLCJEcmFmdFB1YmxpYyIsIkVkaXRvciIsIkVkaXRvckJsb2NrIiwiQ29tcG9zaXRlRGVjb3JhdG9yIiwiRW50aXR5IiwiRW50aXR5SW5zdGFuY2UiLCJNb2RpZmllciIsIlJpY2hVdGlscyIsImNvbnZlcnRGcm9tUmF3IiwiY29udmVydFRvUmF3IiwiZ2VuS2V5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/Draft.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditor.react.js":
/*!********************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditor.react.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @preventMunge\n * @emails oncall+draft_js\n */ \nvar _assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nfunction _extends() {\n    _extends = _assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar DefaultDraftBlockRenderMap = __webpack_require__(/*! ./DefaultDraftBlockRenderMap */ \"(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftBlockRenderMap.js\");\nvar DefaultDraftInlineStyle = __webpack_require__(/*! ./DefaultDraftInlineStyle */ \"(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftInlineStyle.js\");\nvar DraftEditorCompositionHandler = __webpack_require__(/*! ./DraftEditorCompositionHandler */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorCompositionHandler.js\");\nvar DraftEditorContents = __webpack_require__(/*! ./DraftEditorContents.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContents.react.js\");\nvar DraftEditorDragHandler = __webpack_require__(/*! ./DraftEditorDragHandler */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorDragHandler.js\");\nvar DraftEditorEditHandler = __webpack_require__(/*! ./DraftEditorEditHandler */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorEditHandler.js\");\nvar flushControlled = __webpack_require__(/*! ./DraftEditorFlushControlled */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorFlushControlled.js\");\nvar DraftEditorPlaceholder = __webpack_require__(/*! ./DraftEditorPlaceholder.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorPlaceholder.react.js\");\nvar DraftEffects = __webpack_require__(/*! ./DraftEffects */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEffects.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar Scroll = __webpack_require__(/*! fbjs/lib/Scroll */ \"(app-pages-browser)/./node_modules/fbjs/lib/Scroll.js\");\nvar Style = __webpack_require__(/*! fbjs/lib/Style */ \"(app-pages-browser)/./node_modules/fbjs/lib/Style.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar cx = __webpack_require__(/*! fbjs/lib/cx */ \"(app-pages-browser)/./node_modules/fbjs/lib/cx.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar getDefaultKeyBinding = __webpack_require__(/*! ./getDefaultKeyBinding */ \"(app-pages-browser)/./node_modules/draft-js/lib/getDefaultKeyBinding.js\");\nvar getScrollPosition = __webpack_require__(/*! fbjs/lib/getScrollPosition */ \"(app-pages-browser)/./node_modules/fbjs/lib/getScrollPosition.js\");\nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isHTMLElement = __webpack_require__(/*! ./isHTMLElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLElement.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar isIE = UserAgent.isBrowser(\"IE\"); // IE does not support the `input` event on contentEditable, so we can't\n// observe spellcheck behavior.\nvar allowSpellCheck = !isIE; // Define a set of handler objects to correspond to each possible `mode`\n// of editor behavior.\nvar handlerMap = {\n    edit: DraftEditorEditHandler,\n    composite: DraftEditorCompositionHandler,\n    drag: DraftEditorDragHandler,\n    cut: null,\n    render: null\n};\nvar didInitODS = false;\nvar UpdateDraftEditorFlags = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(UpdateDraftEditorFlags, _React$Component);\n    function UpdateDraftEditorFlags() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = UpdateDraftEditorFlags.prototype;\n    _proto.render = function render() {\n        return null;\n    };\n    _proto.componentDidMount = function componentDidMount() {\n        this._update();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate() {\n        this._update();\n    };\n    _proto._update = function _update() {\n        var editor = this.props.editor;\n        /**\n     * Sometimes a render triggers a 'focus' or other event, and that will\n     * schedule a second render pass.\n     * In order to make sure the second render pass gets the latest editor\n     * state, we update it here.\n     * Example:\n     * render #1\n     * +\n     * |\n     * | cWU -> Nothing ... latestEditorState = STALE_STATE :(\n     * |\n     * | render -> this.props.editorState = FRESH_STATE\n     * | +         *and* set latestEditorState = FRESH_STATE\n     *   |\n     * | |\n     * | +--> triggers 'focus' event, calling 'handleFocus' with latestEditorState\n     * |                                                +\n     * |                                                |\n     * +>cdU -> latestEditorState = FRESH_STATE         | the 'handleFocus' call schedules render #2\n     *                                                  | with latestEditorState, which is FRESH_STATE\n     *                                                  |\n     * render #2 <--------------------------------------+\n     * +\n     * |\n     * | cwU -> nothing updates\n     * |\n     * | render -> this.props.editorState = FRESH_STATE which was passed in above\n     * |\n     * +>cdU fires and resets latestEditorState = FRESH_STATE\n     * ---\n     * Note that if we don't set latestEditorState in 'render' in the above\n     * diagram, then STALE_STATE gets passed to render #2.\n     */ editor._latestEditorState = this.props.editorState;\n        /**\n     * The reason we set this 'blockSelectEvents' flag is that  IE will fire a\n     * 'selectionChange' event when we programmatically change the selection,\n     * meaning it would trigger a new select event while we are in the middle\n     * of updating.\n     * We found that the 'selection.addRange' was what triggered the stray\n     * selectionchange event in IE.\n     * To be clear - we have not been able to reproduce specific bugs related\n     * to this stray selection event, but have recorded logs that some\n     * conditions do cause it to get bumped into during editOnSelect.\n     */ editor._blockSelectEvents = true;\n    };\n    return UpdateDraftEditorFlags;\n}(React.Component);\n_c = UpdateDraftEditorFlags;\n/**\n * `DraftEditor` is the root editor component. It composes a `contentEditable`\n * div, and provides a wide variety of useful function props for managing the\n * state of the editor. See `DraftEditorProps` for details.\n */ var DraftEditor = /*#__PURE__*/ function(_React$Component2) {\n    _inheritsLoose(DraftEditor, _React$Component2);\n    /**\n   * Define proxies that can route events to the current handler.\n   */ function DraftEditor(props) {\n        var _this;\n        _this = _React$Component2.call(this, props) || this;\n        _defineProperty(_assertThisInitialized(_this), \"_blockSelectEvents\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_clipboard\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_handler\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_dragCount\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_internalDrag\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_editorKey\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_placeholderAccessibilityID\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_latestEditorState\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_latestCommittedEditorState\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_pendingStateFromBeforeInput\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onBeforeInput\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onBlur\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onCharacterData\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onCompositionEnd\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onCompositionStart\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onCopy\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onCut\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onDragEnd\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onDragOver\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onDragStart\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onDrop\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onInput\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onFocus\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onKeyPress\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onKeyUp\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onMouseDown\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onMouseUp\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onPaste\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_onSelect\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"editor\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"editorContainer\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"focus\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"blur\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"setMode\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"exitCurrentMode\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"restoreEditorDOM\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"setClipboard\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"getClipboard\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"getEditorKey\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"update\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"onDragEnter\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"onDragLeave\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_handleEditorContainerRef\", function(node) {\n            _this.editorContainer = node; // Instead of having a direct ref on the child, we'll grab it here.\n            // This is safe as long as the rendered structure is static (which it is).\n            // This lets the child support ref={props.editorRef} without merging refs.\n            _this.editor = node !== null ? node.firstChild : null;\n        });\n        _defineProperty(_assertThisInitialized(_this), \"focus\", function(scrollPosition) {\n            var editorState = _this.props.editorState;\n            var alreadyHasFocus = editorState.getSelection().getHasFocus();\n            var editorNode = _this.editor;\n            if (!editorNode) {\n                // once in a while people call 'focus' in a setTimeout, and the node has\n                // been deleted, so it can be null in that case.\n                return;\n            }\n            var scrollParent = Style.getScrollParent(editorNode);\n            var _ref = scrollPosition || getScrollPosition(scrollParent), x = _ref.x, y = _ref.y;\n            !isHTMLElement(editorNode) ?  true ? invariant(false, \"editorNode is not an HTMLElement\") : 0 : void 0;\n            editorNode.focus(); // Restore scroll position\n            if (scrollParent === window) {\n                window.scrollTo(x, y);\n            } else {\n                Scroll.setTop(scrollParent, y);\n            } // On Chrome and Safari, calling focus on contenteditable focuses the\n            // cursor at the first character. This is something you don't expect when\n            // you're clicking on an input element but not directly on a character.\n            // Put the cursor back where it was before the blur.\n            if (!alreadyHasFocus) {\n                _this.update(EditorState.forceSelection(editorState, editorState.getSelection()));\n            }\n        });\n        _defineProperty(_assertThisInitialized(_this), \"blur\", function() {\n            var editorNode = _this.editor;\n            if (!editorNode) {\n                return;\n            }\n            !isHTMLElement(editorNode) ?  true ? invariant(false, \"editorNode is not an HTMLElement\") : 0 : void 0;\n            editorNode.blur();\n        });\n        _defineProperty(_assertThisInitialized(_this), \"setMode\", function(mode) {\n            var _this$props = _this.props, onPaste = _this$props.onPaste, onCut = _this$props.onCut, onCopy = _this$props.onCopy;\n            var editHandler = _objectSpread({}, handlerMap.edit);\n            if (onPaste) {\n                /* $FlowFixMe[incompatible-type] (>=0.117.0 site=www,mobile) This comment\n         * suppresses an error found when Flow v0.117 was deployed. To see the\n         * error delete this comment and run Flow. */ editHandler.onPaste = onPaste;\n            }\n            if (onCut) {\n                editHandler.onCut = onCut;\n            }\n            if (onCopy) {\n                editHandler.onCopy = onCopy;\n            }\n            var handler = _objectSpread({}, handlerMap, {\n                edit: editHandler\n            });\n            _this._handler = handler[mode];\n        });\n        _defineProperty(_assertThisInitialized(_this), \"exitCurrentMode\", function() {\n            _this.setMode(\"edit\");\n        });\n        _defineProperty(_assertThisInitialized(_this), \"restoreEditorDOM\", function(scrollPosition) {\n            _this.setState({\n                contentsKey: _this.state.contentsKey + 1\n            }, function() {\n                _this.focus(scrollPosition);\n            });\n        });\n        _defineProperty(_assertThisInitialized(_this), \"setClipboard\", function(clipboard) {\n            _this._clipboard = clipboard;\n        });\n        _defineProperty(_assertThisInitialized(_this), \"getClipboard\", function() {\n            return _this._clipboard;\n        });\n        _defineProperty(_assertThisInitialized(_this), \"update\", function(editorState) {\n            _this._latestEditorState = editorState;\n            _this.props.onChange(editorState);\n        });\n        _defineProperty(_assertThisInitialized(_this), \"onDragEnter\", function() {\n            _this._dragCount++;\n        });\n        _defineProperty(_assertThisInitialized(_this), \"onDragLeave\", function() {\n            _this._dragCount--;\n            if (_this._dragCount === 0) {\n                _this.exitCurrentMode();\n            }\n        });\n        _this._blockSelectEvents = false;\n        _this._clipboard = null;\n        _this._handler = null;\n        _this._dragCount = 0;\n        _this._editorKey = props.editorKey || generateRandomKey();\n        _this._placeholderAccessibilityID = \"placeholder-\" + _this._editorKey;\n        _this._latestEditorState = props.editorState;\n        _this._latestCommittedEditorState = props.editorState;\n        _this._onBeforeInput = _this._buildHandler(\"onBeforeInput\");\n        _this._onBlur = _this._buildHandler(\"onBlur\");\n        _this._onCharacterData = _this._buildHandler(\"onCharacterData\");\n        _this._onCompositionEnd = _this._buildHandler(\"onCompositionEnd\");\n        _this._onCompositionStart = _this._buildHandler(\"onCompositionStart\");\n        _this._onCopy = _this._buildHandler(\"onCopy\");\n        _this._onCut = _this._buildHandler(\"onCut\");\n        _this._onDragEnd = _this._buildHandler(\"onDragEnd\");\n        _this._onDragOver = _this._buildHandler(\"onDragOver\");\n        _this._onDragStart = _this._buildHandler(\"onDragStart\");\n        _this._onDrop = _this._buildHandler(\"onDrop\");\n        _this._onInput = _this._buildHandler(\"onInput\");\n        _this._onFocus = _this._buildHandler(\"onFocus\");\n        _this._onKeyDown = _this._buildHandler(\"onKeyDown\");\n        _this._onKeyPress = _this._buildHandler(\"onKeyPress\");\n        _this._onKeyUp = _this._buildHandler(\"onKeyUp\");\n        _this._onMouseDown = _this._buildHandler(\"onMouseDown\");\n        _this._onMouseUp = _this._buildHandler(\"onMouseUp\");\n        _this._onPaste = _this._buildHandler(\"onPaste\");\n        _this._onSelect = _this._buildHandler(\"onSelect\");\n        _this.getEditorKey = function() {\n            return _this._editorKey;\n        };\n        if (true) {\n            [\n                \"onDownArrow\",\n                \"onEscape\",\n                \"onLeftArrow\",\n                \"onRightArrow\",\n                \"onTab\",\n                \"onUpArrow\"\n            ].forEach(function(propName) {\n                if (props.hasOwnProperty(propName)) {\n                    // eslint-disable-next-line no-console\n                    console.warn(\"Supplying an `\".concat(propName, \"` prop to `DraftEditor` has \") + \"been deprecated. If your handler needs access to the keyboard \" + \"event, supply a custom `keyBindingFn` prop that falls back to \" + \"the default one (eg. https://is.gd/wHKQ3W).\");\n                }\n            });\n        } // See `restoreEditorDOM()`.\n        _this.state = {\n            contentsKey: 0\n        };\n        return _this;\n    }\n    /**\n   * Build a method that will pass the event to the specified handler method.\n   * This allows us to look up the correct handler function for the current\n   * editor mode, if any has been specified.\n   */ var _proto2 = DraftEditor.prototype;\n    _proto2._buildHandler = function _buildHandler(eventName) {\n        var _this2 = this;\n        // Wrap event handlers in `flushControlled`. In sync mode, this is\n        // effectively a no-op. In async mode, this ensures all updates scheduled\n        // inside the handler are flushed before React yields to the browser.\n        return function(e) {\n            if (!_this2.props.readOnly) {\n                var method = _this2._handler && _this2._handler[eventName];\n                if (method) {\n                    if (flushControlled) {\n                        flushControlled(function() {\n                            return method(_this2, e);\n                        });\n                    } else {\n                        method(_this2, e);\n                    }\n                }\n            }\n        };\n    };\n    _proto2._showPlaceholder = function _showPlaceholder() {\n        return !!this.props.placeholder && !this.props.editorState.isInCompositionMode() && !this.props.editorState.getCurrentContent().hasText();\n    };\n    _proto2._renderPlaceholder = function _renderPlaceholder() {\n        if (this._showPlaceholder()) {\n            var placeHolderProps = {\n                text: nullthrows(this.props.placeholder),\n                editorState: this.props.editorState,\n                textAlignment: this.props.textAlignment,\n                accessibilityID: this._placeholderAccessibilityID\n            };\n            /* $FlowFixMe[incompatible-type] (>=0.112.0 site=www,mobile) This comment\n       * suppresses an error found when Flow v0.112 was deployed. To see the\n       * error delete this comment and run Flow. */ return React.createElement(DraftEditorPlaceholder, placeHolderProps);\n        }\n        return null;\n    } /**\n   * returns ariaDescribedBy prop with '{{editor_id_placeholder}}' replaced with\n   * the DOM id of the placeholder (if it exists)\n   * @returns aria-describedby attribute value\n   */ ;\n    _proto2._renderARIADescribedBy = function _renderARIADescribedBy() {\n        var describedBy = this.props.ariaDescribedBy || \"\";\n        var placeholderID = this._showPlaceholder() ? this._placeholderAccessibilityID : \"\";\n        return describedBy.replace(\"{{editor_id_placeholder}}\", placeholderID) || undefined;\n    };\n    _proto2.render = function render() {\n        var _this$props2 = this.props, blockRenderMap = _this$props2.blockRenderMap, blockRendererFn = _this$props2.blockRendererFn, blockStyleFn = _this$props2.blockStyleFn, customStyleFn = _this$props2.customStyleFn, customStyleMap = _this$props2.customStyleMap, editorState = _this$props2.editorState, preventScroll = _this$props2.preventScroll, readOnly = _this$props2.readOnly, textAlignment = _this$props2.textAlignment, textDirectionality = _this$props2.textDirectionality;\n        var rootClass = cx({\n            \"DraftEditor/root\": true,\n            \"DraftEditor/alignLeft\": textAlignment === \"left\",\n            \"DraftEditor/alignRight\": textAlignment === \"right\",\n            \"DraftEditor/alignCenter\": textAlignment === \"center\"\n        });\n        var contentStyle = {\n            outline: \"none\",\n            // fix parent-draggable Safari bug. #1326\n            userSelect: \"text\",\n            WebkitUserSelect: \"text\",\n            whiteSpace: \"pre-wrap\",\n            wordWrap: \"break-word\"\n        }; // The aria-expanded and aria-haspopup properties should only be rendered\n        // for a combobox.\n        /* $FlowFixMe[prop-missing] (>=0.68.0 site=www,mobile) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the error\n     * delete this comment and run Flow. */ var ariaRole = this.props.role || \"textbox\";\n        var ariaExpanded = ariaRole === \"combobox\" ? !!this.props.ariaExpanded : null;\n        var editorContentsProps = {\n            blockRenderMap: blockRenderMap,\n            blockRendererFn: blockRendererFn,\n            blockStyleFn: blockStyleFn,\n            customStyleMap: _objectSpread({}, DefaultDraftInlineStyle, customStyleMap),\n            customStyleFn: customStyleFn,\n            editorKey: this._editorKey,\n            editorState: editorState,\n            preventScroll: preventScroll,\n            textDirectionality: textDirectionality\n        };\n        return React.createElement(\"div\", {\n            className: rootClass\n        }, this._renderPlaceholder(), React.createElement(\"div\", {\n            className: cx(\"DraftEditor/editorContainer\"),\n            ref: this._handleEditorContainerRef\n        }, React.createElement(\"div\", {\n            \"aria-activedescendant\": readOnly ? null : this.props.ariaActiveDescendantID,\n            \"aria-autocomplete\": readOnly ? null : this.props.ariaAutoComplete,\n            \"aria-controls\": readOnly ? null : this.props.ariaControls,\n            \"aria-describedby\": this._renderARIADescribedBy(),\n            \"aria-expanded\": readOnly ? null : ariaExpanded,\n            \"aria-label\": this.props.ariaLabel,\n            \"aria-labelledby\": this.props.ariaLabelledBy,\n            \"aria-multiline\": this.props.ariaMultiline,\n            \"aria-owns\": readOnly ? null : this.props.ariaOwneeID,\n            autoCapitalize: this.props.autoCapitalize,\n            autoComplete: this.props.autoComplete,\n            autoCorrect: this.props.autoCorrect,\n            className: cx({\n                // Chrome's built-in translation feature mutates the DOM in ways\n                // that Draft doesn't expect (ex: adding <font> tags inside\n                // DraftEditorLeaf spans) and causes problems. We add notranslate\n                // here which makes its autotranslation skip over this subtree.\n                notranslate: !readOnly,\n                \"public/DraftEditor/content\": true\n            }),\n            contentEditable: !readOnly,\n            \"data-testid\": this.props.webDriverTestID,\n            onBeforeInput: this._onBeforeInput,\n            onBlur: this._onBlur,\n            onCompositionEnd: this._onCompositionEnd,\n            onCompositionStart: this._onCompositionStart,\n            onCopy: this._onCopy,\n            onCut: this._onCut,\n            onDragEnd: this._onDragEnd,\n            onDragEnter: this.onDragEnter,\n            onDragLeave: this.onDragLeave,\n            onDragOver: this._onDragOver,\n            onDragStart: this._onDragStart,\n            onDrop: this._onDrop,\n            onFocus: this._onFocus,\n            onInput: this._onInput,\n            onKeyDown: this._onKeyDown,\n            onKeyPress: this._onKeyPress,\n            onKeyUp: this._onKeyUp,\n            onMouseUp: this._onMouseUp,\n            onPaste: this._onPaste,\n            onSelect: this._onSelect,\n            ref: this.props.editorRef,\n            role: readOnly ? null : ariaRole,\n            spellCheck: allowSpellCheck && this.props.spellCheck,\n            style: contentStyle,\n            suppressContentEditableWarning: true,\n            tabIndex: this.props.tabIndex\n        }, React.createElement(UpdateDraftEditorFlags, {\n            editor: this,\n            editorState: editorState\n        }), React.createElement(DraftEditorContents, _extends({}, editorContentsProps, {\n            key: \"contents\" + this.state.contentsKey\n        })))));\n    };\n    _proto2.componentDidMount = function componentDidMount() {\n        this._blockSelectEvents = false;\n        if (!didInitODS && gkx(\"draft_ods_enabled\")) {\n            didInitODS = true;\n            DraftEffects.initODS();\n        }\n        this.setMode(\"edit\");\n        /**\n     * IE has a hardcoded \"feature\" that attempts to convert link text into\n     * anchors in contentEditable DOM. This breaks the editor's expectations of\n     * the DOM, and control is lost. Disable it to make IE behave.\n     * See: http://blogs.msdn.com/b/ieinternals/archive/2010/09/15/\n     * ie9-beta-minor-change-list.aspx\n     */ if (isIE) {\n            // editor can be null after mounting\n            // https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback\n            if (!this.editor) {\n                __webpack_require__.g.execCommand(\"AutoUrlDetect\", false, false);\n            } else {\n                this.editor.ownerDocument.execCommand(\"AutoUrlDetect\", false, false);\n            }\n        }\n    };\n    _proto2.componentDidUpdate = function componentDidUpdate() {\n        this._blockSelectEvents = false;\n        this._latestEditorState = this.props.editorState;\n        this._latestCommittedEditorState = this.props.editorState;\n    } /**\n   * Used via `this.focus()`.\n   *\n   * Force focus back onto the editor node.\n   *\n   * We attempt to preserve scroll position when focusing. You can also pass\n   * a specified scroll position (for cases like `cut` behavior where it should\n   * be restored to a known position).\n   */ ;\n    return DraftEditor;\n}(React.Component);\n_defineProperty(DraftEditor, \"defaultProps\", {\n    ariaDescribedBy: \"{{editor_id_placeholder}}\",\n    blockRenderMap: DefaultDraftBlockRenderMap,\n    blockRendererFn: function blockRendererFn() {\n        return null;\n    },\n    blockStyleFn: function blockStyleFn() {\n        return \"\";\n    },\n    keyBindingFn: getDefaultKeyBinding,\n    readOnly: false,\n    spellCheck: false,\n    stripPastedStyles: false\n});\nmodule.exports = DraftEditor;\nvar _c;\n$RefreshReg$(_c, \"UpdateDraftEditorFlags\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditor.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorBlock.react.js":
/*!*************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorBlock.react.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar _assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nfunction _extends() {\n    _extends = _assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar DraftEditorLeaf = __webpack_require__(/*! ./DraftEditorLeaf.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorLeaf.react.js\");\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar Scroll = __webpack_require__(/*! fbjs/lib/Scroll */ \"(app-pages-browser)/./node_modules/fbjs/lib/Scroll.js\");\nvar Style = __webpack_require__(/*! fbjs/lib/Style */ \"(app-pages-browser)/./node_modules/fbjs/lib/Style.js\");\nvar UnicodeBidi = __webpack_require__(/*! fbjs/lib/UnicodeBidi */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidi.js\");\nvar UnicodeBidiDirection = __webpack_require__(/*! fbjs/lib/UnicodeBidiDirection */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiDirection.js\");\nvar cx = __webpack_require__(/*! fbjs/lib/cx */ \"(app-pages-browser)/./node_modules/fbjs/lib/cx.js\");\nvar getElementPosition = __webpack_require__(/*! fbjs/lib/getElementPosition */ \"(app-pages-browser)/./node_modules/fbjs/lib/getElementPosition.js\");\nvar getScrollPosition = __webpack_require__(/*! fbjs/lib/getScrollPosition */ \"(app-pages-browser)/./node_modules/fbjs/lib/getScrollPosition.js\");\nvar getViewportDimensions = __webpack_require__(/*! fbjs/lib/getViewportDimensions */ \"(app-pages-browser)/./node_modules/fbjs/lib/getViewportDimensions.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isHTMLElement = __webpack_require__(/*! ./isHTMLElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLElement.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar SCROLL_BUFFER = 10;\n/**\n * Return whether a block overlaps with either edge of the `SelectionState`.\n */ var isBlockOnSelectionEdge = function isBlockOnSelectionEdge(selection, key) {\n    return selection.getAnchorKey() === key || selection.getFocusKey() === key;\n};\n/**\n * The default block renderer for a `DraftEditor` component.\n *\n * A `DraftEditorBlock` is able to render a given `ContentBlock` to its\n * appropriate decorator and inline style components.\n */ var DraftEditorBlock = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorBlock, _React$Component);\n    function DraftEditorBlock() {\n        var _this;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _React$Component.call.apply(_React$Component, [\n            this\n        ].concat(args)) || this;\n        _defineProperty(_assertThisInitialized(_this), \"_node\", void 0);\n        return _this;\n    }\n    var _proto = DraftEditorBlock.prototype;\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return this.props.block !== nextProps.block || this.props.tree !== nextProps.tree || this.props.direction !== nextProps.direction || isBlockOnSelectionEdge(nextProps.selection, nextProps.block.getKey()) && nextProps.forceSelection;\n    } /**\n   * When a block is mounted and overlaps the selection state, we need to make\n   * sure that the cursor is visible to match native behavior. This may not\n   * be the case if the user has pressed `RETURN` or pasted some content, since\n   * programmatically creating these new blocks and setting the DOM selection\n   * will miss out on the browser natively scrolling to that position.\n   *\n   * To replicate native behavior, if the block overlaps the selection state\n   * on mount, force the scroll position. Check the scroll state of the scroll\n   * parent, and adjust it to align the entire block to the bottom of the\n   * scroll parent.\n   */ ;\n    _proto.componentDidMount = function componentDidMount() {\n        if (this.props.preventScroll) {\n            return;\n        }\n        var selection = this.props.selection;\n        var endKey = selection.getEndKey();\n        if (!selection.getHasFocus() || endKey !== this.props.block.getKey()) {\n            return;\n        }\n        var blockNode = this._node;\n        if (blockNode == null) {\n            return;\n        }\n        var scrollParent = Style.getScrollParent(blockNode);\n        var scrollPosition = getScrollPosition(scrollParent);\n        var scrollDelta;\n        if (scrollParent === window) {\n            var nodePosition = getElementPosition(blockNode);\n            var nodeBottom = nodePosition.y + nodePosition.height;\n            var viewportHeight = getViewportDimensions().height;\n            scrollDelta = nodeBottom - viewportHeight;\n            if (scrollDelta > 0) {\n                window.scrollTo(scrollPosition.x, scrollPosition.y + scrollDelta + SCROLL_BUFFER);\n            }\n        } else {\n            !isHTMLElement(blockNode) ?  true ? invariant(false, \"blockNode is not an HTMLElement\") : 0 : void 0;\n            var blockBottom = blockNode.offsetHeight + blockNode.offsetTop;\n            var pOffset = scrollParent.offsetTop + scrollParent.offsetHeight;\n            var scrollBottom = pOffset + scrollPosition.y;\n            scrollDelta = blockBottom - scrollBottom;\n            if (scrollDelta > 0) {\n                Scroll.setTop(scrollParent, Scroll.getTop(scrollParent) + scrollDelta + SCROLL_BUFFER);\n            }\n        }\n    };\n    _proto._renderChildren = function _renderChildren() {\n        var _this2 = this;\n        var block = this.props.block;\n        var blockKey = block.getKey();\n        var text = block.getText();\n        var lastLeafSet = this.props.tree.size - 1;\n        var hasSelection = isBlockOnSelectionEdge(this.props.selection, blockKey);\n        return this.props.tree.map(function(leafSet, ii) {\n            var leavesForLeafSet = leafSet.get(\"leaves\"); // T44088704\n            if (leavesForLeafSet.size === 0) {\n                return null;\n            }\n            var lastLeaf = leavesForLeafSet.size - 1;\n            var leaves = leavesForLeafSet.map(function(leaf, jj) {\n                var offsetKey = DraftOffsetKey.encode(blockKey, ii, jj);\n                var start = leaf.get(\"start\");\n                var end = leaf.get(\"end\");\n                return React.createElement(DraftEditorLeaf, {\n                    key: offsetKey,\n                    offsetKey: offsetKey,\n                    block: block,\n                    start: start,\n                    selection: hasSelection ? _this2.props.selection : null,\n                    forceSelection: _this2.props.forceSelection,\n                    text: text.slice(start, end),\n                    styleSet: block.getInlineStyleAt(start),\n                    customStyleMap: _this2.props.customStyleMap,\n                    customStyleFn: _this2.props.customStyleFn,\n                    isLast: ii === lastLeafSet && jj === lastLeaf\n                });\n            }).toArray();\n            var decoratorKey = leafSet.get(\"decoratorKey\");\n            if (decoratorKey == null) {\n                return leaves;\n            }\n            if (!_this2.props.decorator) {\n                return leaves;\n            }\n            var decorator = nullthrows(_this2.props.decorator);\n            var DecoratorComponent = decorator.getComponentForKey(decoratorKey);\n            if (!DecoratorComponent) {\n                return leaves;\n            }\n            var decoratorProps = decorator.getPropsForKey(decoratorKey);\n            var decoratorOffsetKey = DraftOffsetKey.encode(blockKey, ii, 0);\n            var start = leavesForLeafSet.first().get(\"start\");\n            var end = leavesForLeafSet.last().get(\"end\");\n            var decoratedText = text.slice(start, end);\n            var entityKey = block.getEntityAt(leafSet.get(\"start\")); // Resetting dir to the same value on a child node makes Chrome/Firefox\n            // confused on cursor movement. See http://jsfiddle.net/d157kLck/3/\n            var dir = UnicodeBidiDirection.getHTMLDirIfDifferent(UnicodeBidi.getDirection(decoratedText), _this2.props.direction);\n            var commonProps = {\n                contentState: _this2.props.contentState,\n                decoratedText: decoratedText,\n                dir: dir,\n                start: start,\n                end: end,\n                blockKey: blockKey,\n                entityKey: entityKey,\n                offsetKey: decoratorOffsetKey\n            };\n            return React.createElement(DecoratorComponent, _extends({}, decoratorProps, commonProps, {\n                key: decoratorOffsetKey\n            }), leaves);\n        }).toArray();\n    };\n    _proto.render = function render() {\n        var _this3 = this;\n        var _this$props = this.props, direction = _this$props.direction, offsetKey = _this$props.offsetKey;\n        var className = cx({\n            \"public/DraftStyleDefault/block\": true,\n            \"public/DraftStyleDefault/ltr\": direction === \"LTR\",\n            \"public/DraftStyleDefault/rtl\": direction === \"RTL\"\n        });\n        return React.createElement(\"div\", {\n            \"data-offset-key\": offsetKey,\n            className: className,\n            ref: function ref(_ref) {\n                return _this3._node = _ref;\n            }\n        }, this._renderChildren());\n    };\n    return DraftEditorBlock;\n}(React.Component);\nmodule.exports = DraftEditorBlock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JCbG9jay5yZWFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLFVBQVVDLG1CQUFPQSxDQUFDLG9HQUFlO0FBRXJDLFNBQVNDO0lBQWFBLFdBQVdGLFdBQVcsU0FBVUcsTUFBTTtRQUFJLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJQyxVQUFVQyxNQUFNLEVBQUVGLElBQUs7WUFBRSxJQUFJRyxTQUFTRixTQUFTLENBQUNELEVBQUU7WUFBRSxJQUFLLElBQUlJLE9BQU9ELE9BQVE7Z0JBQUUsSUFBSUUsT0FBT0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0wsUUFBUUMsTUFBTTtvQkFBRUwsTUFBTSxDQUFDSyxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtnQkFBRTtZQUFFO1FBQUU7UUFBRSxPQUFPTDtJQUFRO0lBQUcsT0FBT0QsU0FBU1csS0FBSyxDQUFDLElBQUksRUFBRVI7QUFBWTtBQUV0VCxTQUFTUyx1QkFBdUJDLElBQUk7SUFBSSxJQUFJQSxTQUFTLEtBQUssR0FBRztRQUFFLE1BQU0sSUFBSUMsZUFBZTtJQUE4RDtJQUFFLE9BQU9EO0FBQU07QUFFckssU0FBU0UsZUFBZUMsUUFBUSxFQUFFQyxVQUFVO0lBQUlELFNBQVNSLFNBQVMsR0FBR0QsT0FBT1csTUFBTSxDQUFDRCxXQUFXVCxTQUFTO0lBQUdRLFNBQVNSLFNBQVMsQ0FBQ1csV0FBVyxHQUFHSDtJQUFVQSxTQUFTSSxTQUFTLEdBQUdIO0FBQVk7QUFFdEwsU0FBU0ksZ0JBQWdCQyxHQUFHLEVBQUVoQixHQUFHLEVBQUVpQixLQUFLO0lBQUksSUFBSWpCLE9BQU9nQixLQUFLO1FBQUVmLE9BQU9pQixjQUFjLENBQUNGLEtBQUtoQixLQUFLO1lBQUVpQixPQUFPQTtZQUFPRSxZQUFZO1lBQU1DLGNBQWM7WUFBTUMsVUFBVTtRQUFLO0lBQUksT0FBTztRQUFFTCxHQUFHLENBQUNoQixJQUFJLEdBQUdpQjtJQUFPO0lBQUUsT0FBT0Q7QUFBSztBQUVoTixJQUFJTSxrQkFBa0I3QixtQkFBT0EsQ0FBQyx5R0FBeUI7QUFFdkQsSUFBSThCLGlCQUFpQjlCLG1CQUFPQSxDQUFDLDJGQUFrQjtBQUUvQyxJQUFJK0IsUUFBUS9CLG1CQUFPQSxDQUFDLG1GQUFPO0FBRTNCLElBQUlnQyxTQUFTaEMsbUJBQU9BLENBQUMsOEVBQWlCO0FBRXRDLElBQUlpQyxRQUFRakMsbUJBQU9BLENBQUMsNEVBQWdCO0FBRXBDLElBQUlrQyxjQUFjbEMsbUJBQU9BLENBQUMsd0ZBQXNCO0FBRWhELElBQUltQyx1QkFBdUJuQyxtQkFBT0EsQ0FBQywwR0FBK0I7QUFFbEUsSUFBSW9DLEtBQUtwQyxtQkFBT0EsQ0FBQyxzRUFBYTtBQUU5QixJQUFJcUMscUJBQXFCckMsbUJBQU9BLENBQUMsc0dBQTZCO0FBRTlELElBQUlzQyxvQkFBb0J0QyxtQkFBT0EsQ0FBQyxvR0FBNEI7QUFFNUQsSUFBSXVDLHdCQUF3QnZDLG1CQUFPQSxDQUFDLDRHQUFnQztBQUVwRSxJQUFJd0MsWUFBWXhDLG1CQUFPQSxDQUFDLG9GQUFvQjtBQUU1QyxJQUFJeUMsZ0JBQWdCekMsbUJBQU9BLENBQUMseUZBQWlCO0FBRTdDLElBQUkwQyxhQUFhMUMsbUJBQU9BLENBQUMsc0ZBQXFCO0FBRTlDLElBQUkyQyxnQkFBZ0I7QUFFcEI7O0NBRUMsR0FDRCxJQUFJQyx5QkFBeUIsU0FBU0EsdUJBQXVCQyxTQUFTLEVBQUV0QyxHQUFHO0lBQ3pFLE9BQU9zQyxVQUFVQyxZQUFZLE9BQU92QyxPQUFPc0MsVUFBVUUsV0FBVyxPQUFPeEM7QUFDekU7QUFDQTs7Ozs7Q0FLQyxHQUdELElBQUl5QyxtQkFBbUIsV0FBVyxHQUFFLFNBQVVDLGdCQUFnQjtJQUM1RGpDLGVBQWVnQyxrQkFBa0JDO0lBRWpDLFNBQVNEO1FBQ1AsSUFBSUU7UUFFSixJQUFLLElBQUlDLE9BQU8vQyxVQUFVQyxNQUFNLEVBQUUrQyxPQUFPLElBQUlDLE1BQU1GLE9BQU9HLE9BQU8sR0FBR0EsT0FBT0gsTUFBTUcsT0FBUTtZQUN2RkYsSUFBSSxDQUFDRSxLQUFLLEdBQUdsRCxTQUFTLENBQUNrRCxLQUFLO1FBQzlCO1FBRUFKLFFBQVFELGlCQUFpQnRDLElBQUksQ0FBQ0MsS0FBSyxDQUFDcUMsa0JBQWtCO1lBQUMsSUFBSTtTQUFDLENBQUNNLE1BQU0sQ0FBQ0gsVUFBVSxJQUFJO1FBRWxGOUIsZ0JBQWdCVCx1QkFBdUJxQyxRQUFRLFNBQVMsS0FBSztRQUU3RCxPQUFPQTtJQUNUO0lBRUEsSUFBSU0sU0FBU1IsaUJBQWlCdkMsU0FBUztJQUV2QytDLE9BQU9DLHFCQUFxQixHQUFHLFNBQVNBLHNCQUFzQkMsU0FBUztRQUNyRSxPQUFPLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxLQUFLLEtBQUtGLFVBQVVFLEtBQUssSUFBSSxJQUFJLENBQUNELEtBQUssQ0FBQ0UsSUFBSSxLQUFLSCxVQUFVRyxJQUFJLElBQUksSUFBSSxDQUFDRixLQUFLLENBQUNHLFNBQVMsS0FBS0osVUFBVUksU0FBUyxJQUFJbEIsdUJBQXVCYyxVQUFVYixTQUFTLEVBQUVhLFVBQVVFLEtBQUssQ0FBQ0csTUFBTSxPQUFPTCxVQUFVTSxjQUFjO0lBQ3hPLEVBQ0E7Ozs7Ozs7Ozs7O0dBV0M7SUFHRFIsT0FBT1MsaUJBQWlCLEdBQUcsU0FBU0E7UUFDbEMsSUFBSSxJQUFJLENBQUNOLEtBQUssQ0FBQ08sYUFBYSxFQUFFO1lBQzVCO1FBQ0Y7UUFFQSxJQUFJckIsWUFBWSxJQUFJLENBQUNjLEtBQUssQ0FBQ2QsU0FBUztRQUNwQyxJQUFJc0IsU0FBU3RCLFVBQVV1QixTQUFTO1FBRWhDLElBQUksQ0FBQ3ZCLFVBQVV3QixXQUFXLE1BQU1GLFdBQVcsSUFBSSxDQUFDUixLQUFLLENBQUNDLEtBQUssQ0FBQ0csTUFBTSxJQUFJO1lBQ3BFO1FBQ0Y7UUFFQSxJQUFJTyxZQUFZLElBQUksQ0FBQ0MsS0FBSztRQUUxQixJQUFJRCxhQUFhLE1BQU07WUFDckI7UUFDRjtRQUVBLElBQUlFLGVBQWV2QyxNQUFNd0MsZUFBZSxDQUFDSDtRQUN6QyxJQUFJSSxpQkFBaUJwQyxrQkFBa0JrQztRQUN2QyxJQUFJRztRQUVKLElBQUlILGlCQUFpQkksUUFBUTtZQUMzQixJQUFJQyxlQUFleEMsbUJBQW1CaUM7WUFDdEMsSUFBSVEsYUFBYUQsYUFBYUUsQ0FBQyxHQUFHRixhQUFhRyxNQUFNO1lBQ3JELElBQUlDLGlCQUFpQjFDLHdCQUF3QnlDLE1BQU07WUFDbkRMLGNBQWNHLGFBQWFHO1lBRTNCLElBQUlOLGNBQWMsR0FBRztnQkFDbkJDLE9BQU9NLFFBQVEsQ0FBQ1IsZUFBZVMsQ0FBQyxFQUFFVCxlQUFlSyxDQUFDLEdBQUdKLGNBQWNoQztZQUNyRTtRQUNGLE9BQU87WUFDTCxDQUFDRixjQUFjNkIsYUFBYWMsS0FBcUMsR0FBRzVDLFVBQVUsT0FBTyxxQ0FBcUNBLENBQWdCLEdBQUcsS0FBSztZQUNsSixJQUFJNkMsY0FBY2YsVUFBVWdCLFlBQVksR0FBR2hCLFVBQVVpQixTQUFTO1lBQzlELElBQUlDLFVBQVVoQixhQUFhZSxTQUFTLEdBQUdmLGFBQWFjLFlBQVk7WUFDaEUsSUFBSUcsZUFBZUQsVUFBVWQsZUFBZUssQ0FBQztZQUM3Q0osY0FBY1UsY0FBY0k7WUFFNUIsSUFBSWQsY0FBYyxHQUFHO2dCQUNuQjNDLE9BQU8wRCxNQUFNLENBQUNsQixjQUFjeEMsT0FBTzJELE1BQU0sQ0FBQ25CLGdCQUFnQkcsY0FBY2hDO1lBQzFFO1FBQ0Y7SUFDRjtJQUVBYSxPQUFPb0MsZUFBZSxHQUFHLFNBQVNBO1FBQ2hDLElBQUlDLFNBQVMsSUFBSTtRQUVqQixJQUFJakMsUUFBUSxJQUFJLENBQUNELEtBQUssQ0FBQ0MsS0FBSztRQUM1QixJQUFJa0MsV0FBV2xDLE1BQU1HLE1BQU07UUFDM0IsSUFBSWdDLE9BQU9uQyxNQUFNb0MsT0FBTztRQUN4QixJQUFJQyxjQUFjLElBQUksQ0FBQ3RDLEtBQUssQ0FBQ0UsSUFBSSxDQUFDcUMsSUFBSSxHQUFHO1FBQ3pDLElBQUlDLGVBQWV2RCx1QkFBdUIsSUFBSSxDQUFDZSxLQUFLLENBQUNkLFNBQVMsRUFBRWlEO1FBQ2hFLE9BQU8sSUFBSSxDQUFDbkMsS0FBSyxDQUFDRSxJQUFJLENBQUN1QyxHQUFHLENBQUMsU0FBVUMsT0FBTyxFQUFFQyxFQUFFO1lBQzlDLElBQUlDLG1CQUFtQkYsUUFBUUcsR0FBRyxDQUFDLFdBQVcsWUFBWTtZQUUxRCxJQUFJRCxpQkFBaUJMLElBQUksS0FBSyxHQUFHO2dCQUMvQixPQUFPO1lBQ1Q7WUFFQSxJQUFJTyxXQUFXRixpQkFBaUJMLElBQUksR0FBRztZQUN2QyxJQUFJUSxTQUFTSCxpQkFBaUJILEdBQUcsQ0FBQyxTQUFVTyxJQUFJLEVBQUVDLEVBQUU7Z0JBQ2xELElBQUlDLFlBQVkvRSxlQUFlZ0YsTUFBTSxDQUFDaEIsVUFBVVEsSUFBSU07Z0JBQ3BELElBQUlHLFFBQVFKLEtBQUtILEdBQUcsQ0FBQztnQkFDckIsSUFBSVEsTUFBTUwsS0FBS0gsR0FBRyxDQUFDO2dCQUNuQixPQUFPekUsTUFBTWtGLGFBQWEsQ0FBQ3BGLGlCQUFpQjtvQkFDMUN0QixLQUFLc0c7b0JBQ0xBLFdBQVdBO29CQUNYakQsT0FBT0E7b0JBQ1BtRCxPQUFPQTtvQkFDUGxFLFdBQVdzRCxlQUFlTixPQUFPbEMsS0FBSyxDQUFDZCxTQUFTLEdBQUc7b0JBQ25EbUIsZ0JBQWdCNkIsT0FBT2xDLEtBQUssQ0FBQ0ssY0FBYztvQkFDM0MrQixNQUFNQSxLQUFLbUIsS0FBSyxDQUFDSCxPQUFPQztvQkFDeEJHLFVBQVV2RCxNQUFNd0QsZ0JBQWdCLENBQUNMO29CQUNqQ00sZ0JBQWdCeEIsT0FBT2xDLEtBQUssQ0FBQzBELGNBQWM7b0JBQzNDQyxlQUFlekIsT0FBT2xDLEtBQUssQ0FBQzJELGFBQWE7b0JBQ3pDQyxRQUFRakIsT0FBT0wsZUFBZVcsT0FBT0g7Z0JBQ3ZDO1lBQ0YsR0FBR2UsT0FBTztZQUNWLElBQUlDLGVBQWVwQixRQUFRRyxHQUFHLENBQUM7WUFFL0IsSUFBSWlCLGdCQUFnQixNQUFNO2dCQUN4QixPQUFPZjtZQUNUO1lBRUEsSUFBSSxDQUFDYixPQUFPbEMsS0FBSyxDQUFDK0QsU0FBUyxFQUFFO2dCQUMzQixPQUFPaEI7WUFDVDtZQUVBLElBQUlnQixZQUFZaEYsV0FBV21ELE9BQU9sQyxLQUFLLENBQUMrRCxTQUFTO1lBQ2pELElBQUlDLHFCQUFxQkQsVUFBVUUsa0JBQWtCLENBQUNIO1lBRXRELElBQUksQ0FBQ0Usb0JBQW9CO2dCQUN2QixPQUFPakI7WUFDVDtZQUVBLElBQUltQixpQkFBaUJILFVBQVVJLGNBQWMsQ0FBQ0w7WUFDOUMsSUFBSU0scUJBQXFCakcsZUFBZWdGLE1BQU0sQ0FBQ2hCLFVBQVVRLElBQUk7WUFDN0QsSUFBSVMsUUFBUVIsaUJBQWlCeUIsS0FBSyxHQUFHeEIsR0FBRyxDQUFDO1lBQ3pDLElBQUlRLE1BQU1ULGlCQUFpQjBCLElBQUksR0FBR3pCLEdBQUcsQ0FBQztZQUN0QyxJQUFJMEIsZ0JBQWdCbkMsS0FBS21CLEtBQUssQ0FBQ0gsT0FBT0M7WUFDdEMsSUFBSW1CLFlBQVl2RSxNQUFNd0UsV0FBVyxDQUFDL0IsUUFBUUcsR0FBRyxDQUFDLFdBQVcsdUVBQXVFO1lBQ2hJLG1FQUFtRTtZQUVuRSxJQUFJNkIsTUFBTWxHLHFCQUFxQm1HLHFCQUFxQixDQUFDcEcsWUFBWXFHLFlBQVksQ0FBQ0wsZ0JBQWdCckMsT0FBT2xDLEtBQUssQ0FBQ0csU0FBUztZQUNwSCxJQUFJMEUsY0FBYztnQkFDaEJDLGNBQWM1QyxPQUFPbEMsS0FBSyxDQUFDOEUsWUFBWTtnQkFDdkNQLGVBQWVBO2dCQUNmRyxLQUFLQTtnQkFDTHRCLE9BQU9BO2dCQUNQQyxLQUFLQTtnQkFDTGxCLFVBQVVBO2dCQUNWcUMsV0FBV0E7Z0JBQ1h0QixXQUFXa0I7WUFDYjtZQUNBLE9BQU9oRyxNQUFNa0YsYUFBYSxDQUFDVSxvQkFBb0IxSCxTQUFTLENBQUMsR0FBRzRILGdCQUFnQlcsYUFBYTtnQkFDdkZqSSxLQUFLd0g7WUFDUCxJQUFJckI7UUFDTixHQUFHYyxPQUFPO0lBQ1o7SUFFQWhFLE9BQU9rRixNQUFNLEdBQUcsU0FBU0E7UUFDdkIsSUFBSUMsU0FBUyxJQUFJO1FBRWpCLElBQUlDLGNBQWMsSUFBSSxDQUFDakYsS0FBSyxFQUN4QkcsWUFBWThFLFlBQVk5RSxTQUFTLEVBQ2pDK0MsWUFBWStCLFlBQVkvQixTQUFTO1FBQ3JDLElBQUlnQyxZQUFZekcsR0FBRztZQUNqQixrQ0FBa0M7WUFDbEMsZ0NBQWdDMEIsY0FBYztZQUM5QyxnQ0FBZ0NBLGNBQWM7UUFDaEQ7UUFDQSxPQUFPL0IsTUFBTWtGLGFBQWEsQ0FBQyxPQUFPO1lBQ2hDLG1CQUFtQko7WUFDbkJnQyxXQUFXQTtZQUNYQyxLQUFLLFNBQVNBLElBQUlDLElBQUk7Z0JBQ3BCLE9BQU9KLE9BQU9wRSxLQUFLLEdBQUd3RTtZQUN4QjtRQUNGLEdBQUcsSUFBSSxDQUFDbkQsZUFBZTtJQUN6QjtJQUVBLE9BQU81QztBQUNULEVBQUVqQixNQUFNaUgsU0FBUztBQUVqQkMsT0FBT0MsT0FBTyxHQUFHbEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdEVkaXRvckJsb2NrLnJlYWN0LmpzP2MxMTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIF9hc3NpZ24gPSByZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKTtcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gX2Fzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgRHJhZnRFZGl0b3JMZWFmID0gcmVxdWlyZShcIi4vRHJhZnRFZGl0b3JMZWFmLnJlYWN0XCIpO1xuXG52YXIgRHJhZnRPZmZzZXRLZXkgPSByZXF1aXJlKFwiLi9EcmFmdE9mZnNldEtleVwiKTtcblxudmFyIFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuXG52YXIgU2Nyb2xsID0gcmVxdWlyZShcImZianMvbGliL1Njcm9sbFwiKTtcblxudmFyIFN0eWxlID0gcmVxdWlyZShcImZianMvbGliL1N0eWxlXCIpO1xuXG52YXIgVW5pY29kZUJpZGkgPSByZXF1aXJlKFwiZmJqcy9saWIvVW5pY29kZUJpZGlcIik7XG5cbnZhciBVbmljb2RlQmlkaURpcmVjdGlvbiA9IHJlcXVpcmUoXCJmYmpzL2xpYi9Vbmljb2RlQmlkaURpcmVjdGlvblwiKTtcblxudmFyIGN4ID0gcmVxdWlyZShcImZianMvbGliL2N4XCIpO1xuXG52YXIgZ2V0RWxlbWVudFBvc2l0aW9uID0gcmVxdWlyZShcImZianMvbGliL2dldEVsZW1lbnRQb3NpdGlvblwiKTtcblxudmFyIGdldFNjcm9sbFBvc2l0aW9uID0gcmVxdWlyZShcImZianMvbGliL2dldFNjcm9sbFBvc2l0aW9uXCIpO1xuXG52YXIgZ2V0Vmlld3BvcnREaW1lbnNpb25zID0gcmVxdWlyZShcImZianMvbGliL2dldFZpZXdwb3J0RGltZW5zaW9uc1wiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9pbnZhcmlhbnRcIik7XG5cbnZhciBpc0hUTUxFbGVtZW50ID0gcmVxdWlyZShcIi4vaXNIVE1MRWxlbWVudFwiKTtcblxudmFyIG51bGx0aHJvd3MgPSByZXF1aXJlKFwiZmJqcy9saWIvbnVsbHRocm93c1wiKTtcblxudmFyIFNDUk9MTF9CVUZGRVIgPSAxMDtcblxuLyoqXG4gKiBSZXR1cm4gd2hldGhlciBhIGJsb2NrIG92ZXJsYXBzIHdpdGggZWl0aGVyIGVkZ2Ugb2YgdGhlIGBTZWxlY3Rpb25TdGF0ZWAuXG4gKi9cbnZhciBpc0Jsb2NrT25TZWxlY3Rpb25FZGdlID0gZnVuY3Rpb24gaXNCbG9ja09uU2VsZWN0aW9uRWRnZShzZWxlY3Rpb24sIGtleSkge1xuICByZXR1cm4gc2VsZWN0aW9uLmdldEFuY2hvcktleSgpID09PSBrZXkgfHwgc2VsZWN0aW9uLmdldEZvY3VzS2V5KCkgPT09IGtleTtcbn07XG4vKipcbiAqIFRoZSBkZWZhdWx0IGJsb2NrIHJlbmRlcmVyIGZvciBhIGBEcmFmdEVkaXRvcmAgY29tcG9uZW50LlxuICpcbiAqIEEgYERyYWZ0RWRpdG9yQmxvY2tgIGlzIGFibGUgdG8gcmVuZGVyIGEgZ2l2ZW4gYENvbnRlbnRCbG9ja2AgdG8gaXRzXG4gKiBhcHByb3ByaWF0ZSBkZWNvcmF0b3IgYW5kIGlubGluZSBzdHlsZSBjb21wb25lbnRzLlxuICovXG5cblxudmFyIERyYWZ0RWRpdG9yQmxvY2sgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoRHJhZnRFZGl0b3JCbG9jaywgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gRHJhZnRFZGl0b3JCbG9jaygpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJfbm9kZVwiLCB2b2lkIDApO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IERyYWZ0RWRpdG9yQmxvY2sucHJvdG90eXBlO1xuXG4gIF9wcm90by5zaG91bGRDb21wb25lbnRVcGRhdGUgPSBmdW5jdGlvbiBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgcmV0dXJuIHRoaXMucHJvcHMuYmxvY2sgIT09IG5leHRQcm9wcy5ibG9jayB8fCB0aGlzLnByb3BzLnRyZWUgIT09IG5leHRQcm9wcy50cmVlIHx8IHRoaXMucHJvcHMuZGlyZWN0aW9uICE9PSBuZXh0UHJvcHMuZGlyZWN0aW9uIHx8IGlzQmxvY2tPblNlbGVjdGlvbkVkZ2UobmV4dFByb3BzLnNlbGVjdGlvbiwgbmV4dFByb3BzLmJsb2NrLmdldEtleSgpKSAmJiBuZXh0UHJvcHMuZm9yY2VTZWxlY3Rpb247XG4gIH1cbiAgLyoqXG4gICAqIFdoZW4gYSBibG9jayBpcyBtb3VudGVkIGFuZCBvdmVybGFwcyB0aGUgc2VsZWN0aW9uIHN0YXRlLCB3ZSBuZWVkIHRvIG1ha2VcbiAgICogc3VyZSB0aGF0IHRoZSBjdXJzb3IgaXMgdmlzaWJsZSB0byBtYXRjaCBuYXRpdmUgYmVoYXZpb3IuIFRoaXMgbWF5IG5vdFxuICAgKiBiZSB0aGUgY2FzZSBpZiB0aGUgdXNlciBoYXMgcHJlc3NlZCBgUkVUVVJOYCBvciBwYXN0ZWQgc29tZSBjb250ZW50LCBzaW5jZVxuICAgKiBwcm9ncmFtbWF0aWNhbGx5IGNyZWF0aW5nIHRoZXNlIG5ldyBibG9ja3MgYW5kIHNldHRpbmcgdGhlIERPTSBzZWxlY3Rpb25cbiAgICogd2lsbCBtaXNzIG91dCBvbiB0aGUgYnJvd3NlciBuYXRpdmVseSBzY3JvbGxpbmcgdG8gdGhhdCBwb3NpdGlvbi5cbiAgICpcbiAgICogVG8gcmVwbGljYXRlIG5hdGl2ZSBiZWhhdmlvciwgaWYgdGhlIGJsb2NrIG92ZXJsYXBzIHRoZSBzZWxlY3Rpb24gc3RhdGVcbiAgICogb24gbW91bnQsIGZvcmNlIHRoZSBzY3JvbGwgcG9zaXRpb24uIENoZWNrIHRoZSBzY3JvbGwgc3RhdGUgb2YgdGhlIHNjcm9sbFxuICAgKiBwYXJlbnQsIGFuZCBhZGp1c3QgaXQgdG8gYWxpZ24gdGhlIGVudGlyZSBibG9jayB0byB0aGUgYm90dG9tIG9mIHRoZVxuICAgKiBzY3JvbGwgcGFyZW50LlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLnByZXZlbnRTY3JvbGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5wcm9wcy5zZWxlY3Rpb247XG4gICAgdmFyIGVuZEtleSA9IHNlbGVjdGlvbi5nZXRFbmRLZXkoKTtcblxuICAgIGlmICghc2VsZWN0aW9uLmdldEhhc0ZvY3VzKCkgfHwgZW5kS2V5ICE9PSB0aGlzLnByb3BzLmJsb2NrLmdldEtleSgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGJsb2NrTm9kZSA9IHRoaXMuX25vZGU7XG5cbiAgICBpZiAoYmxvY2tOb2RlID09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgc2Nyb2xsUGFyZW50ID0gU3R5bGUuZ2V0U2Nyb2xsUGFyZW50KGJsb2NrTm9kZSk7XG4gICAgdmFyIHNjcm9sbFBvc2l0aW9uID0gZ2V0U2Nyb2xsUG9zaXRpb24oc2Nyb2xsUGFyZW50KTtcbiAgICB2YXIgc2Nyb2xsRGVsdGE7XG5cbiAgICBpZiAoc2Nyb2xsUGFyZW50ID09PSB3aW5kb3cpIHtcbiAgICAgIHZhciBub2RlUG9zaXRpb24gPSBnZXRFbGVtZW50UG9zaXRpb24oYmxvY2tOb2RlKTtcbiAgICAgIHZhciBub2RlQm90dG9tID0gbm9kZVBvc2l0aW9uLnkgKyBub2RlUG9zaXRpb24uaGVpZ2h0O1xuICAgICAgdmFyIHZpZXdwb3J0SGVpZ2h0ID0gZ2V0Vmlld3BvcnREaW1lbnNpb25zKCkuaGVpZ2h0O1xuICAgICAgc2Nyb2xsRGVsdGEgPSBub2RlQm90dG9tIC0gdmlld3BvcnRIZWlnaHQ7XG5cbiAgICAgIGlmIChzY3JvbGxEZWx0YSA+IDApIHtcbiAgICAgICAgd2luZG93LnNjcm9sbFRvKHNjcm9sbFBvc2l0aW9uLngsIHNjcm9sbFBvc2l0aW9uLnkgKyBzY3JvbGxEZWx0YSArIFNDUk9MTF9CVUZGRVIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAhaXNIVE1MRWxlbWVudChibG9ja05vZGUpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnYmxvY2tOb2RlIGlzIG5vdCBhbiBIVE1MRWxlbWVudCcpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBibG9ja0JvdHRvbSA9IGJsb2NrTm9kZS5vZmZzZXRIZWlnaHQgKyBibG9ja05vZGUub2Zmc2V0VG9wO1xuICAgICAgdmFyIHBPZmZzZXQgPSBzY3JvbGxQYXJlbnQub2Zmc2V0VG9wICsgc2Nyb2xsUGFyZW50Lm9mZnNldEhlaWdodDtcbiAgICAgIHZhciBzY3JvbGxCb3R0b20gPSBwT2Zmc2V0ICsgc2Nyb2xsUG9zaXRpb24ueTtcbiAgICAgIHNjcm9sbERlbHRhID0gYmxvY2tCb3R0b20gLSBzY3JvbGxCb3R0b207XG5cbiAgICAgIGlmIChzY3JvbGxEZWx0YSA+IDApIHtcbiAgICAgICAgU2Nyb2xsLnNldFRvcChzY3JvbGxQYXJlbnQsIFNjcm9sbC5nZXRUb3Aoc2Nyb2xsUGFyZW50KSArIHNjcm9sbERlbHRhICsgU0NST0xMX0JVRkZFUik7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5fcmVuZGVyQ2hpbGRyZW4gPSBmdW5jdGlvbiBfcmVuZGVyQ2hpbGRyZW4oKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgYmxvY2sgPSB0aGlzLnByb3BzLmJsb2NrO1xuICAgIHZhciBibG9ja0tleSA9IGJsb2NrLmdldEtleSgpO1xuICAgIHZhciB0ZXh0ID0gYmxvY2suZ2V0VGV4dCgpO1xuICAgIHZhciBsYXN0TGVhZlNldCA9IHRoaXMucHJvcHMudHJlZS5zaXplIC0gMTtcbiAgICB2YXIgaGFzU2VsZWN0aW9uID0gaXNCbG9ja09uU2VsZWN0aW9uRWRnZSh0aGlzLnByb3BzLnNlbGVjdGlvbiwgYmxvY2tLZXkpO1xuICAgIHJldHVybiB0aGlzLnByb3BzLnRyZWUubWFwKGZ1bmN0aW9uIChsZWFmU2V0LCBpaSkge1xuICAgICAgdmFyIGxlYXZlc0ZvckxlYWZTZXQgPSBsZWFmU2V0LmdldCgnbGVhdmVzJyk7IC8vIFQ0NDA4ODcwNFxuXG4gICAgICBpZiAobGVhdmVzRm9yTGVhZlNldC5zaXplID09PSAwKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgbGFzdExlYWYgPSBsZWF2ZXNGb3JMZWFmU2V0LnNpemUgLSAxO1xuICAgICAgdmFyIGxlYXZlcyA9IGxlYXZlc0ZvckxlYWZTZXQubWFwKGZ1bmN0aW9uIChsZWFmLCBqaikge1xuICAgICAgICB2YXIgb2Zmc2V0S2V5ID0gRHJhZnRPZmZzZXRLZXkuZW5jb2RlKGJsb2NrS2V5LCBpaSwgamopO1xuICAgICAgICB2YXIgc3RhcnQgPSBsZWFmLmdldCgnc3RhcnQnKTtcbiAgICAgICAgdmFyIGVuZCA9IGxlYWYuZ2V0KCdlbmQnKTtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJhZnRFZGl0b3JMZWFmLCB7XG4gICAgICAgICAga2V5OiBvZmZzZXRLZXksXG4gICAgICAgICAgb2Zmc2V0S2V5OiBvZmZzZXRLZXksXG4gICAgICAgICAgYmxvY2s6IGJsb2NrLFxuICAgICAgICAgIHN0YXJ0OiBzdGFydCxcbiAgICAgICAgICBzZWxlY3Rpb246IGhhc1NlbGVjdGlvbiA/IF90aGlzMi5wcm9wcy5zZWxlY3Rpb24gOiBudWxsLFxuICAgICAgICAgIGZvcmNlU2VsZWN0aW9uOiBfdGhpczIucHJvcHMuZm9yY2VTZWxlY3Rpb24sXG4gICAgICAgICAgdGV4dDogdGV4dC5zbGljZShzdGFydCwgZW5kKSxcbiAgICAgICAgICBzdHlsZVNldDogYmxvY2suZ2V0SW5saW5lU3R5bGVBdChzdGFydCksXG4gICAgICAgICAgY3VzdG9tU3R5bGVNYXA6IF90aGlzMi5wcm9wcy5jdXN0b21TdHlsZU1hcCxcbiAgICAgICAgICBjdXN0b21TdHlsZUZuOiBfdGhpczIucHJvcHMuY3VzdG9tU3R5bGVGbixcbiAgICAgICAgICBpc0xhc3Q6IGlpID09PSBsYXN0TGVhZlNldCAmJiBqaiA9PT0gbGFzdExlYWZcbiAgICAgICAgfSk7XG4gICAgICB9KS50b0FycmF5KCk7XG4gICAgICB2YXIgZGVjb3JhdG9yS2V5ID0gbGVhZlNldC5nZXQoJ2RlY29yYXRvcktleScpO1xuXG4gICAgICBpZiAoZGVjb3JhdG9yS2V5ID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGxlYXZlcztcbiAgICAgIH1cblxuICAgICAgaWYgKCFfdGhpczIucHJvcHMuZGVjb3JhdG9yKSB7XG4gICAgICAgIHJldHVybiBsZWF2ZXM7XG4gICAgICB9XG5cbiAgICAgIHZhciBkZWNvcmF0b3IgPSBudWxsdGhyb3dzKF90aGlzMi5wcm9wcy5kZWNvcmF0b3IpO1xuICAgICAgdmFyIERlY29yYXRvckNvbXBvbmVudCA9IGRlY29yYXRvci5nZXRDb21wb25lbnRGb3JLZXkoZGVjb3JhdG9yS2V5KTtcblxuICAgICAgaWYgKCFEZWNvcmF0b3JDb21wb25lbnQpIHtcbiAgICAgICAgcmV0dXJuIGxlYXZlcztcbiAgICAgIH1cblxuICAgICAgdmFyIGRlY29yYXRvclByb3BzID0gZGVjb3JhdG9yLmdldFByb3BzRm9yS2V5KGRlY29yYXRvcktleSk7XG4gICAgICB2YXIgZGVjb3JhdG9yT2Zmc2V0S2V5ID0gRHJhZnRPZmZzZXRLZXkuZW5jb2RlKGJsb2NrS2V5LCBpaSwgMCk7XG4gICAgICB2YXIgc3RhcnQgPSBsZWF2ZXNGb3JMZWFmU2V0LmZpcnN0KCkuZ2V0KCdzdGFydCcpO1xuICAgICAgdmFyIGVuZCA9IGxlYXZlc0ZvckxlYWZTZXQubGFzdCgpLmdldCgnZW5kJyk7XG4gICAgICB2YXIgZGVjb3JhdGVkVGV4dCA9IHRleHQuc2xpY2Uoc3RhcnQsIGVuZCk7XG4gICAgICB2YXIgZW50aXR5S2V5ID0gYmxvY2suZ2V0RW50aXR5QXQobGVhZlNldC5nZXQoJ3N0YXJ0JykpOyAvLyBSZXNldHRpbmcgZGlyIHRvIHRoZSBzYW1lIHZhbHVlIG9uIGEgY2hpbGQgbm9kZSBtYWtlcyBDaHJvbWUvRmlyZWZveFxuICAgICAgLy8gY29uZnVzZWQgb24gY3Vyc29yIG1vdmVtZW50LiBTZWUgaHR0cDovL2pzZmlkZGxlLm5ldC9kMTU3a0xjay8zL1xuXG4gICAgICB2YXIgZGlyID0gVW5pY29kZUJpZGlEaXJlY3Rpb24uZ2V0SFRNTERpcklmRGlmZmVyZW50KFVuaWNvZGVCaWRpLmdldERpcmVjdGlvbihkZWNvcmF0ZWRUZXh0KSwgX3RoaXMyLnByb3BzLmRpcmVjdGlvbik7XG4gICAgICB2YXIgY29tbW9uUHJvcHMgPSB7XG4gICAgICAgIGNvbnRlbnRTdGF0ZTogX3RoaXMyLnByb3BzLmNvbnRlbnRTdGF0ZSxcbiAgICAgICAgZGVjb3JhdGVkVGV4dDogZGVjb3JhdGVkVGV4dCxcbiAgICAgICAgZGlyOiBkaXIsXG4gICAgICAgIHN0YXJ0OiBzdGFydCxcbiAgICAgICAgZW5kOiBlbmQsXG4gICAgICAgIGJsb2NrS2V5OiBibG9ja0tleSxcbiAgICAgICAgZW50aXR5S2V5OiBlbnRpdHlLZXksXG4gICAgICAgIG9mZnNldEtleTogZGVjb3JhdG9yT2Zmc2V0S2V5XG4gICAgICB9O1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGVjb3JhdG9yQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgZGVjb3JhdG9yUHJvcHMsIGNvbW1vblByb3BzLCB7XG4gICAgICAgIGtleTogZGVjb3JhdG9yT2Zmc2V0S2V5XG4gICAgICB9KSwgbGVhdmVzKTtcbiAgICB9KS50b0FycmF5KCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGRpcmVjdGlvbiA9IF90aGlzJHByb3BzLmRpcmVjdGlvbixcbiAgICAgICAgb2Zmc2V0S2V5ID0gX3RoaXMkcHJvcHMub2Zmc2V0S2V5O1xuICAgIHZhciBjbGFzc05hbWUgPSBjeCh7XG4gICAgICAncHVibGljL0RyYWZ0U3R5bGVEZWZhdWx0L2Jsb2NrJzogdHJ1ZSxcbiAgICAgICdwdWJsaWMvRHJhZnRTdHlsZURlZmF1bHQvbHRyJzogZGlyZWN0aW9uID09PSAnTFRSJyxcbiAgICAgICdwdWJsaWMvRHJhZnRTdHlsZURlZmF1bHQvcnRsJzogZGlyZWN0aW9uID09PSAnUlRMJ1xuICAgIH0pO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIFwiZGF0YS1vZmZzZXQta2V5XCI6IG9mZnNldEtleSxcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgcmVmOiBmdW5jdGlvbiByZWYoX3JlZikge1xuICAgICAgICByZXR1cm4gX3RoaXMzLl9ub2RlID0gX3JlZjtcbiAgICAgIH1cbiAgICB9LCB0aGlzLl9yZW5kZXJDaGlsZHJlbigpKTtcbiAgfTtcblxuICByZXR1cm4gRHJhZnRFZGl0b3JCbG9jaztcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEcmFmdEVkaXRvckJsb2NrOyJdLCJuYW1lcyI6WyJfYXNzaWduIiwicmVxdWlyZSIsIl9leHRlbmRzIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJ2YWx1ZSIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiRHJhZnRFZGl0b3JMZWFmIiwiRHJhZnRPZmZzZXRLZXkiLCJSZWFjdCIsIlNjcm9sbCIsIlN0eWxlIiwiVW5pY29kZUJpZGkiLCJVbmljb2RlQmlkaURpcmVjdGlvbiIsImN4IiwiZ2V0RWxlbWVudFBvc2l0aW9uIiwiZ2V0U2Nyb2xsUG9zaXRpb24iLCJnZXRWaWV3cG9ydERpbWVuc2lvbnMiLCJpbnZhcmlhbnQiLCJpc0hUTUxFbGVtZW50IiwibnVsbHRocm93cyIsIlNDUk9MTF9CVUZGRVIiLCJpc0Jsb2NrT25TZWxlY3Rpb25FZGdlIiwic2VsZWN0aW9uIiwiZ2V0QW5jaG9yS2V5IiwiZ2V0Rm9jdXNLZXkiLCJEcmFmdEVkaXRvckJsb2NrIiwiX1JlYWN0JENvbXBvbmVudCIsIl90aGlzIiwiX2xlbiIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjb25jYXQiLCJfcHJvdG8iLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJuZXh0UHJvcHMiLCJwcm9wcyIsImJsb2NrIiwidHJlZSIsImRpcmVjdGlvbiIsImdldEtleSIsImZvcmNlU2VsZWN0aW9uIiwiY29tcG9uZW50RGlkTW91bnQiLCJwcmV2ZW50U2Nyb2xsIiwiZW5kS2V5IiwiZ2V0RW5kS2V5IiwiZ2V0SGFzRm9jdXMiLCJibG9ja05vZGUiLCJfbm9kZSIsInNjcm9sbFBhcmVudCIsImdldFNjcm9sbFBhcmVudCIsInNjcm9sbFBvc2l0aW9uIiwic2Nyb2xsRGVsdGEiLCJ3aW5kb3ciLCJub2RlUG9zaXRpb24iLCJub2RlQm90dG9tIiwieSIsImhlaWdodCIsInZpZXdwb3J0SGVpZ2h0Iiwic2Nyb2xsVG8iLCJ4IiwicHJvY2VzcyIsImJsb2NrQm90dG9tIiwib2Zmc2V0SGVpZ2h0Iiwib2Zmc2V0VG9wIiwicE9mZnNldCIsInNjcm9sbEJvdHRvbSIsInNldFRvcCIsImdldFRvcCIsIl9yZW5kZXJDaGlsZHJlbiIsIl90aGlzMiIsImJsb2NrS2V5IiwidGV4dCIsImdldFRleHQiLCJsYXN0TGVhZlNldCIsInNpemUiLCJoYXNTZWxlY3Rpb24iLCJtYXAiLCJsZWFmU2V0IiwiaWkiLCJsZWF2ZXNGb3JMZWFmU2V0IiwiZ2V0IiwibGFzdExlYWYiLCJsZWF2ZXMiLCJsZWFmIiwiamoiLCJvZmZzZXRLZXkiLCJlbmNvZGUiLCJzdGFydCIsImVuZCIsImNyZWF0ZUVsZW1lbnQiLCJzbGljZSIsInN0eWxlU2V0IiwiZ2V0SW5saW5lU3R5bGVBdCIsImN1c3RvbVN0eWxlTWFwIiwiY3VzdG9tU3R5bGVGbiIsImlzTGFzdCIsInRvQXJyYXkiLCJkZWNvcmF0b3JLZXkiLCJkZWNvcmF0b3IiLCJEZWNvcmF0b3JDb21wb25lbnQiLCJnZXRDb21wb25lbnRGb3JLZXkiLCJkZWNvcmF0b3JQcm9wcyIsImdldFByb3BzRm9yS2V5IiwiZGVjb3JhdG9yT2Zmc2V0S2V5IiwiZmlyc3QiLCJsYXN0IiwiZGVjb3JhdGVkVGV4dCIsImVudGl0eUtleSIsImdldEVudGl0eUF0IiwiZGlyIiwiZ2V0SFRNTERpcklmRGlmZmVyZW50IiwiZ2V0RGlyZWN0aW9uIiwiY29tbW9uUHJvcHMiLCJjb250ZW50U3RhdGUiLCJyZW5kZXIiLCJfdGhpczMiLCJfdGhpcyRwcm9wcyIsImNsYXNzTmFtZSIsInJlZiIsIl9yZWYiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorBlock.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorBlockNode.react.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorBlockNode.react.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This file is a fork of DraftEditorBlock.react.js and DraftEditorContents.react.js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ \nvar _assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nfunction _extends() {\n    _extends = _assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar DraftEditorNode = __webpack_require__(/*! ./DraftEditorNode.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorNode.react.js\");\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar Scroll = __webpack_require__(/*! fbjs/lib/Scroll */ \"(app-pages-browser)/./node_modules/fbjs/lib/Scroll.js\");\nvar Style = __webpack_require__(/*! fbjs/lib/Style */ \"(app-pages-browser)/./node_modules/fbjs/lib/Style.js\");\nvar getElementPosition = __webpack_require__(/*! fbjs/lib/getElementPosition */ \"(app-pages-browser)/./node_modules/fbjs/lib/getElementPosition.js\");\nvar getScrollPosition = __webpack_require__(/*! fbjs/lib/getScrollPosition */ \"(app-pages-browser)/./node_modules/fbjs/lib/getScrollPosition.js\");\nvar getViewportDimensions = __webpack_require__(/*! fbjs/lib/getViewportDimensions */ \"(app-pages-browser)/./node_modules/fbjs/lib/getViewportDimensions.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isHTMLElement = __webpack_require__(/*! ./isHTMLElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLElement.js\");\nvar SCROLL_BUFFER = 10;\nvar List = Immutable.List; // we should harden up the bellow flow types to make them more strict\n/**\n * Return whether a block overlaps with either edge of the `SelectionState`.\n */ var isBlockOnSelectionEdge = function isBlockOnSelectionEdge(selection, key) {\n    return selection.getAnchorKey() === key || selection.getFocusKey() === key;\n};\n/**\n * We will use this helper to identify blocks that need to be wrapped but have siblings that\n * also share the same wrapper element, this way we can do the wrapping once the last sibling\n * is added.\n */ var shouldNotAddWrapperElement = function shouldNotAddWrapperElement(block, contentState) {\n    var nextSiblingKey = block.getNextSiblingKey();\n    return nextSiblingKey ? contentState.getBlockForKey(nextSiblingKey).getType() === block.getType() : false;\n};\nvar applyWrapperElementToSiblings = function applyWrapperElementToSiblings(wrapperTemplate, Element, nodes) {\n    var wrappedSiblings = []; // we check back until we find a sibling that does not have same wrapper\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n        for(var _iterator = nodes.reverse()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var sibling = _step.value;\n            if (sibling.type !== Element) {\n                break;\n            }\n            wrappedSiblings.push(sibling);\n        } // we now should remove from acc the wrappedSiblings and add them back under same wrap\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    nodes.splice(nodes.indexOf(wrappedSiblings[0]), wrappedSiblings.length + 1);\n    var childrenIs = wrappedSiblings.reverse();\n    var key = childrenIs[0].key;\n    nodes.push(React.cloneElement(wrapperTemplate, {\n        key: \"\".concat(key, \"-wrap\"),\n        \"data-offset-key\": DraftOffsetKey.encode(key, 0, 0)\n    }, childrenIs));\n    return nodes;\n};\nvar getDraftRenderConfig = function getDraftRenderConfig(block, blockRenderMap) {\n    var configForType = blockRenderMap.get(block.getType()) || blockRenderMap.get(\"unstyled\");\n    var wrapperTemplate = configForType.wrapper;\n    var Element = configForType.element || blockRenderMap.get(\"unstyled\").element;\n    return {\n        Element: Element,\n        wrapperTemplate: wrapperTemplate\n    };\n};\nvar getCustomRenderConfig = function getCustomRenderConfig(block, blockRendererFn) {\n    var customRenderer = blockRendererFn(block);\n    if (!customRenderer) {\n        return {};\n    }\n    var CustomComponent = customRenderer.component, customProps = customRenderer.props, customEditable = customRenderer.editable;\n    return {\n        CustomComponent: CustomComponent,\n        customProps: customProps,\n        customEditable: customEditable\n    };\n};\nvar getElementPropsConfig = function getElementPropsConfig(block, editorKey, offsetKey, blockStyleFn, customConfig, ref) {\n    var elementProps = {\n        \"data-block\": true,\n        \"data-editor\": editorKey,\n        \"data-offset-key\": offsetKey,\n        key: block.getKey(),\n        ref: ref\n    };\n    var customClass = blockStyleFn(block);\n    if (customClass) {\n        elementProps.className = customClass;\n    }\n    if (customConfig.customEditable !== undefined) {\n        elementProps = _objectSpread({}, elementProps, {\n            contentEditable: customConfig.customEditable,\n            suppressContentEditableWarning: true\n        });\n    }\n    return elementProps;\n};\nvar DraftEditorBlockNode = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorBlockNode, _React$Component);\n    function DraftEditorBlockNode() {\n        var _this;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _React$Component.call.apply(_React$Component, [\n            this\n        ].concat(args)) || this;\n        _defineProperty(_assertThisInitialized(_this), \"wrapperRef\", React.createRef());\n        return _this;\n    }\n    var _proto = DraftEditorBlockNode.prototype;\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        var _this$props = this.props, block = _this$props.block, direction = _this$props.direction, tree = _this$props.tree;\n        var isContainerNode = !block.getChildKeys().isEmpty();\n        var blockHasChanged = block !== nextProps.block || tree !== nextProps.tree || direction !== nextProps.direction || isBlockOnSelectionEdge(nextProps.selection, nextProps.block.getKey()) && nextProps.forceSelection; // if we have children at this stage we always re-render container nodes\n        // else if its a root node we avoid re-rendering by checking for block updates\n        return isContainerNode || blockHasChanged;\n    } /**\n   * When a block is mounted and overlaps the selection state, we need to make\n   * sure that the cursor is visible to match native behavior. This may not\n   * be the case if the user has pressed `RETURN` or pasted some content, since\n   * programatically creating these new blocks and setting the DOM selection\n   * will miss out on the browser natively scrolling to that position.\n   *\n   * To replicate native behavior, if the block overlaps the selection state\n   * on mount, force the scroll position. Check the scroll state of the scroll\n   * parent, and adjust it to align the entire block to the bottom of the\n   * scroll parent.\n   */ ;\n    _proto.componentDidMount = function componentDidMount() {\n        var selection = this.props.selection;\n        var endKey = selection.getEndKey();\n        if (!selection.getHasFocus() || endKey !== this.props.block.getKey()) {\n            return;\n        }\n        var blockNode = this.wrapperRef.current;\n        if (!blockNode) {\n            // This Block Node was rendered without a wrapper element.\n            return;\n        }\n        var scrollParent = Style.getScrollParent(blockNode);\n        var scrollPosition = getScrollPosition(scrollParent);\n        var scrollDelta;\n        if (scrollParent === window) {\n            var nodePosition = getElementPosition(blockNode);\n            var nodeBottom = nodePosition.y + nodePosition.height;\n            var viewportHeight = getViewportDimensions().height;\n            scrollDelta = nodeBottom - viewportHeight;\n            if (scrollDelta > 0) {\n                window.scrollTo(scrollPosition.x, scrollPosition.y + scrollDelta + SCROLL_BUFFER);\n            }\n        } else {\n            !isHTMLElement(blockNode) ?  true ? invariant(false, \"blockNode is not an HTMLElement\") : 0 : void 0;\n            var htmlBlockNode = blockNode;\n            var blockBottom = htmlBlockNode.offsetHeight + htmlBlockNode.offsetTop;\n            var scrollBottom = scrollParent.offsetHeight + scrollPosition.y;\n            scrollDelta = blockBottom - scrollBottom;\n            if (scrollDelta > 0) {\n                Scroll.setTop(scrollParent, Scroll.getTop(scrollParent) + scrollDelta + SCROLL_BUFFER);\n            }\n        }\n    };\n    _proto.render = function render() {\n        var _this2 = this;\n        var _this$props2 = this.props, block = _this$props2.block, blockRenderMap = _this$props2.blockRenderMap, blockRendererFn = _this$props2.blockRendererFn, blockStyleFn = _this$props2.blockStyleFn, contentState = _this$props2.contentState, decorator = _this$props2.decorator, editorKey = _this$props2.editorKey, editorState = _this$props2.editorState, customStyleFn = _this$props2.customStyleFn, customStyleMap = _this$props2.customStyleMap, direction = _this$props2.direction, forceSelection = _this$props2.forceSelection, selection = _this$props2.selection, tree = _this$props2.tree;\n        var children = null;\n        if (block.children.size) {\n            children = block.children.reduce(function(acc, key) {\n                var offsetKey = DraftOffsetKey.encode(key, 0, 0);\n                var child = contentState.getBlockForKey(key);\n                var customConfig = getCustomRenderConfig(child, blockRendererFn);\n                var Component = customConfig.CustomComponent || DraftEditorBlockNode;\n                var _getDraftRenderConfig = getDraftRenderConfig(child, blockRenderMap), Element = _getDraftRenderConfig.Element, wrapperTemplate = _getDraftRenderConfig.wrapperTemplate;\n                var elementProps = getElementPropsConfig(child, editorKey, offsetKey, blockStyleFn, customConfig, null);\n                var childProps = _objectSpread({}, _this2.props, {\n                    tree: editorState.getBlockTree(key),\n                    blockProps: customConfig.customProps,\n                    offsetKey: offsetKey,\n                    block: child\n                });\n                acc.push(React.createElement(Element, elementProps, React.createElement(Component, childProps)));\n                if (!wrapperTemplate || shouldNotAddWrapperElement(child, contentState)) {\n                    return acc;\n                } // if we are here it means we are the last block\n                // that has a wrapperTemplate so we should wrap itself\n                // and all other previous siblings that share the same wrapper\n                applyWrapperElementToSiblings(wrapperTemplate, Element, acc);\n                return acc;\n            }, []);\n        }\n        var blockKey = block.getKey();\n        var offsetKey = DraftOffsetKey.encode(blockKey, 0, 0);\n        var customConfig = getCustomRenderConfig(block, blockRendererFn);\n        var Component = customConfig.CustomComponent;\n        var blockNode = Component != null ? React.createElement(Component, _extends({}, this.props, {\n            tree: editorState.getBlockTree(blockKey),\n            blockProps: customConfig.customProps,\n            offsetKey: offsetKey,\n            block: block\n        })) : React.createElement(DraftEditorNode, {\n            block: block,\n            children: children,\n            contentState: contentState,\n            customStyleFn: customStyleFn,\n            customStyleMap: customStyleMap,\n            decorator: decorator,\n            direction: direction,\n            forceSelection: forceSelection,\n            hasSelection: isBlockOnSelectionEdge(selection, blockKey),\n            selection: selection,\n            tree: tree\n        });\n        if (block.getParentKey()) {\n            return blockNode;\n        }\n        var _getDraftRenderConfig2 = getDraftRenderConfig(block, blockRenderMap), Element = _getDraftRenderConfig2.Element;\n        var elementProps = getElementPropsConfig(block, editorKey, offsetKey, blockStyleFn, customConfig, this.wrapperRef); // root block nodes needs to be wrapped\n        return React.createElement(Element, elementProps, blockNode);\n    };\n    return DraftEditorBlockNode;\n}(React.Component);\nmodule.exports = DraftEditorBlockNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JCbG9ja05vZGUucmVhY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FDRDtBQUVBLElBQUlBLFVBQVVDLG1CQUFPQSxDQUFDLG9HQUFlO0FBRXJDLFNBQVNDO0lBQWFBLFdBQVdGLFdBQVcsU0FBVUcsTUFBTTtRQUFJLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJQyxVQUFVQyxNQUFNLEVBQUVGLElBQUs7WUFBRSxJQUFJRyxTQUFTRixTQUFTLENBQUNELEVBQUU7WUFBRSxJQUFLLElBQUlJLE9BQU9ELE9BQVE7Z0JBQUUsSUFBSUUsT0FBT0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0wsUUFBUUMsTUFBTTtvQkFBRUwsTUFBTSxDQUFDSyxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtnQkFBRTtZQUFFO1FBQUU7UUFBRSxPQUFPTDtJQUFRO0lBQUcsT0FBT0QsU0FBU1csS0FBSyxDQUFDLElBQUksRUFBRVI7QUFBWTtBQUV0VCxTQUFTUyx1QkFBdUJDLElBQUk7SUFBSSxJQUFJQSxTQUFTLEtBQUssR0FBRztRQUFFLE1BQU0sSUFBSUMsZUFBZTtJQUE4RDtJQUFFLE9BQU9EO0FBQU07QUFFckssU0FBU0UsZUFBZUMsUUFBUSxFQUFFQyxVQUFVO0lBQUlELFNBQVNSLFNBQVMsR0FBR0QsT0FBT1csTUFBTSxDQUFDRCxXQUFXVCxTQUFTO0lBQUdRLFNBQVNSLFNBQVMsQ0FBQ1csV0FBVyxHQUFHSDtJQUFVQSxTQUFTSSxTQUFTLEdBQUdIO0FBQVk7QUFFdEwsU0FBU0ksY0FBY3BCLE1BQU07SUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1FBQUUsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFLElBQUksT0FBT0MsU0FBUyxDQUFDRCxFQUFFLEdBQUcsQ0FBQztRQUFHLElBQUlvQixVQUFVZixPQUFPZ0IsSUFBSSxDQUFDbEI7UUFBUyxJQUFJLE9BQU9FLE9BQU9pQixxQkFBcUIsS0FBSyxZQUFZO1lBQUVGLFVBQVVBLFFBQVFHLE1BQU0sQ0FBQ2xCLE9BQU9pQixxQkFBcUIsQ0FBQ25CLFFBQVFxQixNQUFNLENBQUMsU0FBVUMsR0FBRztnQkFBSSxPQUFPcEIsT0FBT3FCLHdCQUF3QixDQUFDdkIsUUFBUXNCLEtBQUtFLFVBQVU7WUFBRTtRQUFLO1FBQUVQLFFBQVFRLE9BQU8sQ0FBQyxTQUFVeEIsR0FBRztZQUFJeUIsZ0JBQWdCOUIsUUFBUUssS0FBS0QsTUFBTSxDQUFDQyxJQUFJO1FBQUc7SUFBSTtJQUFFLE9BQU9MO0FBQVE7QUFFaGUsU0FBUzhCLGdCQUFnQkMsR0FBRyxFQUFFMUIsR0FBRyxFQUFFMkIsS0FBSztJQUFJLElBQUkzQixPQUFPMEIsS0FBSztRQUFFekIsT0FBTzJCLGNBQWMsQ0FBQ0YsS0FBSzFCLEtBQUs7WUFBRTJCLE9BQU9BO1lBQU9KLFlBQVk7WUFBTU0sY0FBYztZQUFNQyxVQUFVO1FBQUs7SUFBSSxPQUFPO1FBQUVKLEdBQUcsQ0FBQzFCLElBQUksR0FBRzJCO0lBQU87SUFBRSxPQUFPRDtBQUFLO0FBRWhOLElBQUlLLGtCQUFrQnRDLG1CQUFPQSxDQUFDLHlHQUF5QjtBQUV2RCxJQUFJdUMsaUJBQWlCdkMsbUJBQU9BLENBQUMsMkZBQWtCO0FBRS9DLElBQUl3QyxRQUFReEMsbUJBQU9BLENBQUMsbUZBQU87QUFFM0IsSUFBSXlDLFNBQVN6QyxtQkFBT0EsQ0FBQyw4RUFBaUI7QUFFdEMsSUFBSTBDLFFBQVExQyxtQkFBT0EsQ0FBQyw0RUFBZ0I7QUFFcEMsSUFBSTJDLHFCQUFxQjNDLG1CQUFPQSxDQUFDLHNHQUE2QjtBQUU5RCxJQUFJNEMsb0JBQW9CNUMsbUJBQU9BLENBQUMsb0dBQTRCO0FBRTVELElBQUk2Qyx3QkFBd0I3QyxtQkFBT0EsQ0FBQyw0R0FBZ0M7QUFFcEUsSUFBSThDLFlBQVk5QyxtQkFBT0EsQ0FBQyx1R0FBVztBQUVuQyxJQUFJK0MsWUFBWS9DLG1CQUFPQSxDQUFDLG9GQUFvQjtBQUU1QyxJQUFJZ0QsZ0JBQWdCaEQsbUJBQU9BLENBQUMseUZBQWlCO0FBRTdDLElBQUlpRCxnQkFBZ0I7QUFDcEIsSUFBSUMsT0FBT0osVUFBVUksSUFBSSxFQUFFLHFFQUFxRTtBQUVoRzs7Q0FFQyxHQUNELElBQUlDLHlCQUF5QixTQUFTQSx1QkFBdUJDLFNBQVMsRUFBRTdDLEdBQUc7SUFDekUsT0FBTzZDLFVBQVVDLFlBQVksT0FBTzlDLE9BQU82QyxVQUFVRSxXQUFXLE9BQU8vQztBQUN6RTtBQUNBOzs7O0NBSUMsR0FHRCxJQUFJZ0QsNkJBQTZCLFNBQVNBLDJCQUEyQkMsS0FBSyxFQUFFQyxZQUFZO0lBQ3RGLElBQUlDLGlCQUFpQkYsTUFBTUcsaUJBQWlCO0lBQzVDLE9BQU9ELGlCQUFpQkQsYUFBYUcsY0FBYyxDQUFDRixnQkFBZ0JHLE9BQU8sT0FBT0wsTUFBTUssT0FBTyxLQUFLO0FBQ3RHO0FBRUEsSUFBSUMsZ0NBQWdDLFNBQVNBLDhCQUE4QkMsZUFBZSxFQUFFQyxPQUFPLEVBQUVDLEtBQUs7SUFDeEcsSUFBSUMsa0JBQWtCLEVBQUUsRUFBRSx3RUFBd0U7SUFFbEcsSUFBSUMsNEJBQTRCO0lBQ2hDLElBQUlDLG9CQUFvQjtJQUN4QixJQUFJQyxpQkFBaUJDO0lBRXJCLElBQUk7UUFDRixJQUFLLElBQUlDLFlBQVlOLE1BQU1PLE9BQU8sRUFBRSxDQUFDQyxPQUFPQyxRQUFRLENBQUMsSUFBSUMsT0FBTyxDQUFFUixDQUFBQSw0QkFBNEIsQ0FBQ1EsUUFBUUosVUFBVUssSUFBSSxFQUFDLEVBQUdDLElBQUksR0FBR1YsNEJBQTRCLEtBQU07WUFDaEssSUFBSVcsVUFBVUgsTUFBTXpDLEtBQUs7WUFFekIsSUFBSTRDLFFBQVFDLElBQUksS0FBS2YsU0FBUztnQkFDNUI7WUFDRjtZQUVBRSxnQkFBZ0JjLElBQUksQ0FBQ0Y7UUFDdkIsRUFBRSxzRkFBc0Y7SUFFMUYsRUFBRSxPQUFPRyxLQUFLO1FBQ1piLG9CQUFvQjtRQUNwQkMsaUJBQWlCWTtJQUNuQixTQUFVO1FBQ1IsSUFBSTtZQUNGLElBQUksQ0FBQ2QsNkJBQTZCSSxTQUFTLENBQUMsU0FBUyxJQUFJLE1BQU07Z0JBQzdEQSxTQUFTLENBQUMsU0FBUztZQUNyQjtRQUNGLFNBQVU7WUFDUixJQUFJSCxtQkFBbUI7Z0JBQ3JCLE1BQU1DO1lBQ1I7UUFDRjtJQUNGO0lBRUFKLE1BQU1pQixNQUFNLENBQUNqQixNQUFNa0IsT0FBTyxDQUFDakIsZUFBZSxDQUFDLEVBQUUsR0FBR0EsZ0JBQWdCN0QsTUFBTSxHQUFHO0lBQ3pFLElBQUkrRSxhQUFhbEIsZ0JBQWdCTSxPQUFPO0lBQ3hDLElBQUlqRSxNQUFNNkUsVUFBVSxDQUFDLEVBQUUsQ0FBQzdFLEdBQUc7SUFDM0IwRCxNQUFNZSxJQUFJLENBQUN4QyxNQUFNNkMsWUFBWSxDQUFDdEIsaUJBQWlCO1FBQzdDeEQsS0FBSyxHQUFHbUIsTUFBTSxDQUFDbkIsS0FBSztRQUNwQixtQkFBbUJnQyxlQUFlK0MsTUFBTSxDQUFDL0UsS0FBSyxHQUFHO0lBQ25ELEdBQUc2RTtJQUNILE9BQU9uQjtBQUNUO0FBRUEsSUFBSXNCLHVCQUF1QixTQUFTQSxxQkFBcUIvQixLQUFLLEVBQUVnQyxjQUFjO0lBQzVFLElBQUlDLGdCQUFnQkQsZUFBZUUsR0FBRyxDQUFDbEMsTUFBTUssT0FBTyxPQUFPMkIsZUFBZUUsR0FBRyxDQUFDO0lBQzlFLElBQUkzQixrQkFBa0IwQixjQUFjRSxPQUFPO0lBQzNDLElBQUkzQixVQUFVeUIsY0FBY0csT0FBTyxJQUFJSixlQUFlRSxHQUFHLENBQUMsWUFBWUUsT0FBTztJQUM3RSxPQUFPO1FBQ0w1QixTQUFTQTtRQUNURCxpQkFBaUJBO0lBQ25CO0FBQ0Y7QUFFQSxJQUFJOEIsd0JBQXdCLFNBQVNBLHNCQUFzQnJDLEtBQUssRUFBRXNDLGVBQWU7SUFDL0UsSUFBSUMsaUJBQWlCRCxnQkFBZ0J0QztJQUVyQyxJQUFJLENBQUN1QyxnQkFBZ0I7UUFDbkIsT0FBTyxDQUFDO0lBQ1Y7SUFFQSxJQUFJQyxrQkFBa0JELGVBQWVFLFNBQVMsRUFDMUNDLGNBQWNILGVBQWVJLEtBQUssRUFDbENDLGlCQUFpQkwsZUFBZU0sUUFBUTtJQUM1QyxPQUFPO1FBQ0xMLGlCQUFpQkE7UUFDakJFLGFBQWFBO1FBQ2JFLGdCQUFnQkE7SUFDbEI7QUFDRjtBQUVBLElBQUlFLHdCQUF3QixTQUFTQSxzQkFBc0I5QyxLQUFLLEVBQUUrQyxTQUFTLEVBQUVDLFNBQVMsRUFBRUMsWUFBWSxFQUFFQyxZQUFZLEVBQUVDLEdBQUc7SUFDckgsSUFBSUMsZUFBZTtRQUNqQixjQUFjO1FBQ2QsZUFBZUw7UUFDZixtQkFBbUJDO1FBQ25CakcsS0FBS2lELE1BQU1xRCxNQUFNO1FBQ2pCRixLQUFLQTtJQUNQO0lBQ0EsSUFBSUcsY0FBY0wsYUFBYWpEO0lBRS9CLElBQUlzRCxhQUFhO1FBQ2ZGLGFBQWFHLFNBQVMsR0FBR0Q7SUFDM0I7SUFFQSxJQUFJSixhQUFhTixjQUFjLEtBQUs5QixXQUFXO1FBQzdDc0MsZUFBZXRGLGNBQWMsQ0FBQyxHQUFHc0YsY0FBYztZQUM3Q0ksaUJBQWlCTixhQUFhTixjQUFjO1lBQzVDYSxnQ0FBZ0M7UUFDbEM7SUFDRjtJQUVBLE9BQU9MO0FBQ1Q7QUFFQSxJQUFJTSx1QkFBdUIsV0FBVyxHQUFFLFNBQVVDLGdCQUFnQjtJQUNoRW5HLGVBQWVrRyxzQkFBc0JDO0lBRXJDLFNBQVNEO1FBQ1AsSUFBSUU7UUFFSixJQUFLLElBQUlDLE9BQU9qSCxVQUFVQyxNQUFNLEVBQUVpSCxPQUFPLElBQUlDLE1BQU1GLE9BQU9HLE9BQU8sR0FBR0EsT0FBT0gsTUFBTUcsT0FBUTtZQUN2RkYsSUFBSSxDQUFDRSxLQUFLLEdBQUdwSCxTQUFTLENBQUNvSCxLQUFLO1FBQzlCO1FBRUFKLFFBQVFELGlCQUFpQnhHLElBQUksQ0FBQ0MsS0FBSyxDQUFDdUcsa0JBQWtCO1lBQUMsSUFBSTtTQUFDLENBQUN6RixNQUFNLENBQUM0RixVQUFVLElBQUk7UUFFbEZ0RixnQkFBZ0JuQix1QkFBdUJ1RyxRQUFRLGNBQWM1RSxNQUFNaUYsU0FBUztRQUU1RSxPQUFPTDtJQUNUO0lBRUEsSUFBSU0sU0FBU1IscUJBQXFCekcsU0FBUztJQUUzQ2lILE9BQU9DLHFCQUFxQixHQUFHLFNBQVNBLHNCQUFzQkMsU0FBUztRQUNyRSxJQUFJQyxjQUFjLElBQUksQ0FBQzFCLEtBQUssRUFDeEIzQyxRQUFRcUUsWUFBWXJFLEtBQUssRUFDekJzRSxZQUFZRCxZQUFZQyxTQUFTLEVBQ2pDQyxPQUFPRixZQUFZRSxJQUFJO1FBQzNCLElBQUlDLGtCQUFrQixDQUFDeEUsTUFBTXlFLFlBQVksR0FBR0MsT0FBTztRQUNuRCxJQUFJQyxrQkFBa0IzRSxVQUFVb0UsVUFBVXBFLEtBQUssSUFBSXVFLFNBQVNILFVBQVVHLElBQUksSUFBSUQsY0FBY0YsVUFBVUUsU0FBUyxJQUFJM0UsdUJBQXVCeUUsVUFBVXhFLFNBQVMsRUFBRXdFLFVBQVVwRSxLQUFLLENBQUNxRCxNQUFNLE9BQU9lLFVBQVVRLGNBQWMsRUFBRSx3RUFBd0U7UUFDOVIsOEVBQThFO1FBRTlFLE9BQU9KLG1CQUFtQkc7SUFDNUIsRUFDQTs7Ozs7Ozs7Ozs7R0FXQztJQUdEVCxPQUFPVyxpQkFBaUIsR0FBRyxTQUFTQTtRQUNsQyxJQUFJakYsWUFBWSxJQUFJLENBQUMrQyxLQUFLLENBQUMvQyxTQUFTO1FBQ3BDLElBQUlrRixTQUFTbEYsVUFBVW1GLFNBQVM7UUFFaEMsSUFBSSxDQUFDbkYsVUFBVW9GLFdBQVcsTUFBTUYsV0FBVyxJQUFJLENBQUNuQyxLQUFLLENBQUMzQyxLQUFLLENBQUNxRCxNQUFNLElBQUk7WUFDcEU7UUFDRjtRQUVBLElBQUk0QixZQUFZLElBQUksQ0FBQ0MsVUFBVSxDQUFDQyxPQUFPO1FBRXZDLElBQUksQ0FBQ0YsV0FBVztZQUNkLDBEQUEwRDtZQUMxRDtRQUNGO1FBRUEsSUFBSUcsZUFBZWxHLE1BQU1tRyxlQUFlLENBQUNKO1FBQ3pDLElBQUlLLGlCQUFpQmxHLGtCQUFrQmdHO1FBQ3ZDLElBQUlHO1FBRUosSUFBSUgsaUJBQWlCSSxRQUFRO1lBQzNCLElBQUlDLGVBQWV0RyxtQkFBbUI4RjtZQUN0QyxJQUFJUyxhQUFhRCxhQUFhRSxDQUFDLEdBQUdGLGFBQWFHLE1BQU07WUFDckQsSUFBSUMsaUJBQWlCeEcsd0JBQXdCdUcsTUFBTTtZQUNuREwsY0FBY0csYUFBYUc7WUFFM0IsSUFBSU4sY0FBYyxHQUFHO2dCQUNuQkMsT0FBT00sUUFBUSxDQUFDUixlQUFlUyxDQUFDLEVBQUVULGVBQWVLLENBQUMsR0FBR0osY0FBYzlGO1lBQ3JFO1FBQ0YsT0FBTztZQUNMLENBQUNELGNBQWN5RixhQUFhZSxLQUFxQyxHQUFHekcsVUFBVSxPQUFPLHFDQUFxQ0EsQ0FBZ0IsR0FBRyxLQUFLO1lBQ2xKLElBQUkwRyxnQkFBZ0JoQjtZQUNwQixJQUFJaUIsY0FBY0QsY0FBY0UsWUFBWSxHQUFHRixjQUFjRyxTQUFTO1lBQ3RFLElBQUlDLGVBQWVqQixhQUFhZSxZQUFZLEdBQUdiLGVBQWVLLENBQUM7WUFDL0RKLGNBQWNXLGNBQWNHO1lBRTVCLElBQUlkLGNBQWMsR0FBRztnQkFDbkJ0RyxPQUFPcUgsTUFBTSxDQUFDbEIsY0FBY25HLE9BQU9zSCxNQUFNLENBQUNuQixnQkFBZ0JHLGNBQWM5RjtZQUMxRTtRQUNGO0lBQ0Y7SUFFQXlFLE9BQU9zQyxNQUFNLEdBQUcsU0FBU0E7UUFDdkIsSUFBSUMsU0FBUyxJQUFJO1FBRWpCLElBQUlDLGVBQWUsSUFBSSxDQUFDL0QsS0FBSyxFQUN6QjNDLFFBQVEwRyxhQUFhMUcsS0FBSyxFQUMxQmdDLGlCQUFpQjBFLGFBQWExRSxjQUFjLEVBQzVDTSxrQkFBa0JvRSxhQUFhcEUsZUFBZSxFQUM5Q1csZUFBZXlELGFBQWF6RCxZQUFZLEVBQ3hDaEQsZUFBZXlHLGFBQWF6RyxZQUFZLEVBQ3hDMEcsWUFBWUQsYUFBYUMsU0FBUyxFQUNsQzVELFlBQVkyRCxhQUFhM0QsU0FBUyxFQUNsQzZELGNBQWNGLGFBQWFFLFdBQVcsRUFDdENDLGdCQUFnQkgsYUFBYUcsYUFBYSxFQUMxQ0MsaUJBQWlCSixhQUFhSSxjQUFjLEVBQzVDeEMsWUFBWW9DLGFBQWFwQyxTQUFTLEVBQ2xDTSxpQkFBaUI4QixhQUFhOUIsY0FBYyxFQUM1Q2hGLFlBQVk4RyxhQUFhOUcsU0FBUyxFQUNsQzJFLE9BQU9tQyxhQUFhbkMsSUFBSTtRQUM1QixJQUFJd0MsV0FBVztRQUVmLElBQUkvRyxNQUFNK0csUUFBUSxDQUFDQyxJQUFJLEVBQUU7WUFDdkJELFdBQVcvRyxNQUFNK0csUUFBUSxDQUFDRSxNQUFNLENBQUMsU0FBVUMsR0FBRyxFQUFFbkssR0FBRztnQkFDakQsSUFBSWlHLFlBQVlqRSxlQUFlK0MsTUFBTSxDQUFDL0UsS0FBSyxHQUFHO2dCQUM5QyxJQUFJb0ssUUFBUWxILGFBQWFHLGNBQWMsQ0FBQ3JEO2dCQUN4QyxJQUFJbUcsZUFBZWIsc0JBQXNCOEUsT0FBTzdFO2dCQUNoRCxJQUFJOEUsWUFBWWxFLGFBQWFWLGVBQWUsSUFBSWtCO2dCQUVoRCxJQUFJMkQsd0JBQXdCdEYscUJBQXFCb0YsT0FBT25GLGlCQUNwRHhCLFVBQVU2RyxzQkFBc0I3RyxPQUFPLEVBQ3ZDRCxrQkFBa0I4RyxzQkFBc0I5RyxlQUFlO2dCQUUzRCxJQUFJNkMsZUFBZU4sc0JBQXNCcUUsT0FBT3BFLFdBQVdDLFdBQVdDLGNBQWNDLGNBQWM7Z0JBRWxHLElBQUlvRSxhQUFheEosY0FBYyxDQUFDLEdBQUcySSxPQUFPOUQsS0FBSyxFQUFFO29CQUMvQzRCLE1BQU1xQyxZQUFZVyxZQUFZLENBQUN4SztvQkFDL0J5SyxZQUFZdEUsYUFBYVIsV0FBVztvQkFDcENNLFdBQVdBO29CQUNYaEQsT0FBT21IO2dCQUNUO2dCQUVBRCxJQUFJMUYsSUFBSSxDQUFDeEMsTUFBTXlJLGFBQWEsQ0FBQ2pILFNBQVM0QyxjQUFjcEUsTUFBTXlJLGFBQWEsQ0FBQ0wsV0FBV0U7Z0JBRW5GLElBQUksQ0FBQy9HLG1CQUFtQlIsMkJBQTJCb0gsT0FBT2xILGVBQWU7b0JBQ3ZFLE9BQU9pSDtnQkFDVCxFQUFFLGdEQUFnRDtnQkFDbEQsc0RBQXNEO2dCQUN0RCw4REFBOEQ7Z0JBRzlENUcsOEJBQThCQyxpQkFBaUJDLFNBQVMwRztnQkFDeEQsT0FBT0E7WUFDVCxHQUFHLEVBQUU7UUFDUDtRQUVBLElBQUlRLFdBQVcxSCxNQUFNcUQsTUFBTTtRQUMzQixJQUFJTCxZQUFZakUsZUFBZStDLE1BQU0sQ0FBQzRGLFVBQVUsR0FBRztRQUNuRCxJQUFJeEUsZUFBZWIsc0JBQXNCckMsT0FBT3NDO1FBQ2hELElBQUk4RSxZQUFZbEUsYUFBYVYsZUFBZTtRQUM1QyxJQUFJeUMsWUFBWW1DLGFBQWEsT0FBT3BJLE1BQU15SSxhQUFhLENBQUNMLFdBQVczSyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUNrRyxLQUFLLEVBQUU7WUFDMUY0QixNQUFNcUMsWUFBWVcsWUFBWSxDQUFDRztZQUMvQkYsWUFBWXRFLGFBQWFSLFdBQVc7WUFDcENNLFdBQVdBO1lBQ1hoRCxPQUFPQTtRQUNULE1BQU1oQixNQUFNeUksYUFBYSxDQUFDM0ksaUJBQWlCO1lBQ3pDa0IsT0FBT0E7WUFDUCtHLFVBQVVBO1lBQ1Y5RyxjQUFjQTtZQUNkNEcsZUFBZUE7WUFDZkMsZ0JBQWdCQTtZQUNoQkgsV0FBV0E7WUFDWHJDLFdBQVdBO1lBQ1hNLGdCQUFnQkE7WUFDaEIrQyxjQUFjaEksdUJBQXVCQyxXQUFXOEg7WUFDaEQ5SCxXQUFXQTtZQUNYMkUsTUFBTUE7UUFDUjtRQUVBLElBQUl2RSxNQUFNNEgsWUFBWSxJQUFJO1lBQ3hCLE9BQU8zQztRQUNUO1FBRUEsSUFBSTRDLHlCQUF5QjlGLHFCQUFxQi9CLE9BQU9nQyxpQkFDckR4QixVQUFVcUgsdUJBQXVCckgsT0FBTztRQUU1QyxJQUFJNEMsZUFBZU4sc0JBQXNCOUMsT0FBTytDLFdBQVdDLFdBQVdDLGNBQWNDLGNBQWMsSUFBSSxDQUFDZ0MsVUFBVSxHQUFHLHVDQUF1QztRQUUzSixPQUFPbEcsTUFBTXlJLGFBQWEsQ0FBQ2pILFNBQVM0QyxjQUFjNkI7SUFDcEQ7SUFFQSxPQUFPdkI7QUFDVCxFQUFFMUUsTUFBTW9JLFNBQVM7QUFFakJVLE9BQU9DLE9BQU8sR0FBR3JFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JCbG9ja05vZGUucmVhY3QuanM/YTEwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqXG4gKiBUaGlzIGZpbGUgaXMgYSBmb3JrIG9mIERyYWZ0RWRpdG9yQmxvY2sucmVhY3QuanMgYW5kIERyYWZ0RWRpdG9yQ29udGVudHMucmVhY3QuanNcbiAqXG4gKiBUaGlzIGlzIHVuc3RhYmxlIGFuZCBub3QgcGFydCBvZiB0aGUgcHVibGljIEFQSSBhbmQgc2hvdWxkIG5vdCBiZSB1c2VkIGJ5XG4gKiBwcm9kdWN0aW9uIHN5c3RlbXMuIFRoaXMgZmlsZSBtYXkgYmUgdXBkYXRlL3JlbW92ZWQgd2l0aG91dCBub3RpY2UuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIF9hc3NpZ24gPSByZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKTtcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gX2Fzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHsgb3duS2V5cyA9IG93bktleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKS5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIHN5bSkuZW51bWVyYWJsZTsgfSkpOyB9IG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBEcmFmdEVkaXRvck5vZGUgPSByZXF1aXJlKFwiLi9EcmFmdEVkaXRvck5vZGUucmVhY3RcIik7XG5cbnZhciBEcmFmdE9mZnNldEtleSA9IHJlcXVpcmUoXCIuL0RyYWZ0T2Zmc2V0S2V5XCIpO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5cbnZhciBTY3JvbGwgPSByZXF1aXJlKFwiZmJqcy9saWIvU2Nyb2xsXCIpO1xuXG52YXIgU3R5bGUgPSByZXF1aXJlKFwiZmJqcy9saWIvU3R5bGVcIik7XG5cbnZhciBnZXRFbGVtZW50UG9zaXRpb24gPSByZXF1aXJlKFwiZmJqcy9saWIvZ2V0RWxlbWVudFBvc2l0aW9uXCIpO1xuXG52YXIgZ2V0U2Nyb2xsUG9zaXRpb24gPSByZXF1aXJlKFwiZmJqcy9saWIvZ2V0U2Nyb2xsUG9zaXRpb25cIik7XG5cbnZhciBnZXRWaWV3cG9ydERpbWVuc2lvbnMgPSByZXF1aXJlKFwiZmJqcy9saWIvZ2V0Vmlld3BvcnREaW1lbnNpb25zXCIpO1xuXG52YXIgSW1tdXRhYmxlID0gcmVxdWlyZShcImltbXV0YWJsZVwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9pbnZhcmlhbnRcIik7XG5cbnZhciBpc0hUTUxFbGVtZW50ID0gcmVxdWlyZShcIi4vaXNIVE1MRWxlbWVudFwiKTtcblxudmFyIFNDUk9MTF9CVUZGRVIgPSAxMDtcbnZhciBMaXN0ID0gSW1tdXRhYmxlLkxpc3Q7IC8vIHdlIHNob3VsZCBoYXJkZW4gdXAgdGhlIGJlbGxvdyBmbG93IHR5cGVzIHRvIG1ha2UgdGhlbSBtb3JlIHN0cmljdFxuXG4vKipcbiAqIFJldHVybiB3aGV0aGVyIGEgYmxvY2sgb3ZlcmxhcHMgd2l0aCBlaXRoZXIgZWRnZSBvZiB0aGUgYFNlbGVjdGlvblN0YXRlYC5cbiAqL1xudmFyIGlzQmxvY2tPblNlbGVjdGlvbkVkZ2UgPSBmdW5jdGlvbiBpc0Jsb2NrT25TZWxlY3Rpb25FZGdlKHNlbGVjdGlvbiwga2V5KSB7XG4gIHJldHVybiBzZWxlY3Rpb24uZ2V0QW5jaG9yS2V5KCkgPT09IGtleSB8fCBzZWxlY3Rpb24uZ2V0Rm9jdXNLZXkoKSA9PT0ga2V5O1xufTtcbi8qKlxuICogV2Ugd2lsbCB1c2UgdGhpcyBoZWxwZXIgdG8gaWRlbnRpZnkgYmxvY2tzIHRoYXQgbmVlZCB0byBiZSB3cmFwcGVkIGJ1dCBoYXZlIHNpYmxpbmdzIHRoYXRcbiAqIGFsc28gc2hhcmUgdGhlIHNhbWUgd3JhcHBlciBlbGVtZW50LCB0aGlzIHdheSB3ZSBjYW4gZG8gdGhlIHdyYXBwaW5nIG9uY2UgdGhlIGxhc3Qgc2libGluZ1xuICogaXMgYWRkZWQuXG4gKi9cblxuXG52YXIgc2hvdWxkTm90QWRkV3JhcHBlckVsZW1lbnQgPSBmdW5jdGlvbiBzaG91bGROb3RBZGRXcmFwcGVyRWxlbWVudChibG9jaywgY29udGVudFN0YXRlKSB7XG4gIHZhciBuZXh0U2libGluZ0tleSA9IGJsb2NrLmdldE5leHRTaWJsaW5nS2V5KCk7XG4gIHJldHVybiBuZXh0U2libGluZ0tleSA/IGNvbnRlbnRTdGF0ZS5nZXRCbG9ja0ZvcktleShuZXh0U2libGluZ0tleSkuZ2V0VHlwZSgpID09PSBibG9jay5nZXRUeXBlKCkgOiBmYWxzZTtcbn07XG5cbnZhciBhcHBseVdyYXBwZXJFbGVtZW50VG9TaWJsaW5ncyA9IGZ1bmN0aW9uIGFwcGx5V3JhcHBlckVsZW1lbnRUb1NpYmxpbmdzKHdyYXBwZXJUZW1wbGF0ZSwgRWxlbWVudCwgbm9kZXMpIHtcbiAgdmFyIHdyYXBwZWRTaWJsaW5ncyA9IFtdOyAvLyB3ZSBjaGVjayBiYWNrIHVudGlsIHdlIGZpbmQgYSBzaWJsaW5nIHRoYXQgZG9lcyBub3QgaGF2ZSBzYW1lIHdyYXBwZXJcblxuICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlO1xuICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBub2Rlcy5yZXZlcnNlKClbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICB2YXIgc2libGluZyA9IF9zdGVwLnZhbHVlO1xuXG4gICAgICBpZiAoc2libGluZy50eXBlICE9PSBFbGVtZW50KSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICB3cmFwcGVkU2libGluZ3MucHVzaChzaWJsaW5nKTtcbiAgICB9IC8vIHdlIG5vdyBzaG91bGQgcmVtb3ZlIGZyb20gYWNjIHRoZSB3cmFwcGVkU2libGluZ3MgYW5kIGFkZCB0aGVtIGJhY2sgdW5kZXIgc2FtZSB3cmFwXG5cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yW1wicmV0dXJuXCJdICE9IG51bGwpIHtcbiAgICAgICAgX2l0ZXJhdG9yW1wicmV0dXJuXCJdKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBub2Rlcy5zcGxpY2Uobm9kZXMuaW5kZXhPZih3cmFwcGVkU2libGluZ3NbMF0pLCB3cmFwcGVkU2libGluZ3MubGVuZ3RoICsgMSk7XG4gIHZhciBjaGlsZHJlbklzID0gd3JhcHBlZFNpYmxpbmdzLnJldmVyc2UoKTtcbiAgdmFyIGtleSA9IGNoaWxkcmVuSXNbMF0ua2V5O1xuICBub2Rlcy5wdXNoKFJlYWN0LmNsb25lRWxlbWVudCh3cmFwcGVyVGVtcGxhdGUsIHtcbiAgICBrZXk6IFwiXCIuY29uY2F0KGtleSwgXCItd3JhcFwiKSxcbiAgICAnZGF0YS1vZmZzZXQta2V5JzogRHJhZnRPZmZzZXRLZXkuZW5jb2RlKGtleSwgMCwgMClcbiAgfSwgY2hpbGRyZW5JcykpO1xuICByZXR1cm4gbm9kZXM7XG59O1xuXG52YXIgZ2V0RHJhZnRSZW5kZXJDb25maWcgPSBmdW5jdGlvbiBnZXREcmFmdFJlbmRlckNvbmZpZyhibG9jaywgYmxvY2tSZW5kZXJNYXApIHtcbiAgdmFyIGNvbmZpZ0ZvclR5cGUgPSBibG9ja1JlbmRlck1hcC5nZXQoYmxvY2suZ2V0VHlwZSgpKSB8fCBibG9ja1JlbmRlck1hcC5nZXQoJ3Vuc3R5bGVkJyk7XG4gIHZhciB3cmFwcGVyVGVtcGxhdGUgPSBjb25maWdGb3JUeXBlLndyYXBwZXI7XG4gIHZhciBFbGVtZW50ID0gY29uZmlnRm9yVHlwZS5lbGVtZW50IHx8IGJsb2NrUmVuZGVyTWFwLmdldCgndW5zdHlsZWQnKS5lbGVtZW50O1xuICByZXR1cm4ge1xuICAgIEVsZW1lbnQ6IEVsZW1lbnQsXG4gICAgd3JhcHBlclRlbXBsYXRlOiB3cmFwcGVyVGVtcGxhdGVcbiAgfTtcbn07XG5cbnZhciBnZXRDdXN0b21SZW5kZXJDb25maWcgPSBmdW5jdGlvbiBnZXRDdXN0b21SZW5kZXJDb25maWcoYmxvY2ssIGJsb2NrUmVuZGVyZXJGbikge1xuICB2YXIgY3VzdG9tUmVuZGVyZXIgPSBibG9ja1JlbmRlcmVyRm4oYmxvY2spO1xuXG4gIGlmICghY3VzdG9tUmVuZGVyZXIpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICB2YXIgQ3VzdG9tQ29tcG9uZW50ID0gY3VzdG9tUmVuZGVyZXIuY29tcG9uZW50LFxuICAgICAgY3VzdG9tUHJvcHMgPSBjdXN0b21SZW5kZXJlci5wcm9wcyxcbiAgICAgIGN1c3RvbUVkaXRhYmxlID0gY3VzdG9tUmVuZGVyZXIuZWRpdGFibGU7XG4gIHJldHVybiB7XG4gICAgQ3VzdG9tQ29tcG9uZW50OiBDdXN0b21Db21wb25lbnQsXG4gICAgY3VzdG9tUHJvcHM6IGN1c3RvbVByb3BzLFxuICAgIGN1c3RvbUVkaXRhYmxlOiBjdXN0b21FZGl0YWJsZVxuICB9O1xufTtcblxudmFyIGdldEVsZW1lbnRQcm9wc0NvbmZpZyA9IGZ1bmN0aW9uIGdldEVsZW1lbnRQcm9wc0NvbmZpZyhibG9jaywgZWRpdG9yS2V5LCBvZmZzZXRLZXksIGJsb2NrU3R5bGVGbiwgY3VzdG9tQ29uZmlnLCByZWYpIHtcbiAgdmFyIGVsZW1lbnRQcm9wcyA9IHtcbiAgICAnZGF0YS1ibG9jayc6IHRydWUsXG4gICAgJ2RhdGEtZWRpdG9yJzogZWRpdG9yS2V5LFxuICAgICdkYXRhLW9mZnNldC1rZXknOiBvZmZzZXRLZXksXG4gICAga2V5OiBibG9jay5nZXRLZXkoKSxcbiAgICByZWY6IHJlZlxuICB9O1xuICB2YXIgY3VzdG9tQ2xhc3MgPSBibG9ja1N0eWxlRm4oYmxvY2spO1xuXG4gIGlmIChjdXN0b21DbGFzcykge1xuICAgIGVsZW1lbnRQcm9wcy5jbGFzc05hbWUgPSBjdXN0b21DbGFzcztcbiAgfVxuXG4gIGlmIChjdXN0b21Db25maWcuY3VzdG9tRWRpdGFibGUgIT09IHVuZGVmaW5lZCkge1xuICAgIGVsZW1lbnRQcm9wcyA9IF9vYmplY3RTcHJlYWQoe30sIGVsZW1lbnRQcm9wcywge1xuICAgICAgY29udGVudEVkaXRhYmxlOiBjdXN0b21Db25maWcuY3VzdG9tRWRpdGFibGUsXG4gICAgICBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmc6IHRydWVcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50UHJvcHM7XG59O1xuXG52YXIgRHJhZnRFZGl0b3JCbG9ja05vZGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoRHJhZnRFZGl0b3JCbG9ja05vZGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIERyYWZ0RWRpdG9yQmxvY2tOb2RlKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIndyYXBwZXJSZWZcIiwgUmVhY3QuY3JlYXRlUmVmKCkpO1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IERyYWZ0RWRpdG9yQmxvY2tOb2RlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uc2hvdWxkQ29tcG9uZW50VXBkYXRlID0gZnVuY3Rpb24gc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGJsb2NrID0gX3RoaXMkcHJvcHMuYmxvY2ssXG4gICAgICAgIGRpcmVjdGlvbiA9IF90aGlzJHByb3BzLmRpcmVjdGlvbixcbiAgICAgICAgdHJlZSA9IF90aGlzJHByb3BzLnRyZWU7XG4gICAgdmFyIGlzQ29udGFpbmVyTm9kZSA9ICFibG9jay5nZXRDaGlsZEtleXMoKS5pc0VtcHR5KCk7XG4gICAgdmFyIGJsb2NrSGFzQ2hhbmdlZCA9IGJsb2NrICE9PSBuZXh0UHJvcHMuYmxvY2sgfHwgdHJlZSAhPT0gbmV4dFByb3BzLnRyZWUgfHwgZGlyZWN0aW9uICE9PSBuZXh0UHJvcHMuZGlyZWN0aW9uIHx8IGlzQmxvY2tPblNlbGVjdGlvbkVkZ2UobmV4dFByb3BzLnNlbGVjdGlvbiwgbmV4dFByb3BzLmJsb2NrLmdldEtleSgpKSAmJiBuZXh0UHJvcHMuZm9yY2VTZWxlY3Rpb247IC8vIGlmIHdlIGhhdmUgY2hpbGRyZW4gYXQgdGhpcyBzdGFnZSB3ZSBhbHdheXMgcmUtcmVuZGVyIGNvbnRhaW5lciBub2Rlc1xuICAgIC8vIGVsc2UgaWYgaXRzIGEgcm9vdCBub2RlIHdlIGF2b2lkIHJlLXJlbmRlcmluZyBieSBjaGVja2luZyBmb3IgYmxvY2sgdXBkYXRlc1xuXG4gICAgcmV0dXJuIGlzQ29udGFpbmVyTm9kZSB8fCBibG9ja0hhc0NoYW5nZWQ7XG4gIH1cbiAgLyoqXG4gICAqIFdoZW4gYSBibG9jayBpcyBtb3VudGVkIGFuZCBvdmVybGFwcyB0aGUgc2VsZWN0aW9uIHN0YXRlLCB3ZSBuZWVkIHRvIG1ha2VcbiAgICogc3VyZSB0aGF0IHRoZSBjdXJzb3IgaXMgdmlzaWJsZSB0byBtYXRjaCBuYXRpdmUgYmVoYXZpb3IuIFRoaXMgbWF5IG5vdFxuICAgKiBiZSB0aGUgY2FzZSBpZiB0aGUgdXNlciBoYXMgcHJlc3NlZCBgUkVUVVJOYCBvciBwYXN0ZWQgc29tZSBjb250ZW50LCBzaW5jZVxuICAgKiBwcm9ncmFtYXRpY2FsbHkgY3JlYXRpbmcgdGhlc2UgbmV3IGJsb2NrcyBhbmQgc2V0dGluZyB0aGUgRE9NIHNlbGVjdGlvblxuICAgKiB3aWxsIG1pc3Mgb3V0IG9uIHRoZSBicm93c2VyIG5hdGl2ZWx5IHNjcm9sbGluZyB0byB0aGF0IHBvc2l0aW9uLlxuICAgKlxuICAgKiBUbyByZXBsaWNhdGUgbmF0aXZlIGJlaGF2aW9yLCBpZiB0aGUgYmxvY2sgb3ZlcmxhcHMgdGhlIHNlbGVjdGlvbiBzdGF0ZVxuICAgKiBvbiBtb3VudCwgZm9yY2UgdGhlIHNjcm9sbCBwb3NpdGlvbi4gQ2hlY2sgdGhlIHNjcm9sbCBzdGF0ZSBvZiB0aGUgc2Nyb2xsXG4gICAqIHBhcmVudCwgYW5kIGFkanVzdCBpdCB0byBhbGlnbiB0aGUgZW50aXJlIGJsb2NrIHRvIHRoZSBib3R0b20gb2YgdGhlXG4gICAqIHNjcm9sbCBwYXJlbnQuXG4gICAqL1xuICA7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdmFyIHNlbGVjdGlvbiA9IHRoaXMucHJvcHMuc2VsZWN0aW9uO1xuICAgIHZhciBlbmRLZXkgPSBzZWxlY3Rpb24uZ2V0RW5kS2V5KCk7XG5cbiAgICBpZiAoIXNlbGVjdGlvbi5nZXRIYXNGb2N1cygpIHx8IGVuZEtleSAhPT0gdGhpcy5wcm9wcy5ibG9jay5nZXRLZXkoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBibG9ja05vZGUgPSB0aGlzLndyYXBwZXJSZWYuY3VycmVudDtcblxuICAgIGlmICghYmxvY2tOb2RlKSB7XG4gICAgICAvLyBUaGlzIEJsb2NrIE5vZGUgd2FzIHJlbmRlcmVkIHdpdGhvdXQgYSB3cmFwcGVyIGVsZW1lbnQuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHNjcm9sbFBhcmVudCA9IFN0eWxlLmdldFNjcm9sbFBhcmVudChibG9ja05vZGUpO1xuICAgIHZhciBzY3JvbGxQb3NpdGlvbiA9IGdldFNjcm9sbFBvc2l0aW9uKHNjcm9sbFBhcmVudCk7XG4gICAgdmFyIHNjcm9sbERlbHRhO1xuXG4gICAgaWYgKHNjcm9sbFBhcmVudCA9PT0gd2luZG93KSB7XG4gICAgICB2YXIgbm9kZVBvc2l0aW9uID0gZ2V0RWxlbWVudFBvc2l0aW9uKGJsb2NrTm9kZSk7XG4gICAgICB2YXIgbm9kZUJvdHRvbSA9IG5vZGVQb3NpdGlvbi55ICsgbm9kZVBvc2l0aW9uLmhlaWdodDtcbiAgICAgIHZhciB2aWV3cG9ydEhlaWdodCA9IGdldFZpZXdwb3J0RGltZW5zaW9ucygpLmhlaWdodDtcbiAgICAgIHNjcm9sbERlbHRhID0gbm9kZUJvdHRvbSAtIHZpZXdwb3J0SGVpZ2h0O1xuXG4gICAgICBpZiAoc2Nyb2xsRGVsdGEgPiAwKSB7XG4gICAgICAgIHdpbmRvdy5zY3JvbGxUbyhzY3JvbGxQb3NpdGlvbi54LCBzY3JvbGxQb3NpdGlvbi55ICsgc2Nyb2xsRGVsdGEgKyBTQ1JPTExfQlVGRkVSKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgIWlzSFRNTEVsZW1lbnQoYmxvY2tOb2RlKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ2Jsb2NrTm9kZSBpcyBub3QgYW4gSFRNTEVsZW1lbnQnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgaHRtbEJsb2NrTm9kZSA9IGJsb2NrTm9kZTtcbiAgICAgIHZhciBibG9ja0JvdHRvbSA9IGh0bWxCbG9ja05vZGUub2Zmc2V0SGVpZ2h0ICsgaHRtbEJsb2NrTm9kZS5vZmZzZXRUb3A7XG4gICAgICB2YXIgc2Nyb2xsQm90dG9tID0gc2Nyb2xsUGFyZW50Lm9mZnNldEhlaWdodCArIHNjcm9sbFBvc2l0aW9uLnk7XG4gICAgICBzY3JvbGxEZWx0YSA9IGJsb2NrQm90dG9tIC0gc2Nyb2xsQm90dG9tO1xuXG4gICAgICBpZiAoc2Nyb2xsRGVsdGEgPiAwKSB7XG4gICAgICAgIFNjcm9sbC5zZXRUb3Aoc2Nyb2xsUGFyZW50LCBTY3JvbGwuZ2V0VG9wKHNjcm9sbFBhcmVudCkgKyBzY3JvbGxEZWx0YSArIFNDUk9MTF9CVUZGRVIpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIGJsb2NrID0gX3RoaXMkcHJvcHMyLmJsb2NrLFxuICAgICAgICBibG9ja1JlbmRlck1hcCA9IF90aGlzJHByb3BzMi5ibG9ja1JlbmRlck1hcCxcbiAgICAgICAgYmxvY2tSZW5kZXJlckZuID0gX3RoaXMkcHJvcHMyLmJsb2NrUmVuZGVyZXJGbixcbiAgICAgICAgYmxvY2tTdHlsZUZuID0gX3RoaXMkcHJvcHMyLmJsb2NrU3R5bGVGbixcbiAgICAgICAgY29udGVudFN0YXRlID0gX3RoaXMkcHJvcHMyLmNvbnRlbnRTdGF0ZSxcbiAgICAgICAgZGVjb3JhdG9yID0gX3RoaXMkcHJvcHMyLmRlY29yYXRvcixcbiAgICAgICAgZWRpdG9yS2V5ID0gX3RoaXMkcHJvcHMyLmVkaXRvcktleSxcbiAgICAgICAgZWRpdG9yU3RhdGUgPSBfdGhpcyRwcm9wczIuZWRpdG9yU3RhdGUsXG4gICAgICAgIGN1c3RvbVN0eWxlRm4gPSBfdGhpcyRwcm9wczIuY3VzdG9tU3R5bGVGbixcbiAgICAgICAgY3VzdG9tU3R5bGVNYXAgPSBfdGhpcyRwcm9wczIuY3VzdG9tU3R5bGVNYXAsXG4gICAgICAgIGRpcmVjdGlvbiA9IF90aGlzJHByb3BzMi5kaXJlY3Rpb24sXG4gICAgICAgIGZvcmNlU2VsZWN0aW9uID0gX3RoaXMkcHJvcHMyLmZvcmNlU2VsZWN0aW9uLFxuICAgICAgICBzZWxlY3Rpb24gPSBfdGhpcyRwcm9wczIuc2VsZWN0aW9uLFxuICAgICAgICB0cmVlID0gX3RoaXMkcHJvcHMyLnRyZWU7XG4gICAgdmFyIGNoaWxkcmVuID0gbnVsbDtcblxuICAgIGlmIChibG9jay5jaGlsZHJlbi5zaXplKSB7XG4gICAgICBjaGlsZHJlbiA9IGJsb2NrLmNoaWxkcmVuLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrZXkpIHtcbiAgICAgICAgdmFyIG9mZnNldEtleSA9IERyYWZ0T2Zmc2V0S2V5LmVuY29kZShrZXksIDAsIDApO1xuICAgICAgICB2YXIgY2hpbGQgPSBjb250ZW50U3RhdGUuZ2V0QmxvY2tGb3JLZXkoa2V5KTtcbiAgICAgICAgdmFyIGN1c3RvbUNvbmZpZyA9IGdldEN1c3RvbVJlbmRlckNvbmZpZyhjaGlsZCwgYmxvY2tSZW5kZXJlckZuKTtcbiAgICAgICAgdmFyIENvbXBvbmVudCA9IGN1c3RvbUNvbmZpZy5DdXN0b21Db21wb25lbnQgfHwgRHJhZnRFZGl0b3JCbG9ja05vZGU7XG5cbiAgICAgICAgdmFyIF9nZXREcmFmdFJlbmRlckNvbmZpZyA9IGdldERyYWZ0UmVuZGVyQ29uZmlnKGNoaWxkLCBibG9ja1JlbmRlck1hcCksXG4gICAgICAgICAgICBFbGVtZW50ID0gX2dldERyYWZ0UmVuZGVyQ29uZmlnLkVsZW1lbnQsXG4gICAgICAgICAgICB3cmFwcGVyVGVtcGxhdGUgPSBfZ2V0RHJhZnRSZW5kZXJDb25maWcud3JhcHBlclRlbXBsYXRlO1xuXG4gICAgICAgIHZhciBlbGVtZW50UHJvcHMgPSBnZXRFbGVtZW50UHJvcHNDb25maWcoY2hpbGQsIGVkaXRvcktleSwgb2Zmc2V0S2V5LCBibG9ja1N0eWxlRm4sIGN1c3RvbUNvbmZpZywgbnVsbCk7XG5cbiAgICAgICAgdmFyIGNoaWxkUHJvcHMgPSBfb2JqZWN0U3ByZWFkKHt9LCBfdGhpczIucHJvcHMsIHtcbiAgICAgICAgICB0cmVlOiBlZGl0b3JTdGF0ZS5nZXRCbG9ja1RyZWUoa2V5KSxcbiAgICAgICAgICBibG9ja1Byb3BzOiBjdXN0b21Db25maWcuY3VzdG9tUHJvcHMsXG4gICAgICAgICAgb2Zmc2V0S2V5OiBvZmZzZXRLZXksXG4gICAgICAgICAgYmxvY2s6IGNoaWxkXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFjYy5wdXNoKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRWxlbWVudCwgZWxlbWVudFByb3BzLCBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgY2hpbGRQcm9wcykpKTtcblxuICAgICAgICBpZiAoIXdyYXBwZXJUZW1wbGF0ZSB8fCBzaG91bGROb3RBZGRXcmFwcGVyRWxlbWVudChjaGlsZCwgY29udGVudFN0YXRlKSkge1xuICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH0gLy8gaWYgd2UgYXJlIGhlcmUgaXQgbWVhbnMgd2UgYXJlIHRoZSBsYXN0IGJsb2NrXG4gICAgICAgIC8vIHRoYXQgaGFzIGEgd3JhcHBlclRlbXBsYXRlIHNvIHdlIHNob3VsZCB3cmFwIGl0c2VsZlxuICAgICAgICAvLyBhbmQgYWxsIG90aGVyIHByZXZpb3VzIHNpYmxpbmdzIHRoYXQgc2hhcmUgdGhlIHNhbWUgd3JhcHBlclxuXG5cbiAgICAgICAgYXBwbHlXcmFwcGVyRWxlbWVudFRvU2libGluZ3Mod3JhcHBlclRlbXBsYXRlLCBFbGVtZW50LCBhY2MpO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgfSwgW10pO1xuICAgIH1cblxuICAgIHZhciBibG9ja0tleSA9IGJsb2NrLmdldEtleSgpO1xuICAgIHZhciBvZmZzZXRLZXkgPSBEcmFmdE9mZnNldEtleS5lbmNvZGUoYmxvY2tLZXksIDAsIDApO1xuICAgIHZhciBjdXN0b21Db25maWcgPSBnZXRDdXN0b21SZW5kZXJDb25maWcoYmxvY2ssIGJsb2NrUmVuZGVyZXJGbik7XG4gICAgdmFyIENvbXBvbmVudCA9IGN1c3RvbUNvbmZpZy5DdXN0b21Db21wb25lbnQ7XG4gICAgdmFyIGJsb2NrTm9kZSA9IENvbXBvbmVudCAhPSBudWxsID8gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCB0aGlzLnByb3BzLCB7XG4gICAgICB0cmVlOiBlZGl0b3JTdGF0ZS5nZXRCbG9ja1RyZWUoYmxvY2tLZXkpLFxuICAgICAgYmxvY2tQcm9wczogY3VzdG9tQ29uZmlnLmN1c3RvbVByb3BzLFxuICAgICAgb2Zmc2V0S2V5OiBvZmZzZXRLZXksXG4gICAgICBibG9jazogYmxvY2tcbiAgICB9KSkgOiBSZWFjdC5jcmVhdGVFbGVtZW50KERyYWZ0RWRpdG9yTm9kZSwge1xuICAgICAgYmxvY2s6IGJsb2NrLFxuICAgICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgICAgY29udGVudFN0YXRlOiBjb250ZW50U3RhdGUsXG4gICAgICBjdXN0b21TdHlsZUZuOiBjdXN0b21TdHlsZUZuLFxuICAgICAgY3VzdG9tU3R5bGVNYXA6IGN1c3RvbVN0eWxlTWFwLFxuICAgICAgZGVjb3JhdG9yOiBkZWNvcmF0b3IsXG4gICAgICBkaXJlY3Rpb246IGRpcmVjdGlvbixcbiAgICAgIGZvcmNlU2VsZWN0aW9uOiBmb3JjZVNlbGVjdGlvbixcbiAgICAgIGhhc1NlbGVjdGlvbjogaXNCbG9ja09uU2VsZWN0aW9uRWRnZShzZWxlY3Rpb24sIGJsb2NrS2V5KSxcbiAgICAgIHNlbGVjdGlvbjogc2VsZWN0aW9uLFxuICAgICAgdHJlZTogdHJlZVxuICAgIH0pO1xuXG4gICAgaWYgKGJsb2NrLmdldFBhcmVudEtleSgpKSB7XG4gICAgICByZXR1cm4gYmxvY2tOb2RlO1xuICAgIH1cblxuICAgIHZhciBfZ2V0RHJhZnRSZW5kZXJDb25maWcyID0gZ2V0RHJhZnRSZW5kZXJDb25maWcoYmxvY2ssIGJsb2NrUmVuZGVyTWFwKSxcbiAgICAgICAgRWxlbWVudCA9IF9nZXREcmFmdFJlbmRlckNvbmZpZzIuRWxlbWVudDtcblxuICAgIHZhciBlbGVtZW50UHJvcHMgPSBnZXRFbGVtZW50UHJvcHNDb25maWcoYmxvY2ssIGVkaXRvcktleSwgb2Zmc2V0S2V5LCBibG9ja1N0eWxlRm4sIGN1c3RvbUNvbmZpZywgdGhpcy53cmFwcGVyUmVmKTsgLy8gcm9vdCBibG9jayBub2RlcyBuZWVkcyB0byBiZSB3cmFwcGVkXG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChFbGVtZW50LCBlbGVtZW50UHJvcHMsIGJsb2NrTm9kZSk7XG4gIH07XG5cbiAgcmV0dXJuIERyYWZ0RWRpdG9yQmxvY2tOb2RlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERyYWZ0RWRpdG9yQmxvY2tOb2RlOyJdLCJuYW1lcyI6WyJfYXNzaWduIiwicmVxdWlyZSIsIl9leHRlbmRzIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJfb2JqZWN0U3ByZWFkIiwib3duS2V5cyIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJjb25jYXQiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsInZhbHVlIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIkRyYWZ0RWRpdG9yTm9kZSIsIkRyYWZ0T2Zmc2V0S2V5IiwiUmVhY3QiLCJTY3JvbGwiLCJTdHlsZSIsImdldEVsZW1lbnRQb3NpdGlvbiIsImdldFNjcm9sbFBvc2l0aW9uIiwiZ2V0Vmlld3BvcnREaW1lbnNpb25zIiwiSW1tdXRhYmxlIiwiaW52YXJpYW50IiwiaXNIVE1MRWxlbWVudCIsIlNDUk9MTF9CVUZGRVIiLCJMaXN0IiwiaXNCbG9ja09uU2VsZWN0aW9uRWRnZSIsInNlbGVjdGlvbiIsImdldEFuY2hvcktleSIsImdldEZvY3VzS2V5Iiwic2hvdWxkTm90QWRkV3JhcHBlckVsZW1lbnQiLCJibG9jayIsImNvbnRlbnRTdGF0ZSIsIm5leHRTaWJsaW5nS2V5IiwiZ2V0TmV4dFNpYmxpbmdLZXkiLCJnZXRCbG9ja0ZvcktleSIsImdldFR5cGUiLCJhcHBseVdyYXBwZXJFbGVtZW50VG9TaWJsaW5ncyIsIndyYXBwZXJUZW1wbGF0ZSIsIkVsZW1lbnQiLCJub2RlcyIsIndyYXBwZWRTaWJsaW5ncyIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24iLCJfZGlkSXRlcmF0b3JFcnJvciIsIl9pdGVyYXRvckVycm9yIiwidW5kZWZpbmVkIiwiX2l0ZXJhdG9yIiwicmV2ZXJzZSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX3N0ZXAiLCJuZXh0IiwiZG9uZSIsInNpYmxpbmciLCJ0eXBlIiwicHVzaCIsImVyciIsInNwbGljZSIsImluZGV4T2YiLCJjaGlsZHJlbklzIiwiY2xvbmVFbGVtZW50IiwiZW5jb2RlIiwiZ2V0RHJhZnRSZW5kZXJDb25maWciLCJibG9ja1JlbmRlck1hcCIsImNvbmZpZ0ZvclR5cGUiLCJnZXQiLCJ3cmFwcGVyIiwiZWxlbWVudCIsImdldEN1c3RvbVJlbmRlckNvbmZpZyIsImJsb2NrUmVuZGVyZXJGbiIsImN1c3RvbVJlbmRlcmVyIiwiQ3VzdG9tQ29tcG9uZW50IiwiY29tcG9uZW50IiwiY3VzdG9tUHJvcHMiLCJwcm9wcyIsImN1c3RvbUVkaXRhYmxlIiwiZWRpdGFibGUiLCJnZXRFbGVtZW50UHJvcHNDb25maWciLCJlZGl0b3JLZXkiLCJvZmZzZXRLZXkiLCJibG9ja1N0eWxlRm4iLCJjdXN0b21Db25maWciLCJyZWYiLCJlbGVtZW50UHJvcHMiLCJnZXRLZXkiLCJjdXN0b21DbGFzcyIsImNsYXNzTmFtZSIsImNvbnRlbnRFZGl0YWJsZSIsInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyIsIkRyYWZ0RWRpdG9yQmxvY2tOb2RlIiwiX1JlYWN0JENvbXBvbmVudCIsIl90aGlzIiwiX2xlbiIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjcmVhdGVSZWYiLCJfcHJvdG8iLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJuZXh0UHJvcHMiLCJfdGhpcyRwcm9wcyIsImRpcmVjdGlvbiIsInRyZWUiLCJpc0NvbnRhaW5lck5vZGUiLCJnZXRDaGlsZEtleXMiLCJpc0VtcHR5IiwiYmxvY2tIYXNDaGFuZ2VkIiwiZm9yY2VTZWxlY3Rpb24iLCJjb21wb25lbnREaWRNb3VudCIsImVuZEtleSIsImdldEVuZEtleSIsImdldEhhc0ZvY3VzIiwiYmxvY2tOb2RlIiwid3JhcHBlclJlZiIsImN1cnJlbnQiLCJzY3JvbGxQYXJlbnQiLCJnZXRTY3JvbGxQYXJlbnQiLCJzY3JvbGxQb3NpdGlvbiIsInNjcm9sbERlbHRhIiwid2luZG93Iiwibm9kZVBvc2l0aW9uIiwibm9kZUJvdHRvbSIsInkiLCJoZWlnaHQiLCJ2aWV3cG9ydEhlaWdodCIsInNjcm9sbFRvIiwieCIsInByb2Nlc3MiLCJodG1sQmxvY2tOb2RlIiwiYmxvY2tCb3R0b20iLCJvZmZzZXRIZWlnaHQiLCJvZmZzZXRUb3AiLCJzY3JvbGxCb3R0b20iLCJzZXRUb3AiLCJnZXRUb3AiLCJyZW5kZXIiLCJfdGhpczIiLCJfdGhpcyRwcm9wczIiLCJkZWNvcmF0b3IiLCJlZGl0b3JTdGF0ZSIsImN1c3RvbVN0eWxlRm4iLCJjdXN0b21TdHlsZU1hcCIsImNoaWxkcmVuIiwic2l6ZSIsInJlZHVjZSIsImFjYyIsImNoaWxkIiwiQ29tcG9uZW50IiwiX2dldERyYWZ0UmVuZGVyQ29uZmlnIiwiY2hpbGRQcm9wcyIsImdldEJsb2NrVHJlZSIsImJsb2NrUHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiYmxvY2tLZXkiLCJoYXNTZWxlY3Rpb24iLCJnZXRQYXJlbnRLZXkiLCJfZ2V0RHJhZnRSZW5kZXJDb25maWcyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorBlockNode.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorCompositionHandler.js":
/*!********************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorCompositionHandler.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DOMObserver = __webpack_require__(/*! ./DOMObserver */ \"(app-pages-browser)/./node_modules/draft-js/lib/DOMObserver.js\");\nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar Keys = __webpack_require__(/*! fbjs/lib/Keys */ \"(app-pages-browser)/./node_modules/fbjs/lib/Keys.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar editOnSelect = __webpack_require__(/*! ./editOnSelect */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnSelect.js\");\nvar getContentEditableContainer = __webpack_require__(/*! ./getContentEditableContainer */ \"(app-pages-browser)/./node_modules/draft-js/lib/getContentEditableContainer.js\");\nvar getDraftEditorSelection = __webpack_require__(/*! ./getDraftEditorSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelection.js\");\nvar getEntityKeyForSelection = __webpack_require__(/*! ./getEntityKeyForSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/getEntityKeyForSelection.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar isIE = UserAgent.isBrowser(\"IE\");\n/**\n * Millisecond delay to allow `compositionstart` to fire again upon\n * `compositionend`.\n *\n * This is used for Korean input to ensure that typing can continue without\n * the editor trying to render too quickly. More specifically, Safari 7.1+\n * triggers `compositionstart` a little slower than Chrome/FF, which\n * leads to composed characters being resolved and re-render occurring\n * sooner than we want.\n */ var RESOLVE_DELAY = 20;\n/**\n * A handful of variables used to track the current composition and its\n * resolution status. These exist at the module level because it is not\n * possible to have compositions occurring in multiple editors simultaneously,\n * and it simplifies state management with respect to the DraftEditor component.\n */ var resolved = false;\nvar stillComposing = false;\nvar domObserver = null;\nfunction startDOMObserver(editor) {\n    if (!domObserver) {\n        domObserver = new DOMObserver(getContentEditableContainer(editor));\n        domObserver.start();\n    }\n}\nvar DraftEditorCompositionHandler = {\n    /**\n   * A `compositionstart` event has fired while we're still in composition\n   * mode. Continue the current composition session to prevent a re-render.\n   */ onCompositionStart: function onCompositionStart(editor) {\n        stillComposing = true;\n        startDOMObserver(editor);\n    },\n    /**\n   * Attempt to end the current composition session.\n   *\n   * Defer handling because browser will still insert the chars into active\n   * element after `compositionend`. If a `compositionstart` event fires\n   * before `resolveComposition` executes, our composition session will\n   * continue.\n   *\n   * The `resolved` flag is useful because certain IME interfaces fire the\n   * `compositionend` event multiple times, thus queueing up multiple attempts\n   * at handling the composition. Since handling the same composition event\n   * twice could break the DOM, we only use the first event. Example: Arabic\n   * Google Input Tools on Windows 8.1 fires `compositionend` three times.\n   */ onCompositionEnd: function onCompositionEnd(editor) {\n        resolved = false;\n        stillComposing = false;\n        setTimeout(function() {\n            if (!resolved) {\n                DraftEditorCompositionHandler.resolveComposition(editor);\n            }\n        }, RESOLVE_DELAY);\n    },\n    onSelect: editOnSelect,\n    /**\n   * In Safari, keydown events may fire when committing compositions. If\n   * the arrow keys are used to commit, prevent default so that the cursor\n   * doesn't move, otherwise it will jump back noticeably on re-render.\n   */ onKeyDown: function onKeyDown(editor, e) {\n        if (!stillComposing) {\n            // If a keydown event is received after compositionend but before the\n            // 20ms timer expires (ex: type option-E then backspace, or type A then\n            // backspace in 2-Set Korean), we should immediately resolve the\n            // composition and reinterpret the key press in edit mode.\n            DraftEditorCompositionHandler.resolveComposition(editor);\n            editor._onKeyDown(e);\n            return;\n        }\n        if (e.which === Keys.RIGHT || e.which === Keys.LEFT) {\n            e.preventDefault();\n        }\n    },\n    /**\n   * Keypress events may fire when committing compositions. In Firefox,\n   * pressing RETURN commits the composition and inserts extra newline\n   * characters that we do not want. `preventDefault` allows the composition\n   * to be committed while preventing the extra characters.\n   */ onKeyPress: function onKeyPress(_editor, e) {\n        if (e.which === Keys.RETURN) {\n            e.preventDefault();\n        }\n    },\n    /**\n   * Attempt to insert composed characters into the document.\n   *\n   * If we are still in a composition session, do nothing. Otherwise, insert\n   * the characters into the document and terminate the composition session.\n   *\n   * If no characters were composed -- for instance, the user\n   * deleted all composed characters and committed nothing new --\n   * force a re-render. We also re-render when the composition occurs\n   * at the beginning of a leaf, to ensure that if the browser has\n   * created a new text node for the composition, we will discard it.\n   *\n   * Resetting innerHTML will move focus to the beginning of the editor,\n   * so we update to force it back to the correct place.\n   */ resolveComposition: function resolveComposition(editor) {\n        if (stillComposing) {\n            return;\n        }\n        var mutations = nullthrows(domObserver).stopAndFlushMutations();\n        domObserver = null;\n        resolved = true;\n        var editorState = EditorState.set(editor._latestEditorState, {\n            inCompositionMode: false\n        });\n        editor.exitCurrentMode();\n        if (!mutations.size) {\n            editor.update(editorState);\n            return;\n        } // TODO, check if Facebook still needs this flag or if it could be removed.\n        // Since there can be multiple mutations providing a `composedChars` doesn't\n        // apply well on this new model.\n        // if (\n        //   gkx('draft_handlebeforeinput_composed_text') &&\n        //   editor.props.handleBeforeInput &&\n        //   isEventHandled(\n        //     editor.props.handleBeforeInput(\n        //       composedChars,\n        //       editorState,\n        //       event.timeStamp,\n        //     ),\n        //   )\n        // ) {\n        //   return;\n        // }\n        var contentState = editorState.getCurrentContent();\n        mutations.forEach(function(composedChars, offsetKey) {\n            var _DraftOffsetKey$decod = DraftOffsetKey.decode(offsetKey), blockKey = _DraftOffsetKey$decod.blockKey, decoratorKey = _DraftOffsetKey$decod.decoratorKey, leafKey = _DraftOffsetKey$decod.leafKey;\n            var _editorState$getBlock = editorState.getBlockTree(blockKey).getIn([\n                decoratorKey,\n                \"leaves\",\n                leafKey\n            ]), start = _editorState$getBlock.start, end = _editorState$getBlock.end;\n            var replacementRange = editorState.getSelection().merge({\n                anchorKey: blockKey,\n                focusKey: blockKey,\n                anchorOffset: start,\n                focusOffset: end,\n                isBackward: false\n            });\n            var entityKey = getEntityKeyForSelection(contentState, replacementRange);\n            var currentStyle = contentState.getBlockForKey(blockKey).getInlineStyleAt(start);\n            contentState = DraftModifier.replaceText(contentState, replacementRange, composedChars, currentStyle, entityKey); // We need to update the editorState so the leaf node ranges are properly\n            // updated and multiple mutations are correctly applied.\n            editorState = EditorState.set(editorState, {\n                currentContent: contentState\n            });\n        }); // When we apply the text changes to the ContentState, the selection always\n        // goes to the end of the field, but it should just stay where it is\n        // after compositionEnd.\n        var documentSelection = getDraftEditorSelection(editorState, getContentEditableContainer(editor));\n        var compositionEndSelectionState = documentSelection.selectionState;\n        editor.restoreEditorDOM(); // See:\n        // - https://github.com/facebook/draft-js/issues/2093\n        // - https://github.com/facebook/draft-js/pull/2094\n        // Apply this fix only in IE for now. We can test it in\n        // other browsers in the future to ensure no regressions\n        var editorStateWithUpdatedSelection = isIE ? EditorState.forceSelection(editorState, compositionEndSelectionState) : EditorState.acceptSelection(editorState, compositionEndSelectionState);\n        editor.update(EditorState.push(editorStateWithUpdatedSelection, contentState, \"insert-characters\"));\n    }\n};\nmodule.exports = DraftEditorCompositionHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorCompositionHandler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContents-core.react.js":
/*!*********************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorContents-core.react.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar _assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nfunction _extends() {\n    _extends = _assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar DraftEditorBlock = __webpack_require__(/*! ./DraftEditorBlock.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorBlock.react.js\");\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar cx = __webpack_require__(/*! fbjs/lib/cx */ \"(app-pages-browser)/./node_modules/fbjs/lib/cx.js\");\nvar joinClasses = __webpack_require__(/*! fbjs/lib/joinClasses */ \"(app-pages-browser)/./node_modules/fbjs/lib/joinClasses.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\n/**\n * Provide default styling for list items. This way, lists will be styled with\n * proper counters and indentation even if the caller does not specify\n * their own styling at all. If more than five levels of nesting are needed,\n * the necessary CSS classes can be provided via `blockStyleFn` configuration.\n */ var getListItemClasses = function getListItemClasses(type, depth, shouldResetCount, direction) {\n    return cx({\n        \"public/DraftStyleDefault/unorderedListItem\": type === \"unordered-list-item\",\n        \"public/DraftStyleDefault/orderedListItem\": type === \"ordered-list-item\",\n        \"public/DraftStyleDefault/reset\": shouldResetCount,\n        \"public/DraftStyleDefault/depth0\": depth === 0,\n        \"public/DraftStyleDefault/depth1\": depth === 1,\n        \"public/DraftStyleDefault/depth2\": depth === 2,\n        \"public/DraftStyleDefault/depth3\": depth === 3,\n        \"public/DraftStyleDefault/depth4\": depth >= 4,\n        \"public/DraftStyleDefault/listLTR\": direction === \"LTR\",\n        \"public/DraftStyleDefault/listRTL\": direction === \"RTL\"\n    });\n};\n/**\n * `DraftEditorContents` is the container component for all block components\n * rendered for a `DraftEditor`. It is optimized to aggressively avoid\n * re-rendering blocks whenever possible.\n *\n * This component is separate from `DraftEditor` because certain props\n * (for instance, ARIA props) must be allowed to update without affecting\n * the contents of the editor.\n */ var DraftEditorContents = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorContents, _React$Component);\n    function DraftEditorContents() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = DraftEditorContents.prototype;\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        var prevEditorState = this.props.editorState;\n        var nextEditorState = nextProps.editorState;\n        var prevDirectionMap = prevEditorState.getDirectionMap();\n        var nextDirectionMap = nextEditorState.getDirectionMap(); // Text direction has changed for one or more blocks. We must re-render.\n        if (prevDirectionMap !== nextDirectionMap) {\n            return true;\n        }\n        var didHaveFocus = prevEditorState.getSelection().getHasFocus();\n        var nowHasFocus = nextEditorState.getSelection().getHasFocus();\n        if (didHaveFocus !== nowHasFocus) {\n            return true;\n        }\n        var nextNativeContent = nextEditorState.getNativelyRenderedContent();\n        var wasComposing = prevEditorState.isInCompositionMode();\n        var nowComposing = nextEditorState.isInCompositionMode(); // If the state is unchanged or we're currently rendering a natively\n        // rendered state, there's nothing new to be done.\n        if (prevEditorState === nextEditorState || nextNativeContent !== null && nextEditorState.getCurrentContent() === nextNativeContent || wasComposing && nowComposing) {\n            return false;\n        }\n        var prevContent = prevEditorState.getCurrentContent();\n        var nextContent = nextEditorState.getCurrentContent();\n        var prevDecorator = prevEditorState.getDecorator();\n        var nextDecorator = nextEditorState.getDecorator();\n        return wasComposing !== nowComposing || prevContent !== nextContent || prevDecorator !== nextDecorator || nextEditorState.mustForceSelection();\n    };\n    _proto.render = function render() {\n        var _this$props = this.props, blockRenderMap = _this$props.blockRenderMap, blockRendererFn = _this$props.blockRendererFn, blockStyleFn = _this$props.blockStyleFn, customStyleMap = _this$props.customStyleMap, customStyleFn = _this$props.customStyleFn, editorState = _this$props.editorState, editorKey = _this$props.editorKey, preventScroll = _this$props.preventScroll, textDirectionality = _this$props.textDirectionality;\n        var content = editorState.getCurrentContent();\n        var selection = editorState.getSelection();\n        var forceSelection = editorState.mustForceSelection();\n        var decorator = editorState.getDecorator();\n        var directionMap = nullthrows(editorState.getDirectionMap());\n        var blocksAsArray = content.getBlocksAsArray();\n        var processedBlocks = [];\n        var currentDepth = null;\n        var lastWrapperTemplate = null;\n        for(var ii = 0; ii < blocksAsArray.length; ii++){\n            var _block = blocksAsArray[ii];\n            var key = _block.getKey();\n            var blockType = _block.getType();\n            var customRenderer = blockRendererFn(_block);\n            var CustomComponent = void 0, customProps = void 0, customEditable = void 0;\n            if (customRenderer) {\n                CustomComponent = customRenderer.component;\n                customProps = customRenderer.props;\n                customEditable = customRenderer.editable;\n            }\n            var direction = textDirectionality ? textDirectionality : directionMap.get(key);\n            var offsetKey = DraftOffsetKey.encode(key, 0, 0);\n            var componentProps = {\n                contentState: content,\n                block: _block,\n                blockProps: customProps,\n                blockStyleFn: blockStyleFn,\n                customStyleMap: customStyleMap,\n                customStyleFn: customStyleFn,\n                decorator: decorator,\n                direction: direction,\n                forceSelection: forceSelection,\n                offsetKey: offsetKey,\n                preventScroll: preventScroll,\n                selection: selection,\n                tree: editorState.getBlockTree(key)\n            };\n            var configForType = blockRenderMap.get(blockType) || blockRenderMap.get(\"unstyled\");\n            var wrapperTemplate = configForType.wrapper;\n            var Element = configForType.element || blockRenderMap.get(\"unstyled\").element;\n            var depth = _block.getDepth();\n            var _className = \"\";\n            if (blockStyleFn) {\n                _className = blockStyleFn(_block);\n            } // List items are special snowflakes, since we handle nesting and\n            // counters manually.\n            if (Element === \"li\") {\n                var shouldResetCount = lastWrapperTemplate !== wrapperTemplate || currentDepth === null || depth > currentDepth;\n                _className = joinClasses(_className, getListItemClasses(blockType, depth, shouldResetCount, direction));\n            }\n            var Component = CustomComponent || DraftEditorBlock;\n            var childProps = {\n                className: _className,\n                \"data-block\": true,\n                \"data-editor\": editorKey,\n                \"data-offset-key\": offsetKey,\n                key: key\n            };\n            if (customEditable !== undefined) {\n                childProps = _objectSpread({}, childProps, {\n                    contentEditable: customEditable,\n                    suppressContentEditableWarning: true\n                });\n            }\n            var child = React.createElement(Element, childProps, /* $FlowFixMe[incompatible-type] (>=0.112.0 site=www,mobile) This\n       * comment suppresses an error found when Flow v0.112 was deployed. To\n       * see the error delete this comment and run Flow. */ React.createElement(Component, _extends({}, componentProps, {\n                key: key\n            })));\n            processedBlocks.push({\n                block: child,\n                wrapperTemplate: wrapperTemplate,\n                key: key,\n                offsetKey: offsetKey\n            });\n            if (wrapperTemplate) {\n                currentDepth = _block.getDepth();\n            } else {\n                currentDepth = null;\n            }\n            lastWrapperTemplate = wrapperTemplate;\n        } // Group contiguous runs of blocks that have the same wrapperTemplate\n        var outputBlocks = [];\n        for(var _ii = 0; _ii < processedBlocks.length;){\n            var info = processedBlocks[_ii];\n            if (info.wrapperTemplate) {\n                var blocks = [];\n                do {\n                    blocks.push(processedBlocks[_ii].block);\n                    _ii++;\n                }while (_ii < processedBlocks.length && processedBlocks[_ii].wrapperTemplate === info.wrapperTemplate);\n                var wrapperElement = React.cloneElement(info.wrapperTemplate, {\n                    key: info.key + \"-wrap\",\n                    \"data-offset-key\": info.offsetKey\n                }, blocks);\n                outputBlocks.push(wrapperElement);\n            } else {\n                outputBlocks.push(info.block);\n                _ii++;\n            }\n        }\n        return React.createElement(\"div\", {\n            \"data-contents\": \"true\"\n        }, outputBlocks);\n    };\n    return DraftEditorContents;\n}(React.Component);\nmodule.exports = DraftEditorContents;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContents-core.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContents.react.js":
/*!****************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorContents.react.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */ \nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar experimentalTreeDataSupport = gkx(\"draft_tree_data_support\");\nmodule.exports = experimentalTreeDataSupport ? __webpack_require__(/*! ./DraftEditorContentsExperimental.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContentsExperimental.react.js\") : __webpack_require__(/*! ./DraftEditorContents-core.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContents-core.react.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JDb250ZW50cy5yZWFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Q0FRQyxHQUNEO0FBRUEsSUFBSUEsTUFBTUMsbUJBQU9BLENBQUMscUVBQU87QUFFekIsSUFBSUMsOEJBQThCRixJQUFJO0FBQ3RDRyxPQUFPQyxPQUFPLEdBQUdGLDhCQUE4QkQsbUJBQU9BLENBQUMseUlBQXlDLElBQUlBLG1CQUFPQSxDQUFDLDJIQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL0RyYWZ0RWRpdG9yQ29udGVudHMucmVhY3QuanM/MmVmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBna3ggPSByZXF1aXJlKFwiLi9na3hcIik7XG5cbnZhciBleHBlcmltZW50YWxUcmVlRGF0YVN1cHBvcnQgPSBna3goJ2RyYWZ0X3RyZWVfZGF0YV9zdXBwb3J0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cGVyaW1lbnRhbFRyZWVEYXRhU3VwcG9ydCA/IHJlcXVpcmUoXCIuL0RyYWZ0RWRpdG9yQ29udGVudHNFeHBlcmltZW50YWwucmVhY3RcIikgOiByZXF1aXJlKFwiLi9EcmFmdEVkaXRvckNvbnRlbnRzLWNvcmUucmVhY3RcIik7Il0sIm5hbWVzIjpbImdreCIsInJlcXVpcmUiLCJleHBlcmltZW50YWxUcmVlRGF0YVN1cHBvcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContents.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContentsExperimental.react.js":
/*!****************************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorContentsExperimental.react.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This file is a fork of DraftEditorContents.react.js for tree nodes\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ \nvar _assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nfunction _extends() {\n    _extends = _assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar DraftEditorBlockNode = __webpack_require__(/*! ./DraftEditorBlockNode.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorBlockNode.react.js\");\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\n/**\n * `DraftEditorContents` is the container component for all block components\n * rendered for a `DraftEditor`. It is optimized to aggressively avoid\n * re-rendering blocks whenever possible.\n *\n * This component is separate from `DraftEditor` because certain props\n * (for instance, ARIA props) must be allowed to update without affecting\n * the contents of the editor.\n */ var DraftEditorContentsExperimental = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorContentsExperimental, _React$Component);\n    function DraftEditorContentsExperimental() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = DraftEditorContentsExperimental.prototype;\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        var prevEditorState = this.props.editorState;\n        var nextEditorState = nextProps.editorState;\n        var prevDirectionMap = prevEditorState.getDirectionMap();\n        var nextDirectionMap = nextEditorState.getDirectionMap(); // Text direction has changed for one or more blocks. We must re-render.\n        if (prevDirectionMap !== nextDirectionMap) {\n            return true;\n        }\n        var didHaveFocus = prevEditorState.getSelection().getHasFocus();\n        var nowHasFocus = nextEditorState.getSelection().getHasFocus();\n        if (didHaveFocus !== nowHasFocus) {\n            return true;\n        }\n        var nextNativeContent = nextEditorState.getNativelyRenderedContent();\n        var wasComposing = prevEditorState.isInCompositionMode();\n        var nowComposing = nextEditorState.isInCompositionMode(); // If the state is unchanged or we're currently rendering a natively\n        // rendered state, there's nothing new to be done.\n        if (prevEditorState === nextEditorState || nextNativeContent !== null && nextEditorState.getCurrentContent() === nextNativeContent || wasComposing && nowComposing) {\n            return false;\n        }\n        var prevContent = prevEditorState.getCurrentContent();\n        var nextContent = nextEditorState.getCurrentContent();\n        var prevDecorator = prevEditorState.getDecorator();\n        var nextDecorator = nextEditorState.getDecorator();\n        return wasComposing !== nowComposing || prevContent !== nextContent || prevDecorator !== nextDecorator || nextEditorState.mustForceSelection();\n    };\n    _proto.render = function render() {\n        var _this$props = this.props, blockRenderMap = _this$props.blockRenderMap, blockRendererFn = _this$props.blockRendererFn, blockStyleFn = _this$props.blockStyleFn, customStyleMap = _this$props.customStyleMap, customStyleFn = _this$props.customStyleFn, editorState = _this$props.editorState, editorKey = _this$props.editorKey, textDirectionality = _this$props.textDirectionality;\n        var content = editorState.getCurrentContent();\n        var selection = editorState.getSelection();\n        var forceSelection = editorState.mustForceSelection();\n        var decorator = editorState.getDecorator();\n        var directionMap = nullthrows(editorState.getDirectionMap());\n        var blocksAsArray = content.getBlocksAsArray();\n        var rootBlock = blocksAsArray[0];\n        var processedBlocks = [];\n        var nodeBlock = rootBlock;\n        while(nodeBlock){\n            var blockKey = nodeBlock.getKey();\n            var blockProps = {\n                blockRenderMap: blockRenderMap,\n                blockRendererFn: blockRendererFn,\n                blockStyleFn: blockStyleFn,\n                contentState: content,\n                customStyleFn: customStyleFn,\n                customStyleMap: customStyleMap,\n                decorator: decorator,\n                editorKey: editorKey,\n                editorState: editorState,\n                forceSelection: forceSelection,\n                selection: selection,\n                block: nodeBlock,\n                direction: textDirectionality ? textDirectionality : directionMap.get(blockKey),\n                tree: editorState.getBlockTree(blockKey)\n            };\n            var configForType = blockRenderMap.get(nodeBlock.getType()) || blockRenderMap.get(\"unstyled\");\n            var wrapperTemplate = configForType.wrapper;\n            processedBlocks.push({\n                /* $FlowFixMe[incompatible-type] (>=0.112.0 site=www,mobile) This\n         * comment suppresses an error found when Flow v0.112 was deployed. To\n         * see the error delete this comment and run Flow. */ block: React.createElement(DraftEditorBlockNode, _extends({\n                    key: blockKey\n                }, blockProps)),\n                wrapperTemplate: wrapperTemplate,\n                key: blockKey,\n                offsetKey: DraftOffsetKey.encode(blockKey, 0, 0)\n            });\n            var nextBlockKey = nodeBlock.getNextSiblingKey();\n            nodeBlock = nextBlockKey ? content.getBlockForKey(nextBlockKey) : null;\n        } // Group contiguous runs of blocks that have the same wrapperTemplate\n        var outputBlocks = [];\n        for(var ii = 0; ii < processedBlocks.length;){\n            var info = processedBlocks[ii];\n            if (info.wrapperTemplate) {\n                var blocks = [];\n                do {\n                    blocks.push(processedBlocks[ii].block);\n                    ii++;\n                }while (ii < processedBlocks.length && processedBlocks[ii].wrapperTemplate === info.wrapperTemplate);\n                var wrapperElement = React.cloneElement(info.wrapperTemplate, {\n                    key: info.key + \"-wrap\",\n                    \"data-offset-key\": info.offsetKey\n                }, blocks);\n                outputBlocks.push(wrapperElement);\n            } else {\n                outputBlocks.push(info.block);\n                ii++;\n            }\n        }\n        return React.createElement(\"div\", {\n            \"data-contents\": \"true\"\n        }, outputBlocks);\n    };\n    return DraftEditorContentsExperimental;\n}(React.Component);\nmodule.exports = DraftEditorContentsExperimental;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorContentsExperimental.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorDecoratedLeaves.react.js":
/*!***********************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorDecoratedLeaves.react.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ \nvar _assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nfunction _extends() {\n    _extends = _assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar UnicodeBidi = __webpack_require__(/*! fbjs/lib/UnicodeBidi */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidi.js\");\nvar UnicodeBidiDirection = __webpack_require__(/*! fbjs/lib/UnicodeBidiDirection */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiDirection.js\");\nvar DraftEditorDecoratedLeaves = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorDecoratedLeaves, _React$Component);\n    function DraftEditorDecoratedLeaves() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = DraftEditorDecoratedLeaves.prototype;\n    _proto.render = function render() {\n        var _this$props = this.props, block = _this$props.block, children = _this$props.children, contentState = _this$props.contentState, decorator = _this$props.decorator, decoratorKey = _this$props.decoratorKey, direction = _this$props.direction, leafSet = _this$props.leafSet, text = _this$props.text;\n        var blockKey = block.getKey();\n        var leavesForLeafSet = leafSet.get(\"leaves\");\n        var DecoratorComponent = decorator.getComponentForKey(decoratorKey);\n        var decoratorProps = decorator.getPropsForKey(decoratorKey);\n        var decoratorOffsetKey = DraftOffsetKey.encode(blockKey, parseInt(decoratorKey, 10), 0);\n        var decoratedText = text.slice(leavesForLeafSet.first().get(\"start\"), leavesForLeafSet.last().get(\"end\")); // Resetting dir to the same value on a child node makes Chrome/Firefox\n        // confused on cursor movement. See http://jsfiddle.net/d157kLck/3/\n        var dir = UnicodeBidiDirection.getHTMLDirIfDifferent(UnicodeBidi.getDirection(decoratedText), direction);\n        return React.createElement(DecoratorComponent, _extends({}, decoratorProps, {\n            contentState: contentState,\n            decoratedText: decoratedText,\n            dir: dir,\n            key: decoratorOffsetKey,\n            entityKey: block.getEntityAt(leafSet.get(\"start\")),\n            offsetKey: decoratorOffsetKey\n        }), children);\n    };\n    return DraftEditorDecoratedLeaves;\n}(React.Component);\nmodule.exports = DraftEditorDecoratedLeaves;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JEZWNvcmF0ZWRMZWF2ZXMucmVhY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztDQVlDLEdBQ0Q7QUFFQSxJQUFJQSxVQUFVQyxtQkFBT0EsQ0FBQyxvR0FBZTtBQUVyQyxTQUFTQztJQUFhQSxXQUFXRixXQUFXLFNBQVVHLE1BQU07UUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1lBQUUsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFO1lBQUUsSUFBSyxJQUFJSSxPQUFPRCxPQUFRO2dCQUFFLElBQUlFLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLFFBQVFDLE1BQU07b0JBQUVMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7Z0JBQUU7WUFBRTtRQUFFO1FBQUUsT0FBT0w7SUFBUTtJQUFHLE9BQU9ELFNBQVNXLEtBQUssQ0FBQyxJQUFJLEVBQUVSO0FBQVk7QUFFdFQsU0FBU1MsZUFBZUMsUUFBUSxFQUFFQyxVQUFVO0lBQUlELFNBQVNMLFNBQVMsR0FBR0QsT0FBT1EsTUFBTSxDQUFDRCxXQUFXTixTQUFTO0lBQUdLLFNBQVNMLFNBQVMsQ0FBQ1EsV0FBVyxHQUFHSDtJQUFVQSxTQUFTSSxTQUFTLEdBQUdIO0FBQVk7QUFFdEwsSUFBSUksaUJBQWlCbkIsbUJBQU9BLENBQUMsMkZBQWtCO0FBRS9DLElBQUlvQixRQUFRcEIsbUJBQU9BLENBQUMsbUZBQU87QUFFM0IsSUFBSXFCLGNBQWNyQixtQkFBT0EsQ0FBQyx3RkFBc0I7QUFFaEQsSUFBSXNCLHVCQUF1QnRCLG1CQUFPQSxDQUFDLDBHQUErQjtBQUVsRSxJQUFJdUIsNkJBQTZCLFdBQVcsR0FBRSxTQUFVQyxnQkFBZ0I7SUFDdEVYLGVBQWVVLDRCQUE0QkM7SUFFM0MsU0FBU0Q7UUFDUCxPQUFPQyxpQkFBaUJaLEtBQUssQ0FBQyxJQUFJLEVBQUVSLGNBQWMsSUFBSTtJQUN4RDtJQUVBLElBQUlxQixTQUFTRiwyQkFBMkJkLFNBQVM7SUFFakRnQixPQUFPQyxNQUFNLEdBQUcsU0FBU0E7UUFDdkIsSUFBSUMsY0FBYyxJQUFJLENBQUNDLEtBQUssRUFDeEJDLFFBQVFGLFlBQVlFLEtBQUssRUFDekJDLFdBQVdILFlBQVlHLFFBQVEsRUFDL0JDLGVBQWVKLFlBQVlJLFlBQVksRUFDdkNDLFlBQVlMLFlBQVlLLFNBQVMsRUFDakNDLGVBQWVOLFlBQVlNLFlBQVksRUFDdkNDLFlBQVlQLFlBQVlPLFNBQVMsRUFDakNDLFVBQVVSLFlBQVlRLE9BQU8sRUFDN0JDLE9BQU9ULFlBQVlTLElBQUk7UUFDM0IsSUFBSUMsV0FBV1IsTUFBTVMsTUFBTTtRQUMzQixJQUFJQyxtQkFBbUJKLFFBQVFLLEdBQUcsQ0FBQztRQUNuQyxJQUFJQyxxQkFBcUJULFVBQVVVLGtCQUFrQixDQUFDVDtRQUN0RCxJQUFJVSxpQkFBaUJYLFVBQVVZLGNBQWMsQ0FBQ1g7UUFDOUMsSUFBSVkscUJBQXFCMUIsZUFBZTJCLE1BQU0sQ0FBQ1QsVUFBVVUsU0FBU2QsY0FBYyxLQUFLO1FBQ3JGLElBQUllLGdCQUFnQlosS0FBS2EsS0FBSyxDQUFDVixpQkFBaUJXLEtBQUssR0FBR1YsR0FBRyxDQUFDLFVBQVVELGlCQUFpQlksSUFBSSxHQUFHWCxHQUFHLENBQUMsU0FBUyx1RUFBdUU7UUFDbEwsbUVBQW1FO1FBRW5FLElBQUlZLE1BQU05QixxQkFBcUIrQixxQkFBcUIsQ0FBQ2hDLFlBQVlpQyxZQUFZLENBQUNOLGdCQUFnQmQ7UUFDOUYsT0FBT2QsTUFBTW1DLGFBQWEsQ0FBQ2Qsb0JBQW9CeEMsU0FBUyxDQUFDLEdBQUcwQyxnQkFBZ0I7WUFDMUVaLGNBQWNBO1lBQ2RpQixlQUFlQTtZQUNmSSxLQUFLQTtZQUNMN0MsS0FBS3NDO1lBQ0xXLFdBQVczQixNQUFNNEIsV0FBVyxDQUFDdEIsUUFBUUssR0FBRyxDQUFDO1lBQ3pDa0IsV0FBV2I7UUFDYixJQUFJZjtJQUNOO0lBRUEsT0FBT1A7QUFDVCxFQUFFSCxNQUFNdUMsU0FBUztBQUVqQkMsT0FBT0MsT0FBTyxHQUFHdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdEVkaXRvckRlY29yYXRlZExlYXZlcy5yZWFjdC5qcz8wZmM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICpcbiAqIFRoaXMgaXMgdW5zdGFibGUgYW5kIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgQVBJIGFuZCBzaG91bGQgbm90IGJlIHVzZWQgYnlcbiAqIHByb2R1Y3Rpb24gc3lzdGVtcy4gVGhpcyBmaWxlIG1heSBiZSB1cGRhdGUvcmVtb3ZlZCB3aXRob3V0IG5vdGljZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2Fzc2lnbiA9IHJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBfYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIERyYWZ0T2Zmc2V0S2V5ID0gcmVxdWlyZShcIi4vRHJhZnRPZmZzZXRLZXlcIik7XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcblxudmFyIFVuaWNvZGVCaWRpID0gcmVxdWlyZShcImZianMvbGliL1VuaWNvZGVCaWRpXCIpO1xuXG52YXIgVW5pY29kZUJpZGlEaXJlY3Rpb24gPSByZXF1aXJlKFwiZmJqcy9saWIvVW5pY29kZUJpZGlEaXJlY3Rpb25cIik7XG5cbnZhciBEcmFmdEVkaXRvckRlY29yYXRlZExlYXZlcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShEcmFmdEVkaXRvckRlY29yYXRlZExlYXZlcywgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gRHJhZnRFZGl0b3JEZWNvcmF0ZWRMZWF2ZXMoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IERyYWZ0RWRpdG9yRGVjb3JhdGVkTGVhdmVzLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGJsb2NrID0gX3RoaXMkcHJvcHMuYmxvY2ssXG4gICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGNvbnRlbnRTdGF0ZSA9IF90aGlzJHByb3BzLmNvbnRlbnRTdGF0ZSxcbiAgICAgICAgZGVjb3JhdG9yID0gX3RoaXMkcHJvcHMuZGVjb3JhdG9yLFxuICAgICAgICBkZWNvcmF0b3JLZXkgPSBfdGhpcyRwcm9wcy5kZWNvcmF0b3JLZXksXG4gICAgICAgIGRpcmVjdGlvbiA9IF90aGlzJHByb3BzLmRpcmVjdGlvbixcbiAgICAgICAgbGVhZlNldCA9IF90aGlzJHByb3BzLmxlYWZTZXQsXG4gICAgICAgIHRleHQgPSBfdGhpcyRwcm9wcy50ZXh0O1xuICAgIHZhciBibG9ja0tleSA9IGJsb2NrLmdldEtleSgpO1xuICAgIHZhciBsZWF2ZXNGb3JMZWFmU2V0ID0gbGVhZlNldC5nZXQoJ2xlYXZlcycpO1xuICAgIHZhciBEZWNvcmF0b3JDb21wb25lbnQgPSBkZWNvcmF0b3IuZ2V0Q29tcG9uZW50Rm9yS2V5KGRlY29yYXRvcktleSk7XG4gICAgdmFyIGRlY29yYXRvclByb3BzID0gZGVjb3JhdG9yLmdldFByb3BzRm9yS2V5KGRlY29yYXRvcktleSk7XG4gICAgdmFyIGRlY29yYXRvck9mZnNldEtleSA9IERyYWZ0T2Zmc2V0S2V5LmVuY29kZShibG9ja0tleSwgcGFyc2VJbnQoZGVjb3JhdG9yS2V5LCAxMCksIDApO1xuICAgIHZhciBkZWNvcmF0ZWRUZXh0ID0gdGV4dC5zbGljZShsZWF2ZXNGb3JMZWFmU2V0LmZpcnN0KCkuZ2V0KCdzdGFydCcpLCBsZWF2ZXNGb3JMZWFmU2V0Lmxhc3QoKS5nZXQoJ2VuZCcpKTsgLy8gUmVzZXR0aW5nIGRpciB0byB0aGUgc2FtZSB2YWx1ZSBvbiBhIGNoaWxkIG5vZGUgbWFrZXMgQ2hyb21lL0ZpcmVmb3hcbiAgICAvLyBjb25mdXNlZCBvbiBjdXJzb3IgbW92ZW1lbnQuIFNlZSBodHRwOi8vanNmaWRkbGUubmV0L2QxNTdrTGNrLzMvXG5cbiAgICB2YXIgZGlyID0gVW5pY29kZUJpZGlEaXJlY3Rpb24uZ2V0SFRNTERpcklmRGlmZmVyZW50KFVuaWNvZGVCaWRpLmdldERpcmVjdGlvbihkZWNvcmF0ZWRUZXh0KSwgZGlyZWN0aW9uKTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChEZWNvcmF0b3JDb21wb25lbnQsIF9leHRlbmRzKHt9LCBkZWNvcmF0b3JQcm9wcywge1xuICAgICAgY29udGVudFN0YXRlOiBjb250ZW50U3RhdGUsXG4gICAgICBkZWNvcmF0ZWRUZXh0OiBkZWNvcmF0ZWRUZXh0LFxuICAgICAgZGlyOiBkaXIsXG4gICAgICBrZXk6IGRlY29yYXRvck9mZnNldEtleSxcbiAgICAgIGVudGl0eUtleTogYmxvY2suZ2V0RW50aXR5QXQobGVhZlNldC5nZXQoJ3N0YXJ0JykpLFxuICAgICAgb2Zmc2V0S2V5OiBkZWNvcmF0b3JPZmZzZXRLZXlcbiAgICB9KSwgY2hpbGRyZW4pO1xuICB9O1xuXG4gIHJldHVybiBEcmFmdEVkaXRvckRlY29yYXRlZExlYXZlcztcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEcmFmdEVkaXRvckRlY29yYXRlZExlYXZlczsiXSwibmFtZXMiOlsiX2Fzc2lnbiIsInJlcXVpcmUiLCJfZXh0ZW5kcyIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJEcmFmdE9mZnNldEtleSIsIlJlYWN0IiwiVW5pY29kZUJpZGkiLCJVbmljb2RlQmlkaURpcmVjdGlvbiIsIkRyYWZ0RWRpdG9yRGVjb3JhdGVkTGVhdmVzIiwiX1JlYWN0JENvbXBvbmVudCIsIl9wcm90byIsInJlbmRlciIsIl90aGlzJHByb3BzIiwicHJvcHMiLCJibG9jayIsImNoaWxkcmVuIiwiY29udGVudFN0YXRlIiwiZGVjb3JhdG9yIiwiZGVjb3JhdG9yS2V5IiwiZGlyZWN0aW9uIiwibGVhZlNldCIsInRleHQiLCJibG9ja0tleSIsImdldEtleSIsImxlYXZlc0ZvckxlYWZTZXQiLCJnZXQiLCJEZWNvcmF0b3JDb21wb25lbnQiLCJnZXRDb21wb25lbnRGb3JLZXkiLCJkZWNvcmF0b3JQcm9wcyIsImdldFByb3BzRm9yS2V5IiwiZGVjb3JhdG9yT2Zmc2V0S2V5IiwiZW5jb2RlIiwicGFyc2VJbnQiLCJkZWNvcmF0ZWRUZXh0Iiwic2xpY2UiLCJmaXJzdCIsImxhc3QiLCJkaXIiLCJnZXRIVE1MRGlySWZEaWZmZXJlbnQiLCJnZXREaXJlY3Rpb24iLCJjcmVhdGVFbGVtZW50IiwiZW50aXR5S2V5IiwiZ2V0RW50aXR5QXQiLCJvZmZzZXRLZXkiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorDecoratedLeaves.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorDragHandler.js":
/*!*************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorDragHandler.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DataTransfer = __webpack_require__(/*! fbjs/lib/DataTransfer */ \"(app-pages-browser)/./node_modules/fbjs/lib/DataTransfer.js\");\nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar findAncestorOffsetKey = __webpack_require__(/*! ./findAncestorOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/findAncestorOffsetKey.js\");\nvar getCorrectDocumentFromNode = __webpack_require__(/*! ./getCorrectDocumentFromNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getCorrectDocumentFromNode.js\");\nvar getTextContentFromFiles = __webpack_require__(/*! ./getTextContentFromFiles */ \"(app-pages-browser)/./node_modules/draft-js/lib/getTextContentFromFiles.js\");\nvar getUpdatedSelectionState = __webpack_require__(/*! ./getUpdatedSelectionState */ \"(app-pages-browser)/./node_modules/draft-js/lib/getUpdatedSelectionState.js\");\nvar getWindowForNode = __webpack_require__(/*! ./getWindowForNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getWindowForNode.js\");\nvar isEventHandled = __webpack_require__(/*! ./isEventHandled */ \"(app-pages-browser)/./node_modules/draft-js/lib/isEventHandled.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\n/**\n * Get a SelectionState for the supplied mouse event.\n */ function getSelectionForEvent(event, editorState) {\n    var node = null;\n    var offset = null;\n    var eventTargetDocument = getCorrectDocumentFromNode(event.currentTarget);\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=www,mobile) This comment\n   * suppresses an error found when Flow v0.68 was deployed. To see the error\n   * delete this comment and run Flow. */ if (typeof eventTargetDocument.caretRangeFromPoint === \"function\") {\n        /* $FlowFixMe[incompatible-use] (>=0.68.0 site=www,mobile) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the error\n     * delete this comment and run Flow. */ var dropRange = eventTargetDocument.caretRangeFromPoint(event.x, event.y);\n        node = dropRange.startContainer;\n        offset = dropRange.startOffset;\n    } else if (event.rangeParent) {\n        node = event.rangeParent;\n        offset = event.rangeOffset;\n    } else {\n        return null;\n    }\n    node = nullthrows(node);\n    offset = nullthrows(offset);\n    var offsetKey = nullthrows(findAncestorOffsetKey(node));\n    return getUpdatedSelectionState(editorState, offsetKey, offset, offsetKey, offset);\n}\nvar DraftEditorDragHandler = {\n    /**\n   * Drag originating from input terminated.\n   */ onDragEnd: function onDragEnd(editor) {\n        editor.exitCurrentMode();\n        endDrag(editor);\n    },\n    /**\n   * Handle data being dropped.\n   */ onDrop: function onDrop(editor, e) {\n        var data = new DataTransfer(e.nativeEvent.dataTransfer);\n        var editorState = editor._latestEditorState;\n        var dropSelection = getSelectionForEvent(e.nativeEvent, editorState);\n        e.preventDefault();\n        editor._dragCount = 0;\n        editor.exitCurrentMode();\n        if (dropSelection == null) {\n            return;\n        }\n        var files = data.getFiles();\n        if (files.length > 0) {\n            if (editor.props.handleDroppedFiles && isEventHandled(editor.props.handleDroppedFiles(dropSelection, files))) {\n                return;\n            }\n            /* $FlowFixMe[incompatible-call] This comment suppresses an error found\n       * DataTransfer was typed. getFiles() returns an array of <Files extends\n       * Blob>, not Blob */ getTextContentFromFiles(files, function(fileText) {\n                fileText && editor.update(insertTextAtSelection(editorState, dropSelection, fileText));\n            });\n            return;\n        }\n        var dragType = editor._internalDrag ? \"internal\" : \"external\";\n        if (editor.props.handleDrop && isEventHandled(editor.props.handleDrop(dropSelection, data, dragType))) {} else if (editor._internalDrag) {\n            editor.update(moveText(editorState, dropSelection));\n        } else {\n            editor.update(insertTextAtSelection(editorState, dropSelection, data.getText()));\n        }\n        endDrag(editor);\n    }\n};\nfunction endDrag(editor) {\n    editor._internalDrag = false; // Fix issue #1383\n    // Prior to React v16.5.0 onDrop breaks onSelect event:\n    // https://github.com/facebook/react/issues/11379.\n    // Dispatching a mouseup event on DOM node will make it go back to normal.\n    var editorNode = editor.editorContainer;\n    if (editorNode) {\n        var mouseUpEvent = new MouseEvent(\"mouseup\", {\n            view: getWindowForNode(editorNode),\n            bubbles: true,\n            cancelable: true\n        });\n        editorNode.dispatchEvent(mouseUpEvent);\n    }\n}\nfunction moveText(editorState, targetSelection) {\n    var newContentState = DraftModifier.moveText(editorState.getCurrentContent(), editorState.getSelection(), targetSelection);\n    return EditorState.push(editorState, newContentState, \"insert-fragment\");\n}\n/**\n * Insert text at a specified selection.\n */ function insertTextAtSelection(editorState, selection, text) {\n    var newContentState = DraftModifier.insertText(editorState.getCurrentContent(), selection, text, editorState.getCurrentInlineStyle());\n    return EditorState.push(editorState, newContentState, \"insert-fragment\");\n}\nmodule.exports = DraftEditorDragHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorDragHandler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorEditHandler.js":
/*!*************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorEditHandler.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar onBeforeInput = __webpack_require__(/*! ./editOnBeforeInput */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnBeforeInput.js\");\nvar onBlur = __webpack_require__(/*! ./editOnBlur */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnBlur.js\");\nvar onCompositionStart = __webpack_require__(/*! ./editOnCompositionStart */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnCompositionStart.js\");\nvar onCopy = __webpack_require__(/*! ./editOnCopy */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnCopy.js\");\nvar onCut = __webpack_require__(/*! ./editOnCut */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnCut.js\");\nvar onDragOver = __webpack_require__(/*! ./editOnDragOver */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnDragOver.js\");\nvar onDragStart = __webpack_require__(/*! ./editOnDragStart */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnDragStart.js\");\nvar onFocus = __webpack_require__(/*! ./editOnFocus */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnFocus.js\");\nvar onInput = __webpack_require__(/*! ./editOnInput */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnInput.js\");\nvar onKeyDown = __webpack_require__(/*! ./editOnKeyDown */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnKeyDown.js\");\nvar onPaste = __webpack_require__(/*! ./editOnPaste */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnPaste.js\");\nvar onSelect = __webpack_require__(/*! ./editOnSelect */ \"(app-pages-browser)/./node_modules/draft-js/lib/editOnSelect.js\");\nvar isChrome = UserAgent.isBrowser(\"Chrome\");\nvar isFirefox = UserAgent.isBrowser(\"Firefox\");\nvar selectionHandler = isChrome || isFirefox ? onSelect : function(e) {};\nvar DraftEditorEditHandler = {\n    onBeforeInput: onBeforeInput,\n    onBlur: onBlur,\n    onCompositionStart: onCompositionStart,\n    onCopy: onCopy,\n    onCut: onCut,\n    onDragOver: onDragOver,\n    onDragStart: onDragStart,\n    onFocus: onFocus,\n    onInput: onInput,\n    onKeyDown: onKeyDown,\n    onPaste: onPaste,\n    onSelect: onSelect,\n    // In certain cases, contenteditable on chrome does not fire the onSelect\n    // event, causing problems with cursor positioning. Therefore, the selection\n    // state update handler is added to more events to ensure that the selection\n    // state is always synced with the actual cursor positions.\n    onMouseUp: selectionHandler,\n    onKeyUp: selectionHandler\n};\nmodule.exports = DraftEditorEditHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JFZGl0SGFuZGxlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLG9GQUFvQjtBQUU1QyxJQUFJQyxnQkFBZ0JELG1CQUFPQSxDQUFDLGlHQUFxQjtBQUVqRCxJQUFJRSxTQUFTRixtQkFBT0EsQ0FBQyxtRkFBYztBQUVuQyxJQUFJRyxxQkFBcUJILG1CQUFPQSxDQUFDLDJHQUEwQjtBQUUzRCxJQUFJSSxTQUFTSixtQkFBT0EsQ0FBQyxtRkFBYztBQUVuQyxJQUFJSyxRQUFRTCxtQkFBT0EsQ0FBQyxpRkFBYTtBQUVqQyxJQUFJTSxhQUFhTixtQkFBT0EsQ0FBQywyRkFBa0I7QUFFM0MsSUFBSU8sY0FBY1AsbUJBQU9BLENBQUMsNkZBQW1CO0FBRTdDLElBQUlRLFVBQVVSLG1CQUFPQSxDQUFDLHFGQUFlO0FBRXJDLElBQUlTLFVBQVVULG1CQUFPQSxDQUFDLHFGQUFlO0FBRXJDLElBQUlVLFlBQVlWLG1CQUFPQSxDQUFDLHlGQUFpQjtBQUV6QyxJQUFJVyxVQUFVWCxtQkFBT0EsQ0FBQyxxRkFBZTtBQUVyQyxJQUFJWSxXQUFXWixtQkFBT0EsQ0FBQyx1RkFBZ0I7QUFFdkMsSUFBSWEsV0FBV2QsVUFBVWUsU0FBUyxDQUFDO0FBQ25DLElBQUlDLFlBQVloQixVQUFVZSxTQUFTLENBQUM7QUFDcEMsSUFBSUUsbUJBQW1CSCxZQUFZRSxZQUFZSCxXQUFXLFNBQVVLLENBQUMsR0FBRztBQUN4RSxJQUFJQyx5QkFBeUI7SUFDM0JqQixlQUFlQTtJQUNmQyxRQUFRQTtJQUNSQyxvQkFBb0JBO0lBQ3BCQyxRQUFRQTtJQUNSQyxPQUFPQTtJQUNQQyxZQUFZQTtJQUNaQyxhQUFhQTtJQUNiQyxTQUFTQTtJQUNUQyxTQUFTQTtJQUNUQyxXQUFXQTtJQUNYQyxTQUFTQTtJQUNUQyxVQUFVQTtJQUNWLHlFQUF5RTtJQUN6RSw0RUFBNEU7SUFDNUUsNEVBQTRFO0lBQzVFLDJEQUEyRDtJQUMzRE8sV0FBV0g7SUFDWEksU0FBU0o7QUFDWDtBQUNBSyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JFZGl0SGFuZGxlci5qcz81YjhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBVc2VyQWdlbnQgPSByZXF1aXJlKFwiZmJqcy9saWIvVXNlckFnZW50XCIpO1xuXG52YXIgb25CZWZvcmVJbnB1dCA9IHJlcXVpcmUoXCIuL2VkaXRPbkJlZm9yZUlucHV0XCIpO1xuXG52YXIgb25CbHVyID0gcmVxdWlyZShcIi4vZWRpdE9uQmx1clwiKTtcblxudmFyIG9uQ29tcG9zaXRpb25TdGFydCA9IHJlcXVpcmUoXCIuL2VkaXRPbkNvbXBvc2l0aW9uU3RhcnRcIik7XG5cbnZhciBvbkNvcHkgPSByZXF1aXJlKFwiLi9lZGl0T25Db3B5XCIpO1xuXG52YXIgb25DdXQgPSByZXF1aXJlKFwiLi9lZGl0T25DdXRcIik7XG5cbnZhciBvbkRyYWdPdmVyID0gcmVxdWlyZShcIi4vZWRpdE9uRHJhZ092ZXJcIik7XG5cbnZhciBvbkRyYWdTdGFydCA9IHJlcXVpcmUoXCIuL2VkaXRPbkRyYWdTdGFydFwiKTtcblxudmFyIG9uRm9jdXMgPSByZXF1aXJlKFwiLi9lZGl0T25Gb2N1c1wiKTtcblxudmFyIG9uSW5wdXQgPSByZXF1aXJlKFwiLi9lZGl0T25JbnB1dFwiKTtcblxudmFyIG9uS2V5RG93biA9IHJlcXVpcmUoXCIuL2VkaXRPbktleURvd25cIik7XG5cbnZhciBvblBhc3RlID0gcmVxdWlyZShcIi4vZWRpdE9uUGFzdGVcIik7XG5cbnZhciBvblNlbGVjdCA9IHJlcXVpcmUoXCIuL2VkaXRPblNlbGVjdFwiKTtcblxudmFyIGlzQ2hyb21lID0gVXNlckFnZW50LmlzQnJvd3NlcignQ2hyb21lJyk7XG52YXIgaXNGaXJlZm94ID0gVXNlckFnZW50LmlzQnJvd3NlcignRmlyZWZveCcpO1xudmFyIHNlbGVjdGlvbkhhbmRsZXIgPSBpc0Nocm9tZSB8fCBpc0ZpcmVmb3ggPyBvblNlbGVjdCA6IGZ1bmN0aW9uIChlKSB7fTtcbnZhciBEcmFmdEVkaXRvckVkaXRIYW5kbGVyID0ge1xuICBvbkJlZm9yZUlucHV0OiBvbkJlZm9yZUlucHV0LFxuICBvbkJsdXI6IG9uQmx1cixcbiAgb25Db21wb3NpdGlvblN0YXJ0OiBvbkNvbXBvc2l0aW9uU3RhcnQsXG4gIG9uQ29weTogb25Db3B5LFxuICBvbkN1dDogb25DdXQsXG4gIG9uRHJhZ092ZXI6IG9uRHJhZ092ZXIsXG4gIG9uRHJhZ1N0YXJ0OiBvbkRyYWdTdGFydCxcbiAgb25Gb2N1czogb25Gb2N1cyxcbiAgb25JbnB1dDogb25JbnB1dCxcbiAgb25LZXlEb3duOiBvbktleURvd24sXG4gIG9uUGFzdGU6IG9uUGFzdGUsXG4gIG9uU2VsZWN0OiBvblNlbGVjdCxcbiAgLy8gSW4gY2VydGFpbiBjYXNlcywgY29udGVudGVkaXRhYmxlIG9uIGNocm9tZSBkb2VzIG5vdCBmaXJlIHRoZSBvblNlbGVjdFxuICAvLyBldmVudCwgY2F1c2luZyBwcm9ibGVtcyB3aXRoIGN1cnNvciBwb3NpdGlvbmluZy4gVGhlcmVmb3JlLCB0aGUgc2VsZWN0aW9uXG4gIC8vIHN0YXRlIHVwZGF0ZSBoYW5kbGVyIGlzIGFkZGVkIHRvIG1vcmUgZXZlbnRzIHRvIGVuc3VyZSB0aGF0IHRoZSBzZWxlY3Rpb25cbiAgLy8gc3RhdGUgaXMgYWx3YXlzIHN5bmNlZCB3aXRoIHRoZSBhY3R1YWwgY3Vyc29yIHBvc2l0aW9ucy5cbiAgb25Nb3VzZVVwOiBzZWxlY3Rpb25IYW5kbGVyLFxuICBvbktleVVwOiBzZWxlY3Rpb25IYW5kbGVyXG59O1xubW9kdWxlLmV4cG9ydHMgPSBEcmFmdEVkaXRvckVkaXRIYW5kbGVyOyJdLCJuYW1lcyI6WyJVc2VyQWdlbnQiLCJyZXF1aXJlIiwib25CZWZvcmVJbnB1dCIsIm9uQmx1ciIsIm9uQ29tcG9zaXRpb25TdGFydCIsIm9uQ29weSIsIm9uQ3V0Iiwib25EcmFnT3ZlciIsIm9uRHJhZ1N0YXJ0Iiwib25Gb2N1cyIsIm9uSW5wdXQiLCJvbktleURvd24iLCJvblBhc3RlIiwib25TZWxlY3QiLCJpc0Nocm9tZSIsImlzQnJvd3NlciIsImlzRmlyZWZveCIsInNlbGVjdGlvbkhhbmRsZXIiLCJlIiwiRHJhZnRFZGl0b3JFZGl0SGFuZGxlciIsIm9uTW91c2VVcCIsIm9uS2V5VXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorEditHandler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorFlushControlled.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorFlushControlled.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ var ReactDOMComet = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\nvar flushControlled = ReactDOMComet.unstable_flushControlled;\nmodule.exports = flushControlled;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JGbHVzaENvbnRyb2xsZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7Ozs7O0NBU0MsR0FDRCxJQUFJQSxnQkFBZ0JDLG1CQUFPQSxDQUFDLDJGQUFXO0FBRXZDLElBQUlDLGtCQUFrQkYsY0FBY0csd0JBQXdCO0FBQzVEQyxPQUFPQyxPQUFPLEdBQUdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JGbHVzaENvbnRyb2xsZWQuanM/NzBjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbnZhciBSZWFjdERPTUNvbWV0ID0gcmVxdWlyZShcInJlYWN0LWRvbVwiKTtcblxudmFyIGZsdXNoQ29udHJvbGxlZCA9IFJlYWN0RE9NQ29tZXQudW5zdGFibGVfZmx1c2hDb250cm9sbGVkO1xubW9kdWxlLmV4cG9ydHMgPSBmbHVzaENvbnRyb2xsZWQ7Il0sIm5hbWVzIjpbIlJlYWN0RE9NQ29tZXQiLCJyZXF1aXJlIiwiZmx1c2hDb250cm9sbGVkIiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorFlushControlled.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorLeaf.react.js":
/*!************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorLeaf.react.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar _assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar DraftEditorTextNode = __webpack_require__(/*! ./DraftEditorTextNode.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorTextNode.react.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isHTMLBRElement = __webpack_require__(/*! ./isHTMLBRElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLBRElement.js\");\nvar setDraftEditorSelection = (__webpack_require__(/*! ./setDraftEditorSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/setDraftEditorSelection.js\").setDraftEditorSelection);\n/**\n * All leaf nodes in the editor are spans with single text nodes. Leaf\n * elements are styled based on the merging of an optional custom style map\n * and a default style map.\n *\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\n * DOM Selection API. In this way, top-level components can declaratively\n * maintain the selection state.\n */ var DraftEditorLeaf = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorLeaf, _React$Component);\n    function DraftEditorLeaf() {\n        var _this;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _React$Component.call.apply(_React$Component, [\n            this\n        ].concat(args)) || this;\n        _defineProperty(_assertThisInitialized(_this), \"leaf\", void 0);\n        return _this;\n    }\n    var _proto = DraftEditorLeaf.prototype;\n    _proto._setSelection = function _setSelection() {\n        var selection = this.props.selection; // If selection state is irrelevant to the parent block, no-op.\n        if (selection == null || !selection.getHasFocus()) {\n            return;\n        }\n        var _this$props = this.props, block = _this$props.block, start = _this$props.start, text = _this$props.text;\n        var blockKey = block.getKey();\n        var end = start + text.length;\n        if (!selection.hasEdgeWithin(blockKey, start, end)) {\n            return;\n        } // Determine the appropriate target node for selection. If the child\n        // is not a text node, it is a <br /> spacer. In this case, use the\n        // <span> itself as the selection target.\n        var node = this.leaf;\n        !node ?  true ? invariant(false, \"Missing node\") : 0 : void 0;\n        var child = node.firstChild;\n        !child ?  true ? invariant(false, \"Missing child\") : 0 : void 0;\n        var targetNode;\n        if (child.nodeType === Node.TEXT_NODE) {\n            targetNode = child;\n        } else if (isHTMLBRElement(child)) {\n            targetNode = node;\n        } else {\n            targetNode = child.firstChild;\n            !targetNode ?  true ? invariant(false, \"Missing targetNode\") : 0 : void 0;\n        }\n        setDraftEditorSelection(selection, targetNode, blockKey, start, end);\n    };\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        var leafNode = this.leaf;\n        !leafNode ?  true ? invariant(false, \"Missing leafNode\") : 0 : void 0;\n        var shouldUpdate = leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\n        return shouldUpdate;\n    };\n    _proto.componentDidUpdate = function componentDidUpdate() {\n        this._setSelection();\n    };\n    _proto.componentDidMount = function componentDidMount() {\n        this._setSelection();\n    };\n    _proto.render = function render() {\n        var _this2 = this;\n        var block = this.props.block;\n        var text = this.props.text; // If the leaf is at the end of its block and ends in a soft newline, append\n        // an extra line feed character. Browsers collapse trailing newline\n        // characters, which leaves the cursor in the wrong place after a\n        // shift+enter. The extra character repairs this.\n        if (text.endsWith(\"\\n\") && this.props.isLast) {\n            text += \"\\n\";\n        }\n        var _this$props2 = this.props, customStyleMap = _this$props2.customStyleMap, customStyleFn = _this$props2.customStyleFn, offsetKey = _this$props2.offsetKey, styleSet = _this$props2.styleSet;\n        var styleObj = styleSet.reduce(function(map, styleName) {\n            var mergedStyles = {};\n            var style = customStyleMap[styleName];\n            if (style !== undefined && map.textDecoration !== style.textDecoration) {\n                // .trim() is necessary for IE9/10/11 and Edge\n                mergedStyles.textDecoration = [\n                    map.textDecoration,\n                    style.textDecoration\n                ].join(\" \").trim();\n            }\n            return _assign(map, style, mergedStyles);\n        }, {});\n        if (customStyleFn) {\n            var newStyles = customStyleFn(styleSet, block);\n            styleObj = _assign(styleObj, newStyles);\n        }\n        return React.createElement(\"span\", {\n            \"data-offset-key\": offsetKey,\n            ref: function ref(_ref) {\n                return _this2.leaf = _ref;\n            },\n            style: styleObj\n        }, React.createElement(DraftEditorTextNode, null, text));\n    };\n    return DraftEditorLeaf;\n}(React.Component);\nmodule.exports = DraftEditorLeaf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorLeaf.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorNode.react.js":
/*!************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorNode.react.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ \nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar DraftEditorDecoratedLeaves = __webpack_require__(/*! ./DraftEditorDecoratedLeaves.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorDecoratedLeaves.react.js\");\nvar DraftEditorLeaf = __webpack_require__(/*! ./DraftEditorLeaf.react */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorLeaf.react.js\");\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar cx = __webpack_require__(/*! fbjs/lib/cx */ \"(app-pages-browser)/./node_modules/fbjs/lib/cx.js\");\nvar List = Immutable.List;\nvar DraftEditorNode = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorNode, _React$Component);\n    function DraftEditorNode() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = DraftEditorNode.prototype;\n    _proto.render = function render() {\n        var _this$props = this.props, block = _this$props.block, contentState = _this$props.contentState, customStyleFn = _this$props.customStyleFn, customStyleMap = _this$props.customStyleMap, decorator = _this$props.decorator, direction = _this$props.direction, forceSelection = _this$props.forceSelection, hasSelection = _this$props.hasSelection, selection = _this$props.selection, tree = _this$props.tree;\n        var blockKey = block.getKey();\n        var text = block.getText();\n        var lastLeafSet = tree.size - 1;\n        var children = this.props.children || tree.map(function(leafSet, ii) {\n            var decoratorKey = leafSet.get(\"decoratorKey\");\n            var leavesForLeafSet = leafSet.get(\"leaves\");\n            var lastLeaf = leavesForLeafSet.size - 1;\n            var Leaves = leavesForLeafSet.map(function(leaf, jj) {\n                var offsetKey = DraftOffsetKey.encode(blockKey, ii, jj);\n                var start = leaf.get(\"start\");\n                var end = leaf.get(\"end\");\n                return React.createElement(DraftEditorLeaf, {\n                    key: offsetKey,\n                    offsetKey: offsetKey,\n                    block: block,\n                    start: start,\n                    selection: hasSelection ? selection : null,\n                    forceSelection: forceSelection,\n                    text: text.slice(start, end),\n                    styleSet: block.getInlineStyleAt(start),\n                    customStyleMap: customStyleMap,\n                    customStyleFn: customStyleFn,\n                    isLast: decoratorKey === lastLeafSet && jj === lastLeaf\n                });\n            }).toArray();\n            if (!decoratorKey || !decorator) {\n                return Leaves;\n            }\n            return React.createElement(DraftEditorDecoratedLeaves, {\n                block: block,\n                children: Leaves,\n                contentState: contentState,\n                decorator: decorator,\n                decoratorKey: decoratorKey,\n                direction: direction,\n                leafSet: leafSet,\n                text: text,\n                key: ii\n            });\n        }).toArray();\n        return React.createElement(\"div\", {\n            \"data-offset-key\": DraftOffsetKey.encode(blockKey, 0, 0),\n            className: cx({\n                \"public/DraftStyleDefault/block\": true,\n                \"public/DraftStyleDefault/ltr\": direction === \"LTR\",\n                \"public/DraftStyleDefault/rtl\": direction === \"RTL\"\n            })\n        }, children);\n    };\n    return DraftEditorNode;\n}(React.Component);\nmodule.exports = DraftEditorNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorNode.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorPlaceholder.react.js":
/*!*******************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorPlaceholder.react.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar cx = __webpack_require__(/*! fbjs/lib/cx */ \"(app-pages-browser)/./node_modules/fbjs/lib/cx.js\");\n/**\n * This component is responsible for rendering placeholder text for the\n * `DraftEditor` component.\n *\n * Override placeholder style via CSS.\n */ var DraftEditorPlaceholder = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorPlaceholder, _React$Component);\n    function DraftEditorPlaceholder() {\n        return _React$Component.apply(this, arguments) || this;\n    }\n    var _proto = DraftEditorPlaceholder.prototype;\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return this.props.text !== nextProps.text || this.props.editorState.getSelection().getHasFocus() !== nextProps.editorState.getSelection().getHasFocus();\n    };\n    _proto.render = function render() {\n        var hasFocus = this.props.editorState.getSelection().getHasFocus();\n        var className = cx({\n            \"public/DraftEditorPlaceholder/root\": true,\n            \"public/DraftEditorPlaceholder/hasFocus\": hasFocus\n        });\n        var contentStyle = {\n            whiteSpace: \"pre-wrap\"\n        };\n        return React.createElement(\"div\", {\n            className: className\n        }, React.createElement(\"div\", {\n            className: cx(\"public/DraftEditorPlaceholder/inner\"),\n            id: this.props.accessibilityID,\n            style: contentStyle\n        }, this.props.text));\n    };\n    return DraftEditorPlaceholder;\n}(React.Component);\nmodule.exports = DraftEditorPlaceholder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZGl0b3JQbGFjZWhvbGRlci5yZWFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLFNBQVNBLGVBQWVDLFFBQVEsRUFBRUMsVUFBVTtJQUFJRCxTQUFTRSxTQUFTLEdBQUdDLE9BQU9DLE1BQU0sQ0FBQ0gsV0FBV0MsU0FBUztJQUFHRixTQUFTRSxTQUFTLENBQUNHLFdBQVcsR0FBR0w7SUFBVUEsU0FBU00sU0FBUyxHQUFHTDtBQUFZO0FBRXRMLElBQUlNLFFBQVFDLG1CQUFPQSxDQUFDLG1GQUFPO0FBRTNCLElBQUlDLEtBQUtELG1CQUFPQSxDQUFDLHNFQUFhO0FBRTlCOzs7OztDQUtDLEdBQ0QsSUFBSUUseUJBQXlCLFdBQVcsR0FBRSxTQUFVQyxnQkFBZ0I7SUFDbEVaLGVBQWVXLHdCQUF3QkM7SUFFdkMsU0FBU0Q7UUFDUCxPQUFPQyxpQkFBaUJDLEtBQUssQ0FBQyxJQUFJLEVBQUVDLGNBQWMsSUFBSTtJQUN4RDtJQUVBLElBQUlDLFNBQVNKLHVCQUF1QlIsU0FBUztJQUU3Q1ksT0FBT0MscUJBQXFCLEdBQUcsU0FBU0Esc0JBQXNCQyxTQUFTO1FBQ3JFLE9BQU8sSUFBSSxDQUFDQyxLQUFLLENBQUNDLElBQUksS0FBS0YsVUFBVUUsSUFBSSxJQUFJLElBQUksQ0FBQ0QsS0FBSyxDQUFDRSxXQUFXLENBQUNDLFlBQVksR0FBR0MsV0FBVyxPQUFPTCxVQUFVRyxXQUFXLENBQUNDLFlBQVksR0FBR0MsV0FBVztJQUN2SjtJQUVBUCxPQUFPUSxNQUFNLEdBQUcsU0FBU0E7UUFDdkIsSUFBSUMsV0FBVyxJQUFJLENBQUNOLEtBQUssQ0FBQ0UsV0FBVyxDQUFDQyxZQUFZLEdBQUdDLFdBQVc7UUFDaEUsSUFBSUcsWUFBWWYsR0FBRztZQUNqQixzQ0FBc0M7WUFDdEMsMENBQTBDYztRQUM1QztRQUNBLElBQUlFLGVBQWU7WUFDakJDLFlBQVk7UUFDZDtRQUNBLE9BQU9uQixNQUFNb0IsYUFBYSxDQUFDLE9BQU87WUFDaENILFdBQVdBO1FBQ2IsR0FBR2pCLE1BQU1vQixhQUFhLENBQUMsT0FBTztZQUM1QkgsV0FBV2YsR0FBRztZQUNkbUIsSUFBSSxJQUFJLENBQUNYLEtBQUssQ0FBQ1ksZUFBZTtZQUM5QkMsT0FBT0w7UUFDVCxHQUFHLElBQUksQ0FBQ1IsS0FBSyxDQUFDQyxJQUFJO0lBQ3BCO0lBRUEsT0FBT1I7QUFDVCxFQUFFSCxNQUFNd0IsU0FBUztBQUVqQkMsT0FBT0MsT0FBTyxHQUFHdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdEVkaXRvclBsYWNlaG9sZGVyLnJlYWN0LmpzPzZkNDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcblxudmFyIGN4ID0gcmVxdWlyZShcImZianMvbGliL2N4XCIpO1xuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IGlzIHJlc3BvbnNpYmxlIGZvciByZW5kZXJpbmcgcGxhY2Vob2xkZXIgdGV4dCBmb3IgdGhlXG4gKiBgRHJhZnRFZGl0b3JgIGNvbXBvbmVudC5cbiAqXG4gKiBPdmVycmlkZSBwbGFjZWhvbGRlciBzdHlsZSB2aWEgQ1NTLlxuICovXG52YXIgRHJhZnRFZGl0b3JQbGFjZWhvbGRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShEcmFmdEVkaXRvclBsYWNlaG9sZGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBEcmFmdEVkaXRvclBsYWNlaG9sZGVyKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBEcmFmdEVkaXRvclBsYWNlaG9sZGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uc2hvdWxkQ29tcG9uZW50VXBkYXRlID0gZnVuY3Rpb24gc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xuICAgIHJldHVybiB0aGlzLnByb3BzLnRleHQgIT09IG5leHRQcm9wcy50ZXh0IHx8IHRoaXMucHJvcHMuZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCkuZ2V0SGFzRm9jdXMoKSAhPT0gbmV4dFByb3BzLmVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpLmdldEhhc0ZvY3VzKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgaGFzRm9jdXMgPSB0aGlzLnByb3BzLmVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpLmdldEhhc0ZvY3VzKCk7XG4gICAgdmFyIGNsYXNzTmFtZSA9IGN4KHtcbiAgICAgICdwdWJsaWMvRHJhZnRFZGl0b3JQbGFjZWhvbGRlci9yb290JzogdHJ1ZSxcbiAgICAgICdwdWJsaWMvRHJhZnRFZGl0b3JQbGFjZWhvbGRlci9oYXNGb2N1cyc6IGhhc0ZvY3VzXG4gICAgfSk7XG4gICAgdmFyIGNvbnRlbnRTdHlsZSA9IHtcbiAgICAgIHdoaXRlU3BhY2U6ICdwcmUtd3JhcCdcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lXG4gICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IGN4KCdwdWJsaWMvRHJhZnRFZGl0b3JQbGFjZWhvbGRlci9pbm5lcicpLFxuICAgICAgaWQ6IHRoaXMucHJvcHMuYWNjZXNzaWJpbGl0eUlELFxuICAgICAgc3R5bGU6IGNvbnRlbnRTdHlsZVxuICAgIH0sIHRoaXMucHJvcHMudGV4dCkpO1xuICB9O1xuXG4gIHJldHVybiBEcmFmdEVkaXRvclBsYWNlaG9sZGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERyYWZ0RWRpdG9yUGxhY2Vob2xkZXI7Il0sIm5hbWVzIjpbIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJSZWFjdCIsInJlcXVpcmUiLCJjeCIsIkRyYWZ0RWRpdG9yUGxhY2Vob2xkZXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfcHJvdG8iLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJuZXh0UHJvcHMiLCJwcm9wcyIsInRleHQiLCJlZGl0b3JTdGF0ZSIsImdldFNlbGVjdGlvbiIsImdldEhhc0ZvY3VzIiwicmVuZGVyIiwiaGFzRm9jdXMiLCJjbGFzc05hbWUiLCJjb250ZW50U3R5bGUiLCJ3aGl0ZVNwYWNlIiwiY3JlYXRlRWxlbWVudCIsImlkIiwiYWNjZXNzaWJpbGl0eUlEIiwic3R5bGUiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorPlaceholder.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorTextNode.react.js":
/*!****************************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEditorTextNode.react.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isElement = __webpack_require__(/*! ./isElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\"); // In IE, spans with <br> tags render as two newlines. By rendering a span\n// with only a newline character, we can be sure to render a single line.\nvar useNewlineChar = UserAgent.isBrowser(\"IE <= 11\");\n/**\n * Check whether the node should be considered a newline.\n */ function isNewline(node) {\n    return useNewlineChar ? node.textContent === \"\\n\" : node.tagName === \"BR\";\n}\n/**\n * Placeholder elements for empty text content.\n *\n * What is this `data-text` attribute, anyway? It turns out that we need to\n * put an attribute on the lowest-level text node in order to preserve correct\n * spellcheck handling. If the <span> is naked, Chrome and Safari may do\n * bizarre things to do the DOM -- split text nodes, create extra spans, etc.\n * If the <span> has an attribute, this appears not to happen.\n * See http://jsfiddle.net/9khdavod/ for the failure case, and\n * http://jsfiddle.net/7pg143f7/ for the fixed case.\n */ var NEWLINE_A = function NEWLINE_A(ref) {\n    return useNewlineChar ? React.createElement(\"span\", {\n        key: \"A\",\n        \"data-text\": \"true\",\n        ref: ref\n    }, \"\\n\") : React.createElement(\"br\", {\n        key: \"A\",\n        \"data-text\": \"true\",\n        ref: ref\n    });\n};\n_c = NEWLINE_A;\nvar NEWLINE_B = function NEWLINE_B(ref) {\n    return useNewlineChar ? React.createElement(\"span\", {\n        key: \"B\",\n        \"data-text\": \"true\",\n        ref: ref\n    }, \"\\n\") : React.createElement(\"br\", {\n        key: \"B\",\n        \"data-text\": \"true\",\n        ref: ref\n    });\n};\n_c1 = NEWLINE_B;\n/**\n * The lowest-level component in a `DraftEditor`, the text node component\n * replaces the default React text node implementation. This allows us to\n * perform custom handling of newline behavior and avoid re-rendering text\n * nodes with DOM state that already matches the expectations of our immutable\n * editor state.\n */ var DraftEditorTextNode = /*#__PURE__*/ function(_React$Component) {\n    _inheritsLoose(DraftEditorTextNode, _React$Component);\n    function DraftEditorTextNode(props) {\n        var _this;\n        _this = _React$Component.call(this, props) || this; // By flipping this flag, we also keep flipping keys which forces\n        // React to remount this node every time it rerenders.\n        _defineProperty(_assertThisInitialized(_this), \"_forceFlag\", void 0);\n        _defineProperty(_assertThisInitialized(_this), \"_node\", void 0);\n        _this._forceFlag = false;\n        return _this;\n    }\n    var _proto = DraftEditorTextNode.prototype;\n    _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        var node = this._node;\n        var shouldBeNewline = nextProps.children === \"\";\n        !isElement(node) ?  true ? invariant(false, \"node is not an Element\") : 0 : void 0;\n        var elementNode = node;\n        if (shouldBeNewline) {\n            return !isNewline(elementNode);\n        }\n        return elementNode.textContent !== nextProps.children;\n    };\n    _proto.componentDidMount = function componentDidMount() {\n        this._forceFlag = !this._forceFlag;\n    };\n    _proto.componentDidUpdate = function componentDidUpdate() {\n        this._forceFlag = !this._forceFlag;\n    };\n    _proto.render = function render() {\n        var _this2 = this;\n        if (this.props.children === \"\") {\n            return this._forceFlag ? NEWLINE_A(function(ref) {\n                return _this2._node = ref;\n            }) : NEWLINE_B(function(ref) {\n                return _this2._node = ref;\n            });\n        }\n        return React.createElement(\"span\", {\n            key: this._forceFlag ? \"A\" : \"B\",\n            \"data-text\": \"true\",\n            ref: function ref(_ref) {\n                return _this2._node = _ref;\n            }\n        }, this.props.children);\n    };\n    return DraftEditorTextNode;\n}(React.Component);\nmodule.exports = DraftEditorTextNode;\nvar _c, _c1;\n$RefreshReg$(_c, \"NEWLINE_A\");\n$RefreshReg$(_c1, \"NEWLINE_B\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEditorTextNode.react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEffects.js":
/*!***************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEffects.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ \nmodule.exports = {\n    initODS: function initODS() {},\n    handleExtensionCausedError: function handleExtensionCausedError() {}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFZmZlY3RzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Q0FNQyxHQUNEO0FBRUFBLE9BQU9DLE9BQU8sR0FBRztJQUNmQyxTQUFTLFNBQVNBLFdBQVc7SUFDN0JDLDRCQUE0QixTQUFTQSw4QkFBOEI7QUFDckUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdEVmZmVjdHMuanM/MmM2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaW5pdE9EUzogZnVuY3Rpb24gaW5pdE9EUygpIHt9LFxuICBoYW5kbGVFeHRlbnNpb25DYXVzZWRFcnJvcjogZnVuY3Rpb24gaGFuZGxlRXh0ZW5zaW9uQ2F1c2VkRXJyb3IoKSB7fVxufTsiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImluaXRPRFMiLCJoYW5kbGVFeHRlbnNpb25DYXVzZWRFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEffects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEntity.js":
/*!**************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEntity.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ var DraftEntityInstance = __webpack_require__(/*! ./DraftEntityInstance */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEntityInstance.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar uuid = __webpack_require__(/*! ./uuid */ \"(app-pages-browser)/./node_modules/draft-js/lib/uuid.js\");\nvar Map = Immutable.Map;\nvar instances = Map();\nvar instanceKey = uuid();\n/**\n * Temporary utility for generating the warnings\n */ function logWarning(oldMethodCall, newMethodCall) {\n    console.warn(\"WARNING: \" + oldMethodCall + ' will be deprecated soon!\\nPlease use \"' + newMethodCall + '\" instead.');\n}\n/**\n * A \"document entity\" is an object containing metadata associated with a\n * piece of text in a ContentBlock.\n *\n * For example, a `link` entity might include a `uri` property. When a\n * ContentBlock is rendered in the browser, text that refers to that link\n * entity may be rendered as an anchor, with the `uri` as the href value.\n *\n * In a ContentBlock, every position in the text may correspond to zero\n * or one entities. This correspondence is tracked using a key string,\n * generated via DraftEntity.create() and used to obtain entity metadata\n * via DraftEntity.get().\n */ var DraftEntity = {\n    /**\n   * WARNING: This method will be deprecated soon!\n   * Please use 'contentState.getLastCreatedEntityKey' instead.\n   * ---\n   * Get the random key string from whatever entity was last created.\n   * We need this to support the new API, as part of transitioning to put Entity\n   * storage in contentState.\n   */ getLastCreatedEntityKey: function getLastCreatedEntityKey() {\n        logWarning(\"DraftEntity.getLastCreatedEntityKey\", \"contentState.getLastCreatedEntityKey\");\n        return DraftEntity.__getLastCreatedEntityKey();\n    },\n    /**\n   * WARNING: This method will be deprecated soon!\n   * Please use 'contentState.createEntity' instead.\n   * ---\n   * Create a DraftEntityInstance and store it for later retrieval.\n   *\n   * A random key string will be generated and returned. This key may\n   * be used to track the entity's usage in a ContentBlock, and for\n   * retrieving data about the entity at render time.\n   */ create: function create(type, mutability, data) {\n        logWarning(\"DraftEntity.create\", \"contentState.createEntity\");\n        return DraftEntity.__create(type, mutability, data);\n    },\n    /**\n   * WARNING: This method will be deprecated soon!\n   * Please use 'contentState.addEntity' instead.\n   * ---\n   * Add an existing DraftEntityInstance to the DraftEntity map. This is\n   * useful when restoring instances from the server.\n   */ add: function add(instance) {\n        logWarning(\"DraftEntity.add\", \"contentState.addEntity\");\n        return DraftEntity.__add(instance);\n    },\n    /**\n   * WARNING: This method will be deprecated soon!\n   * Please use 'contentState.getEntity' instead.\n   * ---\n   * Retrieve the entity corresponding to the supplied key string.\n   */ get: function get(key) {\n        logWarning(\"DraftEntity.get\", \"contentState.getEntity\");\n        return DraftEntity.__get(key);\n    },\n    /**\n   * Get all the entities in the content state.\n   */ __getAll: function __getAll() {\n        return instances;\n    },\n    /**\n   * Load the entity map with the given set of entities.\n   */ __loadWithEntities: function __loadWithEntities(entities) {\n        instances = entities;\n        instanceKey = uuid();\n    },\n    /**\n   * WARNING: This method will be deprecated soon!\n   * Please use 'contentState.mergeEntityData' instead.\n   * ---\n   * Entity instances are immutable. If you need to update the data for an\n   * instance, this method will merge your data updates and return a new\n   * instance.\n   */ mergeData: function mergeData(key, toMerge) {\n        logWarning(\"DraftEntity.mergeData\", \"contentState.mergeEntityData\");\n        return DraftEntity.__mergeData(key, toMerge);\n    },\n    /**\n   * WARNING: This method will be deprecated soon!\n   * Please use 'contentState.replaceEntityData' instead.\n   * ---\n   * Completely replace the data for a given instance.\n   */ replaceData: function replaceData(key, newData) {\n        logWarning(\"DraftEntity.replaceData\", \"contentState.replaceEntityData\");\n        return DraftEntity.__replaceData(key, newData);\n    },\n    // ***********************************WARNING******************************\n    // --- the above public API will be deprecated in the next version of Draft!\n    // The methods below this line are private - don't call them directly.\n    /**\n   * Get the random key string from whatever entity was last created.\n   * We need this to support the new API, as part of transitioning to put Entity\n   * storage in contentState.\n   */ __getLastCreatedEntityKey: function __getLastCreatedEntityKey() {\n        return instanceKey;\n    },\n    /**\n   * Create a DraftEntityInstance and store it for later retrieval.\n   *\n   * A random key string will be generated and returned. This key may\n   * be used to track the entity's usage in a ContentBlock, and for\n   * retrieving data about the entity at render time.\n   */ __create: function __create(type, mutability, data) {\n        return DraftEntity.__add(new DraftEntityInstance({\n            type: type,\n            mutability: mutability,\n            data: data || {}\n        }));\n    },\n    /**\n   * Add an existing DraftEntityInstance to the DraftEntity map. This is\n   * useful when restoring instances from the server.\n   */ __add: function __add(instance) {\n        instanceKey = uuid();\n        instances = instances.set(instanceKey, instance);\n        return instanceKey;\n    },\n    /**\n   * Retrieve the entity corresponding to the supplied key string.\n   */ __get: function __get(key) {\n        var instance = instances.get(key);\n        !!!instance ?  true ? invariant(false, \"Unknown DraftEntity key: %s.\", key) : 0 : void 0;\n        return instance;\n    },\n    /**\n   * Entity instances are immutable. If you need to update the data for an\n   * instance, this method will merge your data updates and return a new\n   * instance.\n   */ __mergeData: function __mergeData(key, toMerge) {\n        var instance = DraftEntity.__get(key);\n        var newData = _objectSpread({}, instance.getData(), toMerge);\n        var newInstance = instance.set(\"data\", newData);\n        instances = instances.set(key, newInstance);\n        return newInstance;\n    },\n    /**\n   * Completely replace the data for a given instance.\n   */ __replaceData: function __replaceData(key, newData) {\n        var instance = DraftEntity.__get(key);\n        var newInstance = instance.set(\"data\", newData);\n        instances = instances.set(key, newInstance);\n        return newInstance;\n    }\n};\nmodule.exports = DraftEntity;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEntity.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEntityInstance.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEntityInstance.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @legacyServerCallableInstance\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar Record = Immutable.Record;\nvar DraftEntityInstanceRecord = Record({\n    type: \"TOKEN\",\n    mutability: \"IMMUTABLE\",\n    data: Object\n});\n/**\n * An instance of a document entity, consisting of a `type` and relevant\n * `data`, metadata about the entity.\n *\n * For instance, a \"link\" entity might provide a URI, and a \"mention\"\n * entity might provide the mentioned user's ID. These pieces of data\n * may be used when rendering the entity as part of a ContentBlock DOM\n * representation. For a link, the data would be used as an href for\n * the rendered anchor. For a mention, the ID could be used to retrieve\n * a hovercard.\n */ var DraftEntityInstance = /*#__PURE__*/ function(_DraftEntityInstanceR) {\n    _inheritsLoose(DraftEntityInstance, _DraftEntityInstanceR);\n    function DraftEntityInstance() {\n        return _DraftEntityInstanceR.apply(this, arguments) || this;\n    }\n    var _proto = DraftEntityInstance.prototype;\n    _proto.getType = function getType() {\n        return this.get(\"type\");\n    };\n    _proto.getMutability = function getMutability() {\n        return this.get(\"mutability\");\n    };\n    _proto.getData = function getData() {\n        return this.get(\"data\");\n    };\n    return DraftEntityInstance;\n}(DraftEntityInstanceRecord);\nmodule.exports = DraftEntityInstance;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFbnRpdHlJbnN0YW5jZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztDQVVDLEdBQ0Q7QUFFQSxTQUFTQSxlQUFlQyxRQUFRLEVBQUVDLFVBQVU7SUFBSUQsU0FBU0UsU0FBUyxHQUFHQyxPQUFPQyxNQUFNLENBQUNILFdBQVdDLFNBQVM7SUFBR0YsU0FBU0UsU0FBUyxDQUFDRyxXQUFXLEdBQUdMO0lBQVVBLFNBQVNNLFNBQVMsR0FBR0w7QUFBWTtBQUV0TCxJQUFJTSxZQUFZQyxtQkFBT0EsQ0FBQyx1R0FBVztBQUVuQyxJQUFJQyxTQUFTRixVQUFVRSxNQUFNO0FBQzdCLElBQUlDLDRCQUE0QkQsT0FBTztJQUNyQ0UsTUFBTTtJQUNOQyxZQUFZO0lBQ1pDLE1BQU1WO0FBQ1I7QUFDQTs7Ozs7Ozs7OztDQVVDLEdBRUQsSUFBSVcsc0JBQXNCLFdBQVcsR0FBRSxTQUFVQyxxQkFBcUI7SUFDcEVoQixlQUFlZSxxQkFBcUJDO0lBRXBDLFNBQVNEO1FBQ1AsT0FBT0Msc0JBQXNCQyxLQUFLLENBQUMsSUFBSSxFQUFFQyxjQUFjLElBQUk7SUFDN0Q7SUFFQSxJQUFJQyxTQUFTSixvQkFBb0JaLFNBQVM7SUFFMUNnQixPQUFPQyxPQUFPLEdBQUcsU0FBU0E7UUFDeEIsT0FBTyxJQUFJLENBQUNDLEdBQUcsQ0FBQztJQUNsQjtJQUVBRixPQUFPRyxhQUFhLEdBQUcsU0FBU0E7UUFDOUIsT0FBTyxJQUFJLENBQUNELEdBQUcsQ0FBQztJQUNsQjtJQUVBRixPQUFPSSxPQUFPLEdBQUcsU0FBU0E7UUFDeEIsT0FBTyxJQUFJLENBQUNGLEdBQUcsQ0FBQztJQUNsQjtJQUVBLE9BQU9OO0FBQ1QsRUFBRUo7QUFFRmEsT0FBT0MsT0FBTyxHQUFHViIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL0RyYWZ0RW50aXR5SW5zdGFuY2UuanM/N2EwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBsZWdhY3lTZXJ2ZXJDYWxsYWJsZUluc3RhbmNlXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBJbW11dGFibGUgPSByZXF1aXJlKFwiaW1tdXRhYmxlXCIpO1xuXG52YXIgUmVjb3JkID0gSW1tdXRhYmxlLlJlY29yZDtcbnZhciBEcmFmdEVudGl0eUluc3RhbmNlUmVjb3JkID0gUmVjb3JkKHtcbiAgdHlwZTogJ1RPS0VOJyxcbiAgbXV0YWJpbGl0eTogJ0lNTVVUQUJMRScsXG4gIGRhdGE6IE9iamVjdFxufSk7XG4vKipcbiAqIEFuIGluc3RhbmNlIG9mIGEgZG9jdW1lbnQgZW50aXR5LCBjb25zaXN0aW5nIG9mIGEgYHR5cGVgIGFuZCByZWxldmFudFxuICogYGRhdGFgLCBtZXRhZGF0YSBhYm91dCB0aGUgZW50aXR5LlxuICpcbiAqIEZvciBpbnN0YW5jZSwgYSBcImxpbmtcIiBlbnRpdHkgbWlnaHQgcHJvdmlkZSBhIFVSSSwgYW5kIGEgXCJtZW50aW9uXCJcbiAqIGVudGl0eSBtaWdodCBwcm92aWRlIHRoZSBtZW50aW9uZWQgdXNlcidzIElELiBUaGVzZSBwaWVjZXMgb2YgZGF0YVxuICogbWF5IGJlIHVzZWQgd2hlbiByZW5kZXJpbmcgdGhlIGVudGl0eSBhcyBwYXJ0IG9mIGEgQ29udGVudEJsb2NrIERPTVxuICogcmVwcmVzZW50YXRpb24uIEZvciBhIGxpbmssIHRoZSBkYXRhIHdvdWxkIGJlIHVzZWQgYXMgYW4gaHJlZiBmb3JcbiAqIHRoZSByZW5kZXJlZCBhbmNob3IuIEZvciBhIG1lbnRpb24sIHRoZSBJRCBjb3VsZCBiZSB1c2VkIHRvIHJldHJpZXZlXG4gKiBhIGhvdmVyY2FyZC5cbiAqL1xuXG52YXIgRHJhZnRFbnRpdHlJbnN0YW5jZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0RyYWZ0RW50aXR5SW5zdGFuY2VSKSB7XG4gIF9pbmhlcml0c0xvb3NlKERyYWZ0RW50aXR5SW5zdGFuY2UsIF9EcmFmdEVudGl0eUluc3RhbmNlUik7XG5cbiAgZnVuY3Rpb24gRHJhZnRFbnRpdHlJbnN0YW5jZSgpIHtcbiAgICByZXR1cm4gX0RyYWZ0RW50aXR5SW5zdGFuY2VSLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBEcmFmdEVudGl0eUluc3RhbmNlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uZ2V0VHlwZSA9IGZ1bmN0aW9uIGdldFR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0KCd0eXBlJyk7XG4gIH07XG5cbiAgX3Byb3RvLmdldE11dGFiaWxpdHkgPSBmdW5jdGlvbiBnZXRNdXRhYmlsaXR5KCkge1xuICAgIHJldHVybiB0aGlzLmdldCgnbXV0YWJpbGl0eScpO1xuICB9O1xuXG4gIF9wcm90by5nZXREYXRhID0gZnVuY3Rpb24gZ2V0RGF0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXQoJ2RhdGEnKTtcbiAgfTtcblxuICByZXR1cm4gRHJhZnRFbnRpdHlJbnN0YW5jZTtcbn0oRHJhZnRFbnRpdHlJbnN0YW5jZVJlY29yZCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRHJhZnRFbnRpdHlJbnN0YW5jZTsiXSwibmFtZXMiOlsiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsIl9fcHJvdG9fXyIsIkltbXV0YWJsZSIsInJlcXVpcmUiLCJSZWNvcmQiLCJEcmFmdEVudGl0eUluc3RhbmNlUmVjb3JkIiwidHlwZSIsIm11dGFiaWxpdHkiLCJkYXRhIiwiRHJhZnRFbnRpdHlJbnN0YW5jZSIsIl9EcmFmdEVudGl0eUluc3RhbmNlUiIsImFwcGx5IiwiYXJndW1lbnRzIiwiX3Byb3RvIiwiZ2V0VHlwZSIsImdldCIsImdldE11dGFiaWxpdHkiLCJnZXREYXRhIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEntityInstance.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftEntitySegments.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftEntitySegments.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n/**\n * Identify the range to delete from a segmented entity.\n *\n * Rules:\n *\n *  Example: 'John F. Kennedy'\n *\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n *     will return the range of that text.\n *\n *       'John F. Kennedy' -> 'John F.'\n *                  ^\n *\n *   - Forward deletion of whitespace will remove the following section:\n *\n *       'John F. Kennedy' -> 'John Kennedy'\n *            ^\n *\n *   - Backward deletion of whitespace will remove the previous section:\n *\n *       'John F. Kennedy' -> 'F. Kennedy'\n *            ^\n */ var DraftEntitySegments = {\n    getRemovalRange: function getRemovalRange(selectionStart, selectionEnd, text, entityStart, direction) {\n        var segments = text.split(\" \");\n        segments = segments.map(function(/*string*/ segment, /*number*/ ii) {\n            if (direction === \"forward\") {\n                if (ii > 0) {\n                    return \" \" + segment;\n                }\n            } else if (ii < segments.length - 1) {\n                return segment + \" \";\n            }\n            return segment;\n        });\n        var segmentStart = entityStart;\n        var segmentEnd;\n        var segment;\n        var removalStart = null;\n        var removalEnd = null;\n        for(var jj = 0; jj < segments.length; jj++){\n            segment = segments[jj];\n            segmentEnd = segmentStart + segment.length; // Our selection overlaps this segment.\n            if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\n                if (removalStart !== null) {\n                    removalEnd = segmentEnd;\n                } else {\n                    removalStart = segmentStart;\n                    removalEnd = segmentEnd;\n                }\n            } else if (removalStart !== null) {\n                break;\n            }\n            segmentStart = segmentEnd;\n        }\n        var entityEnd = entityStart + text.length;\n        var atStart = removalStart === entityStart;\n        var atEnd = removalEnd === entityEnd;\n        if (!atStart && atEnd || atStart && !atEnd) {\n            if (direction === \"forward\") {\n                if (removalEnd !== entityEnd) {\n                    removalEnd++;\n                }\n            } else if (removalStart !== entityStart) {\n                removalStart--;\n            }\n        }\n        return {\n            start: removalStart,\n            end: removalEnd\n        };\n    }\n};\nmodule.exports = DraftEntitySegments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRFbnRpdHlTZWdtZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBc0JDLEdBQ0QsSUFBSUEsc0JBQXNCO0lBQ3hCQyxpQkFBaUIsU0FBU0EsZ0JBQWdCQyxjQUFjLEVBQUVDLFlBQVksRUFBRUMsSUFBSSxFQUFFQyxXQUFXLEVBQUVDLFNBQVM7UUFDbEcsSUFBSUMsV0FBV0gsS0FBS0ksS0FBSyxDQUFDO1FBQzFCRCxXQUFXQSxTQUFTRSxHQUFHLENBQUMsU0FDeEIsUUFBUSxHQUNSQyxPQUFPLEVBQ1AsUUFBUSxHQUNSQyxFQUFFO1lBQ0EsSUFBSUwsY0FBYyxXQUFXO2dCQUMzQixJQUFJSyxLQUFLLEdBQUc7b0JBQ1YsT0FBTyxNQUFNRDtnQkFDZjtZQUNGLE9BQU8sSUFBSUMsS0FBS0osU0FBU0ssTUFBTSxHQUFHLEdBQUc7Z0JBQ25DLE9BQU9GLFVBQVU7WUFDbkI7WUFFQSxPQUFPQTtRQUNUO1FBQ0EsSUFBSUcsZUFBZVI7UUFDbkIsSUFBSVM7UUFDSixJQUFJSjtRQUNKLElBQUlLLGVBQWU7UUFDbkIsSUFBSUMsYUFBYTtRQUVqQixJQUFLLElBQUlDLEtBQUssR0FBR0EsS0FBS1YsU0FBU0ssTUFBTSxFQUFFSyxLQUFNO1lBQzNDUCxVQUFVSCxRQUFRLENBQUNVLEdBQUc7WUFDdEJILGFBQWFELGVBQWVILFFBQVFFLE1BQU0sRUFBRSx1Q0FBdUM7WUFFbkYsSUFBSVYsaUJBQWlCWSxjQUFjRCxlQUFlVixjQUFjO2dCQUM5RCxJQUFJWSxpQkFBaUIsTUFBTTtvQkFDekJDLGFBQWFGO2dCQUNmLE9BQU87b0JBQ0xDLGVBQWVGO29CQUNmRyxhQUFhRjtnQkFDZjtZQUNGLE9BQU8sSUFBSUMsaUJBQWlCLE1BQU07Z0JBQ2hDO1lBQ0Y7WUFFQUYsZUFBZUM7UUFDakI7UUFFQSxJQUFJSSxZQUFZYixjQUFjRCxLQUFLUSxNQUFNO1FBQ3pDLElBQUlPLFVBQVVKLGlCQUFpQlY7UUFDL0IsSUFBSWUsUUFBUUosZUFBZUU7UUFFM0IsSUFBSSxDQUFDQyxXQUFXQyxTQUFTRCxXQUFXLENBQUNDLE9BQU87WUFDMUMsSUFBSWQsY0FBYyxXQUFXO2dCQUMzQixJQUFJVSxlQUFlRSxXQUFXO29CQUM1QkY7Z0JBQ0Y7WUFDRixPQUFPLElBQUlELGlCQUFpQlYsYUFBYTtnQkFDdkNVO1lBQ0Y7UUFDRjtRQUVBLE9BQU87WUFDTE0sT0FBT047WUFDUE8sS0FBS047UUFDUDtJQUNGO0FBQ0Y7QUFDQU8sT0FBT0MsT0FBTyxHQUFHeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdEVudGl0eVNlZ21lbnRzLmpzPzNiOTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBJZGVudGlmeSB0aGUgcmFuZ2UgdG8gZGVsZXRlIGZyb20gYSBzZWdtZW50ZWQgZW50aXR5LlxuICpcbiAqIFJ1bGVzOlxuICpcbiAqICBFeGFtcGxlOiAnSm9obiBGLiBLZW5uZWR5J1xuICpcbiAqICAgLSBEZWxldGlvbiBmcm9tIHdpdGhpbiBhbnkgbm9uLXdoaXRlc3BhY2UgKGkuZS4gWydKb2huJywgJ0YuJywgJ0tlbm5lZHknXSlcbiAqICAgICB3aWxsIHJldHVybiB0aGUgcmFuZ2Ugb2YgdGhhdCB0ZXh0LlxuICpcbiAqICAgICAgICdKb2huIEYuIEtlbm5lZHknIC0+ICdKb2huIEYuJ1xuICogICAgICAgICAgICAgICAgICBeXG4gKlxuICogICAtIEZvcndhcmQgZGVsZXRpb24gb2Ygd2hpdGVzcGFjZSB3aWxsIHJlbW92ZSB0aGUgZm9sbG93aW5nIHNlY3Rpb246XG4gKlxuICogICAgICAgJ0pvaG4gRi4gS2VubmVkeScgLT4gJ0pvaG4gS2VubmVkeSdcbiAqICAgICAgICAgICAgXlxuICpcbiAqICAgLSBCYWNrd2FyZCBkZWxldGlvbiBvZiB3aGl0ZXNwYWNlIHdpbGwgcmVtb3ZlIHRoZSBwcmV2aW91cyBzZWN0aW9uOlxuICpcbiAqICAgICAgICdKb2huIEYuIEtlbm5lZHknIC0+ICdGLiBLZW5uZWR5J1xuICogICAgICAgICAgICBeXG4gKi9cbnZhciBEcmFmdEVudGl0eVNlZ21lbnRzID0ge1xuICBnZXRSZW1vdmFsUmFuZ2U6IGZ1bmN0aW9uIGdldFJlbW92YWxSYW5nZShzZWxlY3Rpb25TdGFydCwgc2VsZWN0aW9uRW5kLCB0ZXh0LCBlbnRpdHlTdGFydCwgZGlyZWN0aW9uKSB7XG4gICAgdmFyIHNlZ21lbnRzID0gdGV4dC5zcGxpdCgnICcpO1xuICAgIHNlZ21lbnRzID0gc2VnbWVudHMubWFwKGZ1bmN0aW9uIChcbiAgICAvKnN0cmluZyovXG4gICAgc2VnbWVudCxcbiAgICAvKm51bWJlciovXG4gICAgaWkpIHtcbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICdmb3J3YXJkJykge1xuICAgICAgICBpZiAoaWkgPiAwKSB7XG4gICAgICAgICAgcmV0dXJuICcgJyArIHNlZ21lbnQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoaWkgPCBzZWdtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHJldHVybiBzZWdtZW50ICsgJyAnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2VnbWVudDtcbiAgICB9KTtcbiAgICB2YXIgc2VnbWVudFN0YXJ0ID0gZW50aXR5U3RhcnQ7XG4gICAgdmFyIHNlZ21lbnRFbmQ7XG4gICAgdmFyIHNlZ21lbnQ7XG4gICAgdmFyIHJlbW92YWxTdGFydCA9IG51bGw7XG4gICAgdmFyIHJlbW92YWxFbmQgPSBudWxsO1xuXG4gICAgZm9yICh2YXIgamogPSAwOyBqaiA8IHNlZ21lbnRzLmxlbmd0aDsgamorKykge1xuICAgICAgc2VnbWVudCA9IHNlZ21lbnRzW2pqXTtcbiAgICAgIHNlZ21lbnRFbmQgPSBzZWdtZW50U3RhcnQgKyBzZWdtZW50Lmxlbmd0aDsgLy8gT3VyIHNlbGVjdGlvbiBvdmVybGFwcyB0aGlzIHNlZ21lbnQuXG5cbiAgICAgIGlmIChzZWxlY3Rpb25TdGFydCA8IHNlZ21lbnRFbmQgJiYgc2VnbWVudFN0YXJ0IDwgc2VsZWN0aW9uRW5kKSB7XG4gICAgICAgIGlmIChyZW1vdmFsU3RhcnQgIT09IG51bGwpIHtcbiAgICAgICAgICByZW1vdmFsRW5kID0gc2VnbWVudEVuZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZW1vdmFsU3RhcnQgPSBzZWdtZW50U3RhcnQ7XG4gICAgICAgICAgcmVtb3ZhbEVuZCA9IHNlZ21lbnRFbmQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAocmVtb3ZhbFN0YXJ0ICE9PSBudWxsKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBzZWdtZW50U3RhcnQgPSBzZWdtZW50RW5kO1xuICAgIH1cblxuICAgIHZhciBlbnRpdHlFbmQgPSBlbnRpdHlTdGFydCArIHRleHQubGVuZ3RoO1xuICAgIHZhciBhdFN0YXJ0ID0gcmVtb3ZhbFN0YXJ0ID09PSBlbnRpdHlTdGFydDtcbiAgICB2YXIgYXRFbmQgPSByZW1vdmFsRW5kID09PSBlbnRpdHlFbmQ7XG5cbiAgICBpZiAoIWF0U3RhcnQgJiYgYXRFbmQgfHwgYXRTdGFydCAmJiAhYXRFbmQpIHtcbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICdmb3J3YXJkJykge1xuICAgICAgICBpZiAocmVtb3ZhbEVuZCAhPT0gZW50aXR5RW5kKSB7XG4gICAgICAgICAgcmVtb3ZhbEVuZCsrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHJlbW92YWxTdGFydCAhPT0gZW50aXR5U3RhcnQpIHtcbiAgICAgICAgcmVtb3ZhbFN0YXJ0LS07XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXJ0OiByZW1vdmFsU3RhcnQsXG4gICAgICBlbmQ6IHJlbW92YWxFbmRcbiAgICB9O1xuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBEcmFmdEVudGl0eVNlZ21lbnRzOyJdLCJuYW1lcyI6WyJEcmFmdEVudGl0eVNlZ21lbnRzIiwiZ2V0UmVtb3ZhbFJhbmdlIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJ0ZXh0IiwiZW50aXR5U3RhcnQiLCJkaXJlY3Rpb24iLCJzZWdtZW50cyIsInNwbGl0IiwibWFwIiwic2VnbWVudCIsImlpIiwibGVuZ3RoIiwic2VnbWVudFN0YXJ0Iiwic2VnbWVudEVuZCIsInJlbW92YWxTdGFydCIsInJlbW92YWxFbmQiLCJqaiIsImVudGl0eUVuZCIsImF0U3RhcnQiLCJhdEVuZCIsInN0YXJ0IiwiZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftEntitySegments.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftJsDebugLogging.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftJsDebugLogging.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ \nmodule.exports = {\n    logBlockedSelectionEvent: function logBlockedSelectionEvent() {\n        return null;\n    },\n    logSelectionStateFailure: function logSelectionStateFailure() {\n        return null;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRKc0RlYnVnTG9nZ2luZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0NBTUMsR0FDRDtBQUVBQSxPQUFPQyxPQUFPLEdBQUc7SUFDZkMsMEJBQTBCLFNBQVNBO1FBQ2pDLE9BQU87SUFDVDtJQUNBQywwQkFBMEIsU0FBU0E7UUFDakMsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdEpzRGVidWdMb2dnaW5nLmpzPzc0OTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGxvZ0Jsb2NrZWRTZWxlY3Rpb25FdmVudDogZnVuY3Rpb24gbG9nQmxvY2tlZFNlbGVjdGlvbkV2ZW50KCkge1xuICAgIHJldHVybiBudWxsO1xuICB9LFxuICBsb2dTZWxlY3Rpb25TdGF0ZUZhaWx1cmU6IGZ1bmN0aW9uIGxvZ1NlbGVjdGlvblN0YXRlRmFpbHVyZSgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTsiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImxvZ0Jsb2NrZWRTZWxlY3Rpb25FdmVudCIsImxvZ1NlbGVjdGlvblN0YXRlRmFpbHVyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftJsDebugLogging.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js":
/*!****************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftModifier.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar ContentStateInlineStyle = __webpack_require__(/*! ./ContentStateInlineStyle */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentStateInlineStyle.js\");\nvar applyEntityToContentState = __webpack_require__(/*! ./applyEntityToContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/applyEntityToContentState.js\");\nvar getCharacterRemovalRange = __webpack_require__(/*! ./getCharacterRemovalRange */ \"(app-pages-browser)/./node_modules/draft-js/lib/getCharacterRemovalRange.js\");\nvar getContentStateFragment = __webpack_require__(/*! ./getContentStateFragment */ \"(app-pages-browser)/./node_modules/draft-js/lib/getContentStateFragment.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar insertFragmentIntoContentState = __webpack_require__(/*! ./insertFragmentIntoContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/insertFragmentIntoContentState.js\");\nvar insertTextIntoContentState = __webpack_require__(/*! ./insertTextIntoContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/insertTextIntoContentState.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar modifyBlockForContentState = __webpack_require__(/*! ./modifyBlockForContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/modifyBlockForContentState.js\");\nvar removeEntitiesAtEdges = __webpack_require__(/*! ./removeEntitiesAtEdges */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeEntitiesAtEdges.js\");\nvar removeRangeFromContentState = __webpack_require__(/*! ./removeRangeFromContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeRangeFromContentState.js\");\nvar splitBlockInContentState = __webpack_require__(/*! ./splitBlockInContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/splitBlockInContentState.js\");\nvar OrderedSet = Immutable.OrderedSet;\n/**\n * `DraftModifier` provides a set of convenience methods that apply\n * modifications to a `ContentState` object based on a target `SelectionState`.\n *\n * Any change to a `ContentState` should be decomposable into a series of\n * transaction functions that apply the required changes and return output\n * `ContentState` objects.\n *\n * These functions encapsulate some of the most common transaction sequences.\n */ var DraftModifier = {\n    replaceText: function replaceText(contentState, rangeToReplace, text, inlineStyle, entityKey) {\n        var withoutEntities = removeEntitiesAtEdges(contentState, rangeToReplace);\n        var withoutText = removeRangeFromContentState(withoutEntities, rangeToReplace);\n        var character = CharacterMetadata.create({\n            style: inlineStyle || OrderedSet(),\n            entity: entityKey || null\n        });\n        return insertTextIntoContentState(withoutText, withoutText.getSelectionAfter(), text, character);\n    },\n    insertText: function insertText(contentState, targetRange, text, inlineStyle, entityKey) {\n        !targetRange.isCollapsed() ?  true ? invariant(false, \"Target range must be collapsed for `insertText`.\") : 0 : void 0;\n        return DraftModifier.replaceText(contentState, targetRange, text, inlineStyle, entityKey);\n    },\n    moveText: function moveText(contentState, removalRange, targetRange) {\n        var movedFragment = getContentStateFragment(contentState, removalRange);\n        var afterRemoval = DraftModifier.removeRange(contentState, removalRange, \"backward\");\n        return DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n    },\n    replaceWithFragment: function replaceWithFragment(contentState, targetRange, fragment) {\n        var mergeBlockData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"REPLACE_WITH_NEW_DATA\";\n        var withoutEntities = removeEntitiesAtEdges(contentState, targetRange);\n        var withoutText = removeRangeFromContentState(withoutEntities, targetRange);\n        return insertFragmentIntoContentState(withoutText, withoutText.getSelectionAfter(), fragment, mergeBlockData);\n    },\n    removeRange: function removeRange(contentState, rangeToRemove, removalDirection) {\n        var startKey, endKey, startBlock, endBlock;\n        if (rangeToRemove.getIsBackward()) {\n            rangeToRemove = rangeToRemove.merge({\n                anchorKey: rangeToRemove.getFocusKey(),\n                anchorOffset: rangeToRemove.getFocusOffset(),\n                focusKey: rangeToRemove.getAnchorKey(),\n                focusOffset: rangeToRemove.getAnchorOffset(),\n                isBackward: false\n            });\n        }\n        startKey = rangeToRemove.getAnchorKey();\n        endKey = rangeToRemove.getFocusKey();\n        startBlock = contentState.getBlockForKey(startKey);\n        endBlock = contentState.getBlockForKey(endKey);\n        var startOffset = rangeToRemove.getStartOffset();\n        var endOffset = rangeToRemove.getEndOffset();\n        var startEntityKey = startBlock.getEntityAt(startOffset);\n        var endEntityKey = endBlock.getEntityAt(endOffset - 1); // Check whether the selection state overlaps with a single entity.\n        // If so, try to remove the appropriate substring of the entity text.\n        if (startKey === endKey) {\n            if (startEntityKey && startEntityKey === endEntityKey) {\n                var adjustedRemovalRange = getCharacterRemovalRange(contentState.getEntityMap(), startBlock, endBlock, rangeToRemove, removalDirection);\n                return removeRangeFromContentState(contentState, adjustedRemovalRange);\n            }\n        }\n        var withoutEntities = removeEntitiesAtEdges(contentState, rangeToRemove);\n        return removeRangeFromContentState(withoutEntities, rangeToRemove);\n    },\n    splitBlock: function splitBlock(contentState, selectionState) {\n        var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n        var withoutText = removeRangeFromContentState(withoutEntities, selectionState);\n        return splitBlockInContentState(withoutText, withoutText.getSelectionAfter());\n    },\n    applyInlineStyle: function applyInlineStyle(contentState, selectionState, inlineStyle) {\n        return ContentStateInlineStyle.add(contentState, selectionState, inlineStyle);\n    },\n    removeInlineStyle: function removeInlineStyle(contentState, selectionState, inlineStyle) {\n        return ContentStateInlineStyle.remove(contentState, selectionState, inlineStyle);\n    },\n    setBlockType: function setBlockType(contentState, selectionState, blockType) {\n        return modifyBlockForContentState(contentState, selectionState, function(block) {\n            return block.merge({\n                type: blockType,\n                depth: 0\n            });\n        });\n    },\n    setBlockData: function setBlockData(contentState, selectionState, blockData) {\n        return modifyBlockForContentState(contentState, selectionState, function(block) {\n            return block.merge({\n                data: blockData\n            });\n        });\n    },\n    mergeBlockData: function mergeBlockData(contentState, selectionState, blockData) {\n        return modifyBlockForContentState(contentState, selectionState, function(block) {\n            return block.merge({\n                data: block.getData().merge(blockData)\n            });\n        });\n    },\n    applyEntity: function applyEntity(contentState, selectionState, entityKey) {\n        var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n        return applyEntityToContentState(withoutEntities, selectionState, entityKey);\n    }\n};\nmodule.exports = DraftModifier;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftOffsetKey.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar KEY_DELIMITER = \"-\";\nvar DraftOffsetKey = {\n    encode: function encode(blockKey, decoratorKey, leafKey) {\n        return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n    },\n    decode: function decode(offsetKey) {\n        // Extracts the last two parts of offsetKey and captures the rest in blockKeyParts\n        var _offsetKey$split$reve = offsetKey.split(KEY_DELIMITER).reverse(), leafKey = _offsetKey$split$reve[0], decoratorKey = _offsetKey$split$reve[1], blockKeyParts = _offsetKey$split$reve.slice(2);\n        return {\n            // Recomposes the parts of blockKey after reversing them\n            blockKey: blockKeyParts.reverse().join(KEY_DELIMITER),\n            decoratorKey: parseInt(decoratorKey, 10),\n            leafKey: parseInt(leafKey, 10)\n        };\n    }\n};\nmodule.exports = DraftOffsetKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRPZmZzZXRLZXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxnQkFBZ0I7QUFDcEIsSUFBSUMsaUJBQWlCO0lBQ25CQyxRQUFRLFNBQVNBLE9BQU9DLFFBQVEsRUFBRUMsWUFBWSxFQUFFQyxPQUFPO1FBQ3JELE9BQU9GLFdBQVdILGdCQUFnQkksZUFBZUosZ0JBQWdCSztJQUNuRTtJQUNBQyxRQUFRLFNBQVNBLE9BQU9DLFNBQVM7UUFDL0Isa0ZBQWtGO1FBQ2xGLElBQUlDLHdCQUF3QkQsVUFBVUUsS0FBSyxDQUFDVCxlQUFlVSxPQUFPLElBQzlETCxVQUFVRyxxQkFBcUIsQ0FBQyxFQUFFLEVBQ2xDSixlQUFlSSxxQkFBcUIsQ0FBQyxFQUFFLEVBQ3ZDRyxnQkFBZ0JILHNCQUFzQkksS0FBSyxDQUFDO1FBRWhELE9BQU87WUFDTCx3REFBd0Q7WUFDeERULFVBQVVRLGNBQWNELE9BQU8sR0FBR0csSUFBSSxDQUFDYjtZQUN2Q0ksY0FBY1UsU0FBU1YsY0FBYztZQUNyQ0MsU0FBU1MsU0FBU1QsU0FBUztRQUM3QjtJQUNGO0FBQ0Y7QUFDQVUsT0FBT0MsT0FBTyxHQUFHZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL0RyYWZ0T2Zmc2V0S2V5LmpzPzRlYmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIEtFWV9ERUxJTUlURVIgPSAnLSc7XG52YXIgRHJhZnRPZmZzZXRLZXkgPSB7XG4gIGVuY29kZTogZnVuY3Rpb24gZW5jb2RlKGJsb2NrS2V5LCBkZWNvcmF0b3JLZXksIGxlYWZLZXkpIHtcbiAgICByZXR1cm4gYmxvY2tLZXkgKyBLRVlfREVMSU1JVEVSICsgZGVjb3JhdG9yS2V5ICsgS0VZX0RFTElNSVRFUiArIGxlYWZLZXk7XG4gIH0sXG4gIGRlY29kZTogZnVuY3Rpb24gZGVjb2RlKG9mZnNldEtleSkge1xuICAgIC8vIEV4dHJhY3RzIHRoZSBsYXN0IHR3byBwYXJ0cyBvZiBvZmZzZXRLZXkgYW5kIGNhcHR1cmVzIHRoZSByZXN0IGluIGJsb2NrS2V5UGFydHNcbiAgICB2YXIgX29mZnNldEtleSRzcGxpdCRyZXZlID0gb2Zmc2V0S2V5LnNwbGl0KEtFWV9ERUxJTUlURVIpLnJldmVyc2UoKSxcbiAgICAgICAgbGVhZktleSA9IF9vZmZzZXRLZXkkc3BsaXQkcmV2ZVswXSxcbiAgICAgICAgZGVjb3JhdG9yS2V5ID0gX29mZnNldEtleSRzcGxpdCRyZXZlWzFdLFxuICAgICAgICBibG9ja0tleVBhcnRzID0gX29mZnNldEtleSRzcGxpdCRyZXZlLnNsaWNlKDIpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIFJlY29tcG9zZXMgdGhlIHBhcnRzIG9mIGJsb2NrS2V5IGFmdGVyIHJldmVyc2luZyB0aGVtXG4gICAgICBibG9ja0tleTogYmxvY2tLZXlQYXJ0cy5yZXZlcnNlKCkuam9pbihLRVlfREVMSU1JVEVSKSxcbiAgICAgIGRlY29yYXRvcktleTogcGFyc2VJbnQoZGVjb3JhdG9yS2V5LCAxMCksXG4gICAgICBsZWFmS2V5OiBwYXJzZUludChsZWFmS2V5LCAxMClcbiAgICB9O1xuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBEcmFmdE9mZnNldEtleTsiXSwibmFtZXMiOlsiS0VZX0RFTElNSVRFUiIsIkRyYWZ0T2Zmc2V0S2V5IiwiZW5jb2RlIiwiYmxvY2tLZXkiLCJkZWNvcmF0b3JLZXkiLCJsZWFmS2V5IiwiZGVjb2RlIiwib2Zmc2V0S2V5IiwiX29mZnNldEtleSRzcGxpdCRyZXZlIiwic3BsaXQiLCJyZXZlcnNlIiwiYmxvY2tLZXlQYXJ0cyIsInNsaWNlIiwiam9pbiIsInBhcnNlSW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftPasteProcessor.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftPasteProcessor.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar ContentBlock = __webpack_require__(/*! ./ContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\");\nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar convertFromHTMLToContentBlocks = __webpack_require__(/*! ./convertFromHTMLToContentBlocks */ \"(app-pages-browser)/./node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar getSafeBodyFromHTML = __webpack_require__(/*! ./getSafeBodyFromHTML */ \"(app-pages-browser)/./node_modules/draft-js/lib/getSafeBodyFromHTML.js\");\nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar sanitizeDraftText = __webpack_require__(/*! ./sanitizeDraftText */ \"(app-pages-browser)/./node_modules/draft-js/lib/sanitizeDraftText.js\");\nvar List = Immutable.List, Repeat = Immutable.Repeat;\nvar experimentalTreeDataSupport = gkx(\"draft_tree_data_support\");\nvar ContentBlockRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\nvar DraftPasteProcessor = {\n    processHTML: function processHTML(html, blockRenderMap) {\n        return convertFromHTMLToContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n    },\n    processText: function processText(textBlocks, character, type) {\n        return textBlocks.reduce(function(acc, textLine, index) {\n            textLine = sanitizeDraftText(textLine);\n            var key = generateRandomKey();\n            var blockNodeConfig = {\n                key: key,\n                type: type,\n                text: textLine,\n                characterList: List(Repeat(character, textLine.length))\n            }; // next block updates previous block\n            if (experimentalTreeDataSupport && index !== 0) {\n                var prevSiblingIndex = index - 1; // update previous block\n                var previousBlock = acc[prevSiblingIndex] = acc[prevSiblingIndex].merge({\n                    nextSibling: key\n                });\n                blockNodeConfig = _objectSpread({}, blockNodeConfig, {\n                    prevSibling: previousBlock.getKey()\n                });\n            }\n            acc.push(new ContentBlockRecord(blockNodeConfig));\n            return acc;\n        }, []);\n    }\n};\nmodule.exports = DraftPasteProcessor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRQYXN0ZVByb2Nlc3Nvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLFNBQVNBLGNBQWNDLE1BQU07SUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1FBQUUsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFLElBQUksT0FBT0MsU0FBUyxDQUFDRCxFQUFFLEdBQUcsQ0FBQztRQUFHLElBQUlJLFVBQVVDLE9BQU9DLElBQUksQ0FBQ0g7UUFBUyxJQUFJLE9BQU9FLE9BQU9FLHFCQUFxQixLQUFLLFlBQVk7WUFBRUgsVUFBVUEsUUFBUUksTUFBTSxDQUFDSCxPQUFPRSxxQkFBcUIsQ0FBQ0osUUFBUU0sTUFBTSxDQUFDLFNBQVVDLEdBQUc7Z0JBQUksT0FBT0wsT0FBT00sd0JBQXdCLENBQUNSLFFBQVFPLEtBQUtFLFVBQVU7WUFBRTtRQUFLO1FBQUVSLFFBQVFTLE9BQU8sQ0FBQyxTQUFVQyxHQUFHO1lBQUlDLGdCQUFnQmhCLFFBQVFlLEtBQUtYLE1BQU0sQ0FBQ1csSUFBSTtRQUFHO0lBQUk7SUFBRSxPQUFPZjtBQUFRO0FBRWhlLFNBQVNnQixnQkFBZ0JDLEdBQUcsRUFBRUYsR0FBRyxFQUFFRyxLQUFLO0lBQUksSUFBSUgsT0FBT0UsS0FBSztRQUFFWCxPQUFPYSxjQUFjLENBQUNGLEtBQUtGLEtBQUs7WUFBRUcsT0FBT0E7WUFBT0wsWUFBWTtZQUFNTyxjQUFjO1lBQU1DLFVBQVU7UUFBSztJQUFJLE9BQU87UUFBRUosR0FBRyxDQUFDRixJQUFJLEdBQUdHO0lBQU87SUFBRSxPQUFPRDtBQUFLO0FBRWhOLElBQUlLLGVBQWVDLG1CQUFPQSxDQUFDLHVGQUFnQjtBQUUzQyxJQUFJQyxtQkFBbUJELG1CQUFPQSxDQUFDLCtGQUFvQjtBQUVuRCxJQUFJRSxpQ0FBaUNGLG1CQUFPQSxDQUFDLDJIQUFrQztBQUUvRSxJQUFJRyxvQkFBb0JILG1CQUFPQSxDQUFDLGlHQUFxQjtBQUVyRCxJQUFJSSxzQkFBc0JKLG1CQUFPQSxDQUFDLHFHQUF1QjtBQUV6RCxJQUFJSyxNQUFNTCxtQkFBT0EsQ0FBQyxxRUFBTztBQUV6QixJQUFJTSxZQUFZTixtQkFBT0EsQ0FBQyx1R0FBVztBQUVuQyxJQUFJTyxvQkFBb0JQLG1CQUFPQSxDQUFDLGlHQUFxQjtBQUVyRCxJQUFJUSxPQUFPRixVQUFVRSxJQUFJLEVBQ3JCQyxTQUFTSCxVQUFVRyxNQUFNO0FBQzdCLElBQUlDLDhCQUE4QkwsSUFBSTtBQUN0QyxJQUFJTSxxQkFBcUJELDhCQUE4QlQsbUJBQW1CRjtBQUMxRSxJQUFJYSxzQkFBc0I7SUFDeEJDLGFBQWEsU0FBU0EsWUFBWUMsSUFBSSxFQUFFQyxjQUFjO1FBQ3BELE9BQU9iLCtCQUErQlksTUFBTVYscUJBQXFCVztJQUNuRTtJQUNBQyxhQUFhLFNBQVNBLFlBQVlDLFVBQVUsRUFBRUMsU0FBUyxFQUFFQyxJQUFJO1FBQzNELE9BQU9GLFdBQVdHLE1BQU0sQ0FBQyxTQUFVQyxHQUFHLEVBQUVDLFFBQVEsRUFBRUMsS0FBSztZQUNyREQsV0FBV2Ysa0JBQWtCZTtZQUM3QixJQUFJOUIsTUFBTVc7WUFDVixJQUFJcUIsa0JBQWtCO2dCQUNwQmhDLEtBQUtBO2dCQUNMMkIsTUFBTUE7Z0JBQ05NLE1BQU1IO2dCQUNOSSxlQUFlbEIsS0FBS0MsT0FBT1MsV0FBV0ksU0FBUzFDLE1BQU07WUFDdkQsR0FBRyxvQ0FBb0M7WUFFdkMsSUFBSThCLCtCQUErQmEsVUFBVSxHQUFHO2dCQUM5QyxJQUFJSSxtQkFBbUJKLFFBQVEsR0FBRyx3QkFBd0I7Z0JBRTFELElBQUlLLGdCQUFnQlAsR0FBRyxDQUFDTSxpQkFBaUIsR0FBR04sR0FBRyxDQUFDTSxpQkFBaUIsQ0FBQ0UsS0FBSyxDQUFDO29CQUN0RUMsYUFBYXRDO2dCQUNmO2dCQUNBZ0Msa0JBQWtCaEQsY0FBYyxDQUFDLEdBQUdnRCxpQkFBaUI7b0JBQ25ETyxhQUFhSCxjQUFjSSxNQUFNO2dCQUNuQztZQUNGO1lBRUFYLElBQUlZLElBQUksQ0FBQyxJQUFJdEIsbUJBQW1CYTtZQUNoQyxPQUFPSDtRQUNULEdBQUcsRUFBRTtJQUNQO0FBQ0Y7QUFDQWEsT0FBT0MsT0FBTyxHQUFHdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9EcmFmdFBhc3RlUHJvY2Vzc29yLmpzPzU5ZWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IHZhciBvd25LZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7IG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBzeW0pLmVudW1lcmFibGU7IH0pKTsgfSBvd25LZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgQ29udGVudEJsb2NrID0gcmVxdWlyZShcIi4vQ29udGVudEJsb2NrXCIpO1xuXG52YXIgQ29udGVudEJsb2NrTm9kZSA9IHJlcXVpcmUoXCIuL0NvbnRlbnRCbG9ja05vZGVcIik7XG5cbnZhciBjb252ZXJ0RnJvbUhUTUxUb0NvbnRlbnRCbG9ja3MgPSByZXF1aXJlKFwiLi9jb252ZXJ0RnJvbUhUTUxUb0NvbnRlbnRCbG9ja3NcIik7XG5cbnZhciBnZW5lcmF0ZVJhbmRvbUtleSA9IHJlcXVpcmUoXCIuL2dlbmVyYXRlUmFuZG9tS2V5XCIpO1xuXG52YXIgZ2V0U2FmZUJvZHlGcm9tSFRNTCA9IHJlcXVpcmUoXCIuL2dldFNhZmVCb2R5RnJvbUhUTUxcIik7XG5cbnZhciBna3ggPSByZXF1aXJlKFwiLi9na3hcIik7XG5cbnZhciBJbW11dGFibGUgPSByZXF1aXJlKFwiaW1tdXRhYmxlXCIpO1xuXG52YXIgc2FuaXRpemVEcmFmdFRleHQgPSByZXF1aXJlKFwiLi9zYW5pdGl6ZURyYWZ0VGV4dFwiKTtcblxudmFyIExpc3QgPSBJbW11dGFibGUuTGlzdCxcbiAgICBSZXBlYXQgPSBJbW11dGFibGUuUmVwZWF0O1xudmFyIGV4cGVyaW1lbnRhbFRyZWVEYXRhU3VwcG9ydCA9IGdreCgnZHJhZnRfdHJlZV9kYXRhX3N1cHBvcnQnKTtcbnZhciBDb250ZW50QmxvY2tSZWNvcmQgPSBleHBlcmltZW50YWxUcmVlRGF0YVN1cHBvcnQgPyBDb250ZW50QmxvY2tOb2RlIDogQ29udGVudEJsb2NrO1xudmFyIERyYWZ0UGFzdGVQcm9jZXNzb3IgPSB7XG4gIHByb2Nlc3NIVE1MOiBmdW5jdGlvbiBwcm9jZXNzSFRNTChodG1sLCBibG9ja1JlbmRlck1hcCkge1xuICAgIHJldHVybiBjb252ZXJ0RnJvbUhUTUxUb0NvbnRlbnRCbG9ja3MoaHRtbCwgZ2V0U2FmZUJvZHlGcm9tSFRNTCwgYmxvY2tSZW5kZXJNYXApO1xuICB9LFxuICBwcm9jZXNzVGV4dDogZnVuY3Rpb24gcHJvY2Vzc1RleHQodGV4dEJsb2NrcywgY2hhcmFjdGVyLCB0eXBlKSB7XG4gICAgcmV0dXJuIHRleHRCbG9ja3MucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHRleHRMaW5lLCBpbmRleCkge1xuICAgICAgdGV4dExpbmUgPSBzYW5pdGl6ZURyYWZ0VGV4dCh0ZXh0TGluZSk7XG4gICAgICB2YXIga2V5ID0gZ2VuZXJhdGVSYW5kb21LZXkoKTtcbiAgICAgIHZhciBibG9ja05vZGVDb25maWcgPSB7XG4gICAgICAgIGtleToga2V5LFxuICAgICAgICB0eXBlOiB0eXBlLFxuICAgICAgICB0ZXh0OiB0ZXh0TGluZSxcbiAgICAgICAgY2hhcmFjdGVyTGlzdDogTGlzdChSZXBlYXQoY2hhcmFjdGVyLCB0ZXh0TGluZS5sZW5ndGgpKVxuICAgICAgfTsgLy8gbmV4dCBibG9jayB1cGRhdGVzIHByZXZpb3VzIGJsb2NrXG5cbiAgICAgIGlmIChleHBlcmltZW50YWxUcmVlRGF0YVN1cHBvcnQgJiYgaW5kZXggIT09IDApIHtcbiAgICAgICAgdmFyIHByZXZTaWJsaW5nSW5kZXggPSBpbmRleCAtIDE7IC8vIHVwZGF0ZSBwcmV2aW91cyBibG9ja1xuXG4gICAgICAgIHZhciBwcmV2aW91c0Jsb2NrID0gYWNjW3ByZXZTaWJsaW5nSW5kZXhdID0gYWNjW3ByZXZTaWJsaW5nSW5kZXhdLm1lcmdlKHtcbiAgICAgICAgICBuZXh0U2libGluZzoga2V5XG4gICAgICAgIH0pO1xuICAgICAgICBibG9ja05vZGVDb25maWcgPSBfb2JqZWN0U3ByZWFkKHt9LCBibG9ja05vZGVDb25maWcsIHtcbiAgICAgICAgICBwcmV2U2libGluZzogcHJldmlvdXNCbG9jay5nZXRLZXkoKVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgYWNjLnB1c2gobmV3IENvbnRlbnRCbG9ja1JlY29yZChibG9ja05vZGVDb25maWcpKTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgW10pO1xuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBEcmFmdFBhc3RlUHJvY2Vzc29yOyJdLCJuYW1lcyI6WyJfb2JqZWN0U3ByZWFkIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsIm93bktleXMiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiY29uY2F0IiwiZmlsdGVyIiwic3ltIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImZvckVhY2giLCJrZXkiLCJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJ2YWx1ZSIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJDb250ZW50QmxvY2siLCJyZXF1aXJlIiwiQ29udGVudEJsb2NrTm9kZSIsImNvbnZlcnRGcm9tSFRNTFRvQ29udGVudEJsb2NrcyIsImdlbmVyYXRlUmFuZG9tS2V5IiwiZ2V0U2FmZUJvZHlGcm9tSFRNTCIsImdreCIsIkltbXV0YWJsZSIsInNhbml0aXplRHJhZnRUZXh0IiwiTGlzdCIsIlJlcGVhdCIsImV4cGVyaW1lbnRhbFRyZWVEYXRhU3VwcG9ydCIsIkNvbnRlbnRCbG9ja1JlY29yZCIsIkRyYWZ0UGFzdGVQcm9jZXNzb3IiLCJwcm9jZXNzSFRNTCIsImh0bWwiLCJibG9ja1JlbmRlck1hcCIsInByb2Nlc3NUZXh0IiwidGV4dEJsb2NrcyIsImNoYXJhY3RlciIsInR5cGUiLCJyZWR1Y2UiLCJhY2MiLCJ0ZXh0TGluZSIsImluZGV4IiwiYmxvY2tOb2RlQ29uZmlnIiwidGV4dCIsImNoYXJhY3Rlckxpc3QiLCJwcmV2U2libGluZ0luZGV4IiwicHJldmlvdXNCbG9jayIsIm1lcmdlIiwibmV4dFNpYmxpbmciLCJwcmV2U2libGluZyIsImdldEtleSIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftPasteProcessor.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftRemovableWord.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftRemovableWord.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar TokenizeUtil = __webpack_require__(/*! fbjs/lib/TokenizeUtil */ \"(app-pages-browser)/./node_modules/fbjs/lib/TokenizeUtil.js\");\nvar punctuation = TokenizeUtil.getPunctuation(); // The apostrophe and curly single quotes behave in a curious way: when\n// surrounded on both sides by word characters, they behave as word chars; when\n// either neighbor is punctuation or an end of the string, they behave as\n// punctuation.\nvar CHAMELEON_CHARS = \"['‘’]\"; // Remove the underscore, which should count as part of the removable word. The\n// \"chameleon chars\" also count as punctuation in this regex.\nvar WHITESPACE_AND_PUNCTUATION = \"\\\\s|(?![_])\" + punctuation;\nvar DELETE_STRING = \"^\" + \"(?:\" + WHITESPACE_AND_PUNCTUATION + \")*\" + \"(?:\" + CHAMELEON_CHARS + \"|(?!\" + WHITESPACE_AND_PUNCTUATION + \").)*\" + \"(?:(?!\" + WHITESPACE_AND_PUNCTUATION + \").)\";\nvar DELETE_REGEX = new RegExp(DELETE_STRING);\nvar BACKSPACE_STRING = \"(?:(?!\" + WHITESPACE_AND_PUNCTUATION + \").)\" + \"(?:\" + CHAMELEON_CHARS + \"|(?!\" + WHITESPACE_AND_PUNCTUATION + \").)*\" + \"(?:\" + WHITESPACE_AND_PUNCTUATION + \")*\" + \"$\";\nvar BACKSPACE_REGEX = new RegExp(BACKSPACE_STRING);\nfunction getRemovableWord(text, isBackward) {\n    var matches = isBackward ? BACKSPACE_REGEX.exec(text) : DELETE_REGEX.exec(text);\n    return matches ? matches[0] : text;\n}\nvar DraftRemovableWord = {\n    getBackward: function getBackward(text) {\n        return getRemovableWord(text, true);\n    },\n    getForward: function getForward(text) {\n        return getRemovableWord(text, false);\n    }\n};\nmodule.exports = DraftRemovableWord;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRSZW1vdmFibGVXb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUMsMEZBQXVCO0FBRWxELElBQUlDLGNBQWNGLGFBQWFHLGNBQWMsSUFBSSx1RUFBdUU7QUFDeEgsK0VBQStFO0FBQy9FLHlFQUF5RTtBQUN6RSxlQUFlO0FBRWYsSUFBSUMsa0JBQWtCLFNBQW1CLCtFQUErRTtBQUN4SCw2REFBNkQ7QUFFN0QsSUFBSUMsNkJBQTZCLGdCQUFnQkg7QUFDakQsSUFBSUksZ0JBQWdCLE1BQU0sUUFBUUQsNkJBQTZCLE9BQU8sUUFBUUQsa0JBQWtCLFNBQVNDLDZCQUE2QixTQUFTLFdBQVdBLDZCQUE2QjtBQUN2TCxJQUFJRSxlQUFlLElBQUlDLE9BQU9GO0FBQzlCLElBQUlHLG1CQUFtQixXQUFXSiw2QkFBNkIsUUFBUSxRQUFRRCxrQkFBa0IsU0FBU0MsNkJBQTZCLFNBQVMsUUFBUUEsNkJBQTZCLE9BQU87QUFDNUwsSUFBSUssa0JBQWtCLElBQUlGLE9BQU9DO0FBRWpDLFNBQVNFLGlCQUFpQkMsSUFBSSxFQUFFQyxVQUFVO0lBQ3hDLElBQUlDLFVBQVVELGFBQWFILGdCQUFnQkssSUFBSSxDQUFDSCxRQUFRTCxhQUFhUSxJQUFJLENBQUNIO0lBQzFFLE9BQU9FLFVBQVVBLE9BQU8sQ0FBQyxFQUFFLEdBQUdGO0FBQ2hDO0FBRUEsSUFBSUkscUJBQXFCO0lBQ3ZCQyxhQUFhLFNBQVNBLFlBQVlMLElBQUk7UUFDcEMsT0FBT0QsaUJBQWlCQyxNQUFNO0lBQ2hDO0lBQ0FNLFlBQVksU0FBU0EsV0FBV04sSUFBSTtRQUNsQyxPQUFPRCxpQkFBaUJDLE1BQU07SUFDaEM7QUFDRjtBQUNBTyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRSZW1vdmFibGVXb3JkLmpzP2QyNjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIFRva2VuaXplVXRpbCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9Ub2tlbml6ZVV0aWxcIik7XG5cbnZhciBwdW5jdHVhdGlvbiA9IFRva2VuaXplVXRpbC5nZXRQdW5jdHVhdGlvbigpOyAvLyBUaGUgYXBvc3Ryb3BoZSBhbmQgY3VybHkgc2luZ2xlIHF1b3RlcyBiZWhhdmUgaW4gYSBjdXJpb3VzIHdheTogd2hlblxuLy8gc3Vycm91bmRlZCBvbiBib3RoIHNpZGVzIGJ5IHdvcmQgY2hhcmFjdGVycywgdGhleSBiZWhhdmUgYXMgd29yZCBjaGFyczsgd2hlblxuLy8gZWl0aGVyIG5laWdoYm9yIGlzIHB1bmN0dWF0aW9uIG9yIGFuIGVuZCBvZiB0aGUgc3RyaW5nLCB0aGV5IGJlaGF2ZSBhc1xuLy8gcHVuY3R1YXRpb24uXG5cbnZhciBDSEFNRUxFT05fQ0hBUlMgPSBcIlsnXFx1MjAxOFxcdTIwMTldXCI7IC8vIFJlbW92ZSB0aGUgdW5kZXJzY29yZSwgd2hpY2ggc2hvdWxkIGNvdW50IGFzIHBhcnQgb2YgdGhlIHJlbW92YWJsZSB3b3JkLiBUaGVcbi8vIFwiY2hhbWVsZW9uIGNoYXJzXCIgYWxzbyBjb3VudCBhcyBwdW5jdHVhdGlvbiBpbiB0aGlzIHJlZ2V4LlxuXG52YXIgV0hJVEVTUEFDRV9BTkRfUFVOQ1RVQVRJT04gPSAnXFxcXHN8KD8hW19dKScgKyBwdW5jdHVhdGlvbjtcbnZhciBERUxFVEVfU1RSSU5HID0gJ14nICsgJyg/OicgKyBXSElURVNQQUNFX0FORF9QVU5DVFVBVElPTiArICcpKicgKyAnKD86JyArIENIQU1FTEVPTl9DSEFSUyArICd8KD8hJyArIFdISVRFU1BBQ0VfQU5EX1BVTkNUVUFUSU9OICsgJykuKSonICsgJyg/Oig/IScgKyBXSElURVNQQUNFX0FORF9QVU5DVFVBVElPTiArICcpLiknO1xudmFyIERFTEVURV9SRUdFWCA9IG5ldyBSZWdFeHAoREVMRVRFX1NUUklORyk7XG52YXIgQkFDS1NQQUNFX1NUUklORyA9ICcoPzooPyEnICsgV0hJVEVTUEFDRV9BTkRfUFVOQ1RVQVRJT04gKyAnKS4pJyArICcoPzonICsgQ0hBTUVMRU9OX0NIQVJTICsgJ3woPyEnICsgV0hJVEVTUEFDRV9BTkRfUFVOQ1RVQVRJT04gKyAnKS4pKicgKyAnKD86JyArIFdISVRFU1BBQ0VfQU5EX1BVTkNUVUFUSU9OICsgJykqJyArICckJztcbnZhciBCQUNLU1BBQ0VfUkVHRVggPSBuZXcgUmVnRXhwKEJBQ0tTUEFDRV9TVFJJTkcpO1xuXG5mdW5jdGlvbiBnZXRSZW1vdmFibGVXb3JkKHRleHQsIGlzQmFja3dhcmQpIHtcbiAgdmFyIG1hdGNoZXMgPSBpc0JhY2t3YXJkID8gQkFDS1NQQUNFX1JFR0VYLmV4ZWModGV4dCkgOiBERUxFVEVfUkVHRVguZXhlYyh0ZXh0KTtcbiAgcmV0dXJuIG1hdGNoZXMgPyBtYXRjaGVzWzBdIDogdGV4dDtcbn1cblxudmFyIERyYWZ0UmVtb3ZhYmxlV29yZCA9IHtcbiAgZ2V0QmFja3dhcmQ6IGZ1bmN0aW9uIGdldEJhY2t3YXJkKHRleHQpIHtcbiAgICByZXR1cm4gZ2V0UmVtb3ZhYmxlV29yZCh0ZXh0LCB0cnVlKTtcbiAgfSxcbiAgZ2V0Rm9yd2FyZDogZnVuY3Rpb24gZ2V0Rm9yd2FyZCh0ZXh0KSB7XG4gICAgcmV0dXJuIGdldFJlbW92YWJsZVdvcmQodGV4dCwgZmFsc2UpO1xuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBEcmFmdFJlbW92YWJsZVdvcmQ7Il0sIm5hbWVzIjpbIlRva2VuaXplVXRpbCIsInJlcXVpcmUiLCJwdW5jdHVhdGlvbiIsImdldFB1bmN0dWF0aW9uIiwiQ0hBTUVMRU9OX0NIQVJTIiwiV0hJVEVTUEFDRV9BTkRfUFVOQ1RVQVRJT04iLCJERUxFVEVfU1RSSU5HIiwiREVMRVRFX1JFR0VYIiwiUmVnRXhwIiwiQkFDS1NQQUNFX1NUUklORyIsIkJBQ0tTUEFDRV9SRUdFWCIsImdldFJlbW92YWJsZVdvcmQiLCJ0ZXh0IiwiaXNCYWNrd2FyZCIsIm1hdGNoZXMiLCJleGVjIiwiRHJhZnRSZW1vdmFibGVXb3JkIiwiZ2V0QmFja3dhcmQiLCJnZXRGb3J3YXJkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftRemovableWord.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftStringKey.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftStringKey.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftStringKey = {\n    stringify: function stringify(key) {\n        return \"_\" + String(key);\n    },\n    unstringify: function unstringify(key) {\n        return key.slice(1);\n    }\n};\nmodule.exports = DraftStringKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRTdHJpbmdLZXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxpQkFBaUI7SUFDbkJDLFdBQVcsU0FBU0EsVUFBVUMsR0FBRztRQUMvQixPQUFPLE1BQU1DLE9BQU9EO0lBQ3RCO0lBQ0FFLGFBQWEsU0FBU0EsWUFBWUYsR0FBRztRQUNuQyxPQUFPQSxJQUFJRyxLQUFLLENBQUM7SUFDbkI7QUFDRjtBQUNBQyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRHJhZnRTdHJpbmdLZXkuanM/MGZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRHJhZnRTdHJpbmdLZXkgPSB7XG4gIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGtleSkge1xuICAgIHJldHVybiAnXycgKyBTdHJpbmcoa2V5KTtcbiAgfSxcbiAgdW5zdHJpbmdpZnk6IGZ1bmN0aW9uIHVuc3RyaW5naWZ5KGtleSkge1xuICAgIHJldHVybiBrZXkuc2xpY2UoMSk7XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IERyYWZ0U3RyaW5nS2V5OyJdLCJuYW1lcyI6WyJEcmFmdFN0cmluZ0tleSIsInN0cmluZ2lmeSIsImtleSIsIlN0cmluZyIsInVuc3RyaW5naWZ5Iiwic2xpY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftStringKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftTreeAdapter.js":
/*!*******************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftTreeAdapter.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ var generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar traverseInDepthOrder = function traverseInDepthOrder(blocks, fn) {\n    var stack = [].concat(blocks).reverse();\n    while(stack.length){\n        var _block = stack.pop();\n        fn(_block);\n        var children = _block.children;\n        !Array.isArray(children) ?  true ? invariant(false, \"Invalid tree raw block\") : 0 : void 0;\n        stack = stack.concat([].concat(children.reverse()));\n    }\n};\nvar isListBlock = function isListBlock(block) {\n    if (!(block && block.type)) {\n        return false;\n    }\n    var type = block.type;\n    return type === \"unordered-list-item\" || type === \"ordered-list-item\";\n};\nvar addDepthToChildren = function addDepthToChildren(block) {\n    if (Array.isArray(block.children)) {\n        block.children = block.children.map(function(child) {\n            return child.type === block.type ? _objectSpread({}, child, {\n                depth: (block.depth || 0) + 1\n            }) : child;\n        });\n    }\n};\n/**\n * This adapter is intended to be be used as an adapter to draft tree data\n *\n * draft state <=====> draft tree state\n */ var DraftTreeAdapter = {\n    /**\n   * Converts from a tree raw state back to draft raw state\n   */ fromRawTreeStateToRawState: function fromRawTreeStateToRawState(draftTreeState) {\n        var blocks = draftTreeState.blocks;\n        var transformedBlocks = [];\n        !Array.isArray(blocks) ?  true ? invariant(false, \"Invalid raw state\") : 0 : void 0;\n        if (!Array.isArray(blocks) || !blocks.length) {\n            return draftTreeState;\n        }\n        traverseInDepthOrder(blocks, function(block) {\n            var newBlock = _objectSpread({}, block);\n            if (isListBlock(block)) {\n                newBlock.depth = newBlock.depth || 0;\n                addDepthToChildren(block); // if it's a non-leaf node, we don't do anything else\n                if (block.children != null && block.children.length > 0) {\n                    return;\n                }\n            }\n            delete newBlock.children;\n            transformedBlocks.push(newBlock);\n        });\n        draftTreeState.blocks = transformedBlocks;\n        return _objectSpread({}, draftTreeState, {\n            blocks: transformedBlocks\n        });\n    },\n    /**\n   * Converts from draft raw state to tree draft state\n   */ fromRawStateToRawTreeState: function fromRawStateToRawTreeState(draftState) {\n        var transformedBlocks = [];\n        var parentStack = [];\n        draftState.blocks.forEach(function(block) {\n            var isList = isListBlock(block);\n            var depth = block.depth || 0;\n            var treeBlock = _objectSpread({}, block, {\n                children: []\n            });\n            if (!isList) {\n                transformedBlocks.push(treeBlock);\n                return;\n            }\n            var lastParent = parentStack[0]; // block is non-nested & there are no nested blocks, directly push block\n            if (lastParent == null && depth === 0) {\n                transformedBlocks.push(treeBlock); // block is first nested block or previous nested block is at a lower level\n            } else if (lastParent == null || lastParent.depth < depth - 1) {\n                // create new parent block\n                var newParent = {\n                    key: generateRandomKey(),\n                    text: \"\",\n                    depth: depth - 1,\n                    type: block.type,\n                    children: [],\n                    entityRanges: [],\n                    inlineStyleRanges: []\n                };\n                parentStack.unshift(newParent);\n                if (depth === 1) {\n                    // add as a root-level block\n                    transformedBlocks.push(newParent);\n                } else if (lastParent != null) {\n                    // depth > 1 => also add as previous parent's child\n                    lastParent.children.push(newParent);\n                }\n                newParent.children.push(treeBlock);\n            } else if (lastParent.depth === depth - 1) {\n                // add as child of last parent\n                lastParent.children.push(treeBlock);\n            } else {\n                // pop out parents at levels above this one from the parent stack\n                while(lastParent != null && lastParent.depth >= depth){\n                    parentStack.shift();\n                    lastParent = parentStack[0];\n                }\n                if (depth > 0) {\n                    lastParent.children.push(treeBlock);\n                } else {\n                    transformedBlocks.push(treeBlock);\n                }\n            }\n        });\n        return _objectSpread({}, draftState, {\n            blocks: transformedBlocks\n        });\n    }\n};\nmodule.exports = DraftTreeAdapter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftTreeAdapter.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/DraftTreeInvariants.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/DraftTreeInvariants.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ var warning = __webpack_require__(/*! fbjs/lib/warning */ \"(app-pages-browser)/./node_modules/fbjs/lib/warning.js\");\nvar DraftTreeInvariants = {\n    /**\n   * Check if the block is valid\n   */ isValidBlock: function isValidBlock(block, blockMap) {\n        var key = block.getKey(); // is its parent's child\n        var parentKey = block.getParentKey();\n        if (parentKey != null) {\n            var parent = blockMap.get(parentKey);\n            if (!parent.getChildKeys().includes(key)) {\n                 true ? warning(true, \"Tree is missing parent -> child pointer on %s\", key) : 0;\n                return false;\n            }\n        } // is its children's parent\n        var children = block.getChildKeys().map(function(k) {\n            return blockMap.get(k);\n        });\n        if (!children.every(function(c) {\n            return c.getParentKey() === key;\n        })) {\n             true ? warning(true, \"Tree is missing child -> parent pointer on %s\", key) : 0;\n            return false;\n        } // is its previous sibling's next sibling\n        var prevSiblingKey = block.getPrevSiblingKey();\n        if (prevSiblingKey != null) {\n            var prevSibling = blockMap.get(prevSiblingKey);\n            if (prevSibling.getNextSiblingKey() !== key) {\n                 true ? warning(true, \"Tree is missing nextSibling pointer on %s's prevSibling\", key) : 0;\n                return false;\n            }\n        } // is its next sibling's previous sibling\n        var nextSiblingKey = block.getNextSiblingKey();\n        if (nextSiblingKey != null) {\n            var nextSibling = blockMap.get(nextSiblingKey);\n            if (nextSibling.getPrevSiblingKey() !== key) {\n                 true ? warning(true, \"Tree is missing prevSibling pointer on %s's nextSibling\", key) : 0;\n                return false;\n            }\n        } // no 2-node cycles\n        if (nextSiblingKey !== null && prevSiblingKey !== null) {\n            if (prevSiblingKey === nextSiblingKey) {\n                 true ? warning(true, \"Tree has a two-node cycle at %s\", key) : 0;\n                return false;\n            }\n        } // if it's a leaf node, it has text but no children\n        if (block.text != \"\") {\n            if (block.getChildKeys().size > 0) {\n                 true ? warning(true, \"Leaf node %s has children\", key) : 0;\n                return false;\n            }\n        }\n        return true;\n    },\n    /**\n   * Checks that this is a connected tree on all the blocks\n   * starting from the first block, traversing nextSibling and child pointers\n   * should be a tree (preorder traversal - parent, then children)\n   * num of connected node === number of blocks\n   */ isConnectedTree: function isConnectedTree(blockMap) {\n        // exactly one node has no previous sibling + no parent\n        var eligibleFirstNodes = blockMap.toArray().filter(function(block) {\n            return block.getParentKey() == null && block.getPrevSiblingKey() == null;\n        });\n        if (eligibleFirstNodes.length !== 1) {\n             true ? warning(true, \"Tree is not connected. More or less than one first node\") : 0;\n            return false;\n        }\n        var firstNode = eligibleFirstNodes.shift();\n        var nodesSeen = 0;\n        var currentKey = firstNode.getKey();\n        var visitedStack = [];\n        while(currentKey != null){\n            var currentNode = blockMap.get(currentKey);\n            var childKeys = currentNode.getChildKeys();\n            var nextSiblingKey = currentNode.getNextSiblingKey(); // if the node has children, add parent's next sibling to stack and go to children\n            if (childKeys.size > 0) {\n                if (nextSiblingKey != null) {\n                    visitedStack.unshift(nextSiblingKey);\n                }\n                var children = childKeys.map(function(k) {\n                    return blockMap.get(k);\n                });\n                var _firstNode = children.find(function(block) {\n                    return block.getPrevSiblingKey() == null;\n                });\n                if (_firstNode == null) {\n                     true ? warning(true, \"%s has no first child\", currentKey) : 0;\n                    return false;\n                }\n                currentKey = _firstNode.getKey(); // TODO(T32490138): Deal with multi-node cycles here\n            } else {\n                if (currentNode.getNextSiblingKey() != null) {\n                    currentKey = currentNode.getNextSiblingKey();\n                } else {\n                    currentKey = visitedStack.shift();\n                }\n            }\n            nodesSeen++;\n        }\n        if (nodesSeen !== blockMap.size) {\n             true ? warning(true, \"Tree is not connected. %s nodes were seen instead of %s\", nodesSeen, blockMap.size) : 0;\n            return false;\n        }\n        return true;\n    },\n    /**\n   * Checks that the block map is a connected tree with valid blocks\n   */ isValidTree: function isValidTree(blockMap) {\n        var _this = this;\n        var blocks = blockMap.toArray();\n        if (!blocks.every(function(block) {\n            return _this.isValidBlock(block, blockMap);\n        })) {\n            return false;\n        }\n        return this.isConnectedTree(blockMap);\n    }\n};\nmodule.exports = DraftTreeInvariants;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/DraftTreeInvariants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/EditorBidiService.js":
/*!********************************************************!*\
  !*** ./node_modules/draft-js/lib/EditorBidiService.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UnicodeBidiService = __webpack_require__(/*! fbjs/lib/UnicodeBidiService */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiService.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar OrderedMap = Immutable.OrderedMap;\nvar bidiService;\nvar EditorBidiService = {\n    getDirectionMap: function getDirectionMap(content, prevBidiMap) {\n        if (!bidiService) {\n            bidiService = new UnicodeBidiService();\n        } else {\n            bidiService.reset();\n        }\n        var blockMap = content.getBlockMap();\n        var nextBidi = blockMap.valueSeq().map(function(block) {\n            return nullthrows(bidiService).getDirection(block.getText());\n        });\n        var bidiMap = OrderedMap(blockMap.keySeq().zip(nextBidi));\n        if (prevBidiMap != null && Immutable.is(prevBidiMap, bidiMap)) {\n            return prevBidiMap;\n        }\n        return bidiMap;\n    }\n};\nmodule.exports = EditorBidiService;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRWRpdG9yQmlkaVNlcnZpY2UuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxxQkFBcUJDLG1CQUFPQSxDQUFDLHNHQUE2QjtBQUU5RCxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQyx1R0FBVztBQUVuQyxJQUFJRSxhQUFhRixtQkFBT0EsQ0FBQyxzRkFBcUI7QUFFOUMsSUFBSUcsYUFBYUYsVUFBVUUsVUFBVTtBQUNyQyxJQUFJQztBQUNKLElBQUlDLG9CQUFvQjtJQUN0QkMsaUJBQWlCLFNBQVNBLGdCQUFnQkMsT0FBTyxFQUFFQyxXQUFXO1FBQzVELElBQUksQ0FBQ0osYUFBYTtZQUNoQkEsY0FBYyxJQUFJTDtRQUNwQixPQUFPO1lBQ0xLLFlBQVlLLEtBQUs7UUFDbkI7UUFFQSxJQUFJQyxXQUFXSCxRQUFRSSxXQUFXO1FBQ2xDLElBQUlDLFdBQVdGLFNBQVNHLFFBQVEsR0FBR0MsR0FBRyxDQUFDLFNBQVVDLEtBQUs7WUFDcEQsT0FBT2IsV0FBV0UsYUFBYVksWUFBWSxDQUFDRCxNQUFNRSxPQUFPO1FBQzNEO1FBQ0EsSUFBSUMsVUFBVWYsV0FBV08sU0FBU1MsTUFBTSxHQUFHQyxHQUFHLENBQUNSO1FBRS9DLElBQUlKLGVBQWUsUUFBUVAsVUFBVW9CLEVBQUUsQ0FBQ2IsYUFBYVUsVUFBVTtZQUM3RCxPQUFPVjtRQUNUO1FBRUEsT0FBT1U7SUFDVDtBQUNGO0FBQ0FJLE9BQU9DLE9BQU8sR0FBR2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvRWRpdG9yQmlkaVNlcnZpY2UuanM/ZWVlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVW5pY29kZUJpZGlTZXJ2aWNlID0gcmVxdWlyZShcImZianMvbGliL1VuaWNvZGVCaWRpU2VydmljZVwiKTtcblxudmFyIEltbXV0YWJsZSA9IHJlcXVpcmUoXCJpbW11dGFibGVcIik7XG5cbnZhciBudWxsdGhyb3dzID0gcmVxdWlyZShcImZianMvbGliL251bGx0aHJvd3NcIik7XG5cbnZhciBPcmRlcmVkTWFwID0gSW1tdXRhYmxlLk9yZGVyZWRNYXA7XG52YXIgYmlkaVNlcnZpY2U7XG52YXIgRWRpdG9yQmlkaVNlcnZpY2UgPSB7XG4gIGdldERpcmVjdGlvbk1hcDogZnVuY3Rpb24gZ2V0RGlyZWN0aW9uTWFwKGNvbnRlbnQsIHByZXZCaWRpTWFwKSB7XG4gICAgaWYgKCFiaWRpU2VydmljZSkge1xuICAgICAgYmlkaVNlcnZpY2UgPSBuZXcgVW5pY29kZUJpZGlTZXJ2aWNlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJpZGlTZXJ2aWNlLnJlc2V0KCk7XG4gICAgfVxuXG4gICAgdmFyIGJsb2NrTWFwID0gY29udGVudC5nZXRCbG9ja01hcCgpO1xuICAgIHZhciBuZXh0QmlkaSA9IGJsb2NrTWFwLnZhbHVlU2VxKCkubWFwKGZ1bmN0aW9uIChibG9jaykge1xuICAgICAgcmV0dXJuIG51bGx0aHJvd3MoYmlkaVNlcnZpY2UpLmdldERpcmVjdGlvbihibG9jay5nZXRUZXh0KCkpO1xuICAgIH0pO1xuICAgIHZhciBiaWRpTWFwID0gT3JkZXJlZE1hcChibG9ja01hcC5rZXlTZXEoKS56aXAobmV4dEJpZGkpKTtcblxuICAgIGlmIChwcmV2QmlkaU1hcCAhPSBudWxsICYmIEltbXV0YWJsZS5pcyhwcmV2QmlkaU1hcCwgYmlkaU1hcCkpIHtcbiAgICAgIHJldHVybiBwcmV2QmlkaU1hcDtcbiAgICB9XG5cbiAgICByZXR1cm4gYmlkaU1hcDtcbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gRWRpdG9yQmlkaVNlcnZpY2U7Il0sIm5hbWVzIjpbIlVuaWNvZGVCaWRpU2VydmljZSIsInJlcXVpcmUiLCJJbW11dGFibGUiLCJudWxsdGhyb3dzIiwiT3JkZXJlZE1hcCIsImJpZGlTZXJ2aWNlIiwiRWRpdG9yQmlkaVNlcnZpY2UiLCJnZXREaXJlY3Rpb25NYXAiLCJjb250ZW50IiwicHJldkJpZGlNYXAiLCJyZXNldCIsImJsb2NrTWFwIiwiZ2V0QmxvY2tNYXAiLCJuZXh0QmlkaSIsInZhbHVlU2VxIiwibWFwIiwiYmxvY2siLCJnZXREaXJlY3Rpb24iLCJnZXRUZXh0IiwiYmlkaU1hcCIsImtleVNlcSIsInppcCIsImlzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/EditorBidiService.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js":
/*!**************************************************!*\
  !*** ./node_modules/draft-js/lib/EditorState.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar BlockTree = __webpack_require__(/*! ./BlockTree */ \"(app-pages-browser)/./node_modules/draft-js/lib/BlockTree.js\");\nvar ContentState = __webpack_require__(/*! ./ContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentState.js\");\nvar EditorBidiService = __webpack_require__(/*! ./EditorBidiService */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorBidiService.js\");\nvar SelectionState = __webpack_require__(/*! ./SelectionState */ \"(app-pages-browser)/./node_modules/draft-js/lib/SelectionState.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar OrderedSet = Immutable.OrderedSet, Record = Immutable.Record, Stack = Immutable.Stack, OrderedMap = Immutable.OrderedMap, List = Immutable.List; // When configuring an editor, the user can chose to provide or not provide\n// basically all keys. `currentContent` varies, so this type doesn't include it.\n// (See the types defined below.)\nvar defaultRecord = {\n    allowUndo: true,\n    currentContent: null,\n    decorator: null,\n    directionMap: null,\n    forceSelection: false,\n    inCompositionMode: false,\n    inlineStyleOverride: null,\n    lastChangeType: null,\n    nativelyRenderedContent: null,\n    redoStack: Stack(),\n    selection: null,\n    treeMap: null,\n    undoStack: Stack()\n};\nvar EditorStateRecord = Record(defaultRecord);\nvar EditorState = /*#__PURE__*/ function() {\n    EditorState.createEmpty = function createEmpty(decorator) {\n        return this.createWithText(\"\", decorator);\n    };\n    EditorState.createWithText = function createWithText(text, decorator) {\n        return EditorState.createWithContent(ContentState.createFromText(text), decorator);\n    };\n    EditorState.createWithContent = function createWithContent(contentState, decorator) {\n        if (contentState.getBlockMap().count() === 0) {\n            return EditorState.createEmpty(decorator);\n        }\n        var firstKey = contentState.getBlockMap().first().getKey();\n        return EditorState.create({\n            currentContent: contentState,\n            undoStack: Stack(),\n            redoStack: Stack(),\n            decorator: decorator || null,\n            selection: SelectionState.createEmpty(firstKey)\n        });\n    };\n    EditorState.create = function create(config) {\n        var currentContent = config.currentContent, decorator = config.decorator;\n        var recordConfig = _objectSpread({}, config, {\n            treeMap: generateNewTreeMap(currentContent, decorator),\n            directionMap: EditorBidiService.getDirectionMap(currentContent)\n        });\n        return new EditorState(new EditorStateRecord(recordConfig));\n    };\n    EditorState.fromJS = function fromJS(config) {\n        return new EditorState(new EditorStateRecord(_objectSpread({}, config, {\n            directionMap: config.directionMap != null ? OrderedMap(config.directionMap) : config.directionMap,\n            inlineStyleOverride: config.inlineStyleOverride != null ? OrderedSet(config.inlineStyleOverride) : config.inlineStyleOverride,\n            nativelyRenderedContent: config.nativelyRenderedContent != null ? ContentState.fromJS(config.nativelyRenderedContent) : config.nativelyRenderedContent,\n            redoStack: config.redoStack != null ? Stack(config.redoStack.map(function(v) {\n                return ContentState.fromJS(v);\n            })) : config.redoStack,\n            selection: config.selection != null ? new SelectionState(config.selection) : config.selection,\n            treeMap: config.treeMap != null ? OrderedMap(config.treeMap).map(function(v) {\n                return List(v).map(function(v) {\n                    return BlockTree.fromJS(v);\n                });\n            }) : config.treeMap,\n            undoStack: config.undoStack != null ? Stack(config.undoStack.map(function(v) {\n                return ContentState.fromJS(v);\n            })) : config.undoStack,\n            currentContent: ContentState.fromJS(config.currentContent)\n        })));\n    };\n    EditorState.set = function set(editorState, put) {\n        var map = editorState.getImmutable().withMutations(function(state) {\n            var existingDecorator = state.get(\"decorator\");\n            var decorator = existingDecorator;\n            if (put.decorator === null) {\n                decorator = null;\n            } else if (put.decorator) {\n                decorator = put.decorator;\n            }\n            var newContent = put.currentContent || editorState.getCurrentContent();\n            if (decorator !== existingDecorator) {\n                var treeMap = state.get(\"treeMap\");\n                var newTreeMap;\n                if (decorator && existingDecorator) {\n                    newTreeMap = regenerateTreeForNewDecorator(newContent, newContent.getBlockMap(), treeMap, decorator, existingDecorator);\n                } else {\n                    newTreeMap = generateNewTreeMap(newContent, decorator);\n                }\n                state.merge({\n                    decorator: decorator,\n                    treeMap: newTreeMap,\n                    nativelyRenderedContent: null\n                });\n                return;\n            }\n            var existingContent = editorState.getCurrentContent();\n            if (newContent !== existingContent) {\n                state.set(\"treeMap\", regenerateTreeForNewBlocks(editorState, newContent.getBlockMap(), newContent.getEntityMap(), decorator));\n            }\n            state.merge(put);\n        });\n        return new EditorState(map);\n    };\n    var _proto = EditorState.prototype;\n    _proto.toJS = function toJS() {\n        return this.getImmutable().toJS();\n    };\n    _proto.getAllowUndo = function getAllowUndo() {\n        return this.getImmutable().get(\"allowUndo\");\n    };\n    _proto.getCurrentContent = function getCurrentContent() {\n        return this.getImmutable().get(\"currentContent\");\n    };\n    _proto.getUndoStack = function getUndoStack() {\n        return this.getImmutable().get(\"undoStack\");\n    };\n    _proto.getRedoStack = function getRedoStack() {\n        return this.getImmutable().get(\"redoStack\");\n    };\n    _proto.getSelection = function getSelection() {\n        return this.getImmutable().get(\"selection\");\n    };\n    _proto.getDecorator = function getDecorator() {\n        return this.getImmutable().get(\"decorator\");\n    };\n    _proto.isInCompositionMode = function isInCompositionMode() {\n        return this.getImmutable().get(\"inCompositionMode\");\n    };\n    _proto.mustForceSelection = function mustForceSelection() {\n        return this.getImmutable().get(\"forceSelection\");\n    };\n    _proto.getNativelyRenderedContent = function getNativelyRenderedContent() {\n        return this.getImmutable().get(\"nativelyRenderedContent\");\n    };\n    _proto.getLastChangeType = function getLastChangeType() {\n        return this.getImmutable().get(\"lastChangeType\");\n    } /**\n   * While editing, the user may apply inline style commands with a collapsed\n   * cursor, intending to type text that adopts the specified style. In this\n   * case, we track the specified style as an \"override\" that takes precedence\n   * over the inline style of the text adjacent to the cursor.\n   *\n   * If null, there is no override in place.\n   */ ;\n    _proto.getInlineStyleOverride = function getInlineStyleOverride() {\n        return this.getImmutable().get(\"inlineStyleOverride\");\n    };\n    EditorState.setInlineStyleOverride = function setInlineStyleOverride(editorState, inlineStyleOverride) {\n        return EditorState.set(editorState, {\n            inlineStyleOverride: inlineStyleOverride\n        });\n    } /**\n   * Get the appropriate inline style for the editor state. If an\n   * override is in place, use it. Otherwise, the current style is\n   * based on the location of the selection state.\n   */ ;\n    _proto.getCurrentInlineStyle = function getCurrentInlineStyle() {\n        var override = this.getInlineStyleOverride();\n        if (override != null) {\n            return override;\n        }\n        var content = this.getCurrentContent();\n        var selection = this.getSelection();\n        if (selection.isCollapsed()) {\n            return getInlineStyleForCollapsedSelection(content, selection);\n        }\n        return getInlineStyleForNonCollapsedSelection(content, selection);\n    };\n    _proto.getBlockTree = function getBlockTree(blockKey) {\n        return this.getImmutable().getIn([\n            \"treeMap\",\n            blockKey\n        ]);\n    };\n    _proto.isSelectionAtStartOfContent = function isSelectionAtStartOfContent() {\n        var firstKey = this.getCurrentContent().getBlockMap().first().getKey();\n        return this.getSelection().hasEdgeWithin(firstKey, 0, 0);\n    };\n    _proto.isSelectionAtEndOfContent = function isSelectionAtEndOfContent() {\n        var content = this.getCurrentContent();\n        var blockMap = content.getBlockMap();\n        var last = blockMap.last();\n        var end = last.getLength();\n        return this.getSelection().hasEdgeWithin(last.getKey(), end, end);\n    };\n    _proto.getDirectionMap = function getDirectionMap() {\n        return this.getImmutable().get(\"directionMap\");\n    } /**\n   * Incorporate native DOM selection changes into the EditorState. This\n   * method can be used when we simply want to accept whatever the DOM\n   * has given us to represent selection, and we do not need to re-render\n   * the editor.\n   *\n   * To forcibly move the DOM selection, see `EditorState.forceSelection`.\n   */ ;\n    EditorState.acceptSelection = function acceptSelection(editorState, selection) {\n        return updateSelection(editorState, selection, false);\n    } /**\n   * At times, we need to force the DOM selection to be where we\n   * need it to be. This can occur when the anchor or focus nodes\n   * are non-text nodes, for instance. In this case, we want to trigger\n   * a re-render of the editor, which in turn forces selection into\n   * the correct place in the DOM. The `forceSelection` method\n   * accomplishes this.\n   *\n   * This method should be used in cases where you need to explicitly\n   * move the DOM selection from one place to another without a change\n   * in ContentState.\n   */ ;\n    EditorState.forceSelection = function forceSelection(editorState, selection) {\n        if (!selection.getHasFocus()) {\n            selection = selection.set(\"hasFocus\", true);\n        }\n        return updateSelection(editorState, selection, true);\n    } /**\n   * Move selection to the end of the editor without forcing focus.\n   */ ;\n    EditorState.moveSelectionToEnd = function moveSelectionToEnd(editorState) {\n        var content = editorState.getCurrentContent();\n        var lastBlock = content.getLastBlock();\n        var lastKey = lastBlock.getKey();\n        var length = lastBlock.getLength();\n        return EditorState.acceptSelection(editorState, new SelectionState({\n            anchorKey: lastKey,\n            anchorOffset: length,\n            focusKey: lastKey,\n            focusOffset: length,\n            isBackward: false\n        }));\n    } /**\n   * Force focus to the end of the editor. This is useful in scenarios\n   * where we want to programmatically focus the input and it makes sense\n   * to allow the user to continue working seamlessly.\n   */ ;\n    EditorState.moveFocusToEnd = function moveFocusToEnd(editorState) {\n        var afterSelectionMove = EditorState.moveSelectionToEnd(editorState);\n        return EditorState.forceSelection(afterSelectionMove, afterSelectionMove.getSelection());\n    } /**\n   * Push the current ContentState onto the undo stack if it should be\n   * considered a boundary state, and set the provided ContentState as the\n   * new current content.\n   */ ;\n    EditorState.push = function push(editorState, contentState, changeType) {\n        var forceSelection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        if (editorState.getCurrentContent() === contentState) {\n            return editorState;\n        }\n        var directionMap = EditorBidiService.getDirectionMap(contentState, editorState.getDirectionMap());\n        if (!editorState.getAllowUndo()) {\n            return EditorState.set(editorState, {\n                currentContent: contentState,\n                directionMap: directionMap,\n                lastChangeType: changeType,\n                selection: contentState.getSelectionAfter(),\n                forceSelection: forceSelection,\n                inlineStyleOverride: null\n            });\n        }\n        var selection = editorState.getSelection();\n        var currentContent = editorState.getCurrentContent();\n        var undoStack = editorState.getUndoStack();\n        var newContent = contentState;\n        if (selection !== currentContent.getSelectionAfter() || mustBecomeBoundary(editorState, changeType)) {\n            undoStack = undoStack.push(currentContent);\n            newContent = newContent.set(\"selectionBefore\", selection);\n        } else if (changeType === \"insert-characters\" || changeType === \"backspace-character\" || changeType === \"delete-character\") {\n            // Preserve the previous selection.\n            newContent = newContent.set(\"selectionBefore\", currentContent.getSelectionBefore());\n        }\n        var inlineStyleOverride = editorState.getInlineStyleOverride(); // Don't discard inline style overrides for the following change types:\n        var overrideChangeTypes = [\n            \"adjust-depth\",\n            \"change-block-type\",\n            \"split-block\"\n        ];\n        if (overrideChangeTypes.indexOf(changeType) === -1) {\n            inlineStyleOverride = null;\n        }\n        var editorStateChanges = {\n            currentContent: newContent,\n            directionMap: directionMap,\n            undoStack: undoStack,\n            redoStack: Stack(),\n            lastChangeType: changeType,\n            selection: contentState.getSelectionAfter(),\n            forceSelection: forceSelection,\n            inlineStyleOverride: inlineStyleOverride\n        };\n        return EditorState.set(editorState, editorStateChanges);\n    } /**\n   * Make the top ContentState in the undo stack the new current content and\n   * push the current content onto the redo stack.\n   */ ;\n    EditorState.undo = function undo(editorState) {\n        if (!editorState.getAllowUndo()) {\n            return editorState;\n        }\n        var undoStack = editorState.getUndoStack();\n        var newCurrentContent = undoStack.peek();\n        if (!newCurrentContent) {\n            return editorState;\n        }\n        var currentContent = editorState.getCurrentContent();\n        var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\n        return EditorState.set(editorState, {\n            currentContent: newCurrentContent,\n            directionMap: directionMap,\n            undoStack: undoStack.shift(),\n            redoStack: editorState.getRedoStack().push(currentContent),\n            forceSelection: true,\n            inlineStyleOverride: null,\n            lastChangeType: \"undo\",\n            nativelyRenderedContent: null,\n            selection: currentContent.getSelectionBefore()\n        });\n    } /**\n   * Make the top ContentState in the redo stack the new current content and\n   * push the current content onto the undo stack.\n   */ ;\n    EditorState.redo = function redo(editorState) {\n        if (!editorState.getAllowUndo()) {\n            return editorState;\n        }\n        var redoStack = editorState.getRedoStack();\n        var newCurrentContent = redoStack.peek();\n        if (!newCurrentContent) {\n            return editorState;\n        }\n        var currentContent = editorState.getCurrentContent();\n        var directionMap = EditorBidiService.getDirectionMap(newCurrentContent, editorState.getDirectionMap());\n        return EditorState.set(editorState, {\n            currentContent: newCurrentContent,\n            directionMap: directionMap,\n            undoStack: editorState.getUndoStack().push(currentContent),\n            redoStack: redoStack.shift(),\n            forceSelection: true,\n            inlineStyleOverride: null,\n            lastChangeType: \"redo\",\n            nativelyRenderedContent: null,\n            selection: newCurrentContent.getSelectionAfter()\n        });\n    } /**\n   * Not for public consumption.\n   */ ;\n    function EditorState(immutable) {\n        _defineProperty(this, \"_immutable\", void 0);\n        this._immutable = immutable;\n    }\n    /**\n   * Not for public consumption.\n   */ _proto.getImmutable = function getImmutable() {\n        return this._immutable;\n    };\n    return EditorState;\n}();\n/**\n * Set the supplied SelectionState as the new current selection, and set\n * the `force` flag to trigger manual selection placement by the view.\n */ function updateSelection(editorState, selection, forceSelection) {\n    return EditorState.set(editorState, {\n        selection: selection,\n        forceSelection: forceSelection,\n        nativelyRenderedContent: null,\n        inlineStyleOverride: null\n    });\n}\n/**\n * Regenerate the entire tree map for a given ContentState and decorator.\n * Returns an OrderedMap that maps all available ContentBlock objects.\n */ function generateNewTreeMap(contentState, decorator) {\n    return contentState.getBlockMap().map(function(block) {\n        return BlockTree.generate(contentState, block, decorator);\n    }).toOrderedMap();\n}\n/**\n * Regenerate tree map objects for all ContentBlocks that have changed\n * between the current editorState and newContent. Returns an OrderedMap\n * with only changed regenerated tree map objects.\n */ function regenerateTreeForNewBlocks(editorState, newBlockMap, newEntityMap, decorator) {\n    var contentState = editorState.getCurrentContent().set(\"entityMap\", newEntityMap);\n    var prevBlockMap = contentState.getBlockMap();\n    var prevTreeMap = editorState.getImmutable().get(\"treeMap\");\n    return prevTreeMap.merge(newBlockMap.toSeq().filter(function(block, key) {\n        return block !== prevBlockMap.get(key);\n    }).map(function(block) {\n        return BlockTree.generate(contentState, block, decorator);\n    }));\n}\n/**\n * Generate tree map objects for a new decorator object, preserving any\n * decorations that are unchanged from the previous decorator.\n *\n * Note that in order for this to perform optimally, decoration Lists for\n * decorators should be preserved when possible to allow for direct immutable\n * List comparison.\n */ function regenerateTreeForNewDecorator(content, blockMap, previousTreeMap, decorator, existingDecorator) {\n    return previousTreeMap.merge(blockMap.toSeq().filter(function(block) {\n        return decorator.getDecorations(block, content) !== existingDecorator.getDecorations(block, content);\n    }).map(function(block) {\n        return BlockTree.generate(content, block, decorator);\n    }));\n}\n/**\n * Return whether a change should be considered a boundary state, given\n * the previous change type. Allows us to discard potential boundary states\n * during standard typing or deletion behavior.\n */ function mustBecomeBoundary(editorState, changeType) {\n    var lastChangeType = editorState.getLastChangeType();\n    return changeType !== lastChangeType || changeType !== \"insert-characters\" && changeType !== \"backspace-character\" && changeType !== \"delete-character\";\n}\nfunction getInlineStyleForCollapsedSelection(content, selection) {\n    var startKey = selection.getStartKey();\n    var startOffset = selection.getStartOffset();\n    var startBlock = content.getBlockForKey(startKey); // If the cursor is not at the start of the block, look backward to\n    // preserve the style of the preceding character.\n    if (startOffset > 0) {\n        return startBlock.getInlineStyleAt(startOffset - 1);\n    } // The caret is at position zero in this block. If the block has any\n    // text at all, use the style of the first character.\n    if (startBlock.getLength()) {\n        return startBlock.getInlineStyleAt(0);\n    } // Otherwise, look upward in the document to find the closest character.\n    return lookUpwardForInlineStyle(content, startKey);\n}\nfunction getInlineStyleForNonCollapsedSelection(content, selection) {\n    var startKey = selection.getStartKey();\n    var startOffset = selection.getStartOffset();\n    var startBlock = content.getBlockForKey(startKey); // If there is a character just inside the selection, use its style.\n    if (startOffset < startBlock.getLength()) {\n        return startBlock.getInlineStyleAt(startOffset);\n    } // Check if the selection at the end of a non-empty block. Use the last\n    // style in the block.\n    if (startOffset > 0) {\n        return startBlock.getInlineStyleAt(startOffset - 1);\n    } // Otherwise, look upward in the document to find the closest character.\n    return lookUpwardForInlineStyle(content, startKey);\n}\nfunction lookUpwardForInlineStyle(content, fromKey) {\n    var lastNonEmpty = content.getBlockMap().reverse().skipUntil(function(_, k) {\n        return k === fromKey;\n    }).skip(1).skipUntil(function(block, _) {\n        return block.getLength();\n    }).first();\n    if (lastNonEmpty) {\n        return lastNonEmpty.getInlineStyleAt(lastNonEmpty.getLength() - 1);\n    }\n    return OrderedSet();\n}\nmodule.exports = EditorState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/KeyBindingUtil.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/KeyBindingUtil.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar isSoftNewlineEvent = __webpack_require__(/*! ./isSoftNewlineEvent */ \"(app-pages-browser)/./node_modules/draft-js/lib/isSoftNewlineEvent.js\");\nvar isOSX = UserAgent.isPlatform(\"Mac OS X\");\nvar KeyBindingUtil = {\n    /**\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\n   * the altKey modifier. If they are combined, the result is an `altGraph`\n   * key modifier, which should not be handled by this set of key bindings.\n   */ isCtrlKeyCommand: function isCtrlKeyCommand(e) {\n        return !!e.ctrlKey && !e.altKey;\n    },\n    isOptionKeyCommand: function isOptionKeyCommand(e) {\n        return isOSX && e.altKey;\n    },\n    usesMacOSHeuristics: function usesMacOSHeuristics() {\n        return isOSX;\n    },\n    hasCommandModifier: function hasCommandModifier(e) {\n        return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\n    },\n    isSoftNewlineEvent: isSoftNewlineEvent\n};\nmodule.exports = KeyBindingUtil;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvS2V5QmluZGluZ1V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyxvRkFBb0I7QUFFNUMsSUFBSUMscUJBQXFCRCxtQkFBT0EsQ0FBQyxtR0FBc0I7QUFFdkQsSUFBSUUsUUFBUUgsVUFBVUksVUFBVSxDQUFDO0FBQ2pDLElBQUlDLGlCQUFpQjtJQUNuQjs7OztHQUlDLEdBQ0RDLGtCQUFrQixTQUFTQSxpQkFBaUJDLENBQUM7UUFDM0MsT0FBTyxDQUFDLENBQUNBLEVBQUVDLE9BQU8sSUFBSSxDQUFDRCxFQUFFRSxNQUFNO0lBQ2pDO0lBQ0FDLG9CQUFvQixTQUFTQSxtQkFBbUJILENBQUM7UUFDL0MsT0FBT0osU0FBU0ksRUFBRUUsTUFBTTtJQUMxQjtJQUNBRSxxQkFBcUIsU0FBU0E7UUFDNUIsT0FBT1I7SUFDVDtJQUNBUyxvQkFBb0IsU0FBU0EsbUJBQW1CTCxDQUFDO1FBQy9DLE9BQU9KLFFBQVEsQ0FBQyxDQUFDSSxFQUFFTSxPQUFPLElBQUksQ0FBQ04sRUFBRUUsTUFBTSxHQUFHSixlQUFlQyxnQkFBZ0IsQ0FBQ0M7SUFDNUU7SUFDQUwsb0JBQW9CQTtBQUN0QjtBQUNBWSxPQUFPQyxPQUFPLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvS2V5QmluZGluZ1V0aWwuanM/YmZkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVXNlckFnZW50ID0gcmVxdWlyZShcImZianMvbGliL1VzZXJBZ2VudFwiKTtcblxudmFyIGlzU29mdE5ld2xpbmVFdmVudCA9IHJlcXVpcmUoXCIuL2lzU29mdE5ld2xpbmVFdmVudFwiKTtcblxudmFyIGlzT1NYID0gVXNlckFnZW50LmlzUGxhdGZvcm0oJ01hYyBPUyBYJyk7XG52YXIgS2V5QmluZGluZ1V0aWwgPSB7XG4gIC8qKlxuICAgKiBDaGVjayB3aGV0aGVyIHRoZSBjdHJsS2V5IG1vZGlmaWVyIGlzICpub3QqIGJlaW5nIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aFxuICAgKiB0aGUgYWx0S2V5IG1vZGlmaWVyLiBJZiB0aGV5IGFyZSBjb21iaW5lZCwgdGhlIHJlc3VsdCBpcyBhbiBgYWx0R3JhcGhgXG4gICAqIGtleSBtb2RpZmllciwgd2hpY2ggc2hvdWxkIG5vdCBiZSBoYW5kbGVkIGJ5IHRoaXMgc2V0IG9mIGtleSBiaW5kaW5ncy5cbiAgICovXG4gIGlzQ3RybEtleUNvbW1hbmQ6IGZ1bmN0aW9uIGlzQ3RybEtleUNvbW1hbmQoZSkge1xuICAgIHJldHVybiAhIWUuY3RybEtleSAmJiAhZS5hbHRLZXk7XG4gIH0sXG4gIGlzT3B0aW9uS2V5Q29tbWFuZDogZnVuY3Rpb24gaXNPcHRpb25LZXlDb21tYW5kKGUpIHtcbiAgICByZXR1cm4gaXNPU1ggJiYgZS5hbHRLZXk7XG4gIH0sXG4gIHVzZXNNYWNPU0hldXJpc3RpY3M6IGZ1bmN0aW9uIHVzZXNNYWNPU0hldXJpc3RpY3MoKSB7XG4gICAgcmV0dXJuIGlzT1NYO1xuICB9LFxuICBoYXNDb21tYW5kTW9kaWZpZXI6IGZ1bmN0aW9uIGhhc0NvbW1hbmRNb2RpZmllcihlKSB7XG4gICAgcmV0dXJuIGlzT1NYID8gISFlLm1ldGFLZXkgJiYgIWUuYWx0S2V5IDogS2V5QmluZGluZ1V0aWwuaXNDdHJsS2V5Q29tbWFuZChlKTtcbiAgfSxcbiAgaXNTb2Z0TmV3bGluZUV2ZW50OiBpc1NvZnROZXdsaW5lRXZlbnRcbn07XG5tb2R1bGUuZXhwb3J0cyA9IEtleUJpbmRpbmdVdGlsOyJdLCJuYW1lcyI6WyJVc2VyQWdlbnQiLCJyZXF1aXJlIiwiaXNTb2Z0TmV3bGluZUV2ZW50IiwiaXNPU1giLCJpc1BsYXRmb3JtIiwiS2V5QmluZGluZ1V0aWwiLCJpc0N0cmxLZXlDb21tYW5kIiwiZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJpc09wdGlvbktleUNvbW1hbmQiLCJ1c2VzTWFjT1NIZXVyaXN0aWNzIiwiaGFzQ29tbWFuZE1vZGlmaWVyIiwibWV0YUtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/KeyBindingUtil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/RawDraftContentState.js":
/*!***********************************************************!*\
  !*** ./node_modules/draft-js/lib/RawDraftContentState.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvUmF3RHJhZnRDb250ZW50U3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9SYXdEcmFmdENvbnRlbnRTdGF0ZS5qcz8wMmJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/RawDraftContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/RichTextEditorUtil.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/RichTextEditorUtil.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar adjustBlockDepthForContentState = __webpack_require__(/*! ./adjustBlockDepthForContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/adjustBlockDepthForContentState.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar RichTextEditorUtil = {\n    currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n        var selection = editorState.getSelection();\n        var contentState = editorState.getCurrentContent();\n        var entityMap = contentState.getEntityMap();\n        return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function(v) {\n            var entity = v.getEntity();\n            return !!entity && entityMap.__get(entity).getType() === \"LINK\";\n        });\n    },\n    getCurrentBlockType: function getCurrentBlockType(editorState) {\n        var selection = editorState.getSelection();\n        return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n    },\n    getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n        return {\n            url: uri.toString()\n        };\n    },\n    handleKeyCommand: function handleKeyCommand(editorState, command, eventTimeStamp) {\n        switch(command){\n            case \"bold\":\n                return RichTextEditorUtil.toggleInlineStyle(editorState, \"BOLD\");\n            case \"italic\":\n                return RichTextEditorUtil.toggleInlineStyle(editorState, \"ITALIC\");\n            case \"underline\":\n                return RichTextEditorUtil.toggleInlineStyle(editorState, \"UNDERLINE\");\n            case \"code\":\n                return RichTextEditorUtil.toggleCode(editorState);\n            case \"backspace\":\n            case \"backspace-word\":\n            case \"backspace-to-start-of-line\":\n                return RichTextEditorUtil.onBackspace(editorState);\n            case \"delete\":\n            case \"delete-word\":\n            case \"delete-to-end-of-block\":\n                return RichTextEditorUtil.onDelete(editorState);\n            default:\n                // they may have custom editor commands; ignore those\n                return null;\n        }\n    },\n    insertSoftNewline: function insertSoftNewline(editorState) {\n        var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), \"\\n\", editorState.getCurrentInlineStyle(), null);\n        var newEditorState = EditorState.push(editorState, contentState, \"insert-characters\");\n        return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n    },\n    /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */ onBackspace: function onBackspace(editorState) {\n        var selection = editorState.getSelection();\n        if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n            return null;\n        } // First, try to remove a preceding atomic block.\n        var content = editorState.getCurrentContent();\n        var startKey = selection.getStartKey();\n        var blockBefore = content.getBlockBefore(startKey);\n        if (blockBefore && blockBefore.getType() === \"atomic\") {\n            var blockMap = content.getBlockMap()[\"delete\"](blockBefore.getKey());\n            var withoutAtomicBlock = content.merge({\n                blockMap: blockMap,\n                selectionAfter: selection\n            });\n            if (withoutAtomicBlock !== content) {\n                return EditorState.push(editorState, withoutAtomicBlock, \"remove-range\");\n            }\n        } // If that doesn't succeed, try to remove the current block style.\n        var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n        if (withoutBlockStyle) {\n            return EditorState.push(editorState, withoutBlockStyle, \"change-block-type\");\n        }\n        return null;\n    },\n    onDelete: function onDelete(editorState) {\n        var selection = editorState.getSelection();\n        if (!selection.isCollapsed()) {\n            return null;\n        }\n        var content = editorState.getCurrentContent();\n        var startKey = selection.getStartKey();\n        var block = content.getBlockForKey(startKey);\n        var length = block.getLength(); // The cursor is somewhere within the text. Behave normally.\n        if (selection.getStartOffset() < length) {\n            return null;\n        }\n        var blockAfter = content.getBlockAfter(startKey);\n        if (!blockAfter || blockAfter.getType() !== \"atomic\") {\n            return null;\n        }\n        var atomicBlockTarget = selection.merge({\n            focusKey: blockAfter.getKey(),\n            focusOffset: blockAfter.getLength()\n        });\n        var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, \"forward\");\n        if (withoutAtomicBlock !== content) {\n            return EditorState.push(editorState, withoutAtomicBlock, \"remove-range\");\n        }\n        return null;\n    },\n    onTab: function onTab(event, editorState, maxDepth) {\n        var selection = editorState.getSelection();\n        var key = selection.getAnchorKey();\n        if (key !== selection.getFocusKey()) {\n            return editorState;\n        }\n        var content = editorState.getCurrentContent();\n        var block = content.getBlockForKey(key);\n        var type = block.getType();\n        if (type !== \"unordered-list-item\" && type !== \"ordered-list-item\") {\n            return editorState;\n        }\n        event.preventDefault();\n        var depth = block.getDepth();\n        if (!event.shiftKey && depth === maxDepth) {\n            return editorState;\n        }\n        var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n        return EditorState.push(editorState, withAdjustment, \"adjust-depth\");\n    },\n    toggleBlockType: function toggleBlockType(editorState, blockType) {\n        var selection = editorState.getSelection();\n        var startKey = selection.getStartKey();\n        var endKey = selection.getEndKey();\n        var content = editorState.getCurrentContent();\n        var target = selection; // Triple-click can lead to a selection that includes offset 0 of the\n        // following block. The `SelectionState` for this case is accurate, but\n        // we should avoid toggling block type for the trailing block because it\n        // is a confusing interaction.\n        if (startKey !== endKey && selection.getEndOffset() === 0) {\n            var blockBefore = nullthrows(content.getBlockBefore(endKey));\n            endKey = blockBefore.getKey();\n            target = target.merge({\n                anchorKey: startKey,\n                anchorOffset: selection.getStartOffset(),\n                focusKey: endKey,\n                focusOffset: blockBefore.getLength(),\n                isBackward: false\n            });\n        }\n        var hasAtomicBlock = content.getBlockMap().skipWhile(function(_, k) {\n            return k !== startKey;\n        }).reverse().skipWhile(function(_, k) {\n            return k !== endKey;\n        }).some(function(v) {\n            return v.getType() === \"atomic\";\n        });\n        if (hasAtomicBlock) {\n            return editorState;\n        }\n        var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? \"unstyled\" : blockType;\n        return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), \"change-block-type\");\n    },\n    toggleCode: function toggleCode(editorState) {\n        var selection = editorState.getSelection();\n        var anchorKey = selection.getAnchorKey();\n        var focusKey = selection.getFocusKey();\n        if (selection.isCollapsed() || anchorKey !== focusKey) {\n            return RichTextEditorUtil.toggleBlockType(editorState, \"code-block\");\n        }\n        return RichTextEditorUtil.toggleInlineStyle(editorState, \"CODE\");\n    },\n    /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */ toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n        var selection = editorState.getSelection();\n        var currentStyle = editorState.getCurrentInlineStyle(); // If the selection is collapsed, toggle the specified style on or off and\n        // set the result as the new inline style override. This will then be\n        // used as the inline style for the next character to be inserted.\n        if (selection.isCollapsed()) {\n            return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n        } // If characters are selected, immediately apply or remove the\n        // inline style on the document state itself.\n        var content = editorState.getCurrentContent();\n        var newContent; // If the style is already present for the selection range, remove it.\n        // Otherwise, apply it.\n        if (currentStyle.has(inlineStyle)) {\n            newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n        } else {\n            newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n        }\n        return EditorState.push(editorState, newContent, \"change-inline-style\");\n    },\n    toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n        var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n        return EditorState.push(editorState, withoutLink, \"apply-entity\");\n    },\n    /**\n   * When a collapsed cursor is at the start of a styled block, changes block\n   * type to 'unstyled'. Returns null if selection does not meet that criteria.\n   */ tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n        var selection = editorState.getSelection();\n        var offset = selection.getAnchorOffset();\n        if (selection.isCollapsed() && offset === 0) {\n            var key = selection.getAnchorKey();\n            var content = editorState.getCurrentContent();\n            var block = content.getBlockForKey(key);\n            var type = block.getType();\n            var blockBefore = content.getBlockBefore(key);\n            if (type === \"code-block\" && blockBefore && blockBefore.getType() === \"code-block\" && blockBefore.getLength() !== 0) {\n                return null;\n            }\n            if (type !== \"unstyled\") {\n                return DraftModifier.setBlockType(content, selection, \"unstyled\");\n            }\n        }\n        return null;\n    }\n};\nmodule.exports = RichTextEditorUtil;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/RichTextEditorUtil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/SecondaryClipboard.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/SecondaryClipboard.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar getContentStateFragment = __webpack_require__(/*! ./getContentStateFragment */ \"(app-pages-browser)/./node_modules/draft-js/lib/getContentStateFragment.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar clipboard = null;\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */ var SecondaryClipboard = {\n    cut: function cut(editorState) {\n        var content = editorState.getCurrentContent();\n        var selection = editorState.getSelection();\n        var targetRange = null;\n        if (selection.isCollapsed()) {\n            var anchorKey = selection.getAnchorKey();\n            var blockEnd = content.getBlockForKey(anchorKey).getLength();\n            if (blockEnd === selection.getAnchorOffset()) {\n                var keyAfter = content.getKeyAfter(anchorKey);\n                if (keyAfter == null) {\n                    return editorState;\n                }\n                targetRange = selection.set(\"focusKey\", keyAfter).set(\"focusOffset\", 0);\n            } else {\n                targetRange = selection.set(\"focusOffset\", blockEnd);\n            }\n        } else {\n            targetRange = selection;\n        }\n        targetRange = nullthrows(targetRange); // TODO: This should actually append to the current state when doing\n        // successive ^K commands without any other cursor movement\n        clipboard = getContentStateFragment(content, targetRange);\n        var afterRemoval = DraftModifier.removeRange(content, targetRange, \"forward\");\n        if (afterRemoval === content) {\n            return editorState;\n        }\n        return EditorState.push(editorState, afterRemoval, \"remove-range\");\n    },\n    paste: function paste(editorState) {\n        if (!clipboard) {\n            return editorState;\n        }\n        var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n        return EditorState.push(editorState, newContent, \"insert-fragment\");\n    }\n};\nmodule.exports = SecondaryClipboard;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvU2Vjb25kYXJ5Q2xpcGJvYXJkLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyx5RkFBaUI7QUFFN0MsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUMscUZBQWU7QUFFekMsSUFBSUUsMEJBQTBCRixtQkFBT0EsQ0FBQyw2R0FBMkI7QUFFakUsSUFBSUcsYUFBYUgsbUJBQU9BLENBQUMsc0ZBQXFCO0FBRTlDLElBQUlJLFlBQVk7QUFDaEI7OztDQUdDLEdBRUQsSUFBSUMscUJBQXFCO0lBQ3ZCQyxLQUFLLFNBQVNBLElBQUlDLFdBQVc7UUFDM0IsSUFBSUMsVUFBVUQsWUFBWUUsaUJBQWlCO1FBQzNDLElBQUlDLFlBQVlILFlBQVlJLFlBQVk7UUFDeEMsSUFBSUMsY0FBYztRQUVsQixJQUFJRixVQUFVRyxXQUFXLElBQUk7WUFDM0IsSUFBSUMsWUFBWUosVUFBVUssWUFBWTtZQUN0QyxJQUFJQyxXQUFXUixRQUFRUyxjQUFjLENBQUNILFdBQVdJLFNBQVM7WUFFMUQsSUFBSUYsYUFBYU4sVUFBVVMsZUFBZSxJQUFJO2dCQUM1QyxJQUFJQyxXQUFXWixRQUFRYSxXQUFXLENBQUNQO2dCQUVuQyxJQUFJTSxZQUFZLE1BQU07b0JBQ3BCLE9BQU9iO2dCQUNUO2dCQUVBSyxjQUFjRixVQUFVWSxHQUFHLENBQUMsWUFBWUYsVUFBVUUsR0FBRyxDQUFDLGVBQWU7WUFDdkUsT0FBTztnQkFDTFYsY0FBY0YsVUFBVVksR0FBRyxDQUFDLGVBQWVOO1lBQzdDO1FBQ0YsT0FBTztZQUNMSixjQUFjRjtRQUNoQjtRQUVBRSxjQUFjVCxXQUFXUyxjQUFjLG9FQUFvRTtRQUMzRywyREFBMkQ7UUFFM0RSLFlBQVlGLHdCQUF3Qk0sU0FBU0k7UUFDN0MsSUFBSVcsZUFBZXhCLGNBQWN5QixXQUFXLENBQUNoQixTQUFTSSxhQUFhO1FBRW5FLElBQUlXLGlCQUFpQmYsU0FBUztZQUM1QixPQUFPRDtRQUNUO1FBRUEsT0FBT04sWUFBWXdCLElBQUksQ0FBQ2xCLGFBQWFnQixjQUFjO0lBQ3JEO0lBQ0FHLE9BQU8sU0FBU0EsTUFBTW5CLFdBQVc7UUFDL0IsSUFBSSxDQUFDSCxXQUFXO1lBQ2QsT0FBT0c7UUFDVDtRQUVBLElBQUlvQixhQUFhNUIsY0FBYzZCLG1CQUFtQixDQUFDckIsWUFBWUUsaUJBQWlCLElBQUlGLFlBQVlJLFlBQVksSUFBSVA7UUFDaEgsT0FBT0gsWUFBWXdCLElBQUksQ0FBQ2xCLGFBQWFvQixZQUFZO0lBQ25EO0FBQ0Y7QUFDQUUsT0FBT0MsT0FBTyxHQUFHekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9TZWNvbmRhcnlDbGlwYm9hcmQuanM/OTM0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRHJhZnRNb2RpZmllciA9IHJlcXVpcmUoXCIuL0RyYWZ0TW9kaWZpZXJcIik7XG5cbnZhciBFZGl0b3JTdGF0ZSA9IHJlcXVpcmUoXCIuL0VkaXRvclN0YXRlXCIpO1xuXG52YXIgZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQgPSByZXF1aXJlKFwiLi9nZXRDb250ZW50U3RhdGVGcmFnbWVudFwiKTtcblxudmFyIG51bGx0aHJvd3MgPSByZXF1aXJlKFwiZmJqcy9saWIvbnVsbHRocm93c1wiKTtcblxudmFyIGNsaXBib2FyZCA9IG51bGw7XG4vKipcbiAqIFNvbWUgc3lzdGVtcyBvZmZlciBhIFwic2Vjb25kYXJ5XCIgY2xpcGJvYXJkIHRvIGFsbG93IHF1aWNrIGludGVybmFsIGN1dFxuICogYW5kIHBhc3RlIGJlaGF2aW9yLiBGb3IgaW5zdGFuY2UsIEN0cmwrSyAoY3V0KSBhbmQgQ3RybCtZIChwYXN0ZSkuXG4gKi9cblxudmFyIFNlY29uZGFyeUNsaXBib2FyZCA9IHtcbiAgY3V0OiBmdW5jdGlvbiBjdXQoZWRpdG9yU3RhdGUpIHtcbiAgICB2YXIgY29udGVudCA9IGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCk7XG4gICAgdmFyIHNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpO1xuICAgIHZhciB0YXJnZXRSYW5nZSA9IG51bGw7XG5cbiAgICBpZiAoc2VsZWN0aW9uLmlzQ29sbGFwc2VkKCkpIHtcbiAgICAgIHZhciBhbmNob3JLZXkgPSBzZWxlY3Rpb24uZ2V0QW5jaG9yS2V5KCk7XG4gICAgICB2YXIgYmxvY2tFbmQgPSBjb250ZW50LmdldEJsb2NrRm9yS2V5KGFuY2hvcktleSkuZ2V0TGVuZ3RoKCk7XG5cbiAgICAgIGlmIChibG9ja0VuZCA9PT0gc2VsZWN0aW9uLmdldEFuY2hvck9mZnNldCgpKSB7XG4gICAgICAgIHZhciBrZXlBZnRlciA9IGNvbnRlbnQuZ2V0S2V5QWZ0ZXIoYW5jaG9yS2V5KTtcblxuICAgICAgICBpZiAoa2V5QWZ0ZXIgPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybiBlZGl0b3JTdGF0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRhcmdldFJhbmdlID0gc2VsZWN0aW9uLnNldCgnZm9jdXNLZXknLCBrZXlBZnRlcikuc2V0KCdmb2N1c09mZnNldCcsIDApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0UmFuZ2UgPSBzZWxlY3Rpb24uc2V0KCdmb2N1c09mZnNldCcsIGJsb2NrRW5kKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGFyZ2V0UmFuZ2UgPSBzZWxlY3Rpb247XG4gICAgfVxuXG4gICAgdGFyZ2V0UmFuZ2UgPSBudWxsdGhyb3dzKHRhcmdldFJhbmdlKTsgLy8gVE9ETzogVGhpcyBzaG91bGQgYWN0dWFsbHkgYXBwZW5kIHRvIHRoZSBjdXJyZW50IHN0YXRlIHdoZW4gZG9pbmdcbiAgICAvLyBzdWNjZXNzaXZlIF5LIGNvbW1hbmRzIHdpdGhvdXQgYW55IG90aGVyIGN1cnNvciBtb3ZlbWVudFxuXG4gICAgY2xpcGJvYXJkID0gZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQoY29udGVudCwgdGFyZ2V0UmFuZ2UpO1xuICAgIHZhciBhZnRlclJlbW92YWwgPSBEcmFmdE1vZGlmaWVyLnJlbW92ZVJhbmdlKGNvbnRlbnQsIHRhcmdldFJhbmdlLCAnZm9yd2FyZCcpO1xuXG4gICAgaWYgKGFmdGVyUmVtb3ZhbCA9PT0gY29udGVudCkge1xuICAgICAgcmV0dXJuIGVkaXRvclN0YXRlO1xuICAgIH1cblxuICAgIHJldHVybiBFZGl0b3JTdGF0ZS5wdXNoKGVkaXRvclN0YXRlLCBhZnRlclJlbW92YWwsICdyZW1vdmUtcmFuZ2UnKTtcbiAgfSxcbiAgcGFzdGU6IGZ1bmN0aW9uIHBhc3RlKGVkaXRvclN0YXRlKSB7XG4gICAgaWYgKCFjbGlwYm9hcmQpIHtcbiAgICAgIHJldHVybiBlZGl0b3JTdGF0ZTtcbiAgICB9XG5cbiAgICB2YXIgbmV3Q29udGVudCA9IERyYWZ0TW9kaWZpZXIucmVwbGFjZVdpdGhGcmFnbWVudChlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpLCBlZGl0b3JTdGF0ZS5nZXRTZWxlY3Rpb24oKSwgY2xpcGJvYXJkKTtcbiAgICByZXR1cm4gRWRpdG9yU3RhdGUucHVzaChlZGl0b3JTdGF0ZSwgbmV3Q29udGVudCwgJ2luc2VydC1mcmFnbWVudCcpO1xuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBTZWNvbmRhcnlDbGlwYm9hcmQ7Il0sIm5hbWVzIjpbIkRyYWZ0TW9kaWZpZXIiLCJyZXF1aXJlIiwiRWRpdG9yU3RhdGUiLCJnZXRDb250ZW50U3RhdGVGcmFnbWVudCIsIm51bGx0aHJvd3MiLCJjbGlwYm9hcmQiLCJTZWNvbmRhcnlDbGlwYm9hcmQiLCJjdXQiLCJlZGl0b3JTdGF0ZSIsImNvbnRlbnQiLCJnZXRDdXJyZW50Q29udGVudCIsInNlbGVjdGlvbiIsImdldFNlbGVjdGlvbiIsInRhcmdldFJhbmdlIiwiaXNDb2xsYXBzZWQiLCJhbmNob3JLZXkiLCJnZXRBbmNob3JLZXkiLCJibG9ja0VuZCIsImdldEJsb2NrRm9yS2V5IiwiZ2V0TGVuZ3RoIiwiZ2V0QW5jaG9yT2Zmc2V0Iiwia2V5QWZ0ZXIiLCJnZXRLZXlBZnRlciIsInNldCIsImFmdGVyUmVtb3ZhbCIsInJlbW92ZVJhbmdlIiwicHVzaCIsInBhc3RlIiwibmV3Q29udGVudCIsInJlcGxhY2VXaXRoRnJhZ21lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/SecondaryClipboard.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/SelectionState.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/SelectionState.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n}\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar Record = Immutable.Record;\nvar defaultRecord = {\n    anchorKey: \"\",\n    anchorOffset: 0,\n    focusKey: \"\",\n    focusOffset: 0,\n    isBackward: false,\n    hasFocus: false\n};\n/* $FlowFixMe[unclear-type] This comment suppresses an error found when\n * automatically adding a type annotation with the codemod Komodo/Annotate_\n * exports. To see the error delete this comment and run Flow. */ var SelectionStateRecord = Record(defaultRecord);\nvar SelectionState = /*#__PURE__*/ function(_SelectionStateRecord) {\n    _inheritsLoose(SelectionState, _SelectionStateRecord);\n    function SelectionState() {\n        return _SelectionStateRecord.apply(this, arguments) || this;\n    }\n    var _proto = SelectionState.prototype;\n    _proto.serialize = function serialize() {\n        return \"Anchor: \" + this.getAnchorKey() + \":\" + this.getAnchorOffset() + \", \" + \"Focus: \" + this.getFocusKey() + \":\" + this.getFocusOffset() + \", \" + \"Is Backward: \" + String(this.getIsBackward()) + \", \" + \"Has Focus: \" + String(this.getHasFocus());\n    };\n    _proto.getAnchorKey = function getAnchorKey() {\n        return this.get(\"anchorKey\");\n    };\n    _proto.getAnchorOffset = function getAnchorOffset() {\n        return this.get(\"anchorOffset\");\n    };\n    _proto.getFocusKey = function getFocusKey() {\n        return this.get(\"focusKey\");\n    };\n    _proto.getFocusOffset = function getFocusOffset() {\n        return this.get(\"focusOffset\");\n    };\n    _proto.getIsBackward = function getIsBackward() {\n        return this.get(\"isBackward\");\n    };\n    _proto.getHasFocus = function getHasFocus() {\n        return this.get(\"hasFocus\");\n    } /**\n   * Return whether the specified range overlaps with an edge of the\n   * SelectionState.\n   */ ;\n    _proto.hasEdgeWithin = function hasEdgeWithin(blockKey, start, end) {\n        var anchorKey = this.getAnchorKey();\n        var focusKey = this.getFocusKey();\n        if (anchorKey === focusKey && anchorKey === blockKey) {\n            var selectionStart = this.getStartOffset();\n            var selectionEnd = this.getEndOffset();\n            return start <= selectionStart && selectionStart <= end || // selectionStart is between start and end, or\n            start <= selectionEnd && selectionEnd <= end // selectionEnd is between start and end\n            ;\n        }\n        if (blockKey !== anchorKey && blockKey !== focusKey) {\n            return false;\n        }\n        var offsetToCheck = blockKey === anchorKey ? this.getAnchorOffset() : this.getFocusOffset();\n        return start <= offsetToCheck && end >= offsetToCheck;\n    };\n    _proto.isCollapsed = function isCollapsed() {\n        return this.getAnchorKey() === this.getFocusKey() && this.getAnchorOffset() === this.getFocusOffset();\n    };\n    _proto.getStartKey = function getStartKey() {\n        return this.getIsBackward() ? this.getFocusKey() : this.getAnchorKey();\n    };\n    _proto.getStartOffset = function getStartOffset() {\n        return this.getIsBackward() ? this.getFocusOffset() : this.getAnchorOffset();\n    };\n    _proto.getEndKey = function getEndKey() {\n        return this.getIsBackward() ? this.getAnchorKey() : this.getFocusKey();\n    };\n    _proto.getEndOffset = function getEndOffset() {\n        return this.getIsBackward() ? this.getAnchorOffset() : this.getFocusOffset();\n    };\n    SelectionState.createEmpty = function createEmpty(key) {\n        return new SelectionState({\n            anchorKey: key,\n            anchorOffset: 0,\n            focusKey: key,\n            focusOffset: 0,\n            isBackward: false,\n            hasFocus: false\n        });\n    };\n    return SelectionState;\n}(SelectionStateRecord);\nmodule.exports = SelectionState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/SelectionState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/adjustBlockDepthForContentState.js":
/*!**********************************************************************!*\
  !*** ./node_modules/draft-js/lib/adjustBlockDepthForContentState.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction adjustBlockDepthForContentState(contentState, selectionState, adjustment, maxDepth) {\n    var startKey = selectionState.getStartKey();\n    var endKey = selectionState.getEndKey();\n    var blockMap = contentState.getBlockMap();\n    var blocks = blockMap.toSeq().skipUntil(function(_, k) {\n        return k === startKey;\n    }).takeUntil(function(_, k) {\n        return k === endKey;\n    }).concat([\n        [\n            endKey,\n            blockMap.get(endKey)\n        ]\n    ]).map(function(block) {\n        var depth = block.getDepth() + adjustment;\n        depth = Math.max(0, Math.min(depth, maxDepth));\n        return block.set(\"depth\", depth);\n    });\n    blockMap = blockMap.merge(blocks);\n    return contentState.merge({\n        blockMap: blockMap,\n        selectionBefore: selectionState,\n        selectionAfter: selectionState\n    });\n}\nmodule.exports = adjustBlockDepthForContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvYWRqdXN0QmxvY2tEZXB0aEZvckNvbnRlbnRTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLFNBQVNBLGdDQUFnQ0MsWUFBWSxFQUFFQyxjQUFjLEVBQUVDLFVBQVUsRUFBRUMsUUFBUTtJQUN6RixJQUFJQyxXQUFXSCxlQUFlSSxXQUFXO0lBQ3pDLElBQUlDLFNBQVNMLGVBQWVNLFNBQVM7SUFDckMsSUFBSUMsV0FBV1IsYUFBYVMsV0FBVztJQUN2QyxJQUFJQyxTQUFTRixTQUFTRyxLQUFLLEdBQUdDLFNBQVMsQ0FBQyxTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDcEQsT0FBT0EsTUFBTVY7SUFDZixHQUFHVyxTQUFTLENBQUMsU0FBVUYsQ0FBQyxFQUFFQyxDQUFDO1FBQ3pCLE9BQU9BLE1BQU1SO0lBQ2YsR0FBR1UsTUFBTSxDQUFDO1FBQUM7WUFBQ1Y7WUFBUUUsU0FBU1MsR0FBRyxDQUFDWDtTQUFRO0tBQUMsRUFBRVksR0FBRyxDQUFDLFNBQVVDLEtBQUs7UUFDN0QsSUFBSUMsUUFBUUQsTUFBTUUsUUFBUSxLQUFLbkI7UUFDL0JrQixRQUFRRSxLQUFLQyxHQUFHLENBQUMsR0FBR0QsS0FBS0UsR0FBRyxDQUFDSixPQUFPakI7UUFDcEMsT0FBT2dCLE1BQU1NLEdBQUcsQ0FBQyxTQUFTTDtJQUM1QjtJQUNBWixXQUFXQSxTQUFTa0IsS0FBSyxDQUFDaEI7SUFDMUIsT0FBT1YsYUFBYTBCLEtBQUssQ0FBQztRQUN4QmxCLFVBQVVBO1FBQ1ZtQixpQkFBaUIxQjtRQUNqQjJCLGdCQUFnQjNCO0lBQ2xCO0FBQ0Y7QUFFQTRCLE9BQU9DLE9BQU8sR0FBRy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvYWRqdXN0QmxvY2tEZXB0aEZvckNvbnRlbnRTdGF0ZS5qcz80ZDRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGFkanVzdEJsb2NrRGVwdGhGb3JDb250ZW50U3RhdGUoY29udGVudFN0YXRlLCBzZWxlY3Rpb25TdGF0ZSwgYWRqdXN0bWVudCwgbWF4RGVwdGgpIHtcbiAgdmFyIHN0YXJ0S2V5ID0gc2VsZWN0aW9uU3RhdGUuZ2V0U3RhcnRLZXkoKTtcbiAgdmFyIGVuZEtleSA9IHNlbGVjdGlvblN0YXRlLmdldEVuZEtleSgpO1xuICB2YXIgYmxvY2tNYXAgPSBjb250ZW50U3RhdGUuZ2V0QmxvY2tNYXAoKTtcbiAgdmFyIGJsb2NrcyA9IGJsb2NrTWFwLnRvU2VxKCkuc2tpcFVudGlsKGZ1bmN0aW9uIChfLCBrKSB7XG4gICAgcmV0dXJuIGsgPT09IHN0YXJ0S2V5O1xuICB9KS50YWtlVW50aWwoZnVuY3Rpb24gKF8sIGspIHtcbiAgICByZXR1cm4gayA9PT0gZW5kS2V5O1xuICB9KS5jb25jYXQoW1tlbmRLZXksIGJsb2NrTWFwLmdldChlbmRLZXkpXV0pLm1hcChmdW5jdGlvbiAoYmxvY2spIHtcbiAgICB2YXIgZGVwdGggPSBibG9jay5nZXREZXB0aCgpICsgYWRqdXN0bWVudDtcbiAgICBkZXB0aCA9IE1hdGgubWF4KDAsIE1hdGgubWluKGRlcHRoLCBtYXhEZXB0aCkpO1xuICAgIHJldHVybiBibG9jay5zZXQoJ2RlcHRoJywgZGVwdGgpO1xuICB9KTtcbiAgYmxvY2tNYXAgPSBibG9ja01hcC5tZXJnZShibG9ja3MpO1xuICByZXR1cm4gY29udGVudFN0YXRlLm1lcmdlKHtcbiAgICBibG9ja01hcDogYmxvY2tNYXAsXG4gICAgc2VsZWN0aW9uQmVmb3JlOiBzZWxlY3Rpb25TdGF0ZSxcbiAgICBzZWxlY3Rpb25BZnRlcjogc2VsZWN0aW9uU3RhdGVcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYWRqdXN0QmxvY2tEZXB0aEZvckNvbnRlbnRTdGF0ZTsiXSwibmFtZXMiOlsiYWRqdXN0QmxvY2tEZXB0aEZvckNvbnRlbnRTdGF0ZSIsImNvbnRlbnRTdGF0ZSIsInNlbGVjdGlvblN0YXRlIiwiYWRqdXN0bWVudCIsIm1heERlcHRoIiwic3RhcnRLZXkiLCJnZXRTdGFydEtleSIsImVuZEtleSIsImdldEVuZEtleSIsImJsb2NrTWFwIiwiZ2V0QmxvY2tNYXAiLCJibG9ja3MiLCJ0b1NlcSIsInNraXBVbnRpbCIsIl8iLCJrIiwidGFrZVVudGlsIiwiY29uY2F0IiwiZ2V0IiwibWFwIiwiYmxvY2siLCJkZXB0aCIsImdldERlcHRoIiwiTWF0aCIsIm1heCIsIm1pbiIsInNldCIsIm1lcmdlIiwic2VsZWN0aW9uQmVmb3JlIiwic2VsZWN0aW9uQWZ0ZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/adjustBlockDepthForContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/applyEntityToContentBlock.js":
/*!****************************************************************!*\
  !*** ./node_modules/draft-js/lib/applyEntityToContentBlock.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nfunction applyEntityToContentBlock(contentBlock, startArg, end, entityKey) {\n    var start = startArg;\n    var characterList = contentBlock.getCharacterList();\n    while(start < end){\n        characterList = characterList.set(start, CharacterMetadata.applyEntity(characterList.get(start), entityKey));\n        start++;\n    }\n    return contentBlock.set(\"characterList\", characterList);\n}\nmodule.exports = applyEntityToContentBlock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvYXBwbHlFbnRpdHlUb0NvbnRlbnRCbG9jay5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLG9CQUFvQkMsbUJBQU9BLENBQUMsaUdBQXFCO0FBRXJELFNBQVNDLDBCQUEwQkMsWUFBWSxFQUFFQyxRQUFRLEVBQUVDLEdBQUcsRUFBRUMsU0FBUztJQUN2RSxJQUFJQyxRQUFRSDtJQUNaLElBQUlJLGdCQUFnQkwsYUFBYU0sZ0JBQWdCO0lBRWpELE1BQU9GLFFBQVFGLElBQUs7UUFDbEJHLGdCQUFnQkEsY0FBY0UsR0FBRyxDQUFDSCxPQUFPUCxrQkFBa0JXLFdBQVcsQ0FBQ0gsY0FBY0ksR0FBRyxDQUFDTCxRQUFRRDtRQUNqR0M7SUFDRjtJQUVBLE9BQU9KLGFBQWFPLEdBQUcsQ0FBQyxpQkFBaUJGO0FBQzNDO0FBRUFLLE9BQU9DLE9BQU8sR0FBR1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9hcHBseUVudGl0eVRvQ29udGVudEJsb2NrLmpzPzFlZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIENoYXJhY3Rlck1ldGFkYXRhID0gcmVxdWlyZShcIi4vQ2hhcmFjdGVyTWV0YWRhdGFcIik7XG5cbmZ1bmN0aW9uIGFwcGx5RW50aXR5VG9Db250ZW50QmxvY2soY29udGVudEJsb2NrLCBzdGFydEFyZywgZW5kLCBlbnRpdHlLZXkpIHtcbiAgdmFyIHN0YXJ0ID0gc3RhcnRBcmc7XG4gIHZhciBjaGFyYWN0ZXJMaXN0ID0gY29udGVudEJsb2NrLmdldENoYXJhY3Rlckxpc3QoKTtcblxuICB3aGlsZSAoc3RhcnQgPCBlbmQpIHtcbiAgICBjaGFyYWN0ZXJMaXN0ID0gY2hhcmFjdGVyTGlzdC5zZXQoc3RhcnQsIENoYXJhY3Rlck1ldGFkYXRhLmFwcGx5RW50aXR5KGNoYXJhY3Rlckxpc3QuZ2V0KHN0YXJ0KSwgZW50aXR5S2V5KSk7XG4gICAgc3RhcnQrKztcbiAgfVxuXG4gIHJldHVybiBjb250ZW50QmxvY2suc2V0KCdjaGFyYWN0ZXJMaXN0JywgY2hhcmFjdGVyTGlzdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwbHlFbnRpdHlUb0NvbnRlbnRCbG9jazsiXSwibmFtZXMiOlsiQ2hhcmFjdGVyTWV0YWRhdGEiLCJyZXF1aXJlIiwiYXBwbHlFbnRpdHlUb0NvbnRlbnRCbG9jayIsImNvbnRlbnRCbG9jayIsInN0YXJ0QXJnIiwiZW5kIiwiZW50aXR5S2V5Iiwic3RhcnQiLCJjaGFyYWN0ZXJMaXN0IiwiZ2V0Q2hhcmFjdGVyTGlzdCIsInNldCIsImFwcGx5RW50aXR5IiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/applyEntityToContentBlock.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/applyEntityToContentState.js":
/*!****************************************************************!*\
  !*** ./node_modules/draft-js/lib/applyEntityToContentState.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar applyEntityToContentBlock = __webpack_require__(/*! ./applyEntityToContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/applyEntityToContentBlock.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nfunction applyEntityToContentState(contentState, selectionState, entityKey) {\n    var blockMap = contentState.getBlockMap();\n    var startKey = selectionState.getStartKey();\n    var startOffset = selectionState.getStartOffset();\n    var endKey = selectionState.getEndKey();\n    var endOffset = selectionState.getEndOffset();\n    var newBlocks = blockMap.skipUntil(function(_, k) {\n        return k === startKey;\n    }).takeUntil(function(_, k) {\n        return k === endKey;\n    }).toOrderedMap().merge(Immutable.OrderedMap([\n        [\n            endKey,\n            blockMap.get(endKey)\n        ]\n    ])).map(function(block, blockKey) {\n        var sliceStart = blockKey === startKey ? startOffset : 0;\n        var sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n        return applyEntityToContentBlock(block, sliceStart, sliceEnd, entityKey);\n    });\n    return contentState.merge({\n        blockMap: blockMap.merge(newBlocks),\n        selectionBefore: selectionState,\n        selectionAfter: selectionState\n    });\n}\nmodule.exports = applyEntityToContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvYXBwbHlFbnRpdHlUb0NvbnRlbnRTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLDRCQUE0QkMsbUJBQU9BLENBQUMsaUhBQTZCO0FBRXJFLElBQUlDLFlBQVlELG1CQUFPQSxDQUFDLHVHQUFXO0FBRW5DLFNBQVNFLDBCQUEwQkMsWUFBWSxFQUFFQyxjQUFjLEVBQUVDLFNBQVM7SUFDeEUsSUFBSUMsV0FBV0gsYUFBYUksV0FBVztJQUN2QyxJQUFJQyxXQUFXSixlQUFlSyxXQUFXO0lBQ3pDLElBQUlDLGNBQWNOLGVBQWVPLGNBQWM7SUFDL0MsSUFBSUMsU0FBU1IsZUFBZVMsU0FBUztJQUNyQyxJQUFJQyxZQUFZVixlQUFlVyxZQUFZO0lBQzNDLElBQUlDLFlBQVlWLFNBQVNXLFNBQVMsQ0FBQyxTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDL0MsT0FBT0EsTUFBTVg7SUFDZixHQUFHWSxTQUFTLENBQUMsU0FBVUYsQ0FBQyxFQUFFQyxDQUFDO1FBQ3pCLE9BQU9BLE1BQU1QO0lBQ2YsR0FBR1MsWUFBWSxHQUFHQyxLQUFLLENBQUNyQixVQUFVc0IsVUFBVSxDQUFDO1FBQUM7WUFBQ1g7WUFBUU4sU0FBU2tCLEdBQUcsQ0FBQ1o7U0FBUTtLQUFDLEdBQUdhLEdBQUcsQ0FBQyxTQUFVQyxLQUFLLEVBQUVDLFFBQVE7UUFDM0csSUFBSUMsYUFBYUQsYUFBYW5CLFdBQVdFLGNBQWM7UUFDdkQsSUFBSW1CLFdBQVdGLGFBQWFmLFNBQVNFLFlBQVlZLE1BQU1JLFNBQVM7UUFDaEUsT0FBTy9CLDBCQUEwQjJCLE9BQU9FLFlBQVlDLFVBQVV4QjtJQUNoRTtJQUNBLE9BQU9GLGFBQWFtQixLQUFLLENBQUM7UUFDeEJoQixVQUFVQSxTQUFTZ0IsS0FBSyxDQUFDTjtRQUN6QmUsaUJBQWlCM0I7UUFDakI0QixnQkFBZ0I1QjtJQUNsQjtBQUNGO0FBRUE2QixPQUFPQyxPQUFPLEdBQUdoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2FwcGx5RW50aXR5VG9Db250ZW50U3RhdGUuanM/YjY4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXBwbHlFbnRpdHlUb0NvbnRlbnRCbG9jayA9IHJlcXVpcmUoXCIuL2FwcGx5RW50aXR5VG9Db250ZW50QmxvY2tcIik7XG5cbnZhciBJbW11dGFibGUgPSByZXF1aXJlKFwiaW1tdXRhYmxlXCIpO1xuXG5mdW5jdGlvbiBhcHBseUVudGl0eVRvQ29udGVudFN0YXRlKGNvbnRlbnRTdGF0ZSwgc2VsZWN0aW9uU3RhdGUsIGVudGl0eUtleSkge1xuICB2YXIgYmxvY2tNYXAgPSBjb250ZW50U3RhdGUuZ2V0QmxvY2tNYXAoKTtcbiAgdmFyIHN0YXJ0S2V5ID0gc2VsZWN0aW9uU3RhdGUuZ2V0U3RhcnRLZXkoKTtcbiAgdmFyIHN0YXJ0T2Zmc2V0ID0gc2VsZWN0aW9uU3RhdGUuZ2V0U3RhcnRPZmZzZXQoKTtcbiAgdmFyIGVuZEtleSA9IHNlbGVjdGlvblN0YXRlLmdldEVuZEtleSgpO1xuICB2YXIgZW5kT2Zmc2V0ID0gc2VsZWN0aW9uU3RhdGUuZ2V0RW5kT2Zmc2V0KCk7XG4gIHZhciBuZXdCbG9ja3MgPSBibG9ja01hcC5za2lwVW50aWwoZnVuY3Rpb24gKF8sIGspIHtcbiAgICByZXR1cm4gayA9PT0gc3RhcnRLZXk7XG4gIH0pLnRha2VVbnRpbChmdW5jdGlvbiAoXywgaykge1xuICAgIHJldHVybiBrID09PSBlbmRLZXk7XG4gIH0pLnRvT3JkZXJlZE1hcCgpLm1lcmdlKEltbXV0YWJsZS5PcmRlcmVkTWFwKFtbZW5kS2V5LCBibG9ja01hcC5nZXQoZW5kS2V5KV1dKSkubWFwKGZ1bmN0aW9uIChibG9jaywgYmxvY2tLZXkpIHtcbiAgICB2YXIgc2xpY2VTdGFydCA9IGJsb2NrS2V5ID09PSBzdGFydEtleSA/IHN0YXJ0T2Zmc2V0IDogMDtcbiAgICB2YXIgc2xpY2VFbmQgPSBibG9ja0tleSA9PT0gZW5kS2V5ID8gZW5kT2Zmc2V0IDogYmxvY2suZ2V0TGVuZ3RoKCk7XG4gICAgcmV0dXJuIGFwcGx5RW50aXR5VG9Db250ZW50QmxvY2soYmxvY2ssIHNsaWNlU3RhcnQsIHNsaWNlRW5kLCBlbnRpdHlLZXkpO1xuICB9KTtcbiAgcmV0dXJuIGNvbnRlbnRTdGF0ZS5tZXJnZSh7XG4gICAgYmxvY2tNYXA6IGJsb2NrTWFwLm1lcmdlKG5ld0Jsb2NrcyksXG4gICAgc2VsZWN0aW9uQmVmb3JlOiBzZWxlY3Rpb25TdGF0ZSxcbiAgICBzZWxlY3Rpb25BZnRlcjogc2VsZWN0aW9uU3RhdGVcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXBwbHlFbnRpdHlUb0NvbnRlbnRTdGF0ZTsiXSwibmFtZXMiOlsiYXBwbHlFbnRpdHlUb0NvbnRlbnRCbG9jayIsInJlcXVpcmUiLCJJbW11dGFibGUiLCJhcHBseUVudGl0eVRvQ29udGVudFN0YXRlIiwiY29udGVudFN0YXRlIiwic2VsZWN0aW9uU3RhdGUiLCJlbnRpdHlLZXkiLCJibG9ja01hcCIsImdldEJsb2NrTWFwIiwic3RhcnRLZXkiLCJnZXRTdGFydEtleSIsInN0YXJ0T2Zmc2V0IiwiZ2V0U3RhcnRPZmZzZXQiLCJlbmRLZXkiLCJnZXRFbmRLZXkiLCJlbmRPZmZzZXQiLCJnZXRFbmRPZmZzZXQiLCJuZXdCbG9ja3MiLCJza2lwVW50aWwiLCJfIiwiayIsInRha2VVbnRpbCIsInRvT3JkZXJlZE1hcCIsIm1lcmdlIiwiT3JkZXJlZE1hcCIsImdldCIsIm1hcCIsImJsb2NrIiwiYmxvY2tLZXkiLCJzbGljZVN0YXJ0Iiwic2xpY2VFbmQiLCJnZXRMZW5ndGgiLCJzZWxlY3Rpb25CZWZvcmUiLCJzZWxlY3Rpb25BZnRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/applyEntityToContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/convertFromDraftStateToRaw.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/convertFromDraftStateToRaw.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar ContentBlock = __webpack_require__(/*! ./ContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\");\nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar DraftStringKey = __webpack_require__(/*! ./DraftStringKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftStringKey.js\");\nvar encodeEntityRanges = __webpack_require__(/*! ./encodeEntityRanges */ \"(app-pages-browser)/./node_modules/draft-js/lib/encodeEntityRanges.js\");\nvar encodeInlineStyleRanges = __webpack_require__(/*! ./encodeInlineStyleRanges */ \"(app-pages-browser)/./node_modules/draft-js/lib/encodeInlineStyleRanges.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar createRawBlock = function createRawBlock(block, entityStorageMap) {\n    return {\n        key: block.getKey(),\n        text: block.getText(),\n        type: block.getType(),\n        depth: block.getDepth(),\n        inlineStyleRanges: encodeInlineStyleRanges(block),\n        entityRanges: encodeEntityRanges(block, entityStorageMap),\n        data: block.getData().toObject()\n    };\n};\nvar insertRawBlock = function insertRawBlock(block, entityMap, rawBlocks, blockCacheRef) {\n    if (block instanceof ContentBlock) {\n        rawBlocks.push(createRawBlock(block, entityMap));\n        return;\n    }\n    !(block instanceof ContentBlockNode) ?  true ? invariant(false, \"block is not a BlockNode\") : 0 : void 0;\n    var parentKey = block.getParentKey();\n    var rawBlock = blockCacheRef[block.getKey()] = _objectSpread({}, createRawBlock(block, entityMap), {\n        children: []\n    });\n    if (parentKey) {\n        blockCacheRef[parentKey].children.push(rawBlock);\n        return;\n    }\n    rawBlocks.push(rawBlock);\n};\nvar encodeRawBlocks = function encodeRawBlocks(contentState, rawState) {\n    var entityMap = rawState.entityMap;\n    var rawBlocks = [];\n    var blockCacheRef = {};\n    var entityCacheRef = {};\n    var entityStorageKey = 0;\n    contentState.getBlockMap().forEach(function(block) {\n        block.findEntityRanges(function(character) {\n            return character.getEntity() !== null;\n        }, function(start) {\n            var entityKey = block.getEntityAt(start); // Stringify to maintain order of otherwise numeric keys.\n            var stringifiedEntityKey = DraftStringKey.stringify(entityKey); // This makes this function resilient to two entities\n            // erroneously having the same key\n            if (entityCacheRef[stringifiedEntityKey]) {\n                return;\n            }\n            entityCacheRef[stringifiedEntityKey] = entityKey; // we need the `any` casting here since this is a temporary state\n            // where we will later on flip the entity map and populate it with\n            // real entity, at this stage we just need to map back the entity\n            // key used by the BlockNode\n            entityMap[stringifiedEntityKey] = \"\".concat(entityStorageKey);\n            entityStorageKey++;\n        });\n        insertRawBlock(block, entityMap, rawBlocks, blockCacheRef);\n    });\n    return {\n        blocks: rawBlocks,\n        entityMap: entityMap\n    };\n}; // Flip storage map so that our storage keys map to global\n// DraftEntity keys.\nvar encodeRawEntityMap = function encodeRawEntityMap(contentState, rawState) {\n    var blocks = rawState.blocks, entityMap = rawState.entityMap;\n    var rawEntityMap = {};\n    Object.keys(entityMap).forEach(function(key, index) {\n        var entity = contentState.getEntity(DraftStringKey.unstringify(key));\n        rawEntityMap[index] = {\n            type: entity.getType(),\n            mutability: entity.getMutability(),\n            data: entity.getData()\n        };\n    });\n    return {\n        blocks: blocks,\n        entityMap: rawEntityMap\n    };\n};\nvar convertFromDraftStateToRaw = function convertFromDraftStateToRaw(contentState) {\n    var rawDraftContentState = {\n        entityMap: {},\n        blocks: []\n    }; // add blocks\n    rawDraftContentState = encodeRawBlocks(contentState, rawDraftContentState); // add entities\n    rawDraftContentState = encodeRawEntityMap(contentState, rawDraftContentState);\n    return rawDraftContentState;\n};\nmodule.exports = convertFromDraftStateToRaw;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/convertFromDraftStateToRaw.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js":
/*!*********************************************************************!*\
  !*** ./node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar _knownListItemDepthCl;\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar ContentBlock = __webpack_require__(/*! ./ContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\");\nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar DefaultDraftBlockRenderMap = __webpack_require__(/*! ./DefaultDraftBlockRenderMap */ \"(app-pages-browser)/./node_modules/draft-js/lib/DefaultDraftBlockRenderMap.js\");\nvar DraftEntity = __webpack_require__(/*! ./DraftEntity */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEntity.js\");\nvar URI = __webpack_require__(/*! fbjs/lib/URI */ \"(app-pages-browser)/./node_modules/fbjs/lib/URI.js\");\nvar cx = __webpack_require__(/*! fbjs/lib/cx */ \"(app-pages-browser)/./node_modules/fbjs/lib/cx.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar getSafeBodyFromHTML = __webpack_require__(/*! ./getSafeBodyFromHTML */ \"(app-pages-browser)/./node_modules/draft-js/lib/getSafeBodyFromHTML.js\");\nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar _require = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\"), List = _require.List, Map = _require.Map, OrderedSet = _require.OrderedSet;\nvar isHTMLAnchorElement = __webpack_require__(/*! ./isHTMLAnchorElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLAnchorElement.js\");\nvar isHTMLBRElement = __webpack_require__(/*! ./isHTMLBRElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLBRElement.js\");\nvar isHTMLElement = __webpack_require__(/*! ./isHTMLElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLElement.js\");\nvar isHTMLImageElement = __webpack_require__(/*! ./isHTMLImageElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLImageElement.js\");\nvar experimentalTreeDataSupport = gkx(\"draft_tree_data_support\");\nvar NBSP = \"&nbsp;\";\nvar SPACE = \" \"; // used for replacing characters in HTML\nvar REGEX_CR = new RegExp(\"\\r\", \"g\");\nvar REGEX_LF = new RegExp(\"\\n\", \"g\");\nvar REGEX_LEADING_LF = new RegExp(\"^\\n\", \"g\");\nvar REGEX_NBSP = new RegExp(NBSP, \"g\");\nvar REGEX_CARRIAGE = new RegExp(\"&#13;?\", \"g\");\nvar REGEX_ZWS = new RegExp(\"&#8203;?\", \"g\"); // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\nvar boldValues = [\n    \"bold\",\n    \"bolder\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\"\n];\nvar notBoldValues = [\n    \"light\",\n    \"lighter\",\n    \"normal\",\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\"\n];\nvar anchorAttr = [\n    \"className\",\n    \"href\",\n    \"rel\",\n    \"target\",\n    \"title\"\n];\nvar imgAttr = [\n    \"alt\",\n    \"className\",\n    \"height\",\n    \"src\",\n    \"width\"\n];\nvar knownListItemDepthClasses = (_knownListItemDepthCl = {}, _defineProperty(_knownListItemDepthCl, cx(\"public/DraftStyleDefault/depth0\"), 0), _defineProperty(_knownListItemDepthCl, cx(\"public/DraftStyleDefault/depth1\"), 1), _defineProperty(_knownListItemDepthCl, cx(\"public/DraftStyleDefault/depth2\"), 2), _defineProperty(_knownListItemDepthCl, cx(\"public/DraftStyleDefault/depth3\"), 3), _defineProperty(_knownListItemDepthCl, cx(\"public/DraftStyleDefault/depth4\"), 4), _knownListItemDepthCl);\nvar HTMLTagToRawInlineStyleMap = Map({\n    b: \"BOLD\",\n    code: \"CODE\",\n    del: \"STRIKETHROUGH\",\n    em: \"ITALIC\",\n    i: \"ITALIC\",\n    s: \"STRIKETHROUGH\",\n    strike: \"STRIKETHROUGH\",\n    strong: \"BOLD\",\n    u: \"UNDERLINE\",\n    mark: \"HIGHLIGHT\"\n});\n/**\n * Build a mapping from HTML tags to draftjs block types\n * out of a BlockRenderMap.\n *\n * The BlockTypeMap for the default BlockRenderMap looks like this:\n *   Map({\n *     h1: 'header-one',\n *     h2: 'header-two',\n *     h3: 'header-three',\n *     h4: 'header-four',\n *     h5: 'header-five',\n *     h6: 'header-six',\n *     blockquote: 'blockquote',\n *     figure: 'atomic',\n *     pre: ['code-block'],\n *     div: 'unstyled',\n *     p: 'unstyled',\n *     li: ['ordered-list-item', 'unordered-list-item'],\n *   })\n */ var buildBlockTypeMap = function buildBlockTypeMap(blockRenderMap) {\n    var blockTypeMap = {};\n    blockRenderMap.mapKeys(function(blockType, desc) {\n        var elements = [\n            desc.element\n        ];\n        if (desc.aliasedElements !== undefined) {\n            elements.push.apply(elements, desc.aliasedElements);\n        }\n        elements.forEach(function(element) {\n            if (blockTypeMap[element] === undefined) {\n                blockTypeMap[element] = blockType;\n            } else if (typeof blockTypeMap[element] === \"string\") {\n                blockTypeMap[element] = [\n                    blockTypeMap[element],\n                    blockType\n                ];\n            } else {\n                blockTypeMap[element].push(blockType);\n            }\n        });\n    });\n    return Map(blockTypeMap);\n};\nvar detectInlineStyle = function detectInlineStyle(node) {\n    if (isHTMLElement(node)) {\n        var element = node; // Currently only used to detect preformatted inline code\n        if (element.style.fontFamily.includes(\"monospace\")) {\n            return \"CODE\";\n        }\n    }\n    return null;\n};\n/**\n * If we're pasting from one DraftEditor to another we can check to see if\n * existing list item depth classes are being used and preserve this style\n */ var getListItemDepth = function getListItemDepth(node) {\n    var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    Object.keys(knownListItemDepthClasses).some(function(depthClass) {\n        if (node.classList.contains(depthClass)) {\n            depth = knownListItemDepthClasses[depthClass];\n        }\n    });\n    return depth;\n};\n/**\n * Return true if the provided HTML Element can be used to build a\n * Draftjs-compatible link.\n */ var isValidAnchor = function isValidAnchor(node) {\n    if (!isHTMLAnchorElement(node)) {\n        return false;\n    }\n    var anchorNode = node;\n    if (!anchorNode.href || anchorNode.protocol !== \"http:\" && anchorNode.protocol !== \"https:\" && anchorNode.protocol !== \"mailto:\" && anchorNode.protocol !== \"tel:\") {\n        return false;\n    }\n    try {\n        // Just checking whether we can actually create a URI\n        var _ = new URI(anchorNode.href);\n        return true; // We need our catch statements to have arguments, else\n    // UglifyJS (which we use for our OSS builds) will crash.\n    // eslint-disable-next-line fb-www/no-unused-catch-bindings\n    } catch (_) {\n        return false;\n    }\n};\n/**\n * Return true if the provided HTML Element can be used to build a\n * Draftjs-compatible image.\n */ var isValidImage = function isValidImage(node) {\n    if (!isHTMLImageElement(node)) {\n        return false;\n    }\n    var imageNode = node;\n    return !!(imageNode.attributes.getNamedItem(\"src\") && imageNode.attributes.getNamedItem(\"src\").value);\n};\n/**\n * Try to guess the inline style of an HTML element based on its css\n * styles (font-weight, font-style and text-decoration).\n */ var styleFromNodeAttributes = function styleFromNodeAttributes(node, style) {\n    if (!isHTMLElement(node)) {\n        return style;\n    }\n    var htmlElement = node;\n    var fontWeight = htmlElement.style.fontWeight;\n    var fontStyle = htmlElement.style.fontStyle;\n    var textDecoration = htmlElement.style.textDecoration;\n    return style.withMutations(function(style) {\n        if (boldValues.indexOf(fontWeight) >= 0) {\n            style.add(\"BOLD\");\n        } else if (notBoldValues.indexOf(fontWeight) >= 0) {\n            style.remove(\"BOLD\");\n        }\n        if (fontStyle === \"italic\") {\n            style.add(\"ITALIC\");\n        } else if (fontStyle === \"normal\") {\n            style.remove(\"ITALIC\");\n        }\n        if (textDecoration === \"underline\") {\n            style.add(\"UNDERLINE\");\n        }\n        if (textDecoration === \"line-through\") {\n            style.add(\"STRIKETHROUGH\");\n        }\n        if (textDecoration === \"none\") {\n            style.remove(\"UNDERLINE\");\n            style.remove(\"STRIKETHROUGH\");\n        }\n    });\n};\n/**\n * Determine if a nodeName is a list type, 'ul' or 'ol'\n */ var isListNode = function isListNode(nodeName) {\n    return nodeName === \"ul\" || nodeName === \"ol\";\n};\n/**\n *  ContentBlockConfig is a mutable data structure that holds all\n *  the information required to build a ContentBlock and an array of\n *  all the child nodes (childConfigs).\n *  It is being used a temporary data structure by the\n *  ContentBlocksBuilder class.\n */ /**\n * ContentBlocksBuilder builds a list of ContentBlocks and an Entity Map\n * out of one (or several) HTMLElement(s).\n *\n * The algorithm has two passes: first it builds a tree of ContentBlockConfigs\n * by walking through the HTML nodes and their children, then it walks the\n * ContentBlockConfigs tree to compute parents/siblings and create\n * the actual ContentBlocks.\n *\n * Typical usage is:\n *     new ContentBlocksBuilder()\n *        .addDOMNode(someHTMLNode)\n *        .addDOMNode(someOtherHTMLNode)\n *       .getContentBlocks();\n *\n */ var ContentBlocksBuilder = /*#__PURE__*/ function() {\n    // Most of the method in the class depend on the state of the content builder\n    // (i.e. currentBlockType, currentDepth, currentEntity etc.). Though it may\n    // be confusing at first, it made the code simpler than the alternative which\n    // is to pass those values around in every call.\n    // The following attributes are used to accumulate text and styles\n    // as we are walking the HTML node tree.\n    // Describes the future ContentState as a tree of content blocks\n    // The content blocks generated from the blockConfigs\n    // Entity map use to store links and images found in the HTML nodes\n    // Map HTML tags to draftjs block types and disambiguation function\n    function ContentBlocksBuilder(blockTypeMap, disambiguate) {\n        _defineProperty(this, \"characterList\", List());\n        _defineProperty(this, \"currentBlockType\", \"unstyled\");\n        _defineProperty(this, \"currentDepth\", 0);\n        _defineProperty(this, \"currentEntity\", null);\n        _defineProperty(this, \"currentText\", \"\");\n        _defineProperty(this, \"wrapper\", null);\n        _defineProperty(this, \"blockConfigs\", []);\n        _defineProperty(this, \"contentBlocks\", []);\n        _defineProperty(this, \"entityMap\", DraftEntity);\n        _defineProperty(this, \"blockTypeMap\", void 0);\n        _defineProperty(this, \"disambiguate\", void 0);\n        this.clear();\n        this.blockTypeMap = blockTypeMap;\n        this.disambiguate = disambiguate;\n    }\n    /**\n   * Clear the internal state of the ContentBlocksBuilder\n   */ var _proto = ContentBlocksBuilder.prototype;\n    _proto.clear = function clear() {\n        this.characterList = List();\n        this.blockConfigs = [];\n        this.currentBlockType = \"unstyled\";\n        this.currentDepth = 0;\n        this.currentEntity = null;\n        this.currentText = \"\";\n        this.entityMap = DraftEntity;\n        this.wrapper = null;\n        this.contentBlocks = [];\n    } /**\n   * Add an HTMLElement to the ContentBlocksBuilder\n   */ ;\n    _proto.addDOMNode = function addDOMNode(node) {\n        var _this$blockConfigs;\n        this.contentBlocks = [];\n        this.currentDepth = 0; // Converts the HTML node to block config\n        (_this$blockConfigs = this.blockConfigs).push.apply(_this$blockConfigs, this._toBlockConfigs([\n            node\n        ], OrderedSet())); // There might be some left over text in the builder's\n        // internal state, if so make a ContentBlock out of it.\n        this._trimCurrentText();\n        if (this.currentText !== \"\") {\n            this.blockConfigs.push(this._makeBlockConfig());\n        } // for chaining\n        return this;\n    } /**\n   * Return the ContentBlocks and the EntityMap that corresponds\n   * to the previously added HTML nodes.\n   */ ;\n    _proto.getContentBlocks = function getContentBlocks() {\n        if (this.contentBlocks.length === 0) {\n            if (experimentalTreeDataSupport) {\n                this._toContentBlocks(this.blockConfigs);\n            } else {\n                this._toFlatContentBlocks(this.blockConfigs);\n            }\n        }\n        return {\n            contentBlocks: this.contentBlocks,\n            entityMap: this.entityMap\n        };\n    } // ***********************************WARNING******************************\n     /**\n   * Generate a new ContentBlockConfig out of the current internal state\n   * of the builder, then clears the internal state.\n   */ ;\n    _proto._makeBlockConfig = function _makeBlockConfig() {\n        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var key = config.key || generateRandomKey();\n        var block = _objectSpread({\n            key: key,\n            type: this.currentBlockType,\n            text: this.currentText,\n            characterList: this.characterList,\n            depth: this.currentDepth,\n            parent: null,\n            children: List(),\n            prevSibling: null,\n            nextSibling: null,\n            childConfigs: []\n        }, config);\n        this.characterList = List();\n        this.currentBlockType = \"unstyled\";\n        this.currentText = \"\";\n        return block;\n    } /**\n   * Converts an array of HTML elements to a multi-root tree of content\n   * block configs. Some text content may be left in the builders internal\n   * state to enable chaining sucessive calls.\n   */ ;\n    _proto._toBlockConfigs = function _toBlockConfigs(nodes, style) {\n        var blockConfigs = [];\n        for(var i = 0; i < nodes.length; i++){\n            var node = nodes[i];\n            var nodeName = node.nodeName.toLowerCase();\n            if (nodeName === \"body\" || isListNode(nodeName)) {\n                // body, ol and ul are 'block' type nodes so create a block config\n                // with the text accumulated so far (if any)\n                this._trimCurrentText();\n                if (this.currentText !== \"\") {\n                    blockConfigs.push(this._makeBlockConfig());\n                } // body, ol and ul nodes are ignored, but their children are inlined in\n                // the parent block config.\n                var wasCurrentDepth = this.currentDepth;\n                var wasWrapper = this.wrapper;\n                if (isListNode(nodeName)) {\n                    this.wrapper = nodeName;\n                    if (isListNode(wasWrapper)) {\n                        this.currentDepth++;\n                    }\n                }\n                blockConfigs.push.apply(blockConfigs, this._toBlockConfigs(Array.from(node.childNodes), style));\n                this.currentDepth = wasCurrentDepth;\n                this.wrapper = wasWrapper;\n                continue;\n            }\n            var blockType = this.blockTypeMap.get(nodeName);\n            if (blockType !== undefined) {\n                // 'block' type node means we need to create a block config\n                // with the text accumulated so far (if any)\n                this._trimCurrentText();\n                if (this.currentText !== \"\") {\n                    blockConfigs.push(this._makeBlockConfig());\n                }\n                var _wasCurrentDepth = this.currentDepth;\n                var _wasWrapper = this.wrapper;\n                this.wrapper = nodeName === \"pre\" ? \"pre\" : this.wrapper;\n                if (typeof blockType !== \"string\") {\n                    blockType = this.disambiguate(nodeName, this.wrapper) || blockType[0] || \"unstyled\";\n                }\n                if (!experimentalTreeDataSupport && isHTMLElement(node) && (blockType === \"unordered-list-item\" || blockType === \"ordered-list-item\")) {\n                    var htmlElement = node;\n                    this.currentDepth = getListItemDepth(htmlElement, this.currentDepth);\n                }\n                var key = generateRandomKey();\n                var childConfigs = this._toBlockConfigs(Array.from(node.childNodes), style);\n                this._trimCurrentText();\n                blockConfigs.push(this._makeBlockConfig({\n                    key: key,\n                    childConfigs: childConfigs,\n                    type: blockType\n                }));\n                this.currentDepth = _wasCurrentDepth;\n                this.wrapper = _wasWrapper;\n                continue;\n            }\n            if (nodeName === \"#text\") {\n                this._addTextNode(node, style);\n                continue;\n            }\n            if (nodeName === \"br\") {\n                this._addBreakNode(node, style);\n                continue;\n            }\n            if (isValidImage(node)) {\n                this._addImgNode(node, style);\n                continue;\n            }\n            if (isValidAnchor(node)) {\n                this._addAnchorNode(node, blockConfigs, style);\n                continue;\n            }\n            var newStyle = style;\n            if (HTMLTagToRawInlineStyleMap.has(nodeName)) {\n                newStyle = newStyle.add(HTMLTagToRawInlineStyleMap.get(nodeName));\n            }\n            newStyle = styleFromNodeAttributes(node, newStyle);\n            var inlineStyle = detectInlineStyle(node);\n            if (inlineStyle != null) {\n                newStyle = newStyle.add(inlineStyle);\n            }\n            blockConfigs.push.apply(blockConfigs, this._toBlockConfigs(Array.from(node.childNodes), newStyle));\n        }\n        return blockConfigs;\n    } /**\n   * Append a string of text to the internal buffer.\n   */ ;\n    _proto._appendText = function _appendText(text, style) {\n        var _this$characterList;\n        this.currentText += text;\n        var characterMetadata = CharacterMetadata.create({\n            style: style,\n            entity: this.currentEntity\n        });\n        this.characterList = (_this$characterList = this.characterList).push.apply(_this$characterList, Array(text.length).fill(characterMetadata));\n    } /**\n   * Trim the text in the internal buffer.\n   */ ;\n    _proto._trimCurrentText = function _trimCurrentText() {\n        var l = this.currentText.length;\n        var begin = l - this.currentText.trimLeft().length;\n        var end = this.currentText.trimRight().length; // We should not trim whitespaces for which an entity is defined.\n        var entity = this.characterList.findEntry(function(characterMetadata) {\n            return characterMetadata.getEntity() !== null;\n        });\n        begin = entity !== undefined ? Math.min(begin, entity[0]) : begin;\n        entity = this.characterList.reverse().findEntry(function(characterMetadata) {\n            return characterMetadata.getEntity() !== null;\n        });\n        end = entity !== undefined ? Math.max(end, l - entity[0]) : end;\n        if (begin > end) {\n            this.currentText = \"\";\n            this.characterList = List();\n        } else {\n            this.currentText = this.currentText.slice(begin, end);\n            this.characterList = this.characterList.slice(begin, end);\n        }\n    } /**\n   * Add the content of an HTML text node to the internal state\n   */ ;\n    _proto._addTextNode = function _addTextNode(node, style) {\n        var text = node.textContent;\n        var trimmedText = text.trim(); // If we are not in a pre block and the trimmed content is empty,\n        // normalize to a single space.\n        if (trimmedText === \"\" && this.wrapper !== \"pre\") {\n            text = \" \";\n        }\n        if (this.wrapper !== \"pre\") {\n            // Trim leading line feed, which is invisible in HTML\n            text = text.replace(REGEX_LEADING_LF, \"\"); // Can't use empty string because MSWord\n            text = text.replace(REGEX_LF, SPACE);\n        }\n        this._appendText(text, style);\n    };\n    _proto._addBreakNode = function _addBreakNode(node, style) {\n        if (!isHTMLBRElement(node)) {\n            return;\n        }\n        this._appendText(\"\\n\", style);\n    } /**\n   * Add the content of an HTML img node to the internal state\n   */ ;\n    _proto._addImgNode = function _addImgNode(node, style) {\n        if (!isHTMLImageElement(node)) {\n            return;\n        }\n        var image = node;\n        var entityConfig = {};\n        imgAttr.forEach(function(attr) {\n            var imageAttribute = image.getAttribute(attr);\n            if (imageAttribute) {\n                entityConfig[attr] = imageAttribute;\n            }\n        }); // TODO: T15530363 update this when we remove DraftEntity entirely\n        this.currentEntity = this.entityMap.__create(\"IMAGE\", \"IMMUTABLE\", entityConfig); // The child text node cannot just have a space or return as content (since\n        // we strip those out), unless the image is for presentation only.\n        // See https://github.com/facebook/draft-js/issues/231 for some context.\n        if (gkx(\"draftjs_fix_paste_for_img\")) {\n            if (image.getAttribute(\"role\") !== \"presentation\") {\n                this._appendText(\"\\uD83D\\uDCF7\", style);\n            }\n        } else {\n            this._appendText(\"\\uD83D\\uDCF7\", style);\n        }\n        this.currentEntity = null;\n    } /**\n   * Add the content of an HTML 'a' node to the internal state. Child nodes\n   * (if any) are converted to Block Configs and appended to the provided\n   * blockConfig array.\n   */ ;\n    _proto._addAnchorNode = function _addAnchorNode(node, blockConfigs, style) {\n        // The check has already been made by isValidAnchor but\n        // we have to do it again to keep flow happy.\n        if (!isHTMLAnchorElement(node)) {\n            return;\n        }\n        var anchor = node;\n        var entityConfig = {};\n        anchorAttr.forEach(function(attr) {\n            var anchorAttribute = anchor.getAttribute(attr);\n            if (anchorAttribute) {\n                entityConfig[attr] = anchorAttribute;\n            }\n        });\n        entityConfig.url = new URI(anchor.href).toString(); // TODO: T15530363 update this when we remove DraftEntity completely\n        this.currentEntity = this.entityMap.__create(\"LINK\", \"MUTABLE\", entityConfig || {});\n        blockConfigs.push.apply(blockConfigs, this._toBlockConfigs(Array.from(node.childNodes), style));\n        this.currentEntity = null;\n    } /**\n   * Walk the BlockConfig tree, compute parent/children/siblings,\n   * and generate the corresponding ContentBlockNode\n   */ ;\n    _proto._toContentBlocks = function _toContentBlocks(blockConfigs) {\n        var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var l = blockConfigs.length - 1;\n        for(var i = 0; i <= l; i++){\n            var config = blockConfigs[i];\n            config.parent = parent;\n            config.prevSibling = i > 0 ? blockConfigs[i - 1].key : null;\n            config.nextSibling = i < l ? blockConfigs[i + 1].key : null;\n            config.children = List(config.childConfigs.map(function(child) {\n                return child.key;\n            }));\n            this.contentBlocks.push(new ContentBlockNode(_objectSpread({}, config)));\n            this._toContentBlocks(config.childConfigs, config.key);\n        }\n    } /**\n   * Remove 'useless' container nodes from the block config hierarchy, by\n   * replacing them with their children.\n   */ ;\n    _proto._hoistContainersInBlockConfigs = function _hoistContainersInBlockConfigs(blockConfigs) {\n        var _this = this;\n        var hoisted = List(blockConfigs).flatMap(function(blockConfig) {\n            // Don't mess with useful blocks\n            if (blockConfig.type !== \"unstyled\" || blockConfig.text !== \"\") {\n                return [\n                    blockConfig\n                ];\n            }\n            return _this._hoistContainersInBlockConfigs(blockConfig.childConfigs);\n        });\n        return hoisted;\n    } // ***********************************************************************\n     /**\n   * Same as _toContentBlocks but replaces nested blocks by their\n   * text content.\n   */ ;\n    _proto._toFlatContentBlocks = function _toFlatContentBlocks(blockConfigs) {\n        var _this2 = this;\n        var cleanConfigs = this._hoistContainersInBlockConfigs(blockConfigs);\n        cleanConfigs.forEach(function(config) {\n            var _this2$_extractTextFr = _this2._extractTextFromBlockConfigs(config.childConfigs), text = _this2$_extractTextFr.text, characterList = _this2$_extractTextFr.characterList;\n            _this2.contentBlocks.push(new ContentBlock(_objectSpread({}, config, {\n                text: config.text + text,\n                characterList: config.characterList.concat(characterList)\n            })));\n        });\n    } /**\n   * Extract the text and the associated inline styles form an\n   * array of content block configs.\n   */ ;\n    _proto._extractTextFromBlockConfigs = function _extractTextFromBlockConfigs(blockConfigs) {\n        var l = blockConfigs.length - 1;\n        var text = \"\";\n        var characterList = List();\n        for(var i = 0; i <= l; i++){\n            var config = blockConfigs[i];\n            text += config.text;\n            characterList = characterList.concat(config.characterList);\n            if (text !== \"\" && config.type !== \"unstyled\") {\n                text += \"\\n\";\n                characterList = characterList.push(characterList.last());\n            }\n            var children = this._extractTextFromBlockConfigs(config.childConfigs);\n            text += children.text;\n            characterList = characterList.concat(children.characterList);\n        }\n        return {\n            text: text,\n            characterList: characterList\n        };\n    };\n    return ContentBlocksBuilder;\n}();\n/**\n * Converts an HTML string to an array of ContentBlocks and an EntityMap\n * suitable to initialize the internal state of a Draftjs component.\n */ var convertFromHTMLToContentBlocks = function convertFromHTMLToContentBlocks(html) {\n    var DOMBuilder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getSafeBodyFromHTML;\n    var blockRenderMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDraftBlockRenderMap;\n    // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\n    // arbitrary code in whatever environment you're running this in. For an\n    // example of how we try to do this in-browser, see getSafeBodyFromHTML.\n    // Remove funky characters from the HTML string\n    html = html.trim().replace(REGEX_CR, \"\").replace(REGEX_NBSP, SPACE).replace(REGEX_CARRIAGE, \"\").replace(REGEX_ZWS, \"\"); // Build a DOM tree out of the HTML string\n    var safeBody = DOMBuilder(html);\n    if (!safeBody) {\n        return null;\n    } // Build a BlockTypeMap out of the BlockRenderMap\n    var blockTypeMap = buildBlockTypeMap(blockRenderMap); // Select the proper block type for the cases where the blockRenderMap\n    // uses multiple block types for the same html tag.\n    var disambiguate = function disambiguate(tag, wrapper) {\n        if (tag === \"li\") {\n            return wrapper === \"ol\" ? \"ordered-list-item\" : \"unordered-list-item\";\n        }\n        return null;\n    };\n    return new ContentBlocksBuilder(blockTypeMap, disambiguate).addDOMNode(safeBody).getContentBlocks();\n};\nmodule.exports = convertFromHTMLToContentBlocks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/convertFromRawToDraftState.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/convertFromRawToDraftState.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar ContentBlock = __webpack_require__(/*! ./ContentBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlock.js\");\nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar ContentState = __webpack_require__(/*! ./ContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentState.js\");\nvar DraftEntity = __webpack_require__(/*! ./DraftEntity */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEntity.js\");\nvar DraftTreeAdapter = __webpack_require__(/*! ./DraftTreeAdapter */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftTreeAdapter.js\");\nvar DraftTreeInvariants = __webpack_require__(/*! ./DraftTreeInvariants */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftTreeInvariants.js\");\nvar SelectionState = __webpack_require__(/*! ./SelectionState */ \"(app-pages-browser)/./node_modules/draft-js/lib/SelectionState.js\");\nvar createCharacterList = __webpack_require__(/*! ./createCharacterList */ \"(app-pages-browser)/./node_modules/draft-js/lib/createCharacterList.js\");\nvar decodeEntityRanges = __webpack_require__(/*! ./decodeEntityRanges */ \"(app-pages-browser)/./node_modules/draft-js/lib/decodeEntityRanges.js\");\nvar decodeInlineStyleRanges = __webpack_require__(/*! ./decodeInlineStyleRanges */ \"(app-pages-browser)/./node_modules/draft-js/lib/decodeInlineStyleRanges.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar experimentalTreeDataSupport = gkx(\"draft_tree_data_support\");\nvar List = Immutable.List, Map = Immutable.Map, OrderedMap = Immutable.OrderedMap;\nvar decodeBlockNodeConfig = function decodeBlockNodeConfig(block, entityMap) {\n    var key = block.key, type = block.type, data = block.data, text = block.text, depth = block.depth;\n    var blockNodeConfig = {\n        text: text,\n        depth: depth || 0,\n        type: type || \"unstyled\",\n        key: key || generateRandomKey(),\n        data: Map(data),\n        characterList: decodeCharacterList(block, entityMap)\n    };\n    return blockNodeConfig;\n};\nvar decodeCharacterList = function decodeCharacterList(block, entityMap) {\n    var text = block.text, rawEntityRanges = block.entityRanges, rawInlineStyleRanges = block.inlineStyleRanges;\n    var entityRanges = rawEntityRanges || [];\n    var inlineStyleRanges = rawInlineStyleRanges || []; // Translate entity range keys to the DraftEntity map.\n    return createCharacterList(decodeInlineStyleRanges(text, inlineStyleRanges), decodeEntityRanges(text, entityRanges.filter(function(range) {\n        return entityMap.hasOwnProperty(range.key);\n    }).map(function(range) {\n        return _objectSpread({}, range, {\n            key: entityMap[range.key]\n        });\n    })));\n};\nvar addKeyIfMissing = function addKeyIfMissing(block) {\n    return _objectSpread({}, block, {\n        key: block.key || generateRandomKey()\n    });\n};\n/**\n * Node stack is responsible to ensure we traverse the tree only once\n * in depth order, while also providing parent refs to inner nodes to\n * construct their links.\n */ var updateNodeStack = function updateNodeStack(stack, nodes, parentRef) {\n    var nodesWithParentRef = nodes.map(function(block) {\n        return _objectSpread({}, block, {\n            parentRef: parentRef\n        });\n    }); // since we pop nodes from the stack we need to insert them in reverse\n    return stack.concat(nodesWithParentRef.reverse());\n};\n/**\n * This will build a tree draft content state by creating the node\n * reference links into a single tree walk. Each node has a link\n * reference to \"parent\", \"children\", \"nextSibling\" and \"prevSibling\"\n * blockMap will be created using depth ordering.\n */ var decodeContentBlockNodes = function decodeContentBlockNodes(blocks, entityMap) {\n    return blocks // ensure children have valid keys to enable sibling links\n    .map(addKeyIfMissing).reduce(function(blockMap, block, index) {\n        !Array.isArray(block.children) ?  true ? invariant(false, \"invalid RawDraftContentBlock can not be converted to ContentBlockNode\") : 0 : void 0; // ensure children have valid keys to enable sibling links\n        var children = block.children.map(addKeyIfMissing); // root level nodes\n        var contentBlockNode = new ContentBlockNode(_objectSpread({}, decodeBlockNodeConfig(block, entityMap), {\n            prevSibling: index === 0 ? null : blocks[index - 1].key,\n            nextSibling: index === blocks.length - 1 ? null : blocks[index + 1].key,\n            children: List(children.map(function(child) {\n                return child.key;\n            }))\n        })); // push root node to blockMap\n        blockMap = blockMap.set(contentBlockNode.getKey(), contentBlockNode); // this stack is used to ensure we visit all nodes respecting depth ordering\n        var stack = updateNodeStack([], children, contentBlockNode); // start computing children nodes\n        while(stack.length > 0){\n            // we pop from the stack and start processing this node\n            var node = stack.pop(); // parentRef already points to a converted ContentBlockNode\n            var parentRef = node.parentRef;\n            var siblings = parentRef.getChildKeys();\n            var _index = siblings.indexOf(node.key);\n            var isValidBlock = Array.isArray(node.children);\n            if (!isValidBlock) {\n                !isValidBlock ?  true ? invariant(false, \"invalid RawDraftContentBlock can not be converted to ContentBlockNode\") : 0 : void 0;\n                break;\n            } // ensure children have valid keys to enable sibling links\n            var _children = node.children.map(addKeyIfMissing);\n            var _contentBlockNode = new ContentBlockNode(_objectSpread({}, decodeBlockNodeConfig(node, entityMap), {\n                parent: parentRef.getKey(),\n                children: List(_children.map(function(child) {\n                    return child.key;\n                })),\n                prevSibling: _index === 0 ? null : siblings.get(_index - 1),\n                nextSibling: _index === siblings.size - 1 ? null : siblings.get(_index + 1)\n            })); // push node to blockMap\n            blockMap = blockMap.set(_contentBlockNode.getKey(), _contentBlockNode); // this stack is used to ensure we visit all nodes respecting depth ordering\n            stack = updateNodeStack(stack, _children, _contentBlockNode);\n        }\n        return blockMap;\n    }, OrderedMap());\n};\nvar decodeContentBlocks = function decodeContentBlocks(blocks, entityMap) {\n    return OrderedMap(blocks.map(function(block) {\n        var contentBlock = new ContentBlock(decodeBlockNodeConfig(block, entityMap));\n        return [\n            contentBlock.getKey(),\n            contentBlock\n        ];\n    }));\n};\nvar decodeRawBlocks = function decodeRawBlocks(rawState, entityMap) {\n    var isTreeRawBlock = rawState.blocks.find(function(block) {\n        return Array.isArray(block.children) && block.children.length > 0;\n    });\n    var rawBlocks = experimentalTreeDataSupport && !isTreeRawBlock ? DraftTreeAdapter.fromRawStateToRawTreeState(rawState).blocks : rawState.blocks;\n    if (!experimentalTreeDataSupport) {\n        return decodeContentBlocks(isTreeRawBlock ? DraftTreeAdapter.fromRawTreeStateToRawState(rawState).blocks : rawBlocks, entityMap);\n    }\n    var blockMap = decodeContentBlockNodes(rawBlocks, entityMap); // in dev mode, check that the tree invariants are met\n    if (true) {\n        !DraftTreeInvariants.isValidTree(blockMap) ?  true ? invariant(false, \"Should be a valid tree\") : 0 : void 0;\n    }\n    return blockMap;\n};\nvar decodeRawEntityMap = function decodeRawEntityMap(rawState) {\n    var rawEntityMap = rawState.entityMap;\n    var entityMap = {}; // TODO: Update this once we completely remove DraftEntity\n    Object.keys(rawEntityMap).forEach(function(rawEntityKey) {\n        var _rawEntityMap$rawEnti = rawEntityMap[rawEntityKey], type = _rawEntityMap$rawEnti.type, mutability = _rawEntityMap$rawEnti.mutability, data = _rawEntityMap$rawEnti.data; // get the key reference to created entity\n        entityMap[rawEntityKey] = DraftEntity.__create(type, mutability, data || {});\n    });\n    return entityMap;\n};\nvar convertFromRawToDraftState = function convertFromRawToDraftState(rawState) {\n    !Array.isArray(rawState.blocks) ?  true ? invariant(false, \"invalid RawDraftContentState\") : 0 : void 0; // decode entities\n    var entityMap = decodeRawEntityMap(rawState); // decode blockMap\n    var blockMap = decodeRawBlocks(rawState, entityMap); // create initial selection\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n        blockMap: blockMap,\n        entityMap: entityMap,\n        selectionBefore: selectionState,\n        selectionAfter: selectionState\n    });\n};\nmodule.exports = convertFromRawToDraftState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/convertFromRawToDraftState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/createCharacterList.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/createCharacterList.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar List = Immutable.List;\nfunction createCharacterList(inlineStyles, entities) {\n    var characterArray = inlineStyles.map(function(style, ii) {\n        var entity = entities[ii];\n        return CharacterMetadata.create({\n            style: style,\n            entity: entity\n        });\n    });\n    return List(characterArray);\n}\nmodule.exports = createCharacterList;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvY3JlYXRlQ2hhcmFjdGVyTGlzdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLG9CQUFvQkMsbUJBQU9BLENBQUMsaUdBQXFCO0FBRXJELElBQUlDLFlBQVlELG1CQUFPQSxDQUFDLHVHQUFXO0FBRW5DLElBQUlFLE9BQU9ELFVBQVVDLElBQUk7QUFFekIsU0FBU0Msb0JBQW9CQyxZQUFZLEVBQUVDLFFBQVE7SUFDakQsSUFBSUMsaUJBQWlCRixhQUFhRyxHQUFHLENBQUMsU0FBVUMsS0FBSyxFQUFFQyxFQUFFO1FBQ3ZELElBQUlDLFNBQVNMLFFBQVEsQ0FBQ0ksR0FBRztRQUN6QixPQUFPVixrQkFBa0JZLE1BQU0sQ0FBQztZQUM5QkgsT0FBT0E7WUFDUEUsUUFBUUE7UUFDVjtJQUNGO0lBQ0EsT0FBT1IsS0FBS0k7QUFDZDtBQUVBTSxPQUFPQyxPQUFPLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvY3JlYXRlQ2hhcmFjdGVyTGlzdC5qcz9kNzNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBDaGFyYWN0ZXJNZXRhZGF0YSA9IHJlcXVpcmUoXCIuL0NoYXJhY3Rlck1ldGFkYXRhXCIpO1xuXG52YXIgSW1tdXRhYmxlID0gcmVxdWlyZShcImltbXV0YWJsZVwiKTtcblxudmFyIExpc3QgPSBJbW11dGFibGUuTGlzdDtcblxuZnVuY3Rpb24gY3JlYXRlQ2hhcmFjdGVyTGlzdChpbmxpbmVTdHlsZXMsIGVudGl0aWVzKSB7XG4gIHZhciBjaGFyYWN0ZXJBcnJheSA9IGlubGluZVN0eWxlcy5tYXAoZnVuY3Rpb24gKHN0eWxlLCBpaSkge1xuICAgIHZhciBlbnRpdHkgPSBlbnRpdGllc1tpaV07XG4gICAgcmV0dXJuIENoYXJhY3Rlck1ldGFkYXRhLmNyZWF0ZSh7XG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICBlbnRpdHk6IGVudGl0eVxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIExpc3QoY2hhcmFjdGVyQXJyYXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUNoYXJhY3Rlckxpc3Q7Il0sIm5hbWVzIjpbIkNoYXJhY3Rlck1ldGFkYXRhIiwicmVxdWlyZSIsIkltbXV0YWJsZSIsIkxpc3QiLCJjcmVhdGVDaGFyYWN0ZXJMaXN0IiwiaW5saW5lU3R5bGVzIiwiZW50aXRpZXMiLCJjaGFyYWN0ZXJBcnJheSIsIm1hcCIsInN0eWxlIiwiaWkiLCJlbnRpdHkiLCJjcmVhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/createCharacterList.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/decodeEntityRanges.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/decodeEntityRanges.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UnicodeUtils = __webpack_require__(/*! fbjs/lib/UnicodeUtils */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\");\nvar substr = UnicodeUtils.substr;\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */ function decodeEntityRanges(text, ranges) {\n    var entities = Array(text.length).fill(null);\n    if (ranges) {\n        ranges.forEach(function(range) {\n            // Using Unicode-enabled substrings converted to JavaScript lengths,\n            // fill the output array with entity keys.\n            var start = substr(text, 0, range.offset).length;\n            var end = start + substr(text, range.offset, range.length).length;\n            for(var ii = start; ii < end; ii++){\n                entities[ii] = range.key;\n            }\n        });\n    }\n    return entities;\n}\nmodule.exports = decodeEntityRanges;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZGVjb2RlRW50aXR5UmFuZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUMsMEZBQXVCO0FBRWxELElBQUlDLFNBQVNGLGFBQWFFLE1BQU07QUFDaEM7O0NBRUMsR0FFRCxTQUFTQyxtQkFBbUJDLElBQUksRUFBRUMsTUFBTTtJQUN0QyxJQUFJQyxXQUFXQyxNQUFNSCxLQUFLSSxNQUFNLEVBQUVDLElBQUksQ0FBQztJQUV2QyxJQUFJSixRQUFRO1FBQ1ZBLE9BQU9LLE9BQU8sQ0FBQyxTQUFVQyxLQUFLO1lBQzVCLG9FQUFvRTtZQUNwRSwwQ0FBMEM7WUFDMUMsSUFBSUMsUUFBUVYsT0FBT0UsTUFBTSxHQUFHTyxNQUFNRSxNQUFNLEVBQUVMLE1BQU07WUFDaEQsSUFBSU0sTUFBTUYsUUFBUVYsT0FBT0UsTUFBTU8sTUFBTUUsTUFBTSxFQUFFRixNQUFNSCxNQUFNLEVBQUVBLE1BQU07WUFFakUsSUFBSyxJQUFJTyxLQUFLSCxPQUFPRyxLQUFLRCxLQUFLQyxLQUFNO2dCQUNuQ1QsUUFBUSxDQUFDUyxHQUFHLEdBQUdKLE1BQU1LLEdBQUc7WUFDMUI7UUFDRjtJQUNGO0lBRUEsT0FBT1Y7QUFDVDtBQUVBVyxPQUFPQyxPQUFPLEdBQUdmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZGVjb2RlRW50aXR5UmFuZ2VzLmpzP2VkYjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIFVuaWNvZGVVdGlscyA9IHJlcXVpcmUoXCJmYmpzL2xpYi9Vbmljb2RlVXRpbHNcIik7XG5cbnZhciBzdWJzdHIgPSBVbmljb2RlVXRpbHMuc3Vic3RyO1xuLyoqXG4gKiBDb252ZXJ0IHRvIG5hdGl2ZSBKYXZhU2NyaXB0IHN0cmluZyBsZW5ndGhzIHRvIGRldGVybWluZSByYW5nZXMuXG4gKi9cblxuZnVuY3Rpb24gZGVjb2RlRW50aXR5UmFuZ2VzKHRleHQsIHJhbmdlcykge1xuICB2YXIgZW50aXRpZXMgPSBBcnJheSh0ZXh0Lmxlbmd0aCkuZmlsbChudWxsKTtcblxuICBpZiAocmFuZ2VzKSB7XG4gICAgcmFuZ2VzLmZvckVhY2goZnVuY3Rpb24gKHJhbmdlKSB7XG4gICAgICAvLyBVc2luZyBVbmljb2RlLWVuYWJsZWQgc3Vic3RyaW5ncyBjb252ZXJ0ZWQgdG8gSmF2YVNjcmlwdCBsZW5ndGhzLFxuICAgICAgLy8gZmlsbCB0aGUgb3V0cHV0IGFycmF5IHdpdGggZW50aXR5IGtleXMuXG4gICAgICB2YXIgc3RhcnQgPSBzdWJzdHIodGV4dCwgMCwgcmFuZ2Uub2Zmc2V0KS5sZW5ndGg7XG4gICAgICB2YXIgZW5kID0gc3RhcnQgKyBzdWJzdHIodGV4dCwgcmFuZ2Uub2Zmc2V0LCByYW5nZS5sZW5ndGgpLmxlbmd0aDtcblxuICAgICAgZm9yICh2YXIgaWkgPSBzdGFydDsgaWkgPCBlbmQ7IGlpKyspIHtcbiAgICAgICAgZW50aXRpZXNbaWldID0gcmFuZ2Uua2V5O1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGVudGl0aWVzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlY29kZUVudGl0eVJhbmdlczsiXSwibmFtZXMiOlsiVW5pY29kZVV0aWxzIiwicmVxdWlyZSIsInN1YnN0ciIsImRlY29kZUVudGl0eVJhbmdlcyIsInRleHQiLCJyYW5nZXMiLCJlbnRpdGllcyIsIkFycmF5IiwibGVuZ3RoIiwiZmlsbCIsImZvckVhY2giLCJyYW5nZSIsInN0YXJ0Iiwib2Zmc2V0IiwiZW5kIiwiaWkiLCJrZXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/decodeEntityRanges.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/decodeInlineStyleRanges.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/decodeInlineStyleRanges.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UnicodeUtils = __webpack_require__(/*! fbjs/lib/UnicodeUtils */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\");\nvar _require = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\"), OrderedSet = _require.OrderedSet;\nvar substr = UnicodeUtils.substr;\nvar EMPTY_SET = OrderedSet();\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */ function decodeInlineStyleRanges(text, ranges) {\n    var styles = Array(text.length).fill(EMPTY_SET);\n    if (ranges) {\n        ranges.forEach(function(range) {\n            var cursor = substr(text, 0, range.offset).length;\n            var end = cursor + substr(text, range.offset, range.length).length;\n            while(cursor < end){\n                styles[cursor] = styles[cursor].add(range.style);\n                cursor++;\n            }\n        });\n    }\n    return styles;\n}\nmodule.exports = decodeInlineStyleRanges;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZGVjb2RlSW5saW5lU3R5bGVSYW5nZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxlQUFlQyxtQkFBT0EsQ0FBQywwRkFBdUI7QUFFbEQsSUFBSUMsV0FBV0QsbUJBQU9BLENBQUMsdUdBQVcsR0FDOUJFLGFBQWFELFNBQVNDLFVBQVU7QUFFcEMsSUFBSUMsU0FBU0osYUFBYUksTUFBTTtBQUNoQyxJQUFJQyxZQUFZRjtBQUNoQjs7Q0FFQyxHQUVELFNBQVNHLHdCQUF3QkMsSUFBSSxFQUFFQyxNQUFNO0lBQzNDLElBQUlDLFNBQVNDLE1BQU1ILEtBQUtJLE1BQU0sRUFBRUMsSUFBSSxDQUFDUDtJQUVyQyxJQUFJRyxRQUFRO1FBQ1ZBLE9BQU9LLE9BQU8sQ0FBQyxTQUFVQyxLQUFLO1lBQzVCLElBQUlDLFNBQVNYLE9BQU9HLE1BQU0sR0FBR08sTUFBTUUsTUFBTSxFQUFFTCxNQUFNO1lBQ2pELElBQUlNLE1BQU1GLFNBQVNYLE9BQU9HLE1BQU1PLE1BQU1FLE1BQU0sRUFBRUYsTUFBTUgsTUFBTSxFQUFFQSxNQUFNO1lBRWxFLE1BQU9JLFNBQVNFLElBQUs7Z0JBQ25CUixNQUFNLENBQUNNLE9BQU8sR0FBR04sTUFBTSxDQUFDTSxPQUFPLENBQUNHLEdBQUcsQ0FBQ0osTUFBTUssS0FBSztnQkFDL0NKO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsT0FBT047QUFDVDtBQUVBVyxPQUFPQyxPQUFPLEdBQUdmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZGVjb2RlSW5saW5lU3R5bGVSYW5nZXMuanM/ZWIxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVW5pY29kZVV0aWxzID0gcmVxdWlyZShcImZianMvbGliL1VuaWNvZGVVdGlsc1wiKTtcblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZShcImltbXV0YWJsZVwiKSxcbiAgICBPcmRlcmVkU2V0ID0gX3JlcXVpcmUuT3JkZXJlZFNldDtcblxudmFyIHN1YnN0ciA9IFVuaWNvZGVVdGlscy5zdWJzdHI7XG52YXIgRU1QVFlfU0VUID0gT3JkZXJlZFNldCgpO1xuLyoqXG4gKiBDb252ZXJ0IHRvIG5hdGl2ZSBKYXZhU2NyaXB0IHN0cmluZyBsZW5ndGhzIHRvIGRldGVybWluZSByYW5nZXMuXG4gKi9cblxuZnVuY3Rpb24gZGVjb2RlSW5saW5lU3R5bGVSYW5nZXModGV4dCwgcmFuZ2VzKSB7XG4gIHZhciBzdHlsZXMgPSBBcnJheSh0ZXh0Lmxlbmd0aCkuZmlsbChFTVBUWV9TRVQpO1xuXG4gIGlmIChyYW5nZXMpIHtcbiAgICByYW5nZXMuZm9yRWFjaChmdW5jdGlvbiAocmFuZ2UpIHtcbiAgICAgIHZhciBjdXJzb3IgPSBzdWJzdHIodGV4dCwgMCwgcmFuZ2Uub2Zmc2V0KS5sZW5ndGg7XG4gICAgICB2YXIgZW5kID0gY3Vyc29yICsgc3Vic3RyKHRleHQsIHJhbmdlLm9mZnNldCwgcmFuZ2UubGVuZ3RoKS5sZW5ndGg7XG5cbiAgICAgIHdoaWxlIChjdXJzb3IgPCBlbmQpIHtcbiAgICAgICAgc3R5bGVzW2N1cnNvcl0gPSBzdHlsZXNbY3Vyc29yXS5hZGQocmFuZ2Uuc3R5bGUpO1xuICAgICAgICBjdXJzb3IrKztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZGVjb2RlSW5saW5lU3R5bGVSYW5nZXM7Il0sIm5hbWVzIjpbIlVuaWNvZGVVdGlscyIsInJlcXVpcmUiLCJfcmVxdWlyZSIsIk9yZGVyZWRTZXQiLCJzdWJzdHIiLCJFTVBUWV9TRVQiLCJkZWNvZGVJbmxpbmVTdHlsZVJhbmdlcyIsInRleHQiLCJyYW5nZXMiLCJzdHlsZXMiLCJBcnJheSIsImxlbmd0aCIsImZpbGwiLCJmb3JFYWNoIiwicmFuZ2UiLCJjdXJzb3IiLCJvZmZzZXQiLCJlbmQiLCJhZGQiLCJzdHlsZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/decodeInlineStyleRanges.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/draftKeyUtils.js":
/*!****************************************************!*\
  !*** ./node_modules/draft-js/lib/draftKeyUtils.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Provides utilities for handling draftjs keys.\n *\n * @emails oncall+draft_js\n * \n * @format\n */ \nfunction notEmptyKey(key) {\n    return key != null && key != \"\";\n}\nmodule.exports = {\n    notEmptyKey: notEmptyKey\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZHJhZnRLZXlVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Q0FXQyxHQUNEO0FBRUEsU0FBU0EsWUFBWUMsR0FBRztJQUN0QixPQUFPQSxPQUFPLFFBQVFBLE9BQU87QUFDL0I7QUFFQUMsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZILGFBQWFBO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9kcmFmdEtleVV0aWxzLmpzP2Q5MTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBQcm92aWRlcyB1dGlsaXRpZXMgZm9yIGhhbmRsaW5nIGRyYWZ0anMga2V5cy5cbiAqXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICogXG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gbm90RW1wdHlLZXkoa2V5KSB7XG4gIHJldHVybiBrZXkgIT0gbnVsbCAmJiBrZXkgIT0gJyc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBub3RFbXB0eUtleTogbm90RW1wdHlLZXlcbn07Il0sIm5hbWVzIjpbIm5vdEVtcHR5S2V5Iiwia2V5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/draftKeyUtils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnBeforeInput.js":
/*!********************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnBeforeInput.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar getEntityKeyForSelection = __webpack_require__(/*! ./getEntityKeyForSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/getEntityKeyForSelection.js\");\nvar isEventHandled = __webpack_require__(/*! ./isEventHandled */ \"(app-pages-browser)/./node_modules/draft-js/lib/isEventHandled.js\");\nvar isSelectionAtLeafStart = __webpack_require__(/*! ./isSelectionAtLeafStart */ \"(app-pages-browser)/./node_modules/draft-js/lib/isSelectionAtLeafStart.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar setImmediate = __webpack_require__(/*! fbjs/lib/setImmediate */ \"(app-pages-browser)/./node_modules/fbjs/lib/setImmediate.js\"); // When nothing is focused, Firefox regards two characters, `'` and `/`, as\n// commands that should open and focus the \"quickfind\" search bar. This should\n// *never* happen while a contenteditable is focused, but as of v28, it\n// sometimes does, even when the keypress event target is the contenteditable.\n// This breaks the input. Special case these characters to ensure that when\n// they are typed, we prevent default on the event to make sure not to\n// trigger quickfind.\nvar FF_QUICKFIND_CHAR = \"'\";\nvar FF_QUICKFIND_LINK_CHAR = \"/\";\nvar isFirefox = UserAgent.isBrowser(\"Firefox\");\nfunction mustPreventDefaultForCharacter(character) {\n    return isFirefox && (character == FF_QUICKFIND_CHAR || character == FF_QUICKFIND_LINK_CHAR);\n}\n/**\n * Replace the current selection with the specified text string, with the\n * inline style and entity key applied to the newly inserted text.\n */ function replaceText(editorState, text, inlineStyle, entityKey, forceSelection) {\n    var contentState = DraftModifier.replaceText(editorState.getCurrentContent(), editorState.getSelection(), text, inlineStyle, entityKey);\n    return EditorState.push(editorState, contentState, \"insert-characters\", forceSelection);\n}\n/**\n * When `onBeforeInput` executes, the browser is attempting to insert a\n * character into the editor. Apply this character data to the document,\n * allowing native insertion if possible.\n *\n * Native insertion is encouraged in order to limit re-rendering and to\n * preserve spellcheck highlighting, which disappears or flashes if re-render\n * occurs on the relevant text nodes.\n */ function editOnBeforeInput(editor, e) {\n    if (editor._pendingStateFromBeforeInput !== undefined) {\n        editor.update(editor._pendingStateFromBeforeInput);\n        editor._pendingStateFromBeforeInput = undefined;\n    }\n    var editorState = editor._latestEditorState;\n    var chars = e.data; // In some cases (ex: IE ideographic space insertion) no character data\n    // is provided. There's nothing to do when this happens.\n    if (!chars) {\n        return;\n    } // Allow the top-level component to handle the insertion manually. This is\n    // useful when triggering interesting behaviors for a character insertion,\n    // Simple examples: replacing a raw text ':)' with a smile emoji or image\n    // decorator, or setting a block to be a list item after typing '- ' at the\n    // start of the block.\n    if (editor.props.handleBeforeInput && isEventHandled(editor.props.handleBeforeInput(chars, editorState, e.timeStamp))) {\n        e.preventDefault();\n        return;\n    } // If selection is collapsed, conditionally allow native behavior. This\n    // reduces re-renders and preserves spellcheck highlighting. If the selection\n    // is not collapsed, we will re-render.\n    var selection = editorState.getSelection();\n    var selectionStart = selection.getStartOffset();\n    var anchorKey = selection.getAnchorKey();\n    if (!selection.isCollapsed()) {\n        e.preventDefault();\n        editor.update(replaceText(editorState, chars, editorState.getCurrentInlineStyle(), getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection()), true));\n        return;\n    }\n    var newEditorState = replaceText(editorState, chars, editorState.getCurrentInlineStyle(), getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection()), false); // Bunch of different cases follow where we need to prevent native insertion.\n    var mustPreventNative = false;\n    if (!mustPreventNative) {\n        // Browsers tend to insert text in weird places in the DOM when typing at\n        // the start of a leaf, so we'll handle it ourselves.\n        mustPreventNative = isSelectionAtLeafStart(editor._latestCommittedEditorState);\n    }\n    if (!mustPreventNative) {\n        // Let's say we have a decorator that highlights hashtags. In many cases\n        // we need to prevent native behavior and rerender ourselves --\n        // particularly, any case *except* where the inserted characters end up\n        // anywhere except exactly where you put them.\n        //\n        // Using [] to denote a decorated leaf, some examples:\n        //\n        // 1. 'hi #' and append 'f'\n        // desired rendering: 'hi [#f]'\n        // native rendering would be: 'hi #f' (incorrect)\n        //\n        // 2. 'x [#foo]' and insert '#' before 'f'\n        // desired rendering: 'x #[#foo]'\n        // native rendering would be: 'x [##foo]' (incorrect)\n        //\n        // 3. '[#foobar]' and insert ' ' between 'foo' and 'bar'\n        // desired rendering: '[#foo] bar'\n        // native rendering would be: '[#foo bar]' (incorrect)\n        //\n        // 4. '[#foo]' and delete '#' [won't use this beforeinput codepath though]\n        // desired rendering: 'foo'\n        // native rendering would be: '[foo]' (incorrect)\n        //\n        // 5. '[#foo]' and append 'b'\n        // desired rendering: '[#foob]'\n        // native rendering would be: '[#foob]'\n        // (native insertion here would be ok for decorators like simple spans,\n        // but not more complex decorators. To be safe, we need to prevent it.)\n        //\n        // It is safe to allow native insertion if and only if the full list of\n        // decorator ranges matches what we expect native insertion to give, and\n        // the range lengths have not changed. We don't need to compare the content\n        // because the only possible mutation to consider here is inserting plain\n        // text and decorators can't affect text content.\n        var oldBlockTree = editorState.getBlockTree(anchorKey);\n        var newBlockTree = newEditorState.getBlockTree(anchorKey);\n        mustPreventNative = oldBlockTree.size !== newBlockTree.size || oldBlockTree.zip(newBlockTree).some(function(_ref) {\n            var oldLeafSet = _ref[0], newLeafSet = _ref[1];\n            // selectionStart is guaranteed to be selectionEnd here\n            var oldStart = oldLeafSet.get(\"start\");\n            var adjustedStart = oldStart + (oldStart >= selectionStart ? chars.length : 0);\n            var oldEnd = oldLeafSet.get(\"end\");\n            var adjustedEnd = oldEnd + (oldEnd >= selectionStart ? chars.length : 0);\n            var newStart = newLeafSet.get(\"start\");\n            var newEnd = newLeafSet.get(\"end\");\n            var newDecoratorKey = newLeafSet.get(\"decoratorKey\");\n            return oldLeafSet.get(\"decoratorKey\") !== newDecoratorKey || // Different number of inline styles\n            oldLeafSet.get(\"leaves\").size !== newLeafSet.get(\"leaves\").size || // Different effective decorator position\n            adjustedStart !== newStart || adjustedEnd !== newEnd || // Decorator already existed and its length changed\n            newDecoratorKey != null && newEnd - newStart !== oldEnd - oldStart;\n        });\n    }\n    if (!mustPreventNative) {\n        mustPreventNative = mustPreventDefaultForCharacter(chars);\n    }\n    if (!mustPreventNative) {\n        mustPreventNative = nullthrows(newEditorState.getDirectionMap()).get(anchorKey) !== nullthrows(editorState.getDirectionMap()).get(anchorKey);\n    }\n    if (mustPreventNative) {\n        e.preventDefault();\n        newEditorState = EditorState.set(newEditorState, {\n            forceSelection: true\n        });\n        editor.update(newEditorState);\n        return;\n    } // We made it all the way! Let the browser do its thing and insert the char.\n    newEditorState = EditorState.set(newEditorState, {\n        nativelyRenderedContent: newEditorState.getCurrentContent()\n    }); // The native event is allowed to occur. To allow user onChange handlers to\n    // change the inserted text, we wait until the text is actually inserted\n    // before we actually update our state. That way when we rerender, the text\n    // we see in the DOM will already have been inserted properly.\n    editor._pendingStateFromBeforeInput = newEditorState;\n    setImmediate(function() {\n        if (editor._pendingStateFromBeforeInput !== undefined) {\n            editor.update(editor._pendingStateFromBeforeInput);\n            editor._pendingStateFromBeforeInput = undefined;\n        }\n    });\n}\nmodule.exports = editOnBeforeInput;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnBeforeInput.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnBlur.js":
/*!*************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnBlur.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ \"(app-pages-browser)/./node_modules/fbjs/lib/containsNode.js\");\nvar getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ \"(app-pages-browser)/./node_modules/fbjs/lib/getActiveElement.js\");\nfunction editOnBlur(editor, e) {\n    // In a contentEditable element, when you select a range and then click\n    // another active element, this does trigger a `blur` event but will not\n    // remove the DOM selection from the contenteditable.\n    // This is consistent across all browsers, but we prefer that the editor\n    // behave like a textarea, where a `blur` event clears the DOM selection.\n    // We therefore force the issue to be certain, checking whether the active\n    // element is `body` to force it when blurring occurs within the window (as\n    // opposed to clicking to another tab or window).\n    var ownerDocument = e.currentTarget.ownerDocument;\n    if (// eslint-disable-next-line no-extra-boolean-cast\n    !Boolean(editor.props.preserveSelectionOnBlur) && getActiveElement(ownerDocument) === ownerDocument.body) {\n        var _selection = ownerDocument.defaultView.getSelection();\n        var editorNode = editor.editor;\n        if (_selection.rangeCount === 1 && containsNode(editorNode, _selection.anchorNode) && containsNode(editorNode, _selection.focusNode)) {\n            _selection.removeAllRanges();\n        }\n    }\n    var editorState = editor._latestEditorState;\n    var currentSelection = editorState.getSelection();\n    if (!currentSelection.getHasFocus()) {\n        return;\n    }\n    var selection = currentSelection.set(\"hasFocus\", false);\n    editor.props.onBlur && editor.props.onBlur(e);\n    editor.update(EditorState.acceptSelection(editorState, selection));\n}\nmodule.exports = editOnBlur;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uQmx1ci5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDLHFGQUFlO0FBRXpDLElBQUlDLGVBQWVELG1CQUFPQSxDQUFDLDBGQUF1QjtBQUVsRCxJQUFJRSxtQkFBbUJGLG1CQUFPQSxDQUFDLGtHQUEyQjtBQUUxRCxTQUFTRyxXQUFXQyxNQUFNLEVBQUVDLENBQUM7SUFDM0IsdUVBQXVFO0lBQ3ZFLHdFQUF3RTtJQUN4RSxxREFBcUQ7SUFDckQsd0VBQXdFO0lBQ3hFLHlFQUF5RTtJQUN6RSwwRUFBMEU7SUFDMUUsMkVBQTJFO0lBQzNFLGlEQUFpRDtJQUNqRCxJQUFJQyxnQkFBZ0JELEVBQUVFLGFBQWEsQ0FBQ0QsYUFBYTtJQUVqRCxJQUNBLGlEQUFpRDtJQUNqRCxDQUFDRSxRQUFRSixPQUFPSyxLQUFLLENBQUNDLHVCQUF1QixLQUFLUixpQkFBaUJJLG1CQUFtQkEsY0FBY0ssSUFBSSxFQUFFO1FBQ3hHLElBQUlDLGFBQWFOLGNBQWNPLFdBQVcsQ0FBQ0MsWUFBWTtRQUV2RCxJQUFJQyxhQUFhWCxPQUFPQSxNQUFNO1FBRTlCLElBQUlRLFdBQVdJLFVBQVUsS0FBSyxLQUFLZixhQUFhYyxZQUFZSCxXQUFXSyxVQUFVLEtBQUtoQixhQUFhYyxZQUFZSCxXQUFXTSxTQUFTLEdBQUc7WUFDcElOLFdBQVdPLGVBQWU7UUFDNUI7SUFDRjtJQUVBLElBQUlDLGNBQWNoQixPQUFPaUIsa0JBQWtCO0lBQzNDLElBQUlDLG1CQUFtQkYsWUFBWU4sWUFBWTtJQUUvQyxJQUFJLENBQUNRLGlCQUFpQkMsV0FBVyxJQUFJO1FBQ25DO0lBQ0Y7SUFFQSxJQUFJQyxZQUFZRixpQkFBaUJHLEdBQUcsQ0FBQyxZQUFZO0lBQ2pEckIsT0FBT0ssS0FBSyxDQUFDaUIsTUFBTSxJQUFJdEIsT0FBT0ssS0FBSyxDQUFDaUIsTUFBTSxDQUFDckI7SUFDM0NELE9BQU91QixNQUFNLENBQUM1QixZQUFZNkIsZUFBZSxDQUFDUixhQUFhSTtBQUN6RDtBQUVBSyxPQUFPQyxPQUFPLEdBQUczQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2VkaXRPbkJsdXIuanM/NDVkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcblxudmFyIGNvbnRhaW5zTm9kZSA9IHJlcXVpcmUoXCJmYmpzL2xpYi9jb250YWluc05vZGVcIik7XG5cbnZhciBnZXRBY3RpdmVFbGVtZW50ID0gcmVxdWlyZShcImZianMvbGliL2dldEFjdGl2ZUVsZW1lbnRcIik7XG5cbmZ1bmN0aW9uIGVkaXRPbkJsdXIoZWRpdG9yLCBlKSB7XG4gIC8vIEluIGEgY29udGVudEVkaXRhYmxlIGVsZW1lbnQsIHdoZW4geW91IHNlbGVjdCBhIHJhbmdlIGFuZCB0aGVuIGNsaWNrXG4gIC8vIGFub3RoZXIgYWN0aXZlIGVsZW1lbnQsIHRoaXMgZG9lcyB0cmlnZ2VyIGEgYGJsdXJgIGV2ZW50IGJ1dCB3aWxsIG5vdFxuICAvLyByZW1vdmUgdGhlIERPTSBzZWxlY3Rpb24gZnJvbSB0aGUgY29udGVudGVkaXRhYmxlLlxuICAvLyBUaGlzIGlzIGNvbnNpc3RlbnQgYWNyb3NzIGFsbCBicm93c2VycywgYnV0IHdlIHByZWZlciB0aGF0IHRoZSBlZGl0b3JcbiAgLy8gYmVoYXZlIGxpa2UgYSB0ZXh0YXJlYSwgd2hlcmUgYSBgYmx1cmAgZXZlbnQgY2xlYXJzIHRoZSBET00gc2VsZWN0aW9uLlxuICAvLyBXZSB0aGVyZWZvcmUgZm9yY2UgdGhlIGlzc3VlIHRvIGJlIGNlcnRhaW4sIGNoZWNraW5nIHdoZXRoZXIgdGhlIGFjdGl2ZVxuICAvLyBlbGVtZW50IGlzIGBib2R5YCB0byBmb3JjZSBpdCB3aGVuIGJsdXJyaW5nIG9jY3VycyB3aXRoaW4gdGhlIHdpbmRvdyAoYXNcbiAgLy8gb3Bwb3NlZCB0byBjbGlja2luZyB0byBhbm90aGVyIHRhYiBvciB3aW5kb3cpLlxuICB2YXIgb3duZXJEb2N1bWVudCA9IGUuY3VycmVudFRhcmdldC5vd25lckRvY3VtZW50O1xuXG4gIGlmICggLy8gVGhpcyBFU0xpbnQgcnVsZSBjb25mbGljdHMgd2l0aCBgc2tldGNoeS1udWxsLWJvb2xgIGZsb3cgY2hlY2tcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWV4dHJhLWJvb2xlYW4tY2FzdFxuICAhQm9vbGVhbihlZGl0b3IucHJvcHMucHJlc2VydmVTZWxlY3Rpb25PbkJsdXIpICYmIGdldEFjdGl2ZUVsZW1lbnQob3duZXJEb2N1bWVudCkgPT09IG93bmVyRG9jdW1lbnQuYm9keSkge1xuICAgIHZhciBfc2VsZWN0aW9uID0gb3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRTZWxlY3Rpb24oKTtcblxuICAgIHZhciBlZGl0b3JOb2RlID0gZWRpdG9yLmVkaXRvcjtcblxuICAgIGlmIChfc2VsZWN0aW9uLnJhbmdlQ291bnQgPT09IDEgJiYgY29udGFpbnNOb2RlKGVkaXRvck5vZGUsIF9zZWxlY3Rpb24uYW5jaG9yTm9kZSkgJiYgY29udGFpbnNOb2RlKGVkaXRvck5vZGUsIF9zZWxlY3Rpb24uZm9jdXNOb2RlKSkge1xuICAgICAgX3NlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICB9XG4gIH1cblxuICB2YXIgZWRpdG9yU3RhdGUgPSBlZGl0b3IuX2xhdGVzdEVkaXRvclN0YXRlO1xuICB2YXIgY3VycmVudFNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpO1xuXG4gIGlmICghY3VycmVudFNlbGVjdGlvbi5nZXRIYXNGb2N1cygpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHNlbGVjdGlvbiA9IGN1cnJlbnRTZWxlY3Rpb24uc2V0KCdoYXNGb2N1cycsIGZhbHNlKTtcbiAgZWRpdG9yLnByb3BzLm9uQmx1ciAmJiBlZGl0b3IucHJvcHMub25CbHVyKGUpO1xuICBlZGl0b3IudXBkYXRlKEVkaXRvclN0YXRlLmFjY2VwdFNlbGVjdGlvbihlZGl0b3JTdGF0ZSwgc2VsZWN0aW9uKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZWRpdE9uQmx1cjsiXSwibmFtZXMiOlsiRWRpdG9yU3RhdGUiLCJyZXF1aXJlIiwiY29udGFpbnNOb2RlIiwiZ2V0QWN0aXZlRWxlbWVudCIsImVkaXRPbkJsdXIiLCJlZGl0b3IiLCJlIiwib3duZXJEb2N1bWVudCIsImN1cnJlbnRUYXJnZXQiLCJCb29sZWFuIiwicHJvcHMiLCJwcmVzZXJ2ZVNlbGVjdGlvbk9uQmx1ciIsImJvZHkiLCJfc2VsZWN0aW9uIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJlZGl0b3JOb2RlIiwicmFuZ2VDb3VudCIsImFuY2hvck5vZGUiLCJmb2N1c05vZGUiLCJyZW1vdmVBbGxSYW5nZXMiLCJlZGl0b3JTdGF0ZSIsIl9sYXRlc3RFZGl0b3JTdGF0ZSIsImN1cnJlbnRTZWxlY3Rpb24iLCJnZXRIYXNGb2N1cyIsInNlbGVjdGlvbiIsInNldCIsIm9uQmx1ciIsInVwZGF0ZSIsImFjY2VwdFNlbGVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnBlur.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnCompositionStart.js":
/*!*************************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnCompositionStart.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\n/**\n * The user has begun using an IME input system. Switching to `composite` mode\n * allows handling composition input and disables other edit behavior.\n */ function editOnCompositionStart(editor, e) {\n    editor.setMode(\"composite\");\n    editor.update(EditorState.set(editor._latestEditorState, {\n        inCompositionMode: true\n    })); // Allow composition handler to interpret the compositionstart event\n    editor._onCompositionStart(e);\n}\nmodule.exports = editOnCompositionStart;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uQ29tcG9zaXRpb25TdGFydC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDLHFGQUFlO0FBQ3pDOzs7Q0FHQyxHQUdELFNBQVNDLHVCQUF1QkMsTUFBTSxFQUFFQyxDQUFDO0lBQ3ZDRCxPQUFPRSxPQUFPLENBQUM7SUFDZkYsT0FBT0csTUFBTSxDQUFDTixZQUFZTyxHQUFHLENBQUNKLE9BQU9LLGtCQUFrQixFQUFFO1FBQ3ZEQyxtQkFBbUI7SUFDckIsS0FBSyxvRUFBb0U7SUFFekVOLE9BQU9PLG1CQUFtQixDQUFDTjtBQUM3QjtBQUVBTyxPQUFPQyxPQUFPLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uQ29tcG9zaXRpb25TdGFydC5qcz84OTI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFZGl0b3JTdGF0ZSA9IHJlcXVpcmUoXCIuL0VkaXRvclN0YXRlXCIpO1xuLyoqXG4gKiBUaGUgdXNlciBoYXMgYmVndW4gdXNpbmcgYW4gSU1FIGlucHV0IHN5c3RlbS4gU3dpdGNoaW5nIHRvIGBjb21wb3NpdGVgIG1vZGVcbiAqIGFsbG93cyBoYW5kbGluZyBjb21wb3NpdGlvbiBpbnB1dCBhbmQgZGlzYWJsZXMgb3RoZXIgZWRpdCBiZWhhdmlvci5cbiAqL1xuXG5cbmZ1bmN0aW9uIGVkaXRPbkNvbXBvc2l0aW9uU3RhcnQoZWRpdG9yLCBlKSB7XG4gIGVkaXRvci5zZXRNb2RlKCdjb21wb3NpdGUnKTtcbiAgZWRpdG9yLnVwZGF0ZShFZGl0b3JTdGF0ZS5zZXQoZWRpdG9yLl9sYXRlc3RFZGl0b3JTdGF0ZSwge1xuICAgIGluQ29tcG9zaXRpb25Nb2RlOiB0cnVlXG4gIH0pKTsgLy8gQWxsb3cgY29tcG9zaXRpb24gaGFuZGxlciB0byBpbnRlcnByZXQgdGhlIGNvbXBvc2l0aW9uc3RhcnQgZXZlbnRcblxuICBlZGl0b3IuX29uQ29tcG9zaXRpb25TdGFydChlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlZGl0T25Db21wb3NpdGlvblN0YXJ0OyJdLCJuYW1lcyI6WyJFZGl0b3JTdGF0ZSIsInJlcXVpcmUiLCJlZGl0T25Db21wb3NpdGlvblN0YXJ0IiwiZWRpdG9yIiwiZSIsInNldE1vZGUiLCJ1cGRhdGUiLCJzZXQiLCJfbGF0ZXN0RWRpdG9yU3RhdGUiLCJpbkNvbXBvc2l0aW9uTW9kZSIsIl9vbkNvbXBvc2l0aW9uU3RhcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnCompositionStart.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnCopy.js":
/*!*************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnCopy.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar getFragmentFromSelection = __webpack_require__(/*! ./getFragmentFromSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/getFragmentFromSelection.js\");\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */ function editOnCopy(editor, e) {\n    var editorState = editor._latestEditorState;\n    var selection = editorState.getSelection(); // No selection, so there's nothing to copy.\n    if (selection.isCollapsed()) {\n        e.preventDefault();\n        return;\n    }\n    editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\nmodule.exports = editOnCopy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uQ29weS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLDJCQUEyQkMsbUJBQU9BLENBQUMsK0dBQTRCO0FBQ25FOzs7O0NBSUMsR0FHRCxTQUFTQyxXQUFXQyxNQUFNLEVBQUVDLENBQUM7SUFDM0IsSUFBSUMsY0FBY0YsT0FBT0csa0JBQWtCO0lBQzNDLElBQUlDLFlBQVlGLFlBQVlHLFlBQVksSUFBSSw0Q0FBNEM7SUFFeEYsSUFBSUQsVUFBVUUsV0FBVyxJQUFJO1FBQzNCTCxFQUFFTSxjQUFjO1FBQ2hCO0lBQ0Y7SUFFQVAsT0FBT1EsWUFBWSxDQUFDWCx5QkFBeUJHLE9BQU9HLGtCQUFrQjtBQUN4RTtBQUVBTSxPQUFPQyxPQUFPLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uQ29weS5qcz9lNzVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBnZXRGcmFnbWVudEZyb21TZWxlY3Rpb24gPSByZXF1aXJlKFwiLi9nZXRGcmFnbWVudEZyb21TZWxlY3Rpb25cIik7XG4vKipcbiAqIElmIHdlIGhhdmUgYSBzZWxlY3Rpb24sIGNyZWF0ZSBhIENvbnRlbnRTdGF0ZSBmcmFnbWVudCBhbmQgc3RvcmVcbiAqIGl0IGluIG91ciBpbnRlcm5hbCBjbGlwYm9hcmQuIFN1YnNlcXVlbnQgcGFzdGUgZXZlbnRzIHdpbGwgdXNlIHRoaXNcbiAqIGZyYWdtZW50IGlmIG5vIGV4dGVybmFsIGNsaXBib2FyZCBkYXRhIGlzIHN1cHBsaWVkLlxuICovXG5cblxuZnVuY3Rpb24gZWRpdE9uQ29weShlZGl0b3IsIGUpIHtcbiAgdmFyIGVkaXRvclN0YXRlID0gZWRpdG9yLl9sYXRlc3RFZGl0b3JTdGF0ZTtcbiAgdmFyIHNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpOyAvLyBObyBzZWxlY3Rpb24sIHNvIHRoZXJlJ3Mgbm90aGluZyB0byBjb3B5LlxuXG4gIGlmIChzZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBlZGl0b3Iuc2V0Q2xpcGJvYXJkKGdldEZyYWdtZW50RnJvbVNlbGVjdGlvbihlZGl0b3IuX2xhdGVzdEVkaXRvclN0YXRlKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZWRpdE9uQ29weTsiXSwibmFtZXMiOlsiZ2V0RnJhZ21lbnRGcm9tU2VsZWN0aW9uIiwicmVxdWlyZSIsImVkaXRPbkNvcHkiLCJlZGl0b3IiLCJlIiwiZWRpdG9yU3RhdGUiLCJfbGF0ZXN0RWRpdG9yU3RhdGUiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3Rpb24iLCJpc0NvbGxhcHNlZCIsInByZXZlbnREZWZhdWx0Iiwic2V0Q2xpcGJvYXJkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnCopy.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnCut.js":
/*!************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnCut.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar Style = __webpack_require__(/*! fbjs/lib/Style */ \"(app-pages-browser)/./node_modules/fbjs/lib/Style.js\");\nvar getFragmentFromSelection = __webpack_require__(/*! ./getFragmentFromSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/getFragmentFromSelection.js\");\nvar getScrollPosition = __webpack_require__(/*! fbjs/lib/getScrollPosition */ \"(app-pages-browser)/./node_modules/fbjs/lib/getScrollPosition.js\");\nvar isNode = __webpack_require__(/*! ./isInstanceOfNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/isInstanceOfNode.js\");\n/**\n * On `cut` events, native behavior is allowed to occur so that the system\n * clipboard is set properly. This means that we need to take steps to recover\n * the editor DOM state after the `cut` has occurred in order to maintain\n * control of the component.\n *\n * In addition, we can keep a copy of the removed fragment, including all\n * styles and entities, for use as an internal paste.\n */ function editOnCut(editor, e) {\n    var editorState = editor._latestEditorState;\n    var selection = editorState.getSelection();\n    var element = e.target;\n    var scrollPosition; // No selection, so there's nothing to cut.\n    if (selection.isCollapsed()) {\n        e.preventDefault();\n        return;\n    } // Track the current scroll position so that it can be forced back in place\n    // after the editor regains control of the DOM.\n    if (isNode(element)) {\n        var node = element;\n        scrollPosition = getScrollPosition(Style.getScrollParent(node));\n    }\n    var fragment = getFragmentFromSelection(editorState);\n    editor.setClipboard(fragment); // Set `cut` mode to disable all event handling temporarily.\n    editor.setMode(\"cut\"); // Let native `cut` behavior occur, then recover control.\n    setTimeout(function() {\n        editor.restoreEditorDOM(scrollPosition);\n        editor.exitCurrentMode();\n        editor.update(removeFragment(editorState));\n    }, 0);\n}\nfunction removeFragment(editorState) {\n    var newContent = DraftModifier.removeRange(editorState.getCurrentContent(), editorState.getSelection(), \"forward\");\n    return EditorState.push(editorState, newContent, \"remove-range\");\n}\nmodule.exports = editOnCut;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uQ3V0LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyx5RkFBaUI7QUFFN0MsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUMscUZBQWU7QUFFekMsSUFBSUUsUUFBUUYsbUJBQU9BLENBQUMsNEVBQWdCO0FBRXBDLElBQUlHLDJCQUEyQkgsbUJBQU9BLENBQUMsK0dBQTRCO0FBRW5FLElBQUlJLG9CQUFvQkosbUJBQU9BLENBQUMsb0dBQTRCO0FBRTVELElBQUlLLFNBQVNMLG1CQUFPQSxDQUFDLCtGQUFvQjtBQUN6Qzs7Ozs7Ozs7Q0FRQyxHQUdELFNBQVNNLFVBQVVDLE1BQU0sRUFBRUMsQ0FBQztJQUMxQixJQUFJQyxjQUFjRixPQUFPRyxrQkFBa0I7SUFDM0MsSUFBSUMsWUFBWUYsWUFBWUcsWUFBWTtJQUN4QyxJQUFJQyxVQUFVTCxFQUFFTSxNQUFNO0lBQ3RCLElBQUlDLGdCQUFnQiwyQ0FBMkM7SUFFL0QsSUFBSUosVUFBVUssV0FBVyxJQUFJO1FBQzNCUixFQUFFUyxjQUFjO1FBQ2hCO0lBQ0YsRUFBRSwyRUFBMkU7SUFDN0UsK0NBQStDO0lBRy9DLElBQUlaLE9BQU9RLFVBQVU7UUFDbkIsSUFBSUssT0FBT0w7UUFDWEUsaUJBQWlCWCxrQkFBa0JGLE1BQU1pQixlQUFlLENBQUNEO0lBQzNEO0lBRUEsSUFBSUUsV0FBV2pCLHlCQUF5Qk07SUFDeENGLE9BQU9jLFlBQVksQ0FBQ0QsV0FBVyw0REFBNEQ7SUFFM0ZiLE9BQU9lLE9BQU8sQ0FBQyxRQUFRLHlEQUF5RDtJQUVoRkMsV0FBVztRQUNUaEIsT0FBT2lCLGdCQUFnQixDQUFDVDtRQUN4QlIsT0FBT2tCLGVBQWU7UUFDdEJsQixPQUFPbUIsTUFBTSxDQUFDQyxlQUFlbEI7SUFDL0IsR0FBRztBQUNMO0FBRUEsU0FBU2tCLGVBQWVsQixXQUFXO0lBQ2pDLElBQUltQixhQUFhN0IsY0FBYzhCLFdBQVcsQ0FBQ3BCLFlBQVlxQixpQkFBaUIsSUFBSXJCLFlBQVlHLFlBQVksSUFBSTtJQUN4RyxPQUFPWCxZQUFZOEIsSUFBSSxDQUFDdEIsYUFBYW1CLFlBQVk7QUFDbkQ7QUFFQUksT0FBT0MsT0FBTyxHQUFHM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9lZGl0T25DdXQuanM/ODYyMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRHJhZnRNb2RpZmllciA9IHJlcXVpcmUoXCIuL0RyYWZ0TW9kaWZpZXJcIik7XG5cbnZhciBFZGl0b3JTdGF0ZSA9IHJlcXVpcmUoXCIuL0VkaXRvclN0YXRlXCIpO1xuXG52YXIgU3R5bGUgPSByZXF1aXJlKFwiZmJqcy9saWIvU3R5bGVcIik7XG5cbnZhciBnZXRGcmFnbWVudEZyb21TZWxlY3Rpb24gPSByZXF1aXJlKFwiLi9nZXRGcmFnbWVudEZyb21TZWxlY3Rpb25cIik7XG5cbnZhciBnZXRTY3JvbGxQb3NpdGlvbiA9IHJlcXVpcmUoXCJmYmpzL2xpYi9nZXRTY3JvbGxQb3NpdGlvblwiKTtcblxudmFyIGlzTm9kZSA9IHJlcXVpcmUoXCIuL2lzSW5zdGFuY2VPZk5vZGVcIik7XG4vKipcbiAqIE9uIGBjdXRgIGV2ZW50cywgbmF0aXZlIGJlaGF2aW9yIGlzIGFsbG93ZWQgdG8gb2NjdXIgc28gdGhhdCB0aGUgc3lzdGVtXG4gKiBjbGlwYm9hcmQgaXMgc2V0IHByb3Blcmx5LiBUaGlzIG1lYW5zIHRoYXQgd2UgbmVlZCB0byB0YWtlIHN0ZXBzIHRvIHJlY292ZXJcbiAqIHRoZSBlZGl0b3IgRE9NIHN0YXRlIGFmdGVyIHRoZSBgY3V0YCBoYXMgb2NjdXJyZWQgaW4gb3JkZXIgdG8gbWFpbnRhaW5cbiAqIGNvbnRyb2wgb2YgdGhlIGNvbXBvbmVudC5cbiAqXG4gKiBJbiBhZGRpdGlvbiwgd2UgY2FuIGtlZXAgYSBjb3B5IG9mIHRoZSByZW1vdmVkIGZyYWdtZW50LCBpbmNsdWRpbmcgYWxsXG4gKiBzdHlsZXMgYW5kIGVudGl0aWVzLCBmb3IgdXNlIGFzIGFuIGludGVybmFsIHBhc3RlLlxuICovXG5cblxuZnVuY3Rpb24gZWRpdE9uQ3V0KGVkaXRvciwgZSkge1xuICB2YXIgZWRpdG9yU3RhdGUgPSBlZGl0b3IuX2xhdGVzdEVkaXRvclN0YXRlO1xuICB2YXIgc2VsZWN0aW9uID0gZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCk7XG4gIHZhciBlbGVtZW50ID0gZS50YXJnZXQ7XG4gIHZhciBzY3JvbGxQb3NpdGlvbjsgLy8gTm8gc2VsZWN0aW9uLCBzbyB0aGVyZSdzIG5vdGhpbmcgdG8gY3V0LlxuXG4gIGlmIChzZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICByZXR1cm47XG4gIH0gLy8gVHJhY2sgdGhlIGN1cnJlbnQgc2Nyb2xsIHBvc2l0aW9uIHNvIHRoYXQgaXQgY2FuIGJlIGZvcmNlZCBiYWNrIGluIHBsYWNlXG4gIC8vIGFmdGVyIHRoZSBlZGl0b3IgcmVnYWlucyBjb250cm9sIG9mIHRoZSBET00uXG5cblxuICBpZiAoaXNOb2RlKGVsZW1lbnQpKSB7XG4gICAgdmFyIG5vZGUgPSBlbGVtZW50O1xuICAgIHNjcm9sbFBvc2l0aW9uID0gZ2V0U2Nyb2xsUG9zaXRpb24oU3R5bGUuZ2V0U2Nyb2xsUGFyZW50KG5vZGUpKTtcbiAgfVxuXG4gIHZhciBmcmFnbWVudCA9IGdldEZyYWdtZW50RnJvbVNlbGVjdGlvbihlZGl0b3JTdGF0ZSk7XG4gIGVkaXRvci5zZXRDbGlwYm9hcmQoZnJhZ21lbnQpOyAvLyBTZXQgYGN1dGAgbW9kZSB0byBkaXNhYmxlIGFsbCBldmVudCBoYW5kbGluZyB0ZW1wb3JhcmlseS5cblxuICBlZGl0b3Iuc2V0TW9kZSgnY3V0Jyk7IC8vIExldCBuYXRpdmUgYGN1dGAgYmVoYXZpb3Igb2NjdXIsIHRoZW4gcmVjb3ZlciBjb250cm9sLlxuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgIGVkaXRvci5yZXN0b3JlRWRpdG9yRE9NKHNjcm9sbFBvc2l0aW9uKTtcbiAgICBlZGl0b3IuZXhpdEN1cnJlbnRNb2RlKCk7XG4gICAgZWRpdG9yLnVwZGF0ZShyZW1vdmVGcmFnbWVudChlZGl0b3JTdGF0ZSkpO1xuICB9LCAwKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlRnJhZ21lbnQoZWRpdG9yU3RhdGUpIHtcbiAgdmFyIG5ld0NvbnRlbnQgPSBEcmFmdE1vZGlmaWVyLnJlbW92ZVJhbmdlKGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCksIGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpLCAnZm9yd2FyZCcpO1xuICByZXR1cm4gRWRpdG9yU3RhdGUucHVzaChlZGl0b3JTdGF0ZSwgbmV3Q29udGVudCwgJ3JlbW92ZS1yYW5nZScpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVkaXRPbkN1dDsiXSwibmFtZXMiOlsiRHJhZnRNb2RpZmllciIsInJlcXVpcmUiLCJFZGl0b3JTdGF0ZSIsIlN0eWxlIiwiZ2V0RnJhZ21lbnRGcm9tU2VsZWN0aW9uIiwiZ2V0U2Nyb2xsUG9zaXRpb24iLCJpc05vZGUiLCJlZGl0T25DdXQiLCJlZGl0b3IiLCJlIiwiZWRpdG9yU3RhdGUiLCJfbGF0ZXN0RWRpdG9yU3RhdGUiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3Rpb24iLCJlbGVtZW50IiwidGFyZ2V0Iiwic2Nyb2xsUG9zaXRpb24iLCJpc0NvbGxhcHNlZCIsInByZXZlbnREZWZhdWx0Iiwibm9kZSIsImdldFNjcm9sbFBhcmVudCIsImZyYWdtZW50Iiwic2V0Q2xpcGJvYXJkIiwic2V0TW9kZSIsInNldFRpbWVvdXQiLCJyZXN0b3JlRWRpdG9yRE9NIiwiZXhpdEN1cnJlbnRNb2RlIiwidXBkYXRlIiwicmVtb3ZlRnJhZ21lbnQiLCJuZXdDb250ZW50IiwicmVtb3ZlUmFuZ2UiLCJnZXRDdXJyZW50Q29udGVudCIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnCut.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnDragOver.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnDragOver.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n/**\n * Drag behavior has begun from outside the editor element.\n */ function editOnDragOver(editor, e) {\n    editor.setMode(\"drag\");\n    e.preventDefault();\n}\nmodule.exports = editOnDragOver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uRHJhZ092ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQTs7Q0FFQyxHQUNELFNBQVNBLGVBQWVDLE1BQU0sRUFBRUMsQ0FBQztJQUMvQkQsT0FBT0UsT0FBTyxDQUFDO0lBQ2ZELEVBQUVFLGNBQWM7QUFDbEI7QUFFQUMsT0FBT0MsT0FBTyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2VkaXRPbkRyYWdPdmVyLmpzP2VmNmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEcmFnIGJlaGF2aW9yIGhhcyBiZWd1biBmcm9tIG91dHNpZGUgdGhlIGVkaXRvciBlbGVtZW50LlxuICovXG5mdW5jdGlvbiBlZGl0T25EcmFnT3ZlcihlZGl0b3IsIGUpIHtcbiAgZWRpdG9yLnNldE1vZGUoJ2RyYWcnKTtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVkaXRPbkRyYWdPdmVyOyJdLCJuYW1lcyI6WyJlZGl0T25EcmFnT3ZlciIsImVkaXRvciIsImUiLCJzZXRNb2RlIiwicHJldmVudERlZmF1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnDragOver.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnDragStart.js":
/*!******************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnDragStart.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n/**\n * A `dragstart` event has begun within the text editor component.\n */ function editOnDragStart(editor) {\n    editor._internalDrag = true;\n    editor.setMode(\"drag\");\n}\nmodule.exports = editOnDragStart;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uRHJhZ1N0YXJ0LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUE7O0NBRUMsR0FDRCxTQUFTQSxnQkFBZ0JDLE1BQU07SUFDN0JBLE9BQU9DLGFBQWEsR0FBRztJQUN2QkQsT0FBT0UsT0FBTyxDQUFDO0FBQ2pCO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9lZGl0T25EcmFnU3RhcnQuanM/YmZmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEEgYGRyYWdzdGFydGAgZXZlbnQgaGFzIGJlZ3VuIHdpdGhpbiB0aGUgdGV4dCBlZGl0b3IgY29tcG9uZW50LlxuICovXG5mdW5jdGlvbiBlZGl0T25EcmFnU3RhcnQoZWRpdG9yKSB7XG4gIGVkaXRvci5faW50ZXJuYWxEcmFnID0gdHJ1ZTtcbiAgZWRpdG9yLnNldE1vZGUoJ2RyYWcnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlZGl0T25EcmFnU3RhcnQ7Il0sIm5hbWVzIjpbImVkaXRPbkRyYWdTdGFydCIsImVkaXRvciIsIl9pbnRlcm5hbERyYWciLCJzZXRNb2RlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnDragStart.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnFocus.js":
/*!**************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnFocus.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nfunction editOnFocus(editor, e) {\n    var editorState = editor._latestEditorState;\n    var currentSelection = editorState.getSelection();\n    if (currentSelection.getHasFocus()) {\n        return;\n    }\n    var selection = currentSelection.set(\"hasFocus\", true);\n    editor.props.onFocus && editor.props.onFocus(e); // When the tab containing this text editor is hidden and the user does a\n    // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\n    // selection was right after sending this focus event and (if you let it)\n    // moves the cursor back to the beginning of the editor, so we force the\n    // selection here instead of simply accepting it in order to preserve the\n    // old cursor position. See https://crbug.com/540004.\n    // But it looks like this is fixed in Chrome 60.0.3081.0.\n    // Other browsers also don't have this bug, so we prefer to acceptSelection\n    // when possible, to ensure that unfocusing and refocusing a Draft editor\n    // doesn't preserve the selection, matching how textareas work.\n    if (UserAgent.isBrowser(\"Chrome < 60.0.3081.0\")) {\n        editor.update(EditorState.forceSelection(editorState, selection));\n    } else {\n        editor.update(EditorState.acceptSelection(editorState, selection));\n    }\n}\nmodule.exports = editOnFocus;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uRm9jdXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQyxxRkFBZTtBQUV6QyxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQyxvRkFBb0I7QUFFNUMsU0FBU0UsWUFBWUMsTUFBTSxFQUFFQyxDQUFDO0lBQzVCLElBQUlDLGNBQWNGLE9BQU9HLGtCQUFrQjtJQUMzQyxJQUFJQyxtQkFBbUJGLFlBQVlHLFlBQVk7SUFFL0MsSUFBSUQsaUJBQWlCRSxXQUFXLElBQUk7UUFDbEM7SUFDRjtJQUVBLElBQUlDLFlBQVlILGlCQUFpQkksR0FBRyxDQUFDLFlBQVk7SUFDakRSLE9BQU9TLEtBQUssQ0FBQ0MsT0FBTyxJQUFJVixPQUFPUyxLQUFLLENBQUNDLE9BQU8sQ0FBQ1QsSUFBSSx5RUFBeUU7SUFDMUgsNEVBQTRFO0lBQzVFLHlFQUF5RTtJQUN6RSx3RUFBd0U7SUFDeEUseUVBQXlFO0lBQ3pFLHFEQUFxRDtJQUNyRCx5REFBeUQ7SUFDekQsMkVBQTJFO0lBQzNFLHlFQUF5RTtJQUN6RSwrREFBK0Q7SUFFL0QsSUFBSUgsVUFBVWEsU0FBUyxDQUFDLHlCQUF5QjtRQUMvQ1gsT0FBT1ksTUFBTSxDQUFDaEIsWUFBWWlCLGNBQWMsQ0FBQ1gsYUFBYUs7SUFDeEQsT0FBTztRQUNMUCxPQUFPWSxNQUFNLENBQUNoQixZQUFZa0IsZUFBZSxDQUFDWixhQUFhSztJQUN6RDtBQUNGO0FBRUFRLE9BQU9DLE9BQU8sR0FBR2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uRm9jdXMuanM/YmM1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcblxudmFyIFVzZXJBZ2VudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9Vc2VyQWdlbnRcIik7XG5cbmZ1bmN0aW9uIGVkaXRPbkZvY3VzKGVkaXRvciwgZSkge1xuICB2YXIgZWRpdG9yU3RhdGUgPSBlZGl0b3IuX2xhdGVzdEVkaXRvclN0YXRlO1xuICB2YXIgY3VycmVudFNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpO1xuXG4gIGlmIChjdXJyZW50U2VsZWN0aW9uLmdldEhhc0ZvY3VzKCkpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgc2VsZWN0aW9uID0gY3VycmVudFNlbGVjdGlvbi5zZXQoJ2hhc0ZvY3VzJywgdHJ1ZSk7XG4gIGVkaXRvci5wcm9wcy5vbkZvY3VzICYmIGVkaXRvci5wcm9wcy5vbkZvY3VzKGUpOyAvLyBXaGVuIHRoZSB0YWIgY29udGFpbmluZyB0aGlzIHRleHQgZWRpdG9yIGlzIGhpZGRlbiBhbmQgdGhlIHVzZXIgZG9lcyBhXG4gIC8vIGZpbmQtaW4tcGFnZSBpbiBhIF9kaWZmZXJlbnRfIHRhYiwgQ2hyb21lIG9uIE1hYyBsaWtlcyB0byBmb3JnZXQgd2hhdCB0aGVcbiAgLy8gc2VsZWN0aW9uIHdhcyByaWdodCBhZnRlciBzZW5kaW5nIHRoaXMgZm9jdXMgZXZlbnQgYW5kIChpZiB5b3UgbGV0IGl0KVxuICAvLyBtb3ZlcyB0aGUgY3Vyc29yIGJhY2sgdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgZWRpdG9yLCBzbyB3ZSBmb3JjZSB0aGVcbiAgLy8gc2VsZWN0aW9uIGhlcmUgaW5zdGVhZCBvZiBzaW1wbHkgYWNjZXB0aW5nIGl0IGluIG9yZGVyIHRvIHByZXNlcnZlIHRoZVxuICAvLyBvbGQgY3Vyc29yIHBvc2l0aW9uLiBTZWUgaHR0cHM6Ly9jcmJ1Zy5jb20vNTQwMDA0LlxuICAvLyBCdXQgaXQgbG9va3MgbGlrZSB0aGlzIGlzIGZpeGVkIGluIENocm9tZSA2MC4wLjMwODEuMC5cbiAgLy8gT3RoZXIgYnJvd3NlcnMgYWxzbyBkb24ndCBoYXZlIHRoaXMgYnVnLCBzbyB3ZSBwcmVmZXIgdG8gYWNjZXB0U2VsZWN0aW9uXG4gIC8vIHdoZW4gcG9zc2libGUsIHRvIGVuc3VyZSB0aGF0IHVuZm9jdXNpbmcgYW5kIHJlZm9jdXNpbmcgYSBEcmFmdCBlZGl0b3JcbiAgLy8gZG9lc24ndCBwcmVzZXJ2ZSB0aGUgc2VsZWN0aW9uLCBtYXRjaGluZyBob3cgdGV4dGFyZWFzIHdvcmsuXG5cbiAgaWYgKFVzZXJBZ2VudC5pc0Jyb3dzZXIoJ0Nocm9tZSA8IDYwLjAuMzA4MS4wJykpIHtcbiAgICBlZGl0b3IudXBkYXRlKEVkaXRvclN0YXRlLmZvcmNlU2VsZWN0aW9uKGVkaXRvclN0YXRlLCBzZWxlY3Rpb24pKTtcbiAgfSBlbHNlIHtcbiAgICBlZGl0b3IudXBkYXRlKEVkaXRvclN0YXRlLmFjY2VwdFNlbGVjdGlvbihlZGl0b3JTdGF0ZSwgc2VsZWN0aW9uKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlZGl0T25Gb2N1czsiXSwibmFtZXMiOlsiRWRpdG9yU3RhdGUiLCJyZXF1aXJlIiwiVXNlckFnZW50IiwiZWRpdE9uRm9jdXMiLCJlZGl0b3IiLCJlIiwiZWRpdG9yU3RhdGUiLCJfbGF0ZXN0RWRpdG9yU3RhdGUiLCJjdXJyZW50U2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwiZ2V0SGFzRm9jdXMiLCJzZWxlY3Rpb24iLCJzZXQiLCJwcm9wcyIsIm9uRm9jdXMiLCJpc0Jyb3dzZXIiLCJ1cGRhdGUiLCJmb3JjZVNlbGVjdGlvbiIsImFjY2VwdFNlbGVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnFocus.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnInput.js":
/*!**************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnInput.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar _require = __webpack_require__(/*! ./draftKeyUtils */ \"(app-pages-browser)/./node_modules/draft-js/lib/draftKeyUtils.js\"), notEmptyKey = _require.notEmptyKey;\nvar findAncestorOffsetKey = __webpack_require__(/*! ./findAncestorOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/findAncestorOffsetKey.js\");\nvar keyCommandPlainBackspace = __webpack_require__(/*! ./keyCommandPlainBackspace */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandPlainBackspace.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nvar isGecko = UserAgent.isEngine(\"Gecko\");\nvar DOUBLE_NEWLINE = \"\\n\\n\";\nfunction onInputType(inputType, editorState) {\n    switch(inputType){\n        case \"deleteContentBackward\":\n            return keyCommandPlainBackspace(editorState);\n    }\n    return editorState;\n}\n/**\n * This function serves two purposes\n *\n * 1. To update the editorState and call onChange method with the new\n * editorState. This editorState is calculated in editOnBeforeInput but the\n * onChange method is not called with the new state until this method does it.\n * It is done to handle a specific case where certain character inputs might\n * be replaced with something else. E.g. snippets ('rc' might be replaced\n * with boilerplate code for react component). More information on the\n * exact problem can be found here -\n * https://github.com/facebook/draft-js/commit/07892ba479bd4dfc6afd1e0ed179aaf51cd138b1\n *\n * 2. intended to handle spellcheck and autocorrect changes,\n * which occur in the DOM natively without any opportunity to observe or\n * interpret the changes before they occur.\n *\n * The `input` event fires in contentEditable elements reliably for non-IE\n * browsers, immediately after changes occur to the editor DOM. Since our other\n * handlers override or otherwise handle cover other varieties of text input,\n * the DOM state should match the model in all controlled input cases. Thus,\n * when an `input` change leads to a DOM/model mismatch, the change should be\n * due to a spellcheck change, and we can incorporate it into our model.\n */ function editOnInput(editor, e) {\n    if (editor._pendingStateFromBeforeInput !== undefined) {\n        editor.update(editor._pendingStateFromBeforeInput);\n        editor._pendingStateFromBeforeInput = undefined;\n    } // at this point editor is not null for sure (after input)\n    var castedEditorElement = editor.editor;\n    var domSelection = castedEditorElement.ownerDocument.defaultView.getSelection();\n    var anchorNode = domSelection.anchorNode, isCollapsed = domSelection.isCollapsed;\n    var isNotTextOrElementNode = (anchorNode === null || anchorNode === void 0 ? void 0 : anchorNode.nodeType) !== Node.TEXT_NODE && (anchorNode === null || anchorNode === void 0 ? void 0 : anchorNode.nodeType) !== Node.ELEMENT_NODE;\n    if (anchorNode == null || isNotTextOrElementNode) {\n        // TODO: (t16149272) figure out context for this change\n        return;\n    }\n    if (anchorNode.nodeType === Node.TEXT_NODE && (anchorNode.previousSibling !== null || anchorNode.nextSibling !== null)) {\n        // When typing at the beginning of a visual line, Chrome splits the text\n        // nodes into two. Why? No one knows. This commit is suspicious:\n        // https://chromium.googlesource.com/chromium/src/+/a3b600981286b135632371477f902214c55a1724\n        // To work around, we'll merge the sibling text nodes back into this one.\n        var span = anchorNode.parentNode;\n        if (span == null) {\n            // Handle null-parent case.\n            return;\n        }\n        anchorNode.nodeValue = span.textContent;\n        for(var child = span.firstChild; child != null; child = child.nextSibling){\n            if (child !== anchorNode) {\n                span.removeChild(child);\n            }\n        }\n    }\n    var domText = anchorNode.textContent;\n    var editorState = editor._latestEditorState;\n    var offsetKey = nullthrows(findAncestorOffsetKey(anchorNode));\n    var _DraftOffsetKey$decod = DraftOffsetKey.decode(offsetKey), blockKey = _DraftOffsetKey$decod.blockKey, decoratorKey = _DraftOffsetKey$decod.decoratorKey, leafKey = _DraftOffsetKey$decod.leafKey;\n    var _editorState$getBlock = editorState.getBlockTree(blockKey).getIn([\n        decoratorKey,\n        \"leaves\",\n        leafKey\n    ]), start = _editorState$getBlock.start, end = _editorState$getBlock.end;\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(blockKey);\n    var modelText = block.getText().slice(start, end); // Special-case soft newlines here. If the DOM text ends in a soft newline,\n    // we will have manually inserted an extra soft newline in DraftEditorLeaf.\n    // We want to remove this extra newline for the purpose of our comparison\n    // of DOM and model text.\n    if (domText.endsWith(DOUBLE_NEWLINE)) {\n        domText = domText.slice(0, -1);\n    } // No change -- the DOM is up to date. Nothing to do here.\n    if (domText === modelText) {\n        // This can be buggy for some Android keyboards because they don't fire\n        // standard onkeydown/pressed events and only fired editOnInput\n        // so domText is already changed by the browser and ends up being equal\n        // to modelText unexpectedly.\n        // Newest versions of Android support the dom-inputevent-inputtype\n        // and we can use the `inputType` to properly apply the state changes.\n        /* $FlowFixMe[prop-missing] inputType is only defined on a draft of a\n     * standard. https://w3c.github.io/input-events/#dom-inputevent-inputtype\n     */ var inputType = e.nativeEvent.inputType;\n        if (inputType) {\n            var newEditorState = onInputType(inputType, editorState);\n            if (newEditorState !== editorState) {\n                editor.restoreEditorDOM();\n                editor.update(newEditorState);\n                return;\n            }\n        }\n        return;\n    }\n    var selection = editorState.getSelection(); // We'll replace the entire leaf with the text content of the target.\n    var targetRange = selection.merge({\n        anchorOffset: start,\n        focusOffset: end,\n        isBackward: false\n    });\n    var entityKey = block.getEntityAt(start);\n    var entity = notEmptyKey(entityKey) ? content.getEntity(entityKey) : null;\n    var entityType = entity != null ? entity.getMutability() : null;\n    var preserveEntity = entityType === \"MUTABLE\"; // Immutable or segmented entities cannot properly be handled by the\n    // default browser undo, so we have to use a different change type to\n    // force using our internal undo method instead of falling through to the\n    // native browser undo.\n    var changeType = preserveEntity ? \"spellcheck-change\" : \"apply-entity\";\n    var newContent = DraftModifier.replaceText(content, targetRange, domText, block.getInlineStyleAt(start), preserveEntity ? block.getEntityAt(start) : null);\n    var anchorOffset, focusOffset, startOffset, endOffset;\n    if (isGecko) {\n        // Firefox selection does not change while the context menu is open, so\n        // we preserve the anchor and focus values of the DOM selection.\n        anchorOffset = domSelection.anchorOffset;\n        focusOffset = domSelection.focusOffset;\n        startOffset = start + Math.min(anchorOffset, focusOffset);\n        endOffset = startOffset + Math.abs(anchorOffset - focusOffset);\n        anchorOffset = startOffset;\n        focusOffset = endOffset;\n    } else {\n        // Browsers other than Firefox may adjust DOM selection while the context\n        // menu is open, and Safari autocorrect is prone to providing an inaccurate\n        // DOM selection. Don't trust it. Instead, use our existing SelectionState\n        // and adjust it based on the number of characters changed during the\n        // mutation.\n        var charDelta = domText.length - modelText.length;\n        startOffset = selection.getStartOffset();\n        endOffset = selection.getEndOffset();\n        anchorOffset = isCollapsed ? endOffset + charDelta : startOffset;\n        focusOffset = endOffset + charDelta;\n    } // Segmented entities are completely or partially removed when their\n    // text content changes. For this case we do not want any text to be selected\n    // after the change, so we are not merging the selection.\n    var contentWithAdjustedDOMSelection = newContent.merge({\n        selectionBefore: content.getSelectionAfter(),\n        selectionAfter: selection.merge({\n            anchorOffset: anchorOffset,\n            focusOffset: focusOffset\n        })\n    });\n    editor.update(EditorState.push(editorState, contentWithAdjustedDOMSelection, changeType));\n}\nmodule.exports = editOnInput;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnInput.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnKeyDown.js":
/*!****************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnKeyDown.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar KeyBindingUtil = __webpack_require__(/*! ./KeyBindingUtil */ \"(app-pages-browser)/./node_modules/draft-js/lib/KeyBindingUtil.js\");\nvar Keys = __webpack_require__(/*! fbjs/lib/Keys */ \"(app-pages-browser)/./node_modules/fbjs/lib/Keys.js\");\nvar SecondaryClipboard = __webpack_require__(/*! ./SecondaryClipboard */ \"(app-pages-browser)/./node_modules/draft-js/lib/SecondaryClipboard.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar isEventHandled = __webpack_require__(/*! ./isEventHandled */ \"(app-pages-browser)/./node_modules/draft-js/lib/isEventHandled.js\");\nvar keyCommandBackspaceToStartOfLine = __webpack_require__(/*! ./keyCommandBackspaceToStartOfLine */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandBackspaceToStartOfLine.js\");\nvar keyCommandBackspaceWord = __webpack_require__(/*! ./keyCommandBackspaceWord */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandBackspaceWord.js\");\nvar keyCommandDeleteWord = __webpack_require__(/*! ./keyCommandDeleteWord */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandDeleteWord.js\");\nvar keyCommandInsertNewline = __webpack_require__(/*! ./keyCommandInsertNewline */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandInsertNewline.js\");\nvar keyCommandMoveSelectionToEndOfBlock = __webpack_require__(/*! ./keyCommandMoveSelectionToEndOfBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandMoveSelectionToEndOfBlock.js\");\nvar keyCommandMoveSelectionToStartOfBlock = __webpack_require__(/*! ./keyCommandMoveSelectionToStartOfBlock */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandMoveSelectionToStartOfBlock.js\");\nvar keyCommandPlainBackspace = __webpack_require__(/*! ./keyCommandPlainBackspace */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandPlainBackspace.js\");\nvar keyCommandPlainDelete = __webpack_require__(/*! ./keyCommandPlainDelete */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandPlainDelete.js\");\nvar keyCommandTransposeCharacters = __webpack_require__(/*! ./keyCommandTransposeCharacters */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandTransposeCharacters.js\");\nvar keyCommandUndo = __webpack_require__(/*! ./keyCommandUndo */ \"(app-pages-browser)/./node_modules/draft-js/lib/keyCommandUndo.js\");\nvar isOptionKeyCommand = KeyBindingUtil.isOptionKeyCommand;\nvar isChrome = UserAgent.isBrowser(\"Chrome\");\n/**\n * Map a `DraftEditorCommand` command value to a corresponding function.\n */ function onKeyCommand(command, editorState, e) {\n    switch(command){\n        case \"redo\":\n            return EditorState.redo(editorState);\n        case \"delete\":\n            return keyCommandPlainDelete(editorState);\n        case \"delete-word\":\n            return keyCommandDeleteWord(editorState);\n        case \"backspace\":\n            return keyCommandPlainBackspace(editorState);\n        case \"backspace-word\":\n            return keyCommandBackspaceWord(editorState);\n        case \"backspace-to-start-of-line\":\n            return keyCommandBackspaceToStartOfLine(editorState, e);\n        case \"split-block\":\n            return keyCommandInsertNewline(editorState);\n        case \"transpose-characters\":\n            return keyCommandTransposeCharacters(editorState);\n        case \"move-selection-to-start-of-block\":\n            return keyCommandMoveSelectionToStartOfBlock(editorState);\n        case \"move-selection-to-end-of-block\":\n            return keyCommandMoveSelectionToEndOfBlock(editorState);\n        case \"secondary-cut\":\n            return SecondaryClipboard.cut(editorState);\n        case \"secondary-paste\":\n            return SecondaryClipboard.paste(editorState);\n        default:\n            return editorState;\n    }\n}\n/**\n * Intercept keydown behavior to handle keys and commands manually, if desired.\n *\n * Keydown combinations may be mapped to `DraftCommand` values, which may\n * correspond to command functions that modify the editor or its contents.\n *\n * See `getDefaultKeyBinding` for defaults. Alternatively, the top-level\n * component may provide a custom mapping via the `keyBindingFn` prop.\n */ function editOnKeyDown(editor, e) {\n    var keyCode = e.which;\n    var editorState = editor._latestEditorState;\n    function callDeprecatedHandler(handlerName) {\n        var deprecatedHandler = editor.props[handlerName];\n        if (deprecatedHandler) {\n            deprecatedHandler(e);\n            return true;\n        } else {\n            return false;\n        }\n    }\n    switch(keyCode){\n        case Keys.RETURN:\n            e.preventDefault(); // The top-level component may manually handle newline insertion. If\n            // no special handling is performed, fall through to command handling.\n            if (editor.props.handleReturn && isEventHandled(editor.props.handleReturn(e, editorState))) {\n                return;\n            }\n            break;\n        case Keys.ESC:\n            e.preventDefault();\n            if (callDeprecatedHandler(\"onEscape\")) {\n                return;\n            }\n            break;\n        case Keys.TAB:\n            if (callDeprecatedHandler(\"onTab\")) {\n                return;\n            }\n            break;\n        case Keys.UP:\n            if (callDeprecatedHandler(\"onUpArrow\")) {\n                return;\n            }\n            break;\n        case Keys.RIGHT:\n            if (callDeprecatedHandler(\"onRightArrow\")) {\n                return;\n            }\n            break;\n        case Keys.DOWN:\n            if (callDeprecatedHandler(\"onDownArrow\")) {\n                return;\n            }\n            break;\n        case Keys.LEFT:\n            if (callDeprecatedHandler(\"onLeftArrow\")) {\n                return;\n            }\n            break;\n        case Keys.SPACE:\n            // Prevent Chrome on OSX behavior where option + space scrolls.\n            if (isChrome && isOptionKeyCommand(e)) {\n                e.preventDefault();\n            }\n    }\n    var command = editor.props.keyBindingFn(e); // If no command is specified, allow keydown event to continue.\n    if (command == null || command === \"\") {\n        if (keyCode === Keys.SPACE && isChrome && isOptionKeyCommand(e)) {\n            // The default keydown event has already been prevented in order to stop\n            // Chrome from scrolling. Insert a nbsp into the editor as OSX would for\n            // other browsers.\n            var contentState = DraftModifier.replaceText(editorState.getCurrentContent(), editorState.getSelection(), \"\\xa0\");\n            editor.update(EditorState.push(editorState, contentState, \"insert-characters\"));\n        }\n        return;\n    }\n    if (command === \"undo\") {\n        // Since undo requires some special updating behavior to keep the editor\n        // in sync, handle it separately.\n        keyCommandUndo(e, editorState, editor.update);\n        return;\n    } // At this point, we know that we're handling a command of some kind, so\n    // we don't want to insert a character following the keydown.\n    e.preventDefault(); // Allow components higher up the tree to handle the command first.\n    if (editor.props.handleKeyCommand && isEventHandled(editor.props.handleKeyCommand(command, editorState, e.timeStamp))) {\n        return;\n    }\n    var newState = onKeyCommand(command, editorState, e);\n    if (newState !== editorState) {\n        editor.update(newState);\n    }\n}\nmodule.exports = editOnKeyDown;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnKeyDown.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnPaste.js":
/*!**************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnPaste.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar BlockMapBuilder = __webpack_require__(/*! ./BlockMapBuilder */ \"(app-pages-browser)/./node_modules/draft-js/lib/BlockMapBuilder.js\");\nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar DataTransfer = __webpack_require__(/*! fbjs/lib/DataTransfer */ \"(app-pages-browser)/./node_modules/fbjs/lib/DataTransfer.js\");\nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar DraftPasteProcessor = __webpack_require__(/*! ./DraftPasteProcessor */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftPasteProcessor.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar RichTextEditorUtil = __webpack_require__(/*! ./RichTextEditorUtil */ \"(app-pages-browser)/./node_modules/draft-js/lib/RichTextEditorUtil.js\");\nvar getEntityKeyForSelection = __webpack_require__(/*! ./getEntityKeyForSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/getEntityKeyForSelection.js\");\nvar getTextContentFromFiles = __webpack_require__(/*! ./getTextContentFromFiles */ \"(app-pages-browser)/./node_modules/draft-js/lib/getTextContentFromFiles.js\");\nvar isEventHandled = __webpack_require__(/*! ./isEventHandled */ \"(app-pages-browser)/./node_modules/draft-js/lib/isEventHandled.js\");\nvar splitTextIntoTextBlocks = __webpack_require__(/*! ./splitTextIntoTextBlocks */ \"(app-pages-browser)/./node_modules/draft-js/lib/splitTextIntoTextBlocks.js\");\n/**\n * Paste content.\n */ function editOnPaste(editor, e) {\n    e.preventDefault();\n    var data = new DataTransfer(e.clipboardData); // Get files, unless this is likely to be a string the user wants inline.\n    if (!data.isRichText()) {\n        var files = data.getFiles();\n        var defaultFileText = data.getText();\n        if (files.length > 0) {\n            // Allow customized paste handling for images, etc. Otherwise, fall\n            // through to insert text contents into the editor.\n            if (editor.props.handlePastedFiles && isEventHandled(editor.props.handlePastedFiles(files))) {\n                return;\n            }\n            /* $FlowFixMe[incompatible-call] This comment suppresses an error found\n       * DataTransfer was typed. getFiles() returns an array of <Files extends\n       * Blob>, not Blob */ getTextContentFromFiles(files, function(/*string*/ fileText) {\n                fileText = fileText || defaultFileText;\n                if (!fileText) {\n                    return;\n                }\n                var editorState = editor._latestEditorState;\n                var blocks = splitTextIntoTextBlocks(fileText);\n                var character = CharacterMetadata.create({\n                    style: editorState.getCurrentInlineStyle(),\n                    entity: getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection())\n                });\n                var currentBlockType = RichTextEditorUtil.getCurrentBlockType(editorState);\n                var text = DraftPasteProcessor.processText(blocks, character, currentBlockType);\n                var fragment = BlockMapBuilder.createFromArray(text);\n                var withInsertedText = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), fragment);\n                editor.update(EditorState.push(editorState, withInsertedText, \"insert-fragment\"));\n            });\n            return;\n        }\n    }\n    var textBlocks = [];\n    var text = data.getText();\n    var html = data.getHTML();\n    var editorState = editor._latestEditorState;\n    if (editor.props.formatPastedText) {\n        var _editor$props$formatP = editor.props.formatPastedText(text, html), formattedText = _editor$props$formatP.text, formattedHtml = _editor$props$formatP.html;\n        text = formattedText;\n        html = formattedHtml;\n    }\n    if (editor.props.handlePastedText && isEventHandled(editor.props.handlePastedText(text, html, editorState))) {\n        return;\n    }\n    if (text) {\n        textBlocks = splitTextIntoTextBlocks(text);\n    }\n    if (!editor.props.stripPastedStyles) {\n        // If the text from the paste event is rich content that matches what we\n        // already have on the internal clipboard, assume that we should just use\n        // the clipboard fragment for the paste. This will allow us to preserve\n        // styling and entities, if any are present. Note that newlines are\n        // stripped during comparison -- this is because copy/paste within the\n        // editor in Firefox and IE will not include empty lines. The resulting\n        // paste will preserve the newlines correctly.\n        var internalClipboard = editor.getClipboard();\n        if (!editor.props.formatPastedText && data.isRichText() && internalClipboard) {\n            var _html;\n            if (// assume this is an internal paste.\n            ((_html = html) === null || _html === void 0 ? void 0 : _html.indexOf(editor.getEditorKey())) !== -1 || // The copy may have been made within a single block, in which case the\n            // editor key won't be part of the paste. In this case, just check\n            // whether the pasted text matches the internal clipboard.\n            textBlocks.length === 1 && internalClipboard.size === 1 && internalClipboard.first().getText() === text) {\n                editor.update(insertFragment(editor._latestEditorState, internalClipboard));\n                return;\n            }\n        } else if (internalClipboard && data.types.includes(\"com.apple.webarchive\") && !data.types.includes(\"text/html\") && areTextBlocksAndClipboardEqual(textBlocks, internalClipboard)) {\n            // Safari does not properly store text/html in some cases.\n            // Use the internalClipboard if present and equal to what is on\n            // the clipboard. See https://bugs.webkit.org/show_bug.cgi?id=19893.\n            editor.update(insertFragment(editor._latestEditorState, internalClipboard));\n            return;\n        } // If there is html paste data, try to parse that.\n        if (html) {\n            var htmlFragment = DraftPasteProcessor.processHTML(html, editor.props.blockRenderMap);\n            if (htmlFragment) {\n                var contentBlocks = htmlFragment.contentBlocks, entityMap = htmlFragment.entityMap;\n                if (contentBlocks) {\n                    var htmlMap = BlockMapBuilder.createFromArray(contentBlocks);\n                    editor.update(insertFragment(editor._latestEditorState, htmlMap, entityMap));\n                    return;\n                }\n            }\n        } // Otherwise, create a new fragment from our pasted text. Also\n        // empty the internal clipboard, since it's no longer valid.\n        editor.setClipboard(null);\n    }\n    if (textBlocks.length) {\n        var character = CharacterMetadata.create({\n            style: editorState.getCurrentInlineStyle(),\n            entity: getEntityKeyForSelection(editorState.getCurrentContent(), editorState.getSelection())\n        });\n        var currentBlockType = RichTextEditorUtil.getCurrentBlockType(editorState);\n        var textFragment = DraftPasteProcessor.processText(textBlocks, character, currentBlockType);\n        var textMap = BlockMapBuilder.createFromArray(textFragment);\n        editor.update(insertFragment(editor._latestEditorState, textMap));\n    }\n}\nfunction insertFragment(editorState, fragment, entityMap) {\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), fragment); // TODO: merge the entity map once we stop using DraftEntity\n    // like this:\n    // const mergedEntityMap = newContent.getEntityMap().merge(entityMap);\n    return EditorState.push(editorState, newContent.set(\"entityMap\", entityMap), \"insert-fragment\");\n}\nfunction areTextBlocksAndClipboardEqual(textBlocks, blockMap) {\n    return textBlocks.length === blockMap.size && blockMap.valueSeq().every(function(block, ii) {\n        return block.getText() === textBlocks[ii];\n    });\n}\nmodule.exports = editOnPaste;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnPaste.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/editOnSelect.js":
/*!***************************************************!*\
  !*** ./node_modules/draft-js/lib/editOnSelect.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftJsDebugLogging = __webpack_require__(/*! ./DraftJsDebugLogging */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftJsDebugLogging.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar getContentEditableContainer = __webpack_require__(/*! ./getContentEditableContainer */ \"(app-pages-browser)/./node_modules/draft-js/lib/getContentEditableContainer.js\");\nvar getDraftEditorSelection = __webpack_require__(/*! ./getDraftEditorSelection */ \"(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelection.js\");\nfunction editOnSelect(editor) {\n    if (editor._blockSelectEvents || editor._latestEditorState !== editor.props.editorState) {\n        if (editor._blockSelectEvents) {\n            var _editorState = editor.props.editorState;\n            var selectionState = _editorState.getSelection();\n            DraftJsDebugLogging.logBlockedSelectionEvent({\n                // For now I don't think we need any other info\n                anonymizedDom: \"N/A\",\n                extraParams: JSON.stringify({\n                    stacktrace: new Error().stack\n                }),\n                selectionState: JSON.stringify(selectionState.toJS())\n            });\n        }\n        return;\n    }\n    var editorState = editor.props.editorState;\n    var documentSelection = getDraftEditorSelection(editorState, getContentEditableContainer(editor));\n    var updatedSelectionState = documentSelection.selectionState;\n    if (updatedSelectionState !== editorState.getSelection()) {\n        if (documentSelection.needsRecovery) {\n            editorState = EditorState.forceSelection(editorState, updatedSelectionState);\n        } else {\n            editorState = EditorState.acceptSelection(editorState, updatedSelectionState);\n        }\n        editor.update(editorState);\n    }\n}\nmodule.exports = editOnSelect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uU2VsZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsc0JBQXNCQyxtQkFBT0EsQ0FBQyxxR0FBdUI7QUFFekQsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUMscUZBQWU7QUFFekMsSUFBSUUsOEJBQThCRixtQkFBT0EsQ0FBQyxxSEFBK0I7QUFFekUsSUFBSUcsMEJBQTBCSCxtQkFBT0EsQ0FBQyw2R0FBMkI7QUFFakUsU0FBU0ksYUFBYUMsTUFBTTtJQUMxQixJQUFJQSxPQUFPQyxrQkFBa0IsSUFBSUQsT0FBT0Usa0JBQWtCLEtBQUtGLE9BQU9HLEtBQUssQ0FBQ0MsV0FBVyxFQUFFO1FBQ3ZGLElBQUlKLE9BQU9DLGtCQUFrQixFQUFFO1lBQzdCLElBQUlJLGVBQWVMLE9BQU9HLEtBQUssQ0FBQ0MsV0FBVztZQUUzQyxJQUFJRSxpQkFBaUJELGFBQWFFLFlBQVk7WUFFOUNiLG9CQUFvQmMsd0JBQXdCLENBQUM7Z0JBQzNDLCtDQUErQztnQkFDL0NDLGVBQWU7Z0JBQ2ZDLGFBQWFDLEtBQUtDLFNBQVMsQ0FBQztvQkFDMUJDLFlBQVksSUFBSUMsUUFBUUMsS0FBSztnQkFDL0I7Z0JBQ0FULGdCQUFnQkssS0FBS0MsU0FBUyxDQUFDTixlQUFlVSxJQUFJO1lBQ3BEO1FBQ0Y7UUFFQTtJQUNGO0lBRUEsSUFBSVosY0FBY0osT0FBT0csS0FBSyxDQUFDQyxXQUFXO0lBQzFDLElBQUlhLG9CQUFvQm5CLHdCQUF3Qk0sYUFBYVAsNEJBQTRCRztJQUN6RixJQUFJa0Isd0JBQXdCRCxrQkFBa0JYLGNBQWM7SUFFNUQsSUFBSVksMEJBQTBCZCxZQUFZRyxZQUFZLElBQUk7UUFDeEQsSUFBSVUsa0JBQWtCRSxhQUFhLEVBQUU7WUFDbkNmLGNBQWNSLFlBQVl3QixjQUFjLENBQUNoQixhQUFhYztRQUN4RCxPQUFPO1lBQ0xkLGNBQWNSLFlBQVl5QixlQUFlLENBQUNqQixhQUFhYztRQUN6RDtRQUVBbEIsT0FBT3NCLE1BQU0sQ0FBQ2xCO0lBQ2hCO0FBQ0Y7QUFFQW1CLE9BQU9DLE9BQU8sR0FBR3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZWRpdE9uU2VsZWN0LmpzP2RlYmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIERyYWZ0SnNEZWJ1Z0xvZ2dpbmcgPSByZXF1aXJlKFwiLi9EcmFmdEpzRGVidWdMb2dnaW5nXCIpO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcblxudmFyIGdldENvbnRlbnRFZGl0YWJsZUNvbnRhaW5lciA9IHJlcXVpcmUoXCIuL2dldENvbnRlbnRFZGl0YWJsZUNvbnRhaW5lclwiKTtcblxudmFyIGdldERyYWZ0RWRpdG9yU2VsZWN0aW9uID0gcmVxdWlyZShcIi4vZ2V0RHJhZnRFZGl0b3JTZWxlY3Rpb25cIik7XG5cbmZ1bmN0aW9uIGVkaXRPblNlbGVjdChlZGl0b3IpIHtcbiAgaWYgKGVkaXRvci5fYmxvY2tTZWxlY3RFdmVudHMgfHwgZWRpdG9yLl9sYXRlc3RFZGl0b3JTdGF0ZSAhPT0gZWRpdG9yLnByb3BzLmVkaXRvclN0YXRlKSB7XG4gICAgaWYgKGVkaXRvci5fYmxvY2tTZWxlY3RFdmVudHMpIHtcbiAgICAgIHZhciBfZWRpdG9yU3RhdGUgPSBlZGl0b3IucHJvcHMuZWRpdG9yU3RhdGU7XG5cbiAgICAgIHZhciBzZWxlY3Rpb25TdGF0ZSA9IF9lZGl0b3JTdGF0ZS5nZXRTZWxlY3Rpb24oKTtcblxuICAgICAgRHJhZnRKc0RlYnVnTG9nZ2luZy5sb2dCbG9ja2VkU2VsZWN0aW9uRXZlbnQoe1xuICAgICAgICAvLyBGb3Igbm93IEkgZG9uJ3QgdGhpbmsgd2UgbmVlZCBhbnkgb3RoZXIgaW5mb1xuICAgICAgICBhbm9ueW1pemVkRG9tOiAnTi9BJyxcbiAgICAgICAgZXh0cmFQYXJhbXM6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBzdGFja3RyYWNlOiBuZXcgRXJyb3IoKS5zdGFja1xuICAgICAgICB9KSxcbiAgICAgICAgc2VsZWN0aW9uU3RhdGU6IEpTT04uc3RyaW5naWZ5KHNlbGVjdGlvblN0YXRlLnRvSlMoKSlcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBlZGl0b3JTdGF0ZSA9IGVkaXRvci5wcm9wcy5lZGl0b3JTdGF0ZTtcbiAgdmFyIGRvY3VtZW50U2VsZWN0aW9uID0gZ2V0RHJhZnRFZGl0b3JTZWxlY3Rpb24oZWRpdG9yU3RhdGUsIGdldENvbnRlbnRFZGl0YWJsZUNvbnRhaW5lcihlZGl0b3IpKTtcbiAgdmFyIHVwZGF0ZWRTZWxlY3Rpb25TdGF0ZSA9IGRvY3VtZW50U2VsZWN0aW9uLnNlbGVjdGlvblN0YXRlO1xuXG4gIGlmICh1cGRhdGVkU2VsZWN0aW9uU3RhdGUgIT09IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpKSB7XG4gICAgaWYgKGRvY3VtZW50U2VsZWN0aW9uLm5lZWRzUmVjb3ZlcnkpIHtcbiAgICAgIGVkaXRvclN0YXRlID0gRWRpdG9yU3RhdGUuZm9yY2VTZWxlY3Rpb24oZWRpdG9yU3RhdGUsIHVwZGF0ZWRTZWxlY3Rpb25TdGF0ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVkaXRvclN0YXRlID0gRWRpdG9yU3RhdGUuYWNjZXB0U2VsZWN0aW9uKGVkaXRvclN0YXRlLCB1cGRhdGVkU2VsZWN0aW9uU3RhdGUpO1xuICAgIH1cblxuICAgIGVkaXRvci51cGRhdGUoZWRpdG9yU3RhdGUpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZWRpdE9uU2VsZWN0OyJdLCJuYW1lcyI6WyJEcmFmdEpzRGVidWdMb2dnaW5nIiwicmVxdWlyZSIsIkVkaXRvclN0YXRlIiwiZ2V0Q29udGVudEVkaXRhYmxlQ29udGFpbmVyIiwiZ2V0RHJhZnRFZGl0b3JTZWxlY3Rpb24iLCJlZGl0T25TZWxlY3QiLCJlZGl0b3IiLCJfYmxvY2tTZWxlY3RFdmVudHMiLCJfbGF0ZXN0RWRpdG9yU3RhdGUiLCJwcm9wcyIsImVkaXRvclN0YXRlIiwiX2VkaXRvclN0YXRlIiwic2VsZWN0aW9uU3RhdGUiLCJnZXRTZWxlY3Rpb24iLCJsb2dCbG9ja2VkU2VsZWN0aW9uRXZlbnQiLCJhbm9ueW1pemVkRG9tIiwiZXh0cmFQYXJhbXMiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhY2t0cmFjZSIsIkVycm9yIiwic3RhY2siLCJ0b0pTIiwiZG9jdW1lbnRTZWxlY3Rpb24iLCJ1cGRhdGVkU2VsZWN0aW9uU3RhdGUiLCJuZWVkc1JlY292ZXJ5IiwiZm9yY2VTZWxlY3Rpb24iLCJhY2NlcHRTZWxlY3Rpb24iLCJ1cGRhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/editOnSelect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/encodeEntityRanges.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/encodeEntityRanges.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftStringKey = __webpack_require__(/*! ./DraftStringKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftStringKey.js\");\nvar UnicodeUtils = __webpack_require__(/*! fbjs/lib/UnicodeUtils */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\");\nvar strlen = UnicodeUtils.strlen;\n/**\n * Convert to UTF-8 character counts for storage.\n */ function encodeEntityRanges(block, storageMap) {\n    var encoded = [];\n    block.findEntityRanges(function(character) {\n        return !!character.getEntity();\n    }, function(/*number*/ start, /*number*/ end) {\n        var text = block.getText();\n        var key = block.getEntityAt(start);\n        encoded.push({\n            offset: strlen(text.slice(0, start)),\n            length: strlen(text.slice(start, end)),\n            // Encode the key as a number for range storage.\n            key: Number(storageMap[DraftStringKey.stringify(key)])\n        });\n    });\n    return encoded;\n}\nmodule.exports = encodeEntityRanges;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZW5jb2RlRW50aXR5UmFuZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsaUJBQWlCQyxtQkFBT0EsQ0FBQywyRkFBa0I7QUFFL0MsSUFBSUMsZUFBZUQsbUJBQU9BLENBQUMsMEZBQXVCO0FBRWxELElBQUlFLFNBQVNELGFBQWFDLE1BQU07QUFDaEM7O0NBRUMsR0FFRCxTQUFTQyxtQkFBbUJDLEtBQUssRUFBRUMsVUFBVTtJQUMzQyxJQUFJQyxVQUFVLEVBQUU7SUFDaEJGLE1BQU1HLGdCQUFnQixDQUFDLFNBQVVDLFNBQVM7UUFDeEMsT0FBTyxDQUFDLENBQUNBLFVBQVVDLFNBQVM7SUFDOUIsR0FBRyxTQUNILFFBQVEsR0FDUkMsS0FBSyxFQUNMLFFBQVEsR0FDUkMsR0FBRztRQUNELElBQUlDLE9BQU9SLE1BQU1TLE9BQU87UUFDeEIsSUFBSUMsTUFBTVYsTUFBTVcsV0FBVyxDQUFDTDtRQUM1QkosUUFBUVUsSUFBSSxDQUFDO1lBQ1hDLFFBQVFmLE9BQU9VLEtBQUtNLEtBQUssQ0FBQyxHQUFHUjtZQUM3QlMsUUFBUWpCLE9BQU9VLEtBQUtNLEtBQUssQ0FBQ1IsT0FBT0M7WUFDakMsZ0RBQWdEO1lBQ2hERyxLQUFLTSxPQUFPZixVQUFVLENBQUNOLGVBQWVzQixTQUFTLENBQUNQLEtBQUs7UUFDdkQ7SUFDRjtJQUNBLE9BQU9SO0FBQ1Q7QUFFQWdCLE9BQU9DLE9BQU8sR0FBR3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZW5jb2RlRW50aXR5UmFuZ2VzLmpzP2VmOTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIERyYWZ0U3RyaW5nS2V5ID0gcmVxdWlyZShcIi4vRHJhZnRTdHJpbmdLZXlcIik7XG5cbnZhciBVbmljb2RlVXRpbHMgPSByZXF1aXJlKFwiZmJqcy9saWIvVW5pY29kZVV0aWxzXCIpO1xuXG52YXIgc3RybGVuID0gVW5pY29kZVV0aWxzLnN0cmxlbjtcbi8qKlxuICogQ29udmVydCB0byBVVEYtOCBjaGFyYWN0ZXIgY291bnRzIGZvciBzdG9yYWdlLlxuICovXG5cbmZ1bmN0aW9uIGVuY29kZUVudGl0eVJhbmdlcyhibG9jaywgc3RvcmFnZU1hcCkge1xuICB2YXIgZW5jb2RlZCA9IFtdO1xuICBibG9jay5maW5kRW50aXR5UmFuZ2VzKGZ1bmN0aW9uIChjaGFyYWN0ZXIpIHtcbiAgICByZXR1cm4gISFjaGFyYWN0ZXIuZ2V0RW50aXR5KCk7XG4gIH0sIGZ1bmN0aW9uIChcbiAgLypudW1iZXIqL1xuICBzdGFydCxcbiAgLypudW1iZXIqL1xuICBlbmQpIHtcbiAgICB2YXIgdGV4dCA9IGJsb2NrLmdldFRleHQoKTtcbiAgICB2YXIga2V5ID0gYmxvY2suZ2V0RW50aXR5QXQoc3RhcnQpO1xuICAgIGVuY29kZWQucHVzaCh7XG4gICAgICBvZmZzZXQ6IHN0cmxlbih0ZXh0LnNsaWNlKDAsIHN0YXJ0KSksXG4gICAgICBsZW5ndGg6IHN0cmxlbih0ZXh0LnNsaWNlKHN0YXJ0LCBlbmQpKSxcbiAgICAgIC8vIEVuY29kZSB0aGUga2V5IGFzIGEgbnVtYmVyIGZvciByYW5nZSBzdG9yYWdlLlxuICAgICAga2V5OiBOdW1iZXIoc3RvcmFnZU1hcFtEcmFmdFN0cmluZ0tleS5zdHJpbmdpZnkoa2V5KV0pXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gZW5jb2RlZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbmNvZGVFbnRpdHlSYW5nZXM7Il0sIm5hbWVzIjpbIkRyYWZ0U3RyaW5nS2V5IiwicmVxdWlyZSIsIlVuaWNvZGVVdGlscyIsInN0cmxlbiIsImVuY29kZUVudGl0eVJhbmdlcyIsImJsb2NrIiwic3RvcmFnZU1hcCIsImVuY29kZWQiLCJmaW5kRW50aXR5UmFuZ2VzIiwiY2hhcmFjdGVyIiwiZ2V0RW50aXR5Iiwic3RhcnQiLCJlbmQiLCJ0ZXh0IiwiZ2V0VGV4dCIsImtleSIsImdldEVudGl0eUF0IiwicHVzaCIsIm9mZnNldCIsInNsaWNlIiwibGVuZ3RoIiwiTnVtYmVyIiwic3RyaW5naWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/encodeEntityRanges.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/encodeInlineStyleRanges.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/encodeInlineStyleRanges.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UnicodeUtils = __webpack_require__(/*! fbjs/lib/UnicodeUtils */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\");\nvar findRangesImmutable = __webpack_require__(/*! ./findRangesImmutable */ \"(app-pages-browser)/./node_modules/draft-js/lib/findRangesImmutable.js\");\nvar areEqual = function areEqual(a, b) {\n    return a === b;\n};\nvar isTruthy = function isTruthy(a) {\n    return !!a;\n};\nvar EMPTY_ARRAY = [];\n/**\n * Helper function for getting encoded styles for each inline style. Convert\n * to UTF-8 character counts for storage.\n */ function getEncodedInlinesForType(block, styleList, styleToEncode) {\n    var ranges = []; // Obtain an array with ranges for only the specified style.\n    var filteredInlines = styleList.map(function(style) {\n        return style.has(styleToEncode);\n    }).toList();\n    findRangesImmutable(filteredInlines, areEqual, isTruthy, function(start, end) {\n        var text = block.getText();\n        ranges.push({\n            offset: UnicodeUtils.strlen(text.slice(0, start)),\n            length: UnicodeUtils.strlen(text.slice(start, end)),\n            style: styleToEncode\n        });\n    });\n    return ranges;\n}\n/*\n * Retrieve the encoded arrays of inline styles, with each individual style\n * treated separately.\n */ function encodeInlineStyleRanges(block) {\n    var styleList = block.getCharacterList().map(function(c) {\n        return c.getStyle();\n    }).toList();\n    var ranges = styleList.flatten().toSet().map(function(style) {\n        return getEncodedInlinesForType(block, styleList, style);\n    });\n    return Array.prototype.concat.apply(EMPTY_ARRAY, ranges.toJS());\n}\nmodule.exports = encodeInlineStyleRanges;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZW5jb2RlSW5saW5lU3R5bGVSYW5nZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxlQUFlQyxtQkFBT0EsQ0FBQywwRkFBdUI7QUFFbEQsSUFBSUMsc0JBQXNCRCxtQkFBT0EsQ0FBQyxxR0FBdUI7QUFFekQsSUFBSUUsV0FBVyxTQUFTQSxTQUFTQyxDQUFDLEVBQUVDLENBQUM7SUFDbkMsT0FBT0QsTUFBTUM7QUFDZjtBQUVBLElBQUlDLFdBQVcsU0FBU0EsU0FBU0YsQ0FBQztJQUNoQyxPQUFPLENBQUMsQ0FBQ0E7QUFDWDtBQUVBLElBQUlHLGNBQWMsRUFBRTtBQUNwQjs7O0NBR0MsR0FFRCxTQUFTQyx5QkFBeUJDLEtBQUssRUFBRUMsU0FBUyxFQUFFQyxhQUFhO0lBQy9ELElBQUlDLFNBQVMsRUFBRSxFQUFFLDREQUE0RDtJQUU3RSxJQUFJQyxrQkFBa0JILFVBQVVJLEdBQUcsQ0FBQyxTQUFVQyxLQUFLO1FBQ2pELE9BQU9BLE1BQU1DLEdBQUcsQ0FBQ0w7SUFDbkIsR0FBR00sTUFBTTtJQUNUZixvQkFBb0JXLGlCQUFpQlYsVUFDckNHLFVBQVUsU0FBVVksS0FBSyxFQUFFQyxHQUFHO1FBQzVCLElBQUlDLE9BQU9YLE1BQU1ZLE9BQU87UUFDeEJULE9BQU9VLElBQUksQ0FBQztZQUNWQyxRQUFRdkIsYUFBYXdCLE1BQU0sQ0FBQ0osS0FBS0ssS0FBSyxDQUFDLEdBQUdQO1lBQzFDUSxRQUFRMUIsYUFBYXdCLE1BQU0sQ0FBQ0osS0FBS0ssS0FBSyxDQUFDUCxPQUFPQztZQUM5Q0osT0FBT0o7UUFDVDtJQUNGO0lBQ0EsT0FBT0M7QUFDVDtBQUNBOzs7Q0FHQyxHQUdELFNBQVNlLHdCQUF3QmxCLEtBQUs7SUFDcEMsSUFBSUMsWUFBWUQsTUFBTW1CLGdCQUFnQixHQUFHZCxHQUFHLENBQUMsU0FBVWUsQ0FBQztRQUN0RCxPQUFPQSxFQUFFQyxRQUFRO0lBQ25CLEdBQUdiLE1BQU07SUFDVCxJQUFJTCxTQUFTRixVQUFVcUIsT0FBTyxHQUFHQyxLQUFLLEdBQUdsQixHQUFHLENBQUMsU0FBVUMsS0FBSztRQUMxRCxPQUFPUCx5QkFBeUJDLE9BQU9DLFdBQVdLO0lBQ3BEO0lBQ0EsT0FBT2tCLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDQyxLQUFLLENBQUM3QixhQUFhSyxPQUFPeUIsSUFBSTtBQUM5RDtBQUVBQyxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZW5jb2RlSW5saW5lU3R5bGVSYW5nZXMuanM/OTFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVW5pY29kZVV0aWxzID0gcmVxdWlyZShcImZianMvbGliL1VuaWNvZGVVdGlsc1wiKTtcblxudmFyIGZpbmRSYW5nZXNJbW11dGFibGUgPSByZXF1aXJlKFwiLi9maW5kUmFuZ2VzSW1tdXRhYmxlXCIpO1xuXG52YXIgYXJlRXF1YWwgPSBmdW5jdGlvbiBhcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhID09PSBiO1xufTtcblxudmFyIGlzVHJ1dGh5ID0gZnVuY3Rpb24gaXNUcnV0aHkoYSkge1xuICByZXR1cm4gISFhO1xufTtcblxudmFyIEVNUFRZX0FSUkFZID0gW107XG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiBmb3IgZ2V0dGluZyBlbmNvZGVkIHN0eWxlcyBmb3IgZWFjaCBpbmxpbmUgc3R5bGUuIENvbnZlcnRcbiAqIHRvIFVURi04IGNoYXJhY3RlciBjb3VudHMgZm9yIHN0b3JhZ2UuXG4gKi9cblxuZnVuY3Rpb24gZ2V0RW5jb2RlZElubGluZXNGb3JUeXBlKGJsb2NrLCBzdHlsZUxpc3QsIHN0eWxlVG9FbmNvZGUpIHtcbiAgdmFyIHJhbmdlcyA9IFtdOyAvLyBPYnRhaW4gYW4gYXJyYXkgd2l0aCByYW5nZXMgZm9yIG9ubHkgdGhlIHNwZWNpZmllZCBzdHlsZS5cblxuICB2YXIgZmlsdGVyZWRJbmxpbmVzID0gc3R5bGVMaXN0Lm1hcChmdW5jdGlvbiAoc3R5bGUpIHtcbiAgICByZXR1cm4gc3R5bGUuaGFzKHN0eWxlVG9FbmNvZGUpO1xuICB9KS50b0xpc3QoKTtcbiAgZmluZFJhbmdlc0ltbXV0YWJsZShmaWx0ZXJlZElubGluZXMsIGFyZUVxdWFsLCAvLyBXZSBvbmx5IHdhbnQgdG8ga2VlcCByYW5nZXMgd2l0aCBub256ZXJvIHN0eWxlIHZhbHVlcy5cbiAgaXNUcnV0aHksIGZ1bmN0aW9uIChzdGFydCwgZW5kKSB7XG4gICAgdmFyIHRleHQgPSBibG9jay5nZXRUZXh0KCk7XG4gICAgcmFuZ2VzLnB1c2goe1xuICAgICAgb2Zmc2V0OiBVbmljb2RlVXRpbHMuc3RybGVuKHRleHQuc2xpY2UoMCwgc3RhcnQpKSxcbiAgICAgIGxlbmd0aDogVW5pY29kZVV0aWxzLnN0cmxlbih0ZXh0LnNsaWNlKHN0YXJ0LCBlbmQpKSxcbiAgICAgIHN0eWxlOiBzdHlsZVRvRW5jb2RlXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gcmFuZ2VzO1xufVxuLypcbiAqIFJldHJpZXZlIHRoZSBlbmNvZGVkIGFycmF5cyBvZiBpbmxpbmUgc3R5bGVzLCB3aXRoIGVhY2ggaW5kaXZpZHVhbCBzdHlsZVxuICogdHJlYXRlZCBzZXBhcmF0ZWx5LlxuICovXG5cblxuZnVuY3Rpb24gZW5jb2RlSW5saW5lU3R5bGVSYW5nZXMoYmxvY2spIHtcbiAgdmFyIHN0eWxlTGlzdCA9IGJsb2NrLmdldENoYXJhY3Rlckxpc3QoKS5tYXAoZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gYy5nZXRTdHlsZSgpO1xuICB9KS50b0xpc3QoKTtcbiAgdmFyIHJhbmdlcyA9IHN0eWxlTGlzdC5mbGF0dGVuKCkudG9TZXQoKS5tYXAoZnVuY3Rpb24gKHN0eWxlKSB7XG4gICAgcmV0dXJuIGdldEVuY29kZWRJbmxpbmVzRm9yVHlwZShibG9jaywgc3R5bGVMaXN0LCBzdHlsZSk7XG4gIH0pO1xuICByZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShFTVBUWV9BUlJBWSwgcmFuZ2VzLnRvSlMoKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW5jb2RlSW5saW5lU3R5bGVSYW5nZXM7Il0sIm5hbWVzIjpbIlVuaWNvZGVVdGlscyIsInJlcXVpcmUiLCJmaW5kUmFuZ2VzSW1tdXRhYmxlIiwiYXJlRXF1YWwiLCJhIiwiYiIsImlzVHJ1dGh5IiwiRU1QVFlfQVJSQVkiLCJnZXRFbmNvZGVkSW5saW5lc0ZvclR5cGUiLCJibG9jayIsInN0eWxlTGlzdCIsInN0eWxlVG9FbmNvZGUiLCJyYW5nZXMiLCJmaWx0ZXJlZElubGluZXMiLCJtYXAiLCJzdHlsZSIsImhhcyIsInRvTGlzdCIsInN0YXJ0IiwiZW5kIiwidGV4dCIsImdldFRleHQiLCJwdXNoIiwib2Zmc2V0Iiwic3RybGVuIiwic2xpY2UiLCJsZW5ndGgiLCJlbmNvZGVJbmxpbmVTdHlsZVJhbmdlcyIsImdldENoYXJhY3Rlckxpc3QiLCJjIiwiZ2V0U3R5bGUiLCJmbGF0dGVuIiwidG9TZXQiLCJBcnJheSIsInByb3RvdHlwZSIsImNvbmNhdCIsImFwcGx5IiwidG9KUyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/encodeInlineStyleRanges.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/expandRangeToStartOfLine.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/expandRangeToStartOfLine.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ var UnicodeUtils = __webpack_require__(/*! fbjs/lib/UnicodeUtils */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\");\nvar getCorrectDocumentFromNode = __webpack_require__(/*! ./getCorrectDocumentFromNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getCorrectDocumentFromNode.js\");\nvar getRangeClientRects = __webpack_require__(/*! ./getRangeClientRects */ \"(app-pages-browser)/./node_modules/draft-js/lib/getRangeClientRects.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\n/**\n * Return the computed line height, in pixels, for the provided element.\n */ function getLineHeightPx(element) {\n    var computed = getComputedStyle(element);\n    var correctDocument = getCorrectDocumentFromNode(element);\n    var div = correctDocument.createElement(\"div\");\n    div.style.fontFamily = computed.fontFamily;\n    div.style.fontSize = computed.fontSize;\n    div.style.fontStyle = computed.fontStyle;\n    div.style.fontWeight = computed.fontWeight;\n    div.style.lineHeight = computed.lineHeight;\n    div.style.position = \"absolute\";\n    div.textContent = \"M\";\n    var documentBody = correctDocument.body;\n    !documentBody ?  true ? invariant(false, \"Missing document.body\") : 0 : void 0; // forced layout here\n    documentBody.appendChild(div);\n    var rect = div.getBoundingClientRect();\n    documentBody.removeChild(div);\n    return rect.height;\n}\n/**\n * Return whether every ClientRect in the provided list lies on the same line.\n *\n * We assume that the rects on the same line all contain the baseline, so the\n * lowest top line needs to be above the highest bottom line (i.e., if you were\n * to project the rects onto the y-axis, their intersection would be nonempty).\n *\n * In addition, we require that no two boxes are lineHeight (or more) apart at\n * either top or bottom, which helps protect against false positives for fonts\n * with extremely large glyph heights (e.g., with a font size of 17px, Zapfino\n * produces rects of height 58px!).\n */ function areRectsOnOneLine(rects, lineHeight) {\n    var minTop = Infinity;\n    var minBottom = Infinity;\n    var maxTop = -Infinity;\n    var maxBottom = -Infinity;\n    for(var ii = 0; ii < rects.length; ii++){\n        var rect = rects[ii];\n        if (rect.width === 0 || rect.width === 1) {\n            continue;\n        }\n        minTop = Math.min(minTop, rect.top);\n        minBottom = Math.min(minBottom, rect.bottom);\n        maxTop = Math.max(maxTop, rect.top);\n        maxBottom = Math.max(maxBottom, rect.bottom);\n    }\n    return maxTop <= minBottom && maxTop - minTop < lineHeight && maxBottom - minBottom < lineHeight;\n}\n/**\n * Return the length of a node, as used by Range offsets.\n */ function getNodeLength(node) {\n    // http://www.w3.org/TR/dom/#concept-node-length\n    switch(node.nodeType){\n        case Node.DOCUMENT_TYPE_NODE:\n            return 0;\n        case Node.TEXT_NODE:\n        case Node.PROCESSING_INSTRUCTION_NODE:\n        case Node.COMMENT_NODE:\n            return node.length;\n        default:\n            return node.childNodes.length;\n    }\n}\n/**\n * Given a collapsed range, move the start position backwards as far as\n * possible while the range still spans only a single line.\n */ function expandRangeToStartOfLine(range) {\n    !range.collapsed ?  true ? invariant(false, \"expandRangeToStartOfLine: Provided range is not collapsed.\") : 0 : void 0;\n    range = range.cloneRange();\n    var containingElement = range.startContainer;\n    if (containingElement.nodeType !== 1) {\n        containingElement = containingElement.parentNode;\n    }\n    var lineHeight = getLineHeightPx(containingElement); // Imagine our text looks like:\n    //   <div><span>once upon a time, there was a <em>boy\n    //   who lived</em> </span><q><strong>under^ the\n    //   stairs</strong> in a small closet.</q></div>\n    // where the caret represents the cursor. First, we crawl up the tree until\n    // the range spans multiple lines (setting the start point to before\n    // \"<strong>\", then before \"<div>\"), then at each level we do a search to\n    // find the latest point which is still on a previous line. We'll find that\n    // the break point is inside the span, then inside the <em>, then in its text\n    // node child, the actual break point before \"who\".\n    var bestContainer = range.endContainer;\n    var bestOffset = range.endOffset;\n    range.setStart(range.startContainer, 0);\n    while(areRectsOnOneLine(getRangeClientRects(range), lineHeight)){\n        bestContainer = range.startContainer;\n        bestOffset = range.startOffset;\n        !bestContainer.parentNode ?  true ? invariant(false, \"Found unexpected detached subtree when traversing.\") : 0 : void 0;\n        range.setStartBefore(bestContainer);\n        if (bestContainer.nodeType === 1 && getComputedStyle(bestContainer).display !== \"inline\") {\n            break;\n        }\n    } // In the above example, range now spans from \"<div>\" to \"under\",\n    // bestContainer is <div>, and bestOffset is 1 (index of <q> inside <div>)].\n    // Picking out which child to recurse into here is a special case since we\n    // don't want to check past <q> -- once we find that the final range starts\n    // in <span>, we can look at all of its children (and all of their children)\n    // to find the break point.\n    // At all times, (bestContainer, bestOffset) is the latest single-line start\n    // point that we know of.\n    var currentContainer = bestContainer;\n    var maxIndexToConsider = bestOffset - 1;\n    do {\n        var nodeValue = currentContainer.nodeValue;\n        var ii = maxIndexToConsider;\n        for(; ii >= 0; ii--){\n            if (nodeValue != null && ii > 0 && UnicodeUtils.isSurrogatePair(nodeValue, ii - 1)) {\n                continue;\n            }\n            range.setStart(currentContainer, ii);\n            if (areRectsOnOneLine(getRangeClientRects(range), lineHeight)) {\n                bestContainer = currentContainer;\n                bestOffset = ii;\n            } else {\n                break;\n            }\n        }\n        if (ii === -1 || currentContainer.childNodes.length === 0) {\n            break;\n        }\n        currentContainer = currentContainer.childNodes[ii];\n        maxIndexToConsider = getNodeLength(currentContainer);\n    }while (true);\n    range.setStart(bestContainer, bestOffset);\n    return range;\n}\nmodule.exports = expandRangeToStartOfLine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/expandRangeToStartOfLine.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/findAncestorOffsetKey.js":
/*!************************************************************!*\
  !*** ./node_modules/draft-js/lib/findAncestorOffsetKey.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar getCorrectDocumentFromNode = __webpack_require__(/*! ./getCorrectDocumentFromNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getCorrectDocumentFromNode.js\");\nvar getSelectionOffsetKeyForNode = __webpack_require__(/*! ./getSelectionOffsetKeyForNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getSelectionOffsetKeyForNode.js\");\n/**\n * Get the key from the node's nearest offset-aware ancestor.\n */ function findAncestorOffsetKey(node) {\n    var searchNode = node;\n    while(searchNode && searchNode !== getCorrectDocumentFromNode(node).documentElement){\n        var key = getSelectionOffsetKeyForNode(searchNode);\n        if (key != null) {\n            return key;\n        }\n        searchNode = searchNode.parentNode;\n    }\n    return null;\n}\nmodule.exports = findAncestorOffsetKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZmluZEFuY2VzdG9yT2Zmc2V0S2V5LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsNkJBQTZCQyxtQkFBT0EsQ0FBQyxtSEFBOEI7QUFFdkUsSUFBSUMsK0JBQStCRCxtQkFBT0EsQ0FBQyx1SEFBZ0M7QUFDM0U7O0NBRUMsR0FHRCxTQUFTRSxzQkFBc0JDLElBQUk7SUFDakMsSUFBSUMsYUFBYUQ7SUFFakIsTUFBT0MsY0FBY0EsZUFBZUwsMkJBQTJCSSxNQUFNRSxlQUFlLENBQUU7UUFDcEYsSUFBSUMsTUFBTUwsNkJBQTZCRztRQUV2QyxJQUFJRSxPQUFPLE1BQU07WUFDZixPQUFPQTtRQUNUO1FBRUFGLGFBQWFBLFdBQVdHLFVBQVU7SUFDcEM7SUFFQSxPQUFPO0FBQ1Q7QUFFQUMsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2ZpbmRBbmNlc3Rvck9mZnNldEtleS5qcz9jYWEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBnZXRDb3JyZWN0RG9jdW1lbnRGcm9tTm9kZSA9IHJlcXVpcmUoXCIuL2dldENvcnJlY3REb2N1bWVudEZyb21Ob2RlXCIpO1xuXG52YXIgZ2V0U2VsZWN0aW9uT2Zmc2V0S2V5Rm9yTm9kZSA9IHJlcXVpcmUoXCIuL2dldFNlbGVjdGlvbk9mZnNldEtleUZvck5vZGVcIik7XG4vKipcbiAqIEdldCB0aGUga2V5IGZyb20gdGhlIG5vZGUncyBuZWFyZXN0IG9mZnNldC1hd2FyZSBhbmNlc3Rvci5cbiAqL1xuXG5cbmZ1bmN0aW9uIGZpbmRBbmNlc3Rvck9mZnNldEtleShub2RlKSB7XG4gIHZhciBzZWFyY2hOb2RlID0gbm9kZTtcblxuICB3aGlsZSAoc2VhcmNoTm9kZSAmJiBzZWFyY2hOb2RlICE9PSBnZXRDb3JyZWN0RG9jdW1lbnRGcm9tTm9kZShub2RlKS5kb2N1bWVudEVsZW1lbnQpIHtcbiAgICB2YXIga2V5ID0gZ2V0U2VsZWN0aW9uT2Zmc2V0S2V5Rm9yTm9kZShzZWFyY2hOb2RlKTtcblxuICAgIGlmIChrZXkgIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG5cbiAgICBzZWFyY2hOb2RlID0gc2VhcmNoTm9kZS5wYXJlbnROb2RlO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmluZEFuY2VzdG9yT2Zmc2V0S2V5OyJdLCJuYW1lcyI6WyJnZXRDb3JyZWN0RG9jdW1lbnRGcm9tTm9kZSIsInJlcXVpcmUiLCJnZXRTZWxlY3Rpb25PZmZzZXRLZXlGb3JOb2RlIiwiZmluZEFuY2VzdG9yT2Zmc2V0S2V5Iiwibm9kZSIsInNlYXJjaE5vZGUiLCJkb2N1bWVudEVsZW1lbnQiLCJrZXkiLCJwYXJlbnROb2RlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/findAncestorOffsetKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/findRangesImmutable.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/findRangesImmutable.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n/**\n * Search through an array to find contiguous stretches of elements that\n * match a specified filter function.\n *\n * When ranges are found, execute a specified `found` function to supply\n * the values to the caller.\n */ function findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\n    if (!haystack.size) {\n        return;\n    }\n    var cursor = 0;\n    haystack.reduce(function(value, nextValue, nextIndex) {\n        if (!areEqualFn(value, nextValue)) {\n            if (filterFn(value)) {\n                foundFn(cursor, nextIndex);\n            }\n            cursor = nextIndex;\n        }\n        return nextValue;\n    });\n    filterFn(haystack.last()) && foundFn(cursor, haystack.count());\n}\nmodule.exports = findRangesImmutable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZmluZFJhbmdlc0ltbXV0YWJsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBOzs7Ozs7Q0FNQyxHQUNELFNBQVNBLG9CQUFvQkMsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLFFBQVEsRUFBRUMsT0FBTztJQUNsRSxJQUFJLENBQUNILFNBQVNJLElBQUksRUFBRTtRQUNsQjtJQUNGO0lBRUEsSUFBSUMsU0FBUztJQUNiTCxTQUFTTSxNQUFNLENBQUMsU0FBVUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLFNBQVM7UUFDbkQsSUFBSSxDQUFDUixXQUFXTSxPQUFPQyxZQUFZO1lBQ2pDLElBQUlOLFNBQVNLLFFBQVE7Z0JBQ25CSixRQUFRRSxRQUFRSTtZQUNsQjtZQUVBSixTQUFTSTtRQUNYO1FBRUEsT0FBT0Q7SUFDVDtJQUNBTixTQUFTRixTQUFTVSxJQUFJLE9BQU9QLFFBQVFFLFFBQVFMLFNBQVNXLEtBQUs7QUFDN0Q7QUFFQUMsT0FBT0MsT0FBTyxHQUFHZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2ZpbmRSYW5nZXNJbW11dGFibGUuanM/MTkyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNlYXJjaCB0aHJvdWdoIGFuIGFycmF5IHRvIGZpbmQgY29udGlndW91cyBzdHJldGNoZXMgb2YgZWxlbWVudHMgdGhhdFxuICogbWF0Y2ggYSBzcGVjaWZpZWQgZmlsdGVyIGZ1bmN0aW9uLlxuICpcbiAqIFdoZW4gcmFuZ2VzIGFyZSBmb3VuZCwgZXhlY3V0ZSBhIHNwZWNpZmllZCBgZm91bmRgIGZ1bmN0aW9uIHRvIHN1cHBseVxuICogdGhlIHZhbHVlcyB0byB0aGUgY2FsbGVyLlxuICovXG5mdW5jdGlvbiBmaW5kUmFuZ2VzSW1tdXRhYmxlKGhheXN0YWNrLCBhcmVFcXVhbEZuLCBmaWx0ZXJGbiwgZm91bmRGbikge1xuICBpZiAoIWhheXN0YWNrLnNpemUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgY3Vyc29yID0gMDtcbiAgaGF5c3RhY2sucmVkdWNlKGZ1bmN0aW9uICh2YWx1ZSwgbmV4dFZhbHVlLCBuZXh0SW5kZXgpIHtcbiAgICBpZiAoIWFyZUVxdWFsRm4odmFsdWUsIG5leHRWYWx1ZSkpIHtcbiAgICAgIGlmIChmaWx0ZXJGbih2YWx1ZSkpIHtcbiAgICAgICAgZm91bmRGbihjdXJzb3IsIG5leHRJbmRleCk7XG4gICAgICB9XG5cbiAgICAgIGN1cnNvciA9IG5leHRJbmRleDtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV4dFZhbHVlO1xuICB9KTtcbiAgZmlsdGVyRm4oaGF5c3RhY2subGFzdCgpKSAmJiBmb3VuZEZuKGN1cnNvciwgaGF5c3RhY2suY291bnQoKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmluZFJhbmdlc0ltbXV0YWJsZTsiXSwibmFtZXMiOlsiZmluZFJhbmdlc0ltbXV0YWJsZSIsImhheXN0YWNrIiwiYXJlRXF1YWxGbiIsImZpbHRlckZuIiwiZm91bmRGbiIsInNpemUiLCJjdXJzb3IiLCJyZWR1Y2UiLCJ2YWx1ZSIsIm5leHRWYWx1ZSIsIm5leHRJbmRleCIsImxhc3QiLCJjb3VudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/findRangesImmutable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js":
/*!********************************************************!*\
  !*** ./node_modules/draft-js/lib/generateRandomKey.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar seenKeys = {};\nvar MULTIPLIER = Math.pow(2, 24);\nfunction generateRandomKey() {\n    var key;\n    while(key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)){\n        key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n    }\n    seenKeys[key] = true;\n    return key;\n}\nmodule.exports = generateRandomKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2VuZXJhdGVSYW5kb21LZXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxXQUFXLENBQUM7QUFDaEIsSUFBSUMsYUFBYUMsS0FBS0MsR0FBRyxDQUFDLEdBQUc7QUFFN0IsU0FBU0M7SUFDUCxJQUFJQztJQUVKLE1BQU9BLFFBQVFDLGFBQWFOLFNBQVNPLGNBQWMsQ0FBQ0YsUUFBUSxDQUFDRyxNQUFNLENBQUNILEtBQU07UUFDeEVBLE1BQU1ILEtBQUtPLEtBQUssQ0FBQ1AsS0FBS1EsTUFBTSxLQUFLVCxZQUFZVSxRQUFRLENBQUM7SUFDeEQ7SUFFQVgsUUFBUSxDQUFDSyxJQUFJLEdBQUc7SUFDaEIsT0FBT0E7QUFDVDtBQUVBTyxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2VuZXJhdGVSYW5kb21LZXkuanM/ODUxZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc2VlbktleXMgPSB7fTtcbnZhciBNVUxUSVBMSUVSID0gTWF0aC5wb3coMiwgMjQpO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbUtleSgpIHtcbiAgdmFyIGtleTtcblxuICB3aGlsZSAoa2V5ID09PSB1bmRlZmluZWQgfHwgc2VlbktleXMuaGFzT3duUHJvcGVydHkoa2V5KSB8fCAhaXNOYU4oK2tleSkpIHtcbiAgICBrZXkgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBNVUxUSVBMSUVSKS50b1N0cmluZygzMik7XG4gIH1cblxuICBzZWVuS2V5c1trZXldID0gdHJ1ZTtcbiAgcmV0dXJuIGtleTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZW5lcmF0ZVJhbmRvbUtleTsiXSwibmFtZXMiOlsic2VlbktleXMiLCJNVUxUSVBMSUVSIiwiTWF0aCIsInBvdyIsImdlbmVyYXRlUmFuZG9tS2V5Iiwia2V5IiwidW5kZWZpbmVkIiwiaGFzT3duUHJvcGVydHkiLCJpc05hTiIsImZsb29yIiwicmFuZG9tIiwidG9TdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getCharacterRemovalRange.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/getCharacterRemovalRange.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftEntitySegments = __webpack_require__(/*! ./DraftEntitySegments */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEntitySegments.js\");\nvar getRangesForDraftEntity = __webpack_require__(/*! ./getRangesForDraftEntity */ \"(app-pages-browser)/./node_modules/draft-js/lib/getRangesForDraftEntity.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\n/**\n * Given a SelectionState and a removal direction, determine the entire range\n * that should be removed from a ContentState. This is based on any entities\n * within the target, with their `mutability` values taken into account.\n *\n * For instance, if we are attempting to remove part of an \"immutable\" entity\n * range, the entire entity must be removed. The returned `SelectionState`\n * will be adjusted accordingly.\n */ function getCharacterRemovalRange(entityMap, startBlock, endBlock, selectionState, direction) {\n    var start = selectionState.getStartOffset();\n    var end = selectionState.getEndOffset();\n    var startEntityKey = startBlock.getEntityAt(start);\n    var endEntityKey = endBlock.getEntityAt(end - 1);\n    if (!startEntityKey && !endEntityKey) {\n        return selectionState;\n    }\n    var newSelectionState = selectionState;\n    if (startEntityKey && startEntityKey === endEntityKey) {\n        newSelectionState = getEntityRemovalRange(entityMap, startBlock, newSelectionState, direction, startEntityKey, true, true);\n    } else if (startEntityKey && endEntityKey) {\n        var startSelectionState = getEntityRemovalRange(entityMap, startBlock, newSelectionState, direction, startEntityKey, false, true);\n        var endSelectionState = getEntityRemovalRange(entityMap, endBlock, newSelectionState, direction, endEntityKey, false, false);\n        newSelectionState = newSelectionState.merge({\n            anchorOffset: startSelectionState.getAnchorOffset(),\n            focusOffset: endSelectionState.getFocusOffset(),\n            isBackward: false\n        });\n    } else if (startEntityKey) {\n        var _startSelectionState = getEntityRemovalRange(entityMap, startBlock, newSelectionState, direction, startEntityKey, false, true);\n        newSelectionState = newSelectionState.merge({\n            anchorOffset: _startSelectionState.getStartOffset(),\n            isBackward: false\n        });\n    } else if (endEntityKey) {\n        var _endSelectionState = getEntityRemovalRange(entityMap, endBlock, newSelectionState, direction, endEntityKey, false, false);\n        newSelectionState = newSelectionState.merge({\n            focusOffset: _endSelectionState.getEndOffset(),\n            isBackward: false\n        });\n    }\n    return newSelectionState;\n}\nfunction getEntityRemovalRange(entityMap, block, selectionState, direction, entityKey, isEntireSelectionWithinEntity, isEntityAtStart) {\n    var start = selectionState.getStartOffset();\n    var end = selectionState.getEndOffset();\n    var entity = entityMap.__get(entityKey);\n    var mutability = entity.getMutability();\n    var sideToConsider = isEntityAtStart ? start : end; // `MUTABLE` entities can just have the specified range of text removed\n    // directly. No adjustments are needed.\n    if (mutability === \"MUTABLE\") {\n        return selectionState;\n    } // Find the entity range that overlaps with our removal range.\n    var entityRanges = getRangesForDraftEntity(block, entityKey).filter(function(range) {\n        return sideToConsider <= range.end && sideToConsider >= range.start;\n    });\n    !(entityRanges.length == 1) ?  true ? invariant(false, \"There should only be one entity range within this removal range.\") : 0 : void 0;\n    var entityRange = entityRanges[0]; // For `IMMUTABLE` entity types, we will remove the entire entity range.\n    if (mutability === \"IMMUTABLE\") {\n        return selectionState.merge({\n            anchorOffset: entityRange.start,\n            focusOffset: entityRange.end,\n            isBackward: false\n        });\n    } // For `SEGMENTED` entity types, determine the appropriate segment to\n    // remove.\n    if (!isEntireSelectionWithinEntity) {\n        if (isEntityAtStart) {\n            end = entityRange.end;\n        } else {\n            start = entityRange.start;\n        }\n    }\n    var removalRange = DraftEntitySegments.getRemovalRange(start, end, block.getText().slice(entityRange.start, entityRange.end), entityRange.start, direction);\n    return selectionState.merge({\n        anchorOffset: removalRange.start,\n        focusOffset: removalRange.end,\n        isBackward: false\n    });\n}\nmodule.exports = getCharacterRemovalRange;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getCharacterRemovalRange.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getContentEditableContainer.js":
/*!******************************************************************!*\
  !*** ./node_modules/draft-js/lib/getContentEditableContainer.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isHTMLElement = __webpack_require__(/*! ./isHTMLElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isHTMLElement.js\");\nfunction getContentEditableContainer(editor) {\n    var editorNode = editor.editorContainer;\n    !editorNode ?  true ? invariant(false, \"Missing editorNode\") : 0 : void 0;\n    !isHTMLElement(editorNode.firstChild) ?  true ? invariant(false, \"editorNode.firstChild is not an HTMLElement\") : 0 : void 0;\n    var htmlElement = editorNode.firstChild;\n    return htmlElement;\n}\nmodule.exports = getContentEditableContainer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0Q29udGVudEVkaXRhYmxlQ29udGFpbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsb0ZBQW9CO0FBRTVDLElBQUlDLGdCQUFnQkQsbUJBQU9BLENBQUMseUZBQWlCO0FBRTdDLFNBQVNFLDRCQUE0QkMsTUFBTTtJQUN6QyxJQUFJQyxhQUFhRCxPQUFPRSxlQUFlO0lBQ3ZDLENBQUNELGFBQWFFLEtBQXFDLEdBQUdQLFVBQVUsT0FBTyx3QkFBd0JBLENBQWdCLEdBQUcsS0FBSztJQUN2SCxDQUFDRSxjQUFjRyxXQUFXRyxVQUFVLElBQUlELEtBQXFDLEdBQUdQLFVBQVUsT0FBTyxpREFBaURBLENBQWdCLEdBQUcsS0FBSztJQUMxSyxJQUFJUyxjQUFjSixXQUFXRyxVQUFVO0lBQ3ZDLE9BQU9DO0FBQ1Q7QUFFQUMsT0FBT0MsT0FBTyxHQUFHUiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldENvbnRlbnRFZGl0YWJsZUNvbnRhaW5lci5qcz81MzFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpO1xuXG52YXIgaXNIVE1MRWxlbWVudCA9IHJlcXVpcmUoXCIuL2lzSFRNTEVsZW1lbnRcIik7XG5cbmZ1bmN0aW9uIGdldENvbnRlbnRFZGl0YWJsZUNvbnRhaW5lcihlZGl0b3IpIHtcbiAgdmFyIGVkaXRvck5vZGUgPSBlZGl0b3IuZWRpdG9yQ29udGFpbmVyO1xuICAhZWRpdG9yTm9kZSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ01pc3NpbmcgZWRpdG9yTm9kZScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgIWlzSFRNTEVsZW1lbnQoZWRpdG9yTm9kZS5maXJzdENoaWxkKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ2VkaXRvck5vZGUuZmlyc3RDaGlsZCBpcyBub3QgYW4gSFRNTEVsZW1lbnQnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBodG1sRWxlbWVudCA9IGVkaXRvck5vZGUuZmlyc3RDaGlsZDtcbiAgcmV0dXJuIGh0bWxFbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldENvbnRlbnRFZGl0YWJsZUNvbnRhaW5lcjsiXSwibmFtZXMiOlsiaW52YXJpYW50IiwicmVxdWlyZSIsImlzSFRNTEVsZW1lbnQiLCJnZXRDb250ZW50RWRpdGFibGVDb250YWluZXIiLCJlZGl0b3IiLCJlZGl0b3JOb2RlIiwiZWRpdG9yQ29udGFpbmVyIiwicHJvY2VzcyIsImZpcnN0Q2hpbGQiLCJodG1sRWxlbWVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getContentEditableContainer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getContentStateFragment.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/getContentStateFragment.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar randomizeBlockMapKeys = __webpack_require__(/*! ./randomizeBlockMapKeys */ \"(app-pages-browser)/./node_modules/draft-js/lib/randomizeBlockMapKeys.js\");\nvar removeEntitiesAtEdges = __webpack_require__(/*! ./removeEntitiesAtEdges */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeEntitiesAtEdges.js\");\nvar getContentStateFragment = function getContentStateFragment(contentState, selectionState) {\n    var startKey = selectionState.getStartKey();\n    var startOffset = selectionState.getStartOffset();\n    var endKey = selectionState.getEndKey();\n    var endOffset = selectionState.getEndOffset(); // Edge entities should be stripped to ensure that we don't preserve\n    // invalid partial entities when the fragment is reused. We do, however,\n    // preserve entities that are entirely within the selection range.\n    var contentWithoutEdgeEntities = removeEntitiesAtEdges(contentState, selectionState);\n    var blockMap = contentWithoutEdgeEntities.getBlockMap();\n    var blockKeys = blockMap.keySeq();\n    var startIndex = blockKeys.indexOf(startKey);\n    var endIndex = blockKeys.indexOf(endKey) + 1;\n    return randomizeBlockMapKeys(blockMap.slice(startIndex, endIndex).map(function(block, blockKey) {\n        var text = block.getText();\n        var chars = block.getCharacterList();\n        if (startKey === endKey) {\n            return block.merge({\n                text: text.slice(startOffset, endOffset),\n                characterList: chars.slice(startOffset, endOffset)\n            });\n        }\n        if (blockKey === startKey) {\n            return block.merge({\n                text: text.slice(startOffset),\n                characterList: chars.slice(startOffset)\n            });\n        }\n        if (blockKey === endKey) {\n            return block.merge({\n                text: text.slice(0, endOffset),\n                characterList: chars.slice(0, endOffset)\n            });\n        }\n        return block;\n    }));\n};\nmodule.exports = getContentStateFragment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSx3QkFBd0JDLG1CQUFPQSxDQUFDLHlHQUF5QjtBQUU3RCxJQUFJQyx3QkFBd0JELG1CQUFPQSxDQUFDLHlHQUF5QjtBQUU3RCxJQUFJRSwwQkFBMEIsU0FBU0Esd0JBQXdCQyxZQUFZLEVBQUVDLGNBQWM7SUFDekYsSUFBSUMsV0FBV0QsZUFBZUUsV0FBVztJQUN6QyxJQUFJQyxjQUFjSCxlQUFlSSxjQUFjO0lBQy9DLElBQUlDLFNBQVNMLGVBQWVNLFNBQVM7SUFDckMsSUFBSUMsWUFBWVAsZUFBZVEsWUFBWSxJQUFJLG9FQUFvRTtJQUNuSCx3RUFBd0U7SUFDeEUsa0VBQWtFO0lBRWxFLElBQUlDLDZCQUE2Qlosc0JBQXNCRSxjQUFjQztJQUNyRSxJQUFJVSxXQUFXRCwyQkFBMkJFLFdBQVc7SUFDckQsSUFBSUMsWUFBWUYsU0FBU0csTUFBTTtJQUMvQixJQUFJQyxhQUFhRixVQUFVRyxPQUFPLENBQUNkO0lBQ25DLElBQUllLFdBQVdKLFVBQVVHLE9BQU8sQ0FBQ1YsVUFBVTtJQUMzQyxPQUFPVixzQkFBc0JlLFNBQVNPLEtBQUssQ0FBQ0gsWUFBWUUsVUFBVUUsR0FBRyxDQUFDLFNBQVVDLEtBQUssRUFBRUMsUUFBUTtRQUM3RixJQUFJQyxPQUFPRixNQUFNRyxPQUFPO1FBQ3hCLElBQUlDLFFBQVFKLE1BQU1LLGdCQUFnQjtRQUVsQyxJQUFJdkIsYUFBYUksUUFBUTtZQUN2QixPQUFPYyxNQUFNTSxLQUFLLENBQUM7Z0JBQ2pCSixNQUFNQSxLQUFLSixLQUFLLENBQUNkLGFBQWFJO2dCQUM5Qm1CLGVBQWVILE1BQU1OLEtBQUssQ0FBQ2QsYUFBYUk7WUFDMUM7UUFDRjtRQUVBLElBQUlhLGFBQWFuQixVQUFVO1lBQ3pCLE9BQU9rQixNQUFNTSxLQUFLLENBQUM7Z0JBQ2pCSixNQUFNQSxLQUFLSixLQUFLLENBQUNkO2dCQUNqQnVCLGVBQWVILE1BQU1OLEtBQUssQ0FBQ2Q7WUFDN0I7UUFDRjtRQUVBLElBQUlpQixhQUFhZixRQUFRO1lBQ3ZCLE9BQU9jLE1BQU1NLEtBQUssQ0FBQztnQkFDakJKLE1BQU1BLEtBQUtKLEtBQUssQ0FBQyxHQUFHVjtnQkFDcEJtQixlQUFlSCxNQUFNTixLQUFLLENBQUMsR0FBR1Y7WUFDaEM7UUFDRjtRQUVBLE9BQU9ZO0lBQ1Q7QUFDRjtBQUVBUSxPQUFPQyxPQUFPLEdBQUc5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldENvbnRlbnRTdGF0ZUZyYWdtZW50LmpzPzVkN2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIHJhbmRvbWl6ZUJsb2NrTWFwS2V5cyA9IHJlcXVpcmUoXCIuL3JhbmRvbWl6ZUJsb2NrTWFwS2V5c1wiKTtcblxudmFyIHJlbW92ZUVudGl0aWVzQXRFZGdlcyA9IHJlcXVpcmUoXCIuL3JlbW92ZUVudGl0aWVzQXRFZGdlc1wiKTtcblxudmFyIGdldENvbnRlbnRTdGF0ZUZyYWdtZW50ID0gZnVuY3Rpb24gZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQoY29udGVudFN0YXRlLCBzZWxlY3Rpb25TdGF0ZSkge1xuICB2YXIgc3RhcnRLZXkgPSBzZWxlY3Rpb25TdGF0ZS5nZXRTdGFydEtleSgpO1xuICB2YXIgc3RhcnRPZmZzZXQgPSBzZWxlY3Rpb25TdGF0ZS5nZXRTdGFydE9mZnNldCgpO1xuICB2YXIgZW5kS2V5ID0gc2VsZWN0aW9uU3RhdGUuZ2V0RW5kS2V5KCk7XG4gIHZhciBlbmRPZmZzZXQgPSBzZWxlY3Rpb25TdGF0ZS5nZXRFbmRPZmZzZXQoKTsgLy8gRWRnZSBlbnRpdGllcyBzaG91bGQgYmUgc3RyaXBwZWQgdG8gZW5zdXJlIHRoYXQgd2UgZG9uJ3QgcHJlc2VydmVcbiAgLy8gaW52YWxpZCBwYXJ0aWFsIGVudGl0aWVzIHdoZW4gdGhlIGZyYWdtZW50IGlzIHJldXNlZC4gV2UgZG8sIGhvd2V2ZXIsXG4gIC8vIHByZXNlcnZlIGVudGl0aWVzIHRoYXQgYXJlIGVudGlyZWx5IHdpdGhpbiB0aGUgc2VsZWN0aW9uIHJhbmdlLlxuXG4gIHZhciBjb250ZW50V2l0aG91dEVkZ2VFbnRpdGllcyA9IHJlbW92ZUVudGl0aWVzQXRFZGdlcyhjb250ZW50U3RhdGUsIHNlbGVjdGlvblN0YXRlKTtcbiAgdmFyIGJsb2NrTWFwID0gY29udGVudFdpdGhvdXRFZGdlRW50aXRpZXMuZ2V0QmxvY2tNYXAoKTtcbiAgdmFyIGJsb2NrS2V5cyA9IGJsb2NrTWFwLmtleVNlcSgpO1xuICB2YXIgc3RhcnRJbmRleCA9IGJsb2NrS2V5cy5pbmRleE9mKHN0YXJ0S2V5KTtcbiAgdmFyIGVuZEluZGV4ID0gYmxvY2tLZXlzLmluZGV4T2YoZW5kS2V5KSArIDE7XG4gIHJldHVybiByYW5kb21pemVCbG9ja01hcEtleXMoYmxvY2tNYXAuc2xpY2Uoc3RhcnRJbmRleCwgZW5kSW5kZXgpLm1hcChmdW5jdGlvbiAoYmxvY2ssIGJsb2NrS2V5KSB7XG4gICAgdmFyIHRleHQgPSBibG9jay5nZXRUZXh0KCk7XG4gICAgdmFyIGNoYXJzID0gYmxvY2suZ2V0Q2hhcmFjdGVyTGlzdCgpO1xuXG4gICAgaWYgKHN0YXJ0S2V5ID09PSBlbmRLZXkpIHtcbiAgICAgIHJldHVybiBibG9jay5tZXJnZSh7XG4gICAgICAgIHRleHQ6IHRleHQuc2xpY2Uoc3RhcnRPZmZzZXQsIGVuZE9mZnNldCksXG4gICAgICAgIGNoYXJhY3Rlckxpc3Q6IGNoYXJzLnNsaWNlKHN0YXJ0T2Zmc2V0LCBlbmRPZmZzZXQpXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tLZXkgPT09IHN0YXJ0S2V5KSB7XG4gICAgICByZXR1cm4gYmxvY2subWVyZ2Uoe1xuICAgICAgICB0ZXh0OiB0ZXh0LnNsaWNlKHN0YXJ0T2Zmc2V0KSxcbiAgICAgICAgY2hhcmFjdGVyTGlzdDogY2hhcnMuc2xpY2Uoc3RhcnRPZmZzZXQpXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tLZXkgPT09IGVuZEtleSkge1xuICAgICAgcmV0dXJuIGJsb2NrLm1lcmdlKHtcbiAgICAgICAgdGV4dDogdGV4dC5zbGljZSgwLCBlbmRPZmZzZXQpLFxuICAgICAgICBjaGFyYWN0ZXJMaXN0OiBjaGFycy5zbGljZSgwLCBlbmRPZmZzZXQpXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYmxvY2s7XG4gIH0pKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQ7Il0sIm5hbWVzIjpbInJhbmRvbWl6ZUJsb2NrTWFwS2V5cyIsInJlcXVpcmUiLCJyZW1vdmVFbnRpdGllc0F0RWRnZXMiLCJnZXRDb250ZW50U3RhdGVGcmFnbWVudCIsImNvbnRlbnRTdGF0ZSIsInNlbGVjdGlvblN0YXRlIiwic3RhcnRLZXkiLCJnZXRTdGFydEtleSIsInN0YXJ0T2Zmc2V0IiwiZ2V0U3RhcnRPZmZzZXQiLCJlbmRLZXkiLCJnZXRFbmRLZXkiLCJlbmRPZmZzZXQiLCJnZXRFbmRPZmZzZXQiLCJjb250ZW50V2l0aG91dEVkZ2VFbnRpdGllcyIsImJsb2NrTWFwIiwiZ2V0QmxvY2tNYXAiLCJibG9ja0tleXMiLCJrZXlTZXEiLCJzdGFydEluZGV4IiwiaW5kZXhPZiIsImVuZEluZGV4Iiwic2xpY2UiLCJtYXAiLCJibG9jayIsImJsb2NrS2V5IiwidGV4dCIsImdldFRleHQiLCJjaGFycyIsImdldENoYXJhY3Rlckxpc3QiLCJtZXJnZSIsImNoYXJhY3Rlckxpc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getContentStateFragment.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getCorrectDocumentFromNode.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/getCorrectDocumentFromNode.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ function getCorrectDocumentFromNode(node) {\n    if (!node || !node.ownerDocument) {\n        return document;\n    }\n    return node.ownerDocument;\n}\nmodule.exports = getCorrectDocumentFromNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0Q29ycmVjdERvY3VtZW50RnJvbU5vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7Ozs7O0NBU0MsR0FDRCxTQUFTQSwyQkFBMkJDLElBQUk7SUFDdEMsSUFBSSxDQUFDQSxRQUFRLENBQUNBLEtBQUtDLGFBQWEsRUFBRTtRQUNoQyxPQUFPQztJQUNUO0lBRUEsT0FBT0YsS0FBS0MsYUFBYTtBQUMzQjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0Q29ycmVjdERvY3VtZW50RnJvbU5vZGUuanM/NDUyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbmZ1bmN0aW9uIGdldENvcnJlY3REb2N1bWVudEZyb21Ob2RlKG5vZGUpIHtcbiAgaWYgKCFub2RlIHx8ICFub2RlLm93bmVyRG9jdW1lbnQpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQ7XG4gIH1cblxuICByZXR1cm4gbm9kZS5vd25lckRvY3VtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldENvcnJlY3REb2N1bWVudEZyb21Ob2RlOyJdLCJuYW1lcyI6WyJnZXRDb3JyZWN0RG9jdW1lbnRGcm9tTm9kZSIsIm5vZGUiLCJvd25lckRvY3VtZW50IiwiZG9jdW1lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getCorrectDocumentFromNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getDefaultKeyBinding.js":
/*!***********************************************************!*\
  !*** ./node_modules/draft-js/lib/getDefaultKeyBinding.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar KeyBindingUtil = __webpack_require__(/*! ./KeyBindingUtil */ \"(app-pages-browser)/./node_modules/draft-js/lib/KeyBindingUtil.js\");\nvar Keys = __webpack_require__(/*! fbjs/lib/Keys */ \"(app-pages-browser)/./node_modules/fbjs/lib/Keys.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar isOSX = UserAgent.isPlatform(\"Mac OS X\"); // Firefox on OSX had a bug resulting in navigation instead of cursor movement.\n// This bug was fixed in Firefox 29. Feature detection is virtually impossible\n// so we just check the version number. See #342765.\nvar shouldFixFirefoxMovement = isOSX && UserAgent.isBrowser(\"Firefox < 29\");\nvar hasCommandModifier = KeyBindingUtil.hasCommandModifier, isCtrlKeyCommand = KeyBindingUtil.isCtrlKeyCommand;\nfunction shouldRemoveWord(e) {\n    return isOSX && e.altKey || isCtrlKeyCommand(e);\n}\n/**\n * Get the appropriate undo/redo command for a Z key command.\n */ function getZCommand(e) {\n    if (!hasCommandModifier(e)) {\n        return null;\n    }\n    return e.shiftKey ? \"redo\" : \"undo\";\n}\nfunction getDeleteCommand(e) {\n    // Allow default \"cut\" behavior for PCs on Shift + Delete.\n    if (!isOSX && e.shiftKey) {\n        return null;\n    }\n    return shouldRemoveWord(e) ? \"delete-word\" : \"delete\";\n}\nfunction getBackspaceCommand(e) {\n    if (hasCommandModifier(e) && isOSX) {\n        return \"backspace-to-start-of-line\";\n    }\n    return shouldRemoveWord(e) ? \"backspace-word\" : \"backspace\";\n}\n/**\n * Retrieve a bound key command for the given event.\n */ function getDefaultKeyBinding(e) {\n    switch(e.keyCode){\n        case 66:\n            // B\n            return hasCommandModifier(e) ? \"bold\" : null;\n        case 68:\n            // D\n            return isCtrlKeyCommand(e) ? \"delete\" : null;\n        case 72:\n            // H\n            return isCtrlKeyCommand(e) ? \"backspace\" : null;\n        case 73:\n            // I\n            return hasCommandModifier(e) ? \"italic\" : null;\n        case 74:\n            // J\n            return hasCommandModifier(e) ? \"code\" : null;\n        case 75:\n            // K\n            return isOSX && isCtrlKeyCommand(e) ? \"secondary-cut\" : null;\n        case 77:\n            // M\n            return isCtrlKeyCommand(e) ? \"split-block\" : null;\n        case 79:\n            // O\n            return isCtrlKeyCommand(e) ? \"split-block\" : null;\n        case 84:\n            // T\n            return isOSX && isCtrlKeyCommand(e) ? \"transpose-characters\" : null;\n        case 85:\n            // U\n            return hasCommandModifier(e) ? \"underline\" : null;\n        case 87:\n            // W\n            return isOSX && isCtrlKeyCommand(e) ? \"backspace-word\" : null;\n        case 89:\n            // Y\n            if (isCtrlKeyCommand(e)) {\n                return isOSX ? \"secondary-paste\" : \"redo\";\n            }\n            return null;\n        case 90:\n            // Z\n            return getZCommand(e) || null;\n        case Keys.RETURN:\n            return \"split-block\";\n        case Keys.DELETE:\n            return getDeleteCommand(e);\n        case Keys.BACKSPACE:\n            return getBackspaceCommand(e);\n        // LEFT/RIGHT handlers serve as a workaround for a Firefox bug.\n        case Keys.LEFT:\n            return shouldFixFirefoxMovement && hasCommandModifier(e) ? \"move-selection-to-start-of-block\" : null;\n        case Keys.RIGHT:\n            return shouldFixFirefoxMovement && hasCommandModifier(e) ? \"move-selection-to-end-of-block\" : null;\n        default:\n            return null;\n    }\n}\nmodule.exports = getDefaultKeyBinding;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0RGVmYXVsdEtleUJpbmRpbmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxpQkFBaUJDLG1CQUFPQSxDQUFDLDJGQUFrQjtBQUUvQyxJQUFJQyxPQUFPRCxtQkFBT0EsQ0FBQywwRUFBZTtBQUVsQyxJQUFJRSxZQUFZRixtQkFBT0EsQ0FBQyxvRkFBb0I7QUFFNUMsSUFBSUcsUUFBUUQsVUFBVUUsVUFBVSxDQUFDLGFBQWEsK0VBQStFO0FBQzdILDhFQUE4RTtBQUM5RSxvREFBb0Q7QUFFcEQsSUFBSUMsMkJBQTJCRixTQUFTRCxVQUFVSSxTQUFTLENBQUM7QUFDNUQsSUFBSUMscUJBQXFCUixlQUFlUSxrQkFBa0IsRUFDdERDLG1CQUFtQlQsZUFBZVMsZ0JBQWdCO0FBRXRELFNBQVNDLGlCQUFpQkMsQ0FBQztJQUN6QixPQUFPUCxTQUFTTyxFQUFFQyxNQUFNLElBQUlILGlCQUFpQkU7QUFDL0M7QUFDQTs7Q0FFQyxHQUdELFNBQVNFLFlBQVlGLENBQUM7SUFDcEIsSUFBSSxDQUFDSCxtQkFBbUJHLElBQUk7UUFDMUIsT0FBTztJQUNUO0lBRUEsT0FBT0EsRUFBRUcsUUFBUSxHQUFHLFNBQVM7QUFDL0I7QUFFQSxTQUFTQyxpQkFBaUJKLENBQUM7SUFDekIsMERBQTBEO0lBQzFELElBQUksQ0FBQ1AsU0FBU08sRUFBRUcsUUFBUSxFQUFFO1FBQ3hCLE9BQU87SUFDVDtJQUVBLE9BQU9KLGlCQUFpQkMsS0FBSyxnQkFBZ0I7QUFDL0M7QUFFQSxTQUFTSyxvQkFBb0JMLENBQUM7SUFDNUIsSUFBSUgsbUJBQW1CRyxNQUFNUCxPQUFPO1FBQ2xDLE9BQU87SUFDVDtJQUVBLE9BQU9NLGlCQUFpQkMsS0FBSyxtQkFBbUI7QUFDbEQ7QUFDQTs7Q0FFQyxHQUdELFNBQVNNLHFCQUFxQk4sQ0FBQztJQUM3QixPQUFRQSxFQUFFTyxPQUFPO1FBQ2YsS0FBSztZQUNILElBQUk7WUFDSixPQUFPVixtQkFBbUJHLEtBQUssU0FBUztRQUUxQyxLQUFLO1lBQ0gsSUFBSTtZQUNKLE9BQU9GLGlCQUFpQkUsS0FBSyxXQUFXO1FBRTFDLEtBQUs7WUFDSCxJQUFJO1lBQ0osT0FBT0YsaUJBQWlCRSxLQUFLLGNBQWM7UUFFN0MsS0FBSztZQUNILElBQUk7WUFDSixPQUFPSCxtQkFBbUJHLEtBQUssV0FBVztRQUU1QyxLQUFLO1lBQ0gsSUFBSTtZQUNKLE9BQU9ILG1CQUFtQkcsS0FBSyxTQUFTO1FBRTFDLEtBQUs7WUFDSCxJQUFJO1lBQ0osT0FBT1AsU0FBU0ssaUJBQWlCRSxLQUFLLGtCQUFrQjtRQUUxRCxLQUFLO1lBQ0gsSUFBSTtZQUNKLE9BQU9GLGlCQUFpQkUsS0FBSyxnQkFBZ0I7UUFFL0MsS0FBSztZQUNILElBQUk7WUFDSixPQUFPRixpQkFBaUJFLEtBQUssZ0JBQWdCO1FBRS9DLEtBQUs7WUFDSCxJQUFJO1lBQ0osT0FBT1AsU0FBU0ssaUJBQWlCRSxLQUFLLHlCQUF5QjtRQUVqRSxLQUFLO1lBQ0gsSUFBSTtZQUNKLE9BQU9ILG1CQUFtQkcsS0FBSyxjQUFjO1FBRS9DLEtBQUs7WUFDSCxJQUFJO1lBQ0osT0FBT1AsU0FBU0ssaUJBQWlCRSxLQUFLLG1CQUFtQjtRQUUzRCxLQUFLO1lBQ0gsSUFBSTtZQUNKLElBQUlGLGlCQUFpQkUsSUFBSTtnQkFDdkIsT0FBT1AsUUFBUSxvQkFBb0I7WUFDckM7WUFFQSxPQUFPO1FBRVQsS0FBSztZQUNILElBQUk7WUFDSixPQUFPUyxZQUFZRixNQUFNO1FBRTNCLEtBQUtULEtBQUtpQixNQUFNO1lBQ2QsT0FBTztRQUVULEtBQUtqQixLQUFLa0IsTUFBTTtZQUNkLE9BQU9MLGlCQUFpQko7UUFFMUIsS0FBS1QsS0FBS21CLFNBQVM7WUFDakIsT0FBT0wsb0JBQW9CTDtRQUM3QiwrREFBK0Q7UUFFL0QsS0FBS1QsS0FBS29CLElBQUk7WUFDWixPQUFPaEIsNEJBQTRCRSxtQkFBbUJHLEtBQUsscUNBQXFDO1FBRWxHLEtBQUtULEtBQUtxQixLQUFLO1lBQ2IsT0FBT2pCLDRCQUE0QkUsbUJBQW1CRyxLQUFLLG1DQUFtQztRQUVoRztZQUNFLE9BQU87SUFDWDtBQUNGO0FBRUFhLE9BQU9DLE9BQU8sR0FBR1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9nZXREZWZhdWx0S2V5QmluZGluZy5qcz8zN2QwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBLZXlCaW5kaW5nVXRpbCA9IHJlcXVpcmUoXCIuL0tleUJpbmRpbmdVdGlsXCIpO1xuXG52YXIgS2V5cyA9IHJlcXVpcmUoXCJmYmpzL2xpYi9LZXlzXCIpO1xuXG52YXIgVXNlckFnZW50ID0gcmVxdWlyZShcImZianMvbGliL1VzZXJBZ2VudFwiKTtcblxudmFyIGlzT1NYID0gVXNlckFnZW50LmlzUGxhdGZvcm0oJ01hYyBPUyBYJyk7IC8vIEZpcmVmb3ggb24gT1NYIGhhZCBhIGJ1ZyByZXN1bHRpbmcgaW4gbmF2aWdhdGlvbiBpbnN0ZWFkIG9mIGN1cnNvciBtb3ZlbWVudC5cbi8vIFRoaXMgYnVnIHdhcyBmaXhlZCBpbiBGaXJlZm94IDI5LiBGZWF0dXJlIGRldGVjdGlvbiBpcyB2aXJ0dWFsbHkgaW1wb3NzaWJsZVxuLy8gc28gd2UganVzdCBjaGVjayB0aGUgdmVyc2lvbiBudW1iZXIuIFNlZSAjMzQyNzY1LlxuXG52YXIgc2hvdWxkRml4RmlyZWZveE1vdmVtZW50ID0gaXNPU1ggJiYgVXNlckFnZW50LmlzQnJvd3NlcignRmlyZWZveCA8IDI5Jyk7XG52YXIgaGFzQ29tbWFuZE1vZGlmaWVyID0gS2V5QmluZGluZ1V0aWwuaGFzQ29tbWFuZE1vZGlmaWVyLFxuICAgIGlzQ3RybEtleUNvbW1hbmQgPSBLZXlCaW5kaW5nVXRpbC5pc0N0cmxLZXlDb21tYW5kO1xuXG5mdW5jdGlvbiBzaG91bGRSZW1vdmVXb3JkKGUpIHtcbiAgcmV0dXJuIGlzT1NYICYmIGUuYWx0S2V5IHx8IGlzQ3RybEtleUNvbW1hbmQoZSk7XG59XG4vKipcbiAqIEdldCB0aGUgYXBwcm9wcmlhdGUgdW5kby9yZWRvIGNvbW1hbmQgZm9yIGEgWiBrZXkgY29tbWFuZC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdldFpDb21tYW5kKGUpIHtcbiAgaWYgKCFoYXNDb21tYW5kTW9kaWZpZXIoZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBlLnNoaWZ0S2V5ID8gJ3JlZG8nIDogJ3VuZG8nO1xufVxuXG5mdW5jdGlvbiBnZXREZWxldGVDb21tYW5kKGUpIHtcbiAgLy8gQWxsb3cgZGVmYXVsdCBcImN1dFwiIGJlaGF2aW9yIGZvciBQQ3Mgb24gU2hpZnQgKyBEZWxldGUuXG4gIGlmICghaXNPU1ggJiYgZS5zaGlmdEtleSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHNob3VsZFJlbW92ZVdvcmQoZSkgPyAnZGVsZXRlLXdvcmQnIDogJ2RlbGV0ZSc7XG59XG5cbmZ1bmN0aW9uIGdldEJhY2tzcGFjZUNvbW1hbmQoZSkge1xuICBpZiAoaGFzQ29tbWFuZE1vZGlmaWVyKGUpICYmIGlzT1NYKSB7XG4gICAgcmV0dXJuICdiYWNrc3BhY2UtdG8tc3RhcnQtb2YtbGluZSc7XG4gIH1cblxuICByZXR1cm4gc2hvdWxkUmVtb3ZlV29yZChlKSA/ICdiYWNrc3BhY2Utd29yZCcgOiAnYmFja3NwYWNlJztcbn1cbi8qKlxuICogUmV0cmlldmUgYSBib3VuZCBrZXkgY29tbWFuZCBmb3IgdGhlIGdpdmVuIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEtleUJpbmRpbmcoZSkge1xuICBzd2l0Y2ggKGUua2V5Q29kZSkge1xuICAgIGNhc2UgNjY6XG4gICAgICAvLyBCXG4gICAgICByZXR1cm4gaGFzQ29tbWFuZE1vZGlmaWVyKGUpID8gJ2JvbGQnIDogbnVsbDtcblxuICAgIGNhc2UgNjg6XG4gICAgICAvLyBEXG4gICAgICByZXR1cm4gaXNDdHJsS2V5Q29tbWFuZChlKSA/ICdkZWxldGUnIDogbnVsbDtcblxuICAgIGNhc2UgNzI6XG4gICAgICAvLyBIXG4gICAgICByZXR1cm4gaXNDdHJsS2V5Q29tbWFuZChlKSA/ICdiYWNrc3BhY2UnIDogbnVsbDtcblxuICAgIGNhc2UgNzM6XG4gICAgICAvLyBJXG4gICAgICByZXR1cm4gaGFzQ29tbWFuZE1vZGlmaWVyKGUpID8gJ2l0YWxpYycgOiBudWxsO1xuXG4gICAgY2FzZSA3NDpcbiAgICAgIC8vIEpcbiAgICAgIHJldHVybiBoYXNDb21tYW5kTW9kaWZpZXIoZSkgPyAnY29kZScgOiBudWxsO1xuXG4gICAgY2FzZSA3NTpcbiAgICAgIC8vIEtcbiAgICAgIHJldHVybiBpc09TWCAmJiBpc0N0cmxLZXlDb21tYW5kKGUpID8gJ3NlY29uZGFyeS1jdXQnIDogbnVsbDtcblxuICAgIGNhc2UgNzc6XG4gICAgICAvLyBNXG4gICAgICByZXR1cm4gaXNDdHJsS2V5Q29tbWFuZChlKSA/ICdzcGxpdC1ibG9jaycgOiBudWxsO1xuXG4gICAgY2FzZSA3OTpcbiAgICAgIC8vIE9cbiAgICAgIHJldHVybiBpc0N0cmxLZXlDb21tYW5kKGUpID8gJ3NwbGl0LWJsb2NrJyA6IG51bGw7XG5cbiAgICBjYXNlIDg0OlxuICAgICAgLy8gVFxuICAgICAgcmV0dXJuIGlzT1NYICYmIGlzQ3RybEtleUNvbW1hbmQoZSkgPyAndHJhbnNwb3NlLWNoYXJhY3RlcnMnIDogbnVsbDtcblxuICAgIGNhc2UgODU6XG4gICAgICAvLyBVXG4gICAgICByZXR1cm4gaGFzQ29tbWFuZE1vZGlmaWVyKGUpID8gJ3VuZGVybGluZScgOiBudWxsO1xuXG4gICAgY2FzZSA4NzpcbiAgICAgIC8vIFdcbiAgICAgIHJldHVybiBpc09TWCAmJiBpc0N0cmxLZXlDb21tYW5kKGUpID8gJ2JhY2tzcGFjZS13b3JkJyA6IG51bGw7XG5cbiAgICBjYXNlIDg5OlxuICAgICAgLy8gWVxuICAgICAgaWYgKGlzQ3RybEtleUNvbW1hbmQoZSkpIHtcbiAgICAgICAgcmV0dXJuIGlzT1NYID8gJ3NlY29uZGFyeS1wYXN0ZScgOiAncmVkbyc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuXG4gICAgY2FzZSA5MDpcbiAgICAgIC8vIFpcbiAgICAgIHJldHVybiBnZXRaQ29tbWFuZChlKSB8fCBudWxsO1xuXG4gICAgY2FzZSBLZXlzLlJFVFVSTjpcbiAgICAgIHJldHVybiAnc3BsaXQtYmxvY2snO1xuXG4gICAgY2FzZSBLZXlzLkRFTEVURTpcbiAgICAgIHJldHVybiBnZXREZWxldGVDb21tYW5kKGUpO1xuXG4gICAgY2FzZSBLZXlzLkJBQ0tTUEFDRTpcbiAgICAgIHJldHVybiBnZXRCYWNrc3BhY2VDb21tYW5kKGUpO1xuICAgIC8vIExFRlQvUklHSFQgaGFuZGxlcnMgc2VydmUgYXMgYSB3b3JrYXJvdW5kIGZvciBhIEZpcmVmb3ggYnVnLlxuXG4gICAgY2FzZSBLZXlzLkxFRlQ6XG4gICAgICByZXR1cm4gc2hvdWxkRml4RmlyZWZveE1vdmVtZW50ICYmIGhhc0NvbW1hbmRNb2RpZmllcihlKSA/ICdtb3ZlLXNlbGVjdGlvbi10by1zdGFydC1vZi1ibG9jaycgOiBudWxsO1xuXG4gICAgY2FzZSBLZXlzLlJJR0hUOlxuICAgICAgcmV0dXJuIHNob3VsZEZpeEZpcmVmb3hNb3ZlbWVudCAmJiBoYXNDb21tYW5kTW9kaWZpZXIoZSkgPyAnbW92ZS1zZWxlY3Rpb24tdG8tZW5kLW9mLWJsb2NrJyA6IG51bGw7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXREZWZhdWx0S2V5QmluZGluZzsiXSwibmFtZXMiOlsiS2V5QmluZGluZ1V0aWwiLCJyZXF1aXJlIiwiS2V5cyIsIlVzZXJBZ2VudCIsImlzT1NYIiwiaXNQbGF0Zm9ybSIsInNob3VsZEZpeEZpcmVmb3hNb3ZlbWVudCIsImlzQnJvd3NlciIsImhhc0NvbW1hbmRNb2RpZmllciIsImlzQ3RybEtleUNvbW1hbmQiLCJzaG91bGRSZW1vdmVXb3JkIiwiZSIsImFsdEtleSIsImdldFpDb21tYW5kIiwic2hpZnRLZXkiLCJnZXREZWxldGVDb21tYW5kIiwiZ2V0QmFja3NwYWNlQ29tbWFuZCIsImdldERlZmF1bHRLZXlCaW5kaW5nIiwia2V5Q29kZSIsIlJFVFVSTiIsIkRFTEVURSIsIkJBQ0tTUEFDRSIsIkxFRlQiLCJSSUdIVCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getDefaultKeyBinding.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelection.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/getDraftEditorSelection.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar getDraftEditorSelectionWithNodes = __webpack_require__(/*! ./getDraftEditorSelectionWithNodes */ \"(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelectionWithNodes.js\");\n/**\n * Convert the current selection range to an anchor/focus pair of offset keys\n * and values that can be interpreted by components.\n */ function getDraftEditorSelection(editorState, root) {\n    var selection = root.ownerDocument.defaultView.getSelection();\n    var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset, rangeCount = selection.rangeCount;\n    if (rangeCount === 0 || // No selection, ever. As in, the user hasn't selected anything since\n    // opening the document.\n    anchorNode == null || focusNode == null) {\n        return {\n            selectionState: editorState.getSelection().set(\"hasFocus\", false),\n            needsRecovery: false\n        };\n    }\n    return getDraftEditorSelectionWithNodes(editorState, root, anchorNode, anchorOffset, focusNode, focusOffset);\n}\nmodule.exports = getDraftEditorSelection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0RHJhZnRFZGl0b3JTZWxlY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxtQ0FBbUNDLG1CQUFPQSxDQUFDLCtIQUFvQztBQUNuRjs7O0NBR0MsR0FHRCxTQUFTQyx3QkFBd0JDLFdBQVcsRUFBRUMsSUFBSTtJQUNoRCxJQUFJQyxZQUFZRCxLQUFLRSxhQUFhLENBQUNDLFdBQVcsQ0FBQ0MsWUFBWTtJQUMzRCxJQUFJQyxhQUFhSixVQUFVSSxVQUFVLEVBQ2pDQyxlQUFlTCxVQUFVSyxZQUFZLEVBQ3JDQyxZQUFZTixVQUFVTSxTQUFTLEVBQy9CQyxjQUFjUCxVQUFVTyxXQUFXLEVBQ25DQyxhQUFhUixVQUFVUSxVQUFVO0lBRXJDLElBQ0FBLGVBQWUsS0FBSyxxRUFBcUU7SUFDekYsd0JBQXdCO0lBQ3hCSixjQUFjLFFBQVFFLGFBQWEsTUFBTTtRQUN2QyxPQUFPO1lBQ0xHLGdCQUFnQlgsWUFBWUssWUFBWSxHQUFHTyxHQUFHLENBQUMsWUFBWTtZQUMzREMsZUFBZTtRQUNqQjtJQUNGO0lBRUEsT0FBT2hCLGlDQUFpQ0csYUFBYUMsTUFBTUssWUFBWUMsY0FBY0MsV0FBV0M7QUFDbEc7QUFFQUssT0FBT0MsT0FBTyxHQUFHaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9nZXREcmFmdEVkaXRvclNlbGVjdGlvbi5qcz8zYTVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBnZXREcmFmdEVkaXRvclNlbGVjdGlvbldpdGhOb2RlcyA9IHJlcXVpcmUoXCIuL2dldERyYWZ0RWRpdG9yU2VsZWN0aW9uV2l0aE5vZGVzXCIpO1xuLyoqXG4gKiBDb252ZXJ0IHRoZSBjdXJyZW50IHNlbGVjdGlvbiByYW5nZSB0byBhbiBhbmNob3IvZm9jdXMgcGFpciBvZiBvZmZzZXQga2V5c1xuICogYW5kIHZhbHVlcyB0aGF0IGNhbiBiZSBpbnRlcnByZXRlZCBieSBjb21wb25lbnRzLlxuICovXG5cblxuZnVuY3Rpb24gZ2V0RHJhZnRFZGl0b3JTZWxlY3Rpb24oZWRpdG9yU3RhdGUsIHJvb3QpIHtcbiAgdmFyIHNlbGVjdGlvbiA9IHJvb3Qub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRTZWxlY3Rpb24oKTtcbiAgdmFyIGFuY2hvck5vZGUgPSBzZWxlY3Rpb24uYW5jaG9yTm9kZSxcbiAgICAgIGFuY2hvck9mZnNldCA9IHNlbGVjdGlvbi5hbmNob3JPZmZzZXQsXG4gICAgICBmb2N1c05vZGUgPSBzZWxlY3Rpb24uZm9jdXNOb2RlLFxuICAgICAgZm9jdXNPZmZzZXQgPSBzZWxlY3Rpb24uZm9jdXNPZmZzZXQsXG4gICAgICByYW5nZUNvdW50ID0gc2VsZWN0aW9uLnJhbmdlQ291bnQ7XG5cbiAgaWYgKCAvLyBObyBhY3RpdmUgc2VsZWN0aW9uLlxuICByYW5nZUNvdW50ID09PSAwIHx8IC8vIE5vIHNlbGVjdGlvbiwgZXZlci4gQXMgaW4sIHRoZSB1c2VyIGhhc24ndCBzZWxlY3RlZCBhbnl0aGluZyBzaW5jZVxuICAvLyBvcGVuaW5nIHRoZSBkb2N1bWVudC5cbiAgYW5jaG9yTm9kZSA9PSBudWxsIHx8IGZvY3VzTm9kZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbGVjdGlvblN0YXRlOiBlZGl0b3JTdGF0ZS5nZXRTZWxlY3Rpb24oKS5zZXQoJ2hhc0ZvY3VzJywgZmFsc2UpLFxuICAgICAgbmVlZHNSZWNvdmVyeTogZmFsc2VcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGdldERyYWZ0RWRpdG9yU2VsZWN0aW9uV2l0aE5vZGVzKGVkaXRvclN0YXRlLCByb290LCBhbmNob3JOb2RlLCBhbmNob3JPZmZzZXQsIGZvY3VzTm9kZSwgZm9jdXNPZmZzZXQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldERyYWZ0RWRpdG9yU2VsZWN0aW9uOyJdLCJuYW1lcyI6WyJnZXREcmFmdEVkaXRvclNlbGVjdGlvbldpdGhOb2RlcyIsInJlcXVpcmUiLCJnZXREcmFmdEVkaXRvclNlbGVjdGlvbiIsImVkaXRvclN0YXRlIiwicm9vdCIsInNlbGVjdGlvbiIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsInJhbmdlQ291bnQiLCJzZWxlY3Rpb25TdGF0ZSIsInNldCIsIm5lZWRzUmVjb3ZlcnkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelectionWithNodes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/draft-js/lib/getDraftEditorSelectionWithNodes.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar findAncestorOffsetKey = __webpack_require__(/*! ./findAncestorOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/findAncestorOffsetKey.js\");\nvar getSelectionOffsetKeyForNode = __webpack_require__(/*! ./getSelectionOffsetKeyForNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getSelectionOffsetKeyForNode.js\");\nvar getUpdatedSelectionState = __webpack_require__(/*! ./getUpdatedSelectionState */ \"(app-pages-browser)/./node_modules/draft-js/lib/getUpdatedSelectionState.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isElement = __webpack_require__(/*! ./isElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\n/**\n * Convert the current selection range to an anchor/focus pair of offset keys\n * and values that can be interpreted by components.\n */ function getDraftEditorSelectionWithNodes(editorState, root, anchorNode, anchorOffset, focusNode, focusOffset) {\n    var anchorIsTextNode = anchorNode.nodeType === Node.TEXT_NODE;\n    var focusIsTextNode = focusNode.nodeType === Node.TEXT_NODE; // If the selection range lies only on text nodes, the task is simple.\n    // Find the nearest offset-aware elements and use the\n    // offset values supplied by the selection range.\n    if (anchorIsTextNode && focusIsTextNode) {\n        return {\n            selectionState: getUpdatedSelectionState(editorState, nullthrows(findAncestorOffsetKey(anchorNode)), anchorOffset, nullthrows(findAncestorOffsetKey(focusNode)), focusOffset),\n            needsRecovery: false\n        };\n    }\n    var anchorPoint = null;\n    var focusPoint = null;\n    var needsRecovery = true; // An element is selected. Convert this selection range into leaf offset\n    // keys and offset values for consumption at the component level. This\n    // is common in Firefox, where select-all and triple click behavior leads\n    // to entire elements being selected.\n    //\n    // Note that we use the `needsRecovery` parameter in the callback here. This\n    // is because when certain elements are selected, the behavior for subsequent\n    // cursor movement (e.g. via arrow keys) is uncertain and may not match\n    // expectations at the component level. For example, if an entire <div> is\n    // selected and the user presses the right arrow, Firefox keeps the selection\n    // on the <div>. If we allow subsequent keypresses to insert characters\n    // natively, they will be inserted into a browser-created text node to the\n    // right of that <div>. This is obviously undesirable.\n    //\n    // With the `needsRecovery` flag, we inform the caller that it is responsible\n    // for manually setting the selection state on the rendered document to\n    // ensure proper selection state maintenance.\n    if (anchorIsTextNode) {\n        anchorPoint = {\n            key: nullthrows(findAncestorOffsetKey(anchorNode)),\n            offset: anchorOffset\n        };\n        focusPoint = getPointForNonTextNode(root, focusNode, focusOffset);\n    } else if (focusIsTextNode) {\n        focusPoint = {\n            key: nullthrows(findAncestorOffsetKey(focusNode)),\n            offset: focusOffset\n        };\n        anchorPoint = getPointForNonTextNode(root, anchorNode, anchorOffset);\n    } else {\n        anchorPoint = getPointForNonTextNode(root, anchorNode, anchorOffset);\n        focusPoint = getPointForNonTextNode(root, focusNode, focusOffset); // If the selection is collapsed on an empty block, don't force recovery.\n        // This way, on arrow key selection changes, the browser can move the\n        // cursor from a non-zero offset on one block, through empty blocks,\n        // to a matching non-zero offset on other text blocks.\n        if (anchorNode === focusNode && anchorOffset === focusOffset) {\n            needsRecovery = !!anchorNode.firstChild && anchorNode.firstChild.nodeName !== \"BR\";\n        }\n    }\n    return {\n        selectionState: getUpdatedSelectionState(editorState, anchorPoint.key, anchorPoint.offset, focusPoint.key, focusPoint.offset),\n        needsRecovery: needsRecovery\n    };\n}\n/**\n * Identify the first leaf descendant for the given node.\n */ function getFirstLeaf(node) {\n    while(node.firstChild && (isElement(node.firstChild) && node.firstChild.getAttribute(\"data-blocks\") === \"true\" || getSelectionOffsetKeyForNode(node.firstChild))){\n        node = node.firstChild;\n    }\n    return node;\n}\n/**\n * Identify the last leaf descendant for the given node.\n */ function getLastLeaf(node) {\n    while(node.lastChild && (isElement(node.lastChild) && node.lastChild.getAttribute(\"data-blocks\") === \"true\" || getSelectionOffsetKeyForNode(node.lastChild))){\n        node = node.lastChild;\n    }\n    return node;\n}\nfunction getPointForNonTextNode(editorRoot, startNode, childOffset) {\n    var node = startNode;\n    var offsetKey = findAncestorOffsetKey(node);\n    !(offsetKey != null || editorRoot && (editorRoot === node || editorRoot.firstChild === node)) ?  true ? invariant(false, \"Unknown node in selection range.\") : 0 : void 0; // If the editorRoot is the selection, step downward into the content\n    // wrapper.\n    if (editorRoot === node) {\n        node = node.firstChild;\n        !isElement(node) ?  true ? invariant(false, \"Invalid DraftEditorContents node.\") : 0 : void 0;\n        var castedNode = node; // assignment only added for flow :/\n        // otherwise it throws in line 200 saying that node can be null or undefined\n        node = castedNode;\n        !(node.getAttribute(\"data-contents\") === \"true\") ?  true ? invariant(false, \"Invalid DraftEditorContents structure.\") : 0 : void 0;\n        if (childOffset > 0) {\n            childOffset = node.childNodes.length;\n        }\n    } // If the child offset is zero and we have an offset key, we're done.\n    // If there's no offset key because the entire editor is selected,\n    // find the leftmost (\"first\") leaf in the tree and use that as the offset\n    // key.\n    if (childOffset === 0) {\n        var key = null;\n        if (offsetKey != null) {\n            key = offsetKey;\n        } else {\n            var firstLeaf = getFirstLeaf(node);\n            key = nullthrows(getSelectionOffsetKeyForNode(firstLeaf));\n        }\n        return {\n            key: key,\n            offset: 0\n        };\n    }\n    var nodeBeforeCursor = node.childNodes[childOffset - 1];\n    var leafKey = null;\n    var textLength = null;\n    if (!getSelectionOffsetKeyForNode(nodeBeforeCursor)) {\n        // Our target node may be a leaf or a text node, in which case we're\n        // already where we want to be and can just use the child's length as\n        // our offset.\n        leafKey = nullthrows(offsetKey);\n        textLength = getTextContentLength(nodeBeforeCursor);\n    } else {\n        // Otherwise, we'll look at the child to the left of the cursor and find\n        // the last leaf node in its subtree.\n        var lastLeaf = getLastLeaf(nodeBeforeCursor);\n        leafKey = nullthrows(getSelectionOffsetKeyForNode(lastLeaf));\n        textLength = getTextContentLength(lastLeaf);\n    }\n    return {\n        key: leafKey,\n        offset: textLength\n    };\n}\n/**\n * Return the length of a node's textContent, regarding single newline\n * characters as zero-length. This allows us to avoid problems with identifying\n * the correct selection offset for empty blocks in IE, in which we\n * render newlines instead of break tags.\n */ function getTextContentLength(node) {\n    var textContent = node.textContent;\n    return textContent === \"\\n\" ? 0 : textContent.length;\n}\nmodule.exports = getDraftEditorSelectionWithNodes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelectionWithNodes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getEntityKeyForSelection.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/getEntityKeyForSelection.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar _require = __webpack_require__(/*! ./draftKeyUtils */ \"(app-pages-browser)/./node_modules/draft-js/lib/draftKeyUtils.js\"), notEmptyKey = _require.notEmptyKey;\n/**\n * Return the entity key that should be used when inserting text for the\n * specified target selection, only if the entity is `MUTABLE`. `IMMUTABLE`\n * and `SEGMENTED` entities should not be used for insertion behavior.\n */ function getEntityKeyForSelection(contentState, targetSelection) {\n    var entityKey;\n    if (targetSelection.isCollapsed()) {\n        var key = targetSelection.getAnchorKey();\n        var offset = targetSelection.getAnchorOffset();\n        if (offset > 0) {\n            entityKey = contentState.getBlockForKey(key).getEntityAt(offset - 1);\n            if (entityKey !== contentState.getBlockForKey(key).getEntityAt(offset)) {\n                return null;\n            }\n            return filterKey(contentState.getEntityMap(), entityKey);\n        }\n        return null;\n    }\n    var startKey = targetSelection.getStartKey();\n    var startOffset = targetSelection.getStartOffset();\n    var startBlock = contentState.getBlockForKey(startKey);\n    entityKey = startOffset === startBlock.getLength() ? null : startBlock.getEntityAt(startOffset);\n    return filterKey(contentState.getEntityMap(), entityKey);\n}\n/**\n * Determine whether an entity key corresponds to a `MUTABLE` entity. If so,\n * return it. If not, return null.\n */ function filterKey(entityMap, entityKey) {\n    if (notEmptyKey(entityKey)) {\n        var entity = entityMap.__get(entityKey);\n        return entity.getMutability() === \"MUTABLE\" ? entityKey : null;\n    }\n    return null;\n}\nmodule.exports = getEntityKeyForSelection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0RW50aXR5S2V5Rm9yU2VsZWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUMseUZBQWlCLEdBQ3BDQyxjQUFjRixTQUFTRSxXQUFXO0FBQ3RDOzs7O0NBSUMsR0FHRCxTQUFTQyx5QkFBeUJDLFlBQVksRUFBRUMsZUFBZTtJQUM3RCxJQUFJQztJQUVKLElBQUlELGdCQUFnQkUsV0FBVyxJQUFJO1FBQ2pDLElBQUlDLE1BQU1ILGdCQUFnQkksWUFBWTtRQUN0QyxJQUFJQyxTQUFTTCxnQkFBZ0JNLGVBQWU7UUFFNUMsSUFBSUQsU0FBUyxHQUFHO1lBQ2RKLFlBQVlGLGFBQWFRLGNBQWMsQ0FBQ0osS0FBS0ssV0FBVyxDQUFDSCxTQUFTO1lBRWxFLElBQUlKLGNBQWNGLGFBQWFRLGNBQWMsQ0FBQ0osS0FBS0ssV0FBVyxDQUFDSCxTQUFTO2dCQUN0RSxPQUFPO1lBQ1Q7WUFFQSxPQUFPSSxVQUFVVixhQUFhVyxZQUFZLElBQUlUO1FBQ2hEO1FBRUEsT0FBTztJQUNUO0lBRUEsSUFBSVUsV0FBV1gsZ0JBQWdCWSxXQUFXO0lBQzFDLElBQUlDLGNBQWNiLGdCQUFnQmMsY0FBYztJQUNoRCxJQUFJQyxhQUFhaEIsYUFBYVEsY0FBYyxDQUFDSTtJQUM3Q1YsWUFBWVksZ0JBQWdCRSxXQUFXQyxTQUFTLEtBQUssT0FBT0QsV0FBV1AsV0FBVyxDQUFDSztJQUNuRixPQUFPSixVQUFVVixhQUFhVyxZQUFZLElBQUlUO0FBQ2hEO0FBQ0E7OztDQUdDLEdBR0QsU0FBU1EsVUFBVVEsU0FBUyxFQUFFaEIsU0FBUztJQUNyQyxJQUFJSixZQUFZSSxZQUFZO1FBQzFCLElBQUlpQixTQUFTRCxVQUFVRSxLQUFLLENBQUNsQjtRQUU3QixPQUFPaUIsT0FBT0UsYUFBYSxPQUFPLFlBQVluQixZQUFZO0lBQzVEO0lBRUEsT0FBTztBQUNUO0FBRUFvQixPQUFPQyxPQUFPLEdBQUd4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldEVudGl0eUtleUZvclNlbGVjdGlvbi5qcz9mOTgyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoXCIuL2RyYWZ0S2V5VXRpbHNcIiksXG4gICAgbm90RW1wdHlLZXkgPSBfcmVxdWlyZS5ub3RFbXB0eUtleTtcbi8qKlxuICogUmV0dXJuIHRoZSBlbnRpdHkga2V5IHRoYXQgc2hvdWxkIGJlIHVzZWQgd2hlbiBpbnNlcnRpbmcgdGV4dCBmb3IgdGhlXG4gKiBzcGVjaWZpZWQgdGFyZ2V0IHNlbGVjdGlvbiwgb25seSBpZiB0aGUgZW50aXR5IGlzIGBNVVRBQkxFYC4gYElNTVVUQUJMRWBcbiAqIGFuZCBgU0VHTUVOVEVEYCBlbnRpdGllcyBzaG91bGQgbm90IGJlIHVzZWQgZm9yIGluc2VydGlvbiBiZWhhdmlvci5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdldEVudGl0eUtleUZvclNlbGVjdGlvbihjb250ZW50U3RhdGUsIHRhcmdldFNlbGVjdGlvbikge1xuICB2YXIgZW50aXR5S2V5O1xuXG4gIGlmICh0YXJnZXRTZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSkge1xuICAgIHZhciBrZXkgPSB0YXJnZXRTZWxlY3Rpb24uZ2V0QW5jaG9yS2V5KCk7XG4gICAgdmFyIG9mZnNldCA9IHRhcmdldFNlbGVjdGlvbi5nZXRBbmNob3JPZmZzZXQoKTtcblxuICAgIGlmIChvZmZzZXQgPiAwKSB7XG4gICAgICBlbnRpdHlLZXkgPSBjb250ZW50U3RhdGUuZ2V0QmxvY2tGb3JLZXkoa2V5KS5nZXRFbnRpdHlBdChvZmZzZXQgLSAxKTtcblxuICAgICAgaWYgKGVudGl0eUtleSAhPT0gY29udGVudFN0YXRlLmdldEJsb2NrRm9yS2V5KGtleSkuZ2V0RW50aXR5QXQob2Zmc2V0KSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZpbHRlcktleShjb250ZW50U3RhdGUuZ2V0RW50aXR5TWFwKCksIGVudGl0eUtleSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgc3RhcnRLZXkgPSB0YXJnZXRTZWxlY3Rpb24uZ2V0U3RhcnRLZXkoKTtcbiAgdmFyIHN0YXJ0T2Zmc2V0ID0gdGFyZ2V0U2VsZWN0aW9uLmdldFN0YXJ0T2Zmc2V0KCk7XG4gIHZhciBzdGFydEJsb2NrID0gY29udGVudFN0YXRlLmdldEJsb2NrRm9yS2V5KHN0YXJ0S2V5KTtcbiAgZW50aXR5S2V5ID0gc3RhcnRPZmZzZXQgPT09IHN0YXJ0QmxvY2suZ2V0TGVuZ3RoKCkgPyBudWxsIDogc3RhcnRCbG9jay5nZXRFbnRpdHlBdChzdGFydE9mZnNldCk7XG4gIHJldHVybiBmaWx0ZXJLZXkoY29udGVudFN0YXRlLmdldEVudGl0eU1hcCgpLCBlbnRpdHlLZXkpO1xufVxuLyoqXG4gKiBEZXRlcm1pbmUgd2hldGhlciBhbiBlbnRpdHkga2V5IGNvcnJlc3BvbmRzIHRvIGEgYE1VVEFCTEVgIGVudGl0eS4gSWYgc28sXG4gKiByZXR1cm4gaXQuIElmIG5vdCwgcmV0dXJuIG51bGwuXG4gKi9cblxuXG5mdW5jdGlvbiBmaWx0ZXJLZXkoZW50aXR5TWFwLCBlbnRpdHlLZXkpIHtcbiAgaWYgKG5vdEVtcHR5S2V5KGVudGl0eUtleSkpIHtcbiAgICB2YXIgZW50aXR5ID0gZW50aXR5TWFwLl9fZ2V0KGVudGl0eUtleSk7XG5cbiAgICByZXR1cm4gZW50aXR5LmdldE11dGFiaWxpdHkoKSA9PT0gJ01VVEFCTEUnID8gZW50aXR5S2V5IDogbnVsbDtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEVudGl0eUtleUZvclNlbGVjdGlvbjsiXSwibmFtZXMiOlsiX3JlcXVpcmUiLCJyZXF1aXJlIiwibm90RW1wdHlLZXkiLCJnZXRFbnRpdHlLZXlGb3JTZWxlY3Rpb24iLCJjb250ZW50U3RhdGUiLCJ0YXJnZXRTZWxlY3Rpb24iLCJlbnRpdHlLZXkiLCJpc0NvbGxhcHNlZCIsImtleSIsImdldEFuY2hvcktleSIsIm9mZnNldCIsImdldEFuY2hvck9mZnNldCIsImdldEJsb2NrRm9yS2V5IiwiZ2V0RW50aXR5QXQiLCJmaWx0ZXJLZXkiLCJnZXRFbnRpdHlNYXAiLCJzdGFydEtleSIsImdldFN0YXJ0S2V5Iiwic3RhcnRPZmZzZXQiLCJnZXRTdGFydE9mZnNldCIsInN0YXJ0QmxvY2siLCJnZXRMZW5ndGgiLCJlbnRpdHlNYXAiLCJlbnRpdHkiLCJfX2dldCIsImdldE11dGFiaWxpdHkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getEntityKeyForSelection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getFragmentFromSelection.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/getFragmentFromSelection.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar getContentStateFragment = __webpack_require__(/*! ./getContentStateFragment */ \"(app-pages-browser)/./node_modules/draft-js/lib/getContentStateFragment.js\");\nfunction getFragmentFromSelection(editorState) {\n    var selectionState = editorState.getSelection();\n    if (selectionState.isCollapsed()) {\n        return null;\n    }\n    return getContentStateFragment(editorState.getCurrentContent(), selectionState);\n}\nmodule.exports = getFragmentFromSelection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0RnJhZ21lbnRGcm9tU2VsZWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsMEJBQTBCQyxtQkFBT0EsQ0FBQyw2R0FBMkI7QUFFakUsU0FBU0MseUJBQXlCQyxXQUFXO0lBQzNDLElBQUlDLGlCQUFpQkQsWUFBWUUsWUFBWTtJQUU3QyxJQUFJRCxlQUFlRSxXQUFXLElBQUk7UUFDaEMsT0FBTztJQUNUO0lBRUEsT0FBT04sd0JBQXdCRyxZQUFZSSxpQkFBaUIsSUFBSUg7QUFDbEU7QUFFQUksT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldEZyYWdtZW50RnJvbVNlbGVjdGlvbi5qcz82MmUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBnZXRDb250ZW50U3RhdGVGcmFnbWVudCA9IHJlcXVpcmUoXCIuL2dldENvbnRlbnRTdGF0ZUZyYWdtZW50XCIpO1xuXG5mdW5jdGlvbiBnZXRGcmFnbWVudEZyb21TZWxlY3Rpb24oZWRpdG9yU3RhdGUpIHtcbiAgdmFyIHNlbGVjdGlvblN0YXRlID0gZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCk7XG5cbiAgaWYgKHNlbGVjdGlvblN0YXRlLmlzQ29sbGFwc2VkKCkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBnZXRDb250ZW50U3RhdGVGcmFnbWVudChlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpLCBzZWxlY3Rpb25TdGF0ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0RnJhZ21lbnRGcm9tU2VsZWN0aW9uOyJdLCJuYW1lcyI6WyJnZXRDb250ZW50U3RhdGVGcmFnbWVudCIsInJlcXVpcmUiLCJnZXRGcmFnbWVudEZyb21TZWxlY3Rpb24iLCJlZGl0b3JTdGF0ZSIsInNlbGVjdGlvblN0YXRlIiwiZ2V0U2VsZWN0aW9uIiwiaXNDb2xsYXBzZWQiLCJnZXRDdXJyZW50Q29udGVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getFragmentFromSelection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getNextDelimiterBlockKey.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/getNextDelimiterBlockKey.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */ var ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar getNextDelimiterBlockKey = function getNextDelimiterBlockKey(block, blockMap) {\n    var isExperimentalTreeBlock = block instanceof ContentBlockNode;\n    if (!isExperimentalTreeBlock) {\n        return null;\n    }\n    var nextSiblingKey = block.getNextSiblingKey();\n    if (nextSiblingKey) {\n        return nextSiblingKey;\n    }\n    var parent = block.getParentKey();\n    if (!parent) {\n        return null;\n    }\n    var nextNonDescendantBlock = blockMap.get(parent);\n    while(nextNonDescendantBlock && !nextNonDescendantBlock.getNextSiblingKey()){\n        var parentKey = nextNonDescendantBlock.getParentKey();\n        nextNonDescendantBlock = parentKey ? blockMap.get(parentKey) : null;\n    }\n    if (!nextNonDescendantBlock) {\n        return null;\n    }\n    return nextNonDescendantBlock.getNextSiblingKey();\n};\nmodule.exports = getNextDelimiterBlockKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0TmV4dERlbGltaXRlckJsb2NrS2V5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7Ozs7OztDQVlDLEdBQ0QsSUFBSUEsbUJBQW1CQyxtQkFBT0EsQ0FBQywrRkFBb0I7QUFFbkQsSUFBSUMsMkJBQTJCLFNBQVNBLHlCQUF5QkMsS0FBSyxFQUFFQyxRQUFRO0lBQzlFLElBQUlDLDBCQUEwQkYsaUJBQWlCSDtJQUUvQyxJQUFJLENBQUNLLHlCQUF5QjtRQUM1QixPQUFPO0lBQ1Q7SUFFQSxJQUFJQyxpQkFBaUJILE1BQU1JLGlCQUFpQjtJQUU1QyxJQUFJRCxnQkFBZ0I7UUFDbEIsT0FBT0E7SUFDVDtJQUVBLElBQUlFLFNBQVNMLE1BQU1NLFlBQVk7SUFFL0IsSUFBSSxDQUFDRCxRQUFRO1FBQ1gsT0FBTztJQUNUO0lBRUEsSUFBSUUseUJBQXlCTixTQUFTTyxHQUFHLENBQUNIO0lBRTFDLE1BQU9FLDBCQUEwQixDQUFDQSx1QkFBdUJILGlCQUFpQixHQUFJO1FBQzVFLElBQUlLLFlBQVlGLHVCQUF1QkQsWUFBWTtRQUNuREMseUJBQXlCRSxZQUFZUixTQUFTTyxHQUFHLENBQUNDLGFBQWE7SUFDakU7SUFFQSxJQUFJLENBQUNGLHdCQUF3QjtRQUMzQixPQUFPO0lBQ1Q7SUFFQSxPQUFPQSx1QkFBdUJILGlCQUFpQjtBQUNqRDtBQUVBTSxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0TmV4dERlbGltaXRlckJsb2NrS2V5LmpzPzU0MmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICpcbiAqIFRoaXMgaXMgdW5zdGFibGUgYW5kIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgQVBJIGFuZCBzaG91bGQgbm90IGJlIHVzZWQgYnlcbiAqIHByb2R1Y3Rpb24gc3lzdGVtcy4gVGhpcyBmaWxlIG1heSBiZSB1cGRhdGUvcmVtb3ZlZCB3aXRob3V0IG5vdGljZS5cbiAqL1xudmFyIENvbnRlbnRCbG9ja05vZGUgPSByZXF1aXJlKFwiLi9Db250ZW50QmxvY2tOb2RlXCIpO1xuXG52YXIgZ2V0TmV4dERlbGltaXRlckJsb2NrS2V5ID0gZnVuY3Rpb24gZ2V0TmV4dERlbGltaXRlckJsb2NrS2V5KGJsb2NrLCBibG9ja01hcCkge1xuICB2YXIgaXNFeHBlcmltZW50YWxUcmVlQmxvY2sgPSBibG9jayBpbnN0YW5jZW9mIENvbnRlbnRCbG9ja05vZGU7XG5cbiAgaWYgKCFpc0V4cGVyaW1lbnRhbFRyZWVCbG9jaykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIG5leHRTaWJsaW5nS2V5ID0gYmxvY2suZ2V0TmV4dFNpYmxpbmdLZXkoKTtcblxuICBpZiAobmV4dFNpYmxpbmdLZXkpIHtcbiAgICByZXR1cm4gbmV4dFNpYmxpbmdLZXk7XG4gIH1cblxuICB2YXIgcGFyZW50ID0gYmxvY2suZ2V0UGFyZW50S2V5KCk7XG5cbiAgaWYgKCFwYXJlbnQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHZhciBuZXh0Tm9uRGVzY2VuZGFudEJsb2NrID0gYmxvY2tNYXAuZ2V0KHBhcmVudCk7XG5cbiAgd2hpbGUgKG5leHROb25EZXNjZW5kYW50QmxvY2sgJiYgIW5leHROb25EZXNjZW5kYW50QmxvY2suZ2V0TmV4dFNpYmxpbmdLZXkoKSkge1xuICAgIHZhciBwYXJlbnRLZXkgPSBuZXh0Tm9uRGVzY2VuZGFudEJsb2NrLmdldFBhcmVudEtleSgpO1xuICAgIG5leHROb25EZXNjZW5kYW50QmxvY2sgPSBwYXJlbnRLZXkgPyBibG9ja01hcC5nZXQocGFyZW50S2V5KSA6IG51bGw7XG4gIH1cblxuICBpZiAoIW5leHROb25EZXNjZW5kYW50QmxvY2spIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBuZXh0Tm9uRGVzY2VuZGFudEJsb2NrLmdldE5leHRTaWJsaW5nS2V5KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE5leHREZWxpbWl0ZXJCbG9ja0tleTsiXSwibmFtZXMiOlsiQ29udGVudEJsb2NrTm9kZSIsInJlcXVpcmUiLCJnZXROZXh0RGVsaW1pdGVyQmxvY2tLZXkiLCJibG9jayIsImJsb2NrTWFwIiwiaXNFeHBlcmltZW50YWxUcmVlQmxvY2siLCJuZXh0U2libGluZ0tleSIsImdldE5leHRTaWJsaW5nS2V5IiwicGFyZW50IiwiZ2V0UGFyZW50S2V5IiwibmV4dE5vbkRlc2NlbmRhbnRCbG9jayIsImdldCIsInBhcmVudEtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getNextDelimiterBlockKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getOwnObjectValues.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/getOwnObjectValues.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright 2004-present Facebook. All Rights Reserved.\n *\n * \n * @typechecks\n * @format\n */ /**\n * Retrieve an object's own values as an array. If you want the values in the\n * protoype chain, too, use getObjectValuesIncludingPrototype.\n *\n * If you are looking for a function that creates an Array instance based\n * on an \"Array-like\" object, use createArrayFrom instead.\n *\n * @param {object} obj An object.\n * @return {array}     The object's values.\n */ function getOwnObjectValues(obj) {\n    return Object.keys(obj).map(function(key) {\n        return obj[key];\n    });\n}\nmodule.exports = getOwnObjectValues;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0T3duT2JqZWN0VmFsdWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7OztDQU1DLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0EsbUJBQW1CQyxHQUFHO0lBQzdCLE9BQU9DLE9BQU9DLElBQUksQ0FBQ0YsS0FBS0csR0FBRyxDQUFDLFNBQVVDLEdBQUc7UUFDdkMsT0FBT0osR0FBRyxDQUFDSSxJQUFJO0lBQ2pCO0FBQ0Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldE93bk9iamVjdFZhbHVlcy5qcz9mZTY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDA0LXByZXNlbnQgRmFjZWJvb2suIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogXG4gKiBAdHlwZWNoZWNrc1xuICogQGZvcm1hdFxuICovXG5cbi8qKlxuICogUmV0cmlldmUgYW4gb2JqZWN0J3Mgb3duIHZhbHVlcyBhcyBhbiBhcnJheS4gSWYgeW91IHdhbnQgdGhlIHZhbHVlcyBpbiB0aGVcbiAqIHByb3RveXBlIGNoYWluLCB0b28sIHVzZSBnZXRPYmplY3RWYWx1ZXNJbmNsdWRpbmdQcm90b3R5cGUuXG4gKlxuICogSWYgeW91IGFyZSBsb29raW5nIGZvciBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhbiBBcnJheSBpbnN0YW5jZSBiYXNlZFxuICogb24gYW4gXCJBcnJheS1saWtlXCIgb2JqZWN0LCB1c2UgY3JlYXRlQXJyYXlGcm9tIGluc3RlYWQuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9iaiBBbiBvYmplY3QuXG4gKiBAcmV0dXJuIHthcnJheX0gICAgIFRoZSBvYmplY3QncyB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIGdldE93bk9iamVjdFZhbHVlcyhvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gb2JqW2tleV07XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE93bk9iamVjdFZhbHVlczsiXSwibmFtZXMiOlsiZ2V0T3duT2JqZWN0VmFsdWVzIiwib2JqIiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsImtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getOwnObjectValues.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getRangeBoundingClientRect.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/getRangeBoundingClientRect.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar getRangeClientRects = __webpack_require__(/*! ./getRangeClientRects */ \"(app-pages-browser)/./node_modules/draft-js/lib/getRangeClientRects.js\");\n/**\n * Like range.getBoundingClientRect() but normalizes for browser bugs.\n */ function getRangeBoundingClientRect(range) {\n    // \"Return a DOMRect object describing the smallest rectangle that includes\n    // the first rectangle in list and all of the remaining rectangles of which\n    // the height or width is not zero.\"\n    // http://www.w3.org/TR/cssom-view/#dom-range-getboundingclientrect\n    var rects = getRangeClientRects(range);\n    var top = 0;\n    var right = 0;\n    var bottom = 0;\n    var left = 0;\n    if (rects.length) {\n        // If the first rectangle has 0 width, we use the second, this is needed\n        // because Chrome renders a 0 width rectangle when the selection contains\n        // a line break.\n        if (rects.length > 1 && rects[0].width === 0) {\n            var _rects$ = rects[1];\n            top = _rects$.top;\n            right = _rects$.right;\n            bottom = _rects$.bottom;\n            left = _rects$.left;\n        } else {\n            var _rects$2 = rects[0];\n            top = _rects$2.top;\n            right = _rects$2.right;\n            bottom = _rects$2.bottom;\n            left = _rects$2.left;\n        }\n        for(var ii = 1; ii < rects.length; ii++){\n            var rect = rects[ii];\n            if (rect.height !== 0 && rect.width !== 0) {\n                top = Math.min(top, rect.top);\n                right = Math.max(right, rect.right);\n                bottom = Math.max(bottom, rect.bottom);\n                left = Math.min(left, rect.left);\n            }\n        }\n    }\n    return {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left,\n        width: right - left,\n        height: bottom - top\n    };\n}\nmodule.exports = getRangeBoundingClientRect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0UmFuZ2VCb3VuZGluZ0NsaWVudFJlY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxzQkFBc0JDLG1CQUFPQSxDQUFDLHFHQUF1QjtBQUV6RDs7Q0FFQyxHQUNELFNBQVNDLDJCQUEyQkMsS0FBSztJQUN2QywyRUFBMkU7SUFDM0UsMkVBQTJFO0lBQzNFLG9DQUFvQztJQUNwQyxtRUFBbUU7SUFDbkUsSUFBSUMsUUFBUUosb0JBQW9CRztJQUNoQyxJQUFJRSxNQUFNO0lBQ1YsSUFBSUMsUUFBUTtJQUNaLElBQUlDLFNBQVM7SUFDYixJQUFJQyxPQUFPO0lBRVgsSUFBSUosTUFBTUssTUFBTSxFQUFFO1FBQ2hCLHdFQUF3RTtRQUN4RSx5RUFBeUU7UUFDekUsZ0JBQWdCO1FBQ2hCLElBQUlMLE1BQU1LLE1BQU0sR0FBRyxLQUFLTCxLQUFLLENBQUMsRUFBRSxDQUFDTSxLQUFLLEtBQUssR0FBRztZQUM1QyxJQUFJQyxVQUFVUCxLQUFLLENBQUMsRUFBRTtZQUN0QkMsTUFBTU0sUUFBUU4sR0FBRztZQUNqQkMsUUFBUUssUUFBUUwsS0FBSztZQUNyQkMsU0FBU0ksUUFBUUosTUFBTTtZQUN2QkMsT0FBT0csUUFBUUgsSUFBSTtRQUNyQixPQUFPO1lBQ0wsSUFBSUksV0FBV1IsS0FBSyxDQUFDLEVBQUU7WUFDdkJDLE1BQU1PLFNBQVNQLEdBQUc7WUFDbEJDLFFBQVFNLFNBQVNOLEtBQUs7WUFDdEJDLFNBQVNLLFNBQVNMLE1BQU07WUFDeEJDLE9BQU9JLFNBQVNKLElBQUk7UUFDdEI7UUFFQSxJQUFLLElBQUlLLEtBQUssR0FBR0EsS0FBS1QsTUFBTUssTUFBTSxFQUFFSSxLQUFNO1lBQ3hDLElBQUlDLE9BQU9WLEtBQUssQ0FBQ1MsR0FBRztZQUVwQixJQUFJQyxLQUFLQyxNQUFNLEtBQUssS0FBS0QsS0FBS0osS0FBSyxLQUFLLEdBQUc7Z0JBQ3pDTCxNQUFNVyxLQUFLQyxHQUFHLENBQUNaLEtBQUtTLEtBQUtULEdBQUc7Z0JBQzVCQyxRQUFRVSxLQUFLRSxHQUFHLENBQUNaLE9BQU9RLEtBQUtSLEtBQUs7Z0JBQ2xDQyxTQUFTUyxLQUFLRSxHQUFHLENBQUNYLFFBQVFPLEtBQUtQLE1BQU07Z0JBQ3JDQyxPQUFPUSxLQUFLQyxHQUFHLENBQUNULE1BQU1NLEtBQUtOLElBQUk7WUFDakM7UUFDRjtJQUNGO0lBRUEsT0FBTztRQUNMSCxLQUFLQTtRQUNMQyxPQUFPQTtRQUNQQyxRQUFRQTtRQUNSQyxNQUFNQTtRQUNORSxPQUFPSixRQUFRRTtRQUNmTyxRQUFRUixTQUFTRjtJQUNuQjtBQUNGO0FBRUFjLE9BQU9DLE9BQU8sR0FBR2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0UmFuZ2VCb3VuZGluZ0NsaWVudFJlY3QuanM/NjdjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZ2V0UmFuZ2VDbGllbnRSZWN0cyA9IHJlcXVpcmUoXCIuL2dldFJhbmdlQ2xpZW50UmVjdHNcIik7XG5cbi8qKlxuICogTGlrZSByYW5nZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSBidXQgbm9ybWFsaXplcyBmb3IgYnJvd3NlciBidWdzLlxuICovXG5mdW5jdGlvbiBnZXRSYW5nZUJvdW5kaW5nQ2xpZW50UmVjdChyYW5nZSkge1xuICAvLyBcIlJldHVybiBhIERPTVJlY3Qgb2JqZWN0IGRlc2NyaWJpbmcgdGhlIHNtYWxsZXN0IHJlY3RhbmdsZSB0aGF0IGluY2x1ZGVzXG4gIC8vIHRoZSBmaXJzdCByZWN0YW5nbGUgaW4gbGlzdCBhbmQgYWxsIG9mIHRoZSByZW1haW5pbmcgcmVjdGFuZ2xlcyBvZiB3aGljaFxuICAvLyB0aGUgaGVpZ2h0IG9yIHdpZHRoIGlzIG5vdCB6ZXJvLlwiXG4gIC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2Nzc29tLXZpZXcvI2RvbS1yYW5nZS1nZXRib3VuZGluZ2NsaWVudHJlY3RcbiAgdmFyIHJlY3RzID0gZ2V0UmFuZ2VDbGllbnRSZWN0cyhyYW5nZSk7XG4gIHZhciB0b3AgPSAwO1xuICB2YXIgcmlnaHQgPSAwO1xuICB2YXIgYm90dG9tID0gMDtcbiAgdmFyIGxlZnQgPSAwO1xuXG4gIGlmIChyZWN0cy5sZW5ndGgpIHtcbiAgICAvLyBJZiB0aGUgZmlyc3QgcmVjdGFuZ2xlIGhhcyAwIHdpZHRoLCB3ZSB1c2UgdGhlIHNlY29uZCwgdGhpcyBpcyBuZWVkZWRcbiAgICAvLyBiZWNhdXNlIENocm9tZSByZW5kZXJzIGEgMCB3aWR0aCByZWN0YW5nbGUgd2hlbiB0aGUgc2VsZWN0aW9uIGNvbnRhaW5zXG4gICAgLy8gYSBsaW5lIGJyZWFrLlxuICAgIGlmIChyZWN0cy5sZW5ndGggPiAxICYmIHJlY3RzWzBdLndpZHRoID09PSAwKSB7XG4gICAgICB2YXIgX3JlY3RzJCA9IHJlY3RzWzFdO1xuICAgICAgdG9wID0gX3JlY3RzJC50b3A7XG4gICAgICByaWdodCA9IF9yZWN0cyQucmlnaHQ7XG4gICAgICBib3R0b20gPSBfcmVjdHMkLmJvdHRvbTtcbiAgICAgIGxlZnQgPSBfcmVjdHMkLmxlZnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBfcmVjdHMkMiA9IHJlY3RzWzBdO1xuICAgICAgdG9wID0gX3JlY3RzJDIudG9wO1xuICAgICAgcmlnaHQgPSBfcmVjdHMkMi5yaWdodDtcbiAgICAgIGJvdHRvbSA9IF9yZWN0cyQyLmJvdHRvbTtcbiAgICAgIGxlZnQgPSBfcmVjdHMkMi5sZWZ0O1xuICAgIH1cblxuICAgIGZvciAodmFyIGlpID0gMTsgaWkgPCByZWN0cy5sZW5ndGg7IGlpKyspIHtcbiAgICAgIHZhciByZWN0ID0gcmVjdHNbaWldO1xuXG4gICAgICBpZiAocmVjdC5oZWlnaHQgIT09IDAgJiYgcmVjdC53aWR0aCAhPT0gMCkge1xuICAgICAgICB0b3AgPSBNYXRoLm1pbih0b3AsIHJlY3QudG9wKTtcbiAgICAgICAgcmlnaHQgPSBNYXRoLm1heChyaWdodCwgcmVjdC5yaWdodCk7XG4gICAgICAgIGJvdHRvbSA9IE1hdGgubWF4KGJvdHRvbSwgcmVjdC5ib3R0b20pO1xuICAgICAgICBsZWZ0ID0gTWF0aC5taW4obGVmdCwgcmVjdC5sZWZ0KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHRvcDogdG9wLFxuICAgIHJpZ2h0OiByaWdodCxcbiAgICBib3R0b206IGJvdHRvbSxcbiAgICBsZWZ0OiBsZWZ0LFxuICAgIHdpZHRoOiByaWdodCAtIGxlZnQsXG4gICAgaGVpZ2h0OiBib3R0b20gLSB0b3BcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYW5nZUJvdW5kaW5nQ2xpZW50UmVjdDsiXSwibmFtZXMiOlsiZ2V0UmFuZ2VDbGllbnRSZWN0cyIsInJlcXVpcmUiLCJnZXRSYW5nZUJvdW5kaW5nQ2xpZW50UmVjdCIsInJhbmdlIiwicmVjdHMiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJsZW5ndGgiLCJ3aWR0aCIsIl9yZWN0cyQiLCJfcmVjdHMkMiIsImlpIiwicmVjdCIsImhlaWdodCIsIk1hdGgiLCJtaW4iLCJtYXgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getRangeBoundingClientRect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getRangeClientRects.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/getRangeClientRects.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isChrome = UserAgent.isBrowser(\"Chrome\"); // In Chrome, the client rects will include the entire bounds of all nodes that\n// begin (have a start tag) within the selection, even if the selection does\n// not overlap the entire node. To resolve this, we split the range at each\n// start tag and join the client rects together.\n// https://code.google.com/p/chromium/issues/detail?id=324437\n/* eslint-disable consistent-return */ function getRangeClientRectsChrome(range) {\n    var tempRange = range.cloneRange();\n    var clientRects = [];\n    for(var ancestor = range.endContainer; ancestor != null; ancestor = ancestor.parentNode){\n        // If we've climbed up to the common ancestor, we can now use the\n        // original start point and stop climbing the tree.\n        var atCommonAncestor = ancestor === range.commonAncestorContainer;\n        if (atCommonAncestor) {\n            tempRange.setStart(range.startContainer, range.startOffset);\n        } else {\n            tempRange.setStart(tempRange.endContainer, 0);\n        }\n        var rects = Array.from(tempRange.getClientRects());\n        clientRects.push(rects);\n        if (atCommonAncestor) {\n            var _ref;\n            clientRects.reverse();\n            return (_ref = []).concat.apply(_ref, clientRects);\n        }\n        tempRange.setEndBefore(ancestor);\n    }\n     true ?  true ? invariant(false, \"Found an unexpected detached subtree when getting range client rects.\") : 0 : 0;\n}\n/* eslint-enable consistent-return */ /**\n * Like range.getClientRects() but normalizes for browser bugs.\n */ var getRangeClientRects = isChrome ? getRangeClientRectsChrome : function(range) {\n    return Array.from(range.getClientRects());\n};\nmodule.exports = getRangeClientRects;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0UmFuZ2VDbGllbnRSZWN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLG9GQUFvQjtBQUU1QyxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQyxvRkFBb0I7QUFFNUMsSUFBSUUsV0FBV0gsVUFBVUksU0FBUyxDQUFDLFdBQVcsK0VBQStFO0FBQzdILDRFQUE0RTtBQUM1RSwyRUFBMkU7QUFDM0UsZ0RBQWdEO0FBQ2hELDZEQUE2RDtBQUU3RCxvQ0FBb0MsR0FFcEMsU0FBU0MsMEJBQTBCQyxLQUFLO0lBQ3RDLElBQUlDLFlBQVlELE1BQU1FLFVBQVU7SUFDaEMsSUFBSUMsY0FBYyxFQUFFO0lBRXBCLElBQUssSUFBSUMsV0FBV0osTUFBTUssWUFBWSxFQUFFRCxZQUFZLE1BQU1BLFdBQVdBLFNBQVNFLFVBQVUsQ0FBRTtRQUN4RixpRUFBaUU7UUFDakUsbURBQW1EO1FBQ25ELElBQUlDLG1CQUFtQkgsYUFBYUosTUFBTVEsdUJBQXVCO1FBRWpFLElBQUlELGtCQUFrQjtZQUNwQk4sVUFBVVEsUUFBUSxDQUFDVCxNQUFNVSxjQUFjLEVBQUVWLE1BQU1XLFdBQVc7UUFDNUQsT0FBTztZQUNMVixVQUFVUSxRQUFRLENBQUNSLFVBQVVJLFlBQVksRUFBRTtRQUM3QztRQUVBLElBQUlPLFFBQVFDLE1BQU1DLElBQUksQ0FBQ2IsVUFBVWMsY0FBYztRQUMvQ1osWUFBWWEsSUFBSSxDQUFDSjtRQUVqQixJQUFJTCxrQkFBa0I7WUFDcEIsSUFBSVU7WUFFSmQsWUFBWWUsT0FBTztZQUNuQixPQUFPLENBQUNELE9BQU8sRUFBRSxFQUFFRSxNQUFNLENBQUNDLEtBQUssQ0FBQ0gsTUFBTWQ7UUFDeEM7UUFFQUYsVUFBVW9CLFlBQVksQ0FBQ2pCO0lBQ3pCO0lBRUEsS0FBTSxHQUFHa0IsS0FBcUMsR0FBRzFCLFVBQVUsT0FBTywyRUFBMkVBLENBQWdCLEdBQUcsQ0FBTTtBQUN4SztBQUNBLG1DQUFtQyxHQUVuQzs7Q0FFQyxHQUdELElBQUkyQixzQkFBc0IxQixXQUFXRSw0QkFBNEIsU0FBVUMsS0FBSztJQUM5RSxPQUFPYSxNQUFNQyxJQUFJLENBQUNkLE1BQU1lLGNBQWM7QUFDeEM7QUFDQVMsT0FBT0MsT0FBTyxHQUFHRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldFJhbmdlQ2xpZW50UmVjdHMuanM/YzgyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVXNlckFnZW50ID0gcmVxdWlyZShcImZianMvbGliL1VzZXJBZ2VudFwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9pbnZhcmlhbnRcIik7XG5cbnZhciBpc0Nocm9tZSA9IFVzZXJBZ2VudC5pc0Jyb3dzZXIoJ0Nocm9tZScpOyAvLyBJbiBDaHJvbWUsIHRoZSBjbGllbnQgcmVjdHMgd2lsbCBpbmNsdWRlIHRoZSBlbnRpcmUgYm91bmRzIG9mIGFsbCBub2RlcyB0aGF0XG4vLyBiZWdpbiAoaGF2ZSBhIHN0YXJ0IHRhZykgd2l0aGluIHRoZSBzZWxlY3Rpb24sIGV2ZW4gaWYgdGhlIHNlbGVjdGlvbiBkb2VzXG4vLyBub3Qgb3ZlcmxhcCB0aGUgZW50aXJlIG5vZGUuIFRvIHJlc29sdmUgdGhpcywgd2Ugc3BsaXQgdGhlIHJhbmdlIGF0IGVhY2hcbi8vIHN0YXJ0IHRhZyBhbmQgam9pbiB0aGUgY2xpZW50IHJlY3RzIHRvZ2V0aGVyLlxuLy8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTMyNDQzN1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBjb25zaXN0ZW50LXJldHVybiAqL1xuXG5mdW5jdGlvbiBnZXRSYW5nZUNsaWVudFJlY3RzQ2hyb21lKHJhbmdlKSB7XG4gIHZhciB0ZW1wUmFuZ2UgPSByYW5nZS5jbG9uZVJhbmdlKCk7XG4gIHZhciBjbGllbnRSZWN0cyA9IFtdO1xuXG4gIGZvciAodmFyIGFuY2VzdG9yID0gcmFuZ2UuZW5kQ29udGFpbmVyOyBhbmNlc3RvciAhPSBudWxsOyBhbmNlc3RvciA9IGFuY2VzdG9yLnBhcmVudE5vZGUpIHtcbiAgICAvLyBJZiB3ZSd2ZSBjbGltYmVkIHVwIHRvIHRoZSBjb21tb24gYW5jZXN0b3IsIHdlIGNhbiBub3cgdXNlIHRoZVxuICAgIC8vIG9yaWdpbmFsIHN0YXJ0IHBvaW50IGFuZCBzdG9wIGNsaW1iaW5nIHRoZSB0cmVlLlxuICAgIHZhciBhdENvbW1vbkFuY2VzdG9yID0gYW5jZXN0b3IgPT09IHJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyO1xuXG4gICAgaWYgKGF0Q29tbW9uQW5jZXN0b3IpIHtcbiAgICAgIHRlbXBSYW5nZS5zZXRTdGFydChyYW5nZS5zdGFydENvbnRhaW5lciwgcmFuZ2Uuc3RhcnRPZmZzZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0ZW1wUmFuZ2Uuc2V0U3RhcnQodGVtcFJhbmdlLmVuZENvbnRhaW5lciwgMCk7XG4gICAgfVxuXG4gICAgdmFyIHJlY3RzID0gQXJyYXkuZnJvbSh0ZW1wUmFuZ2UuZ2V0Q2xpZW50UmVjdHMoKSk7XG4gICAgY2xpZW50UmVjdHMucHVzaChyZWN0cyk7XG5cbiAgICBpZiAoYXRDb21tb25BbmNlc3Rvcikge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIGNsaWVudFJlY3RzLnJldmVyc2UoKTtcbiAgICAgIHJldHVybiAoX3JlZiA9IFtdKS5jb25jYXQuYXBwbHkoX3JlZiwgY2xpZW50UmVjdHMpO1xuICAgIH1cblxuICAgIHRlbXBSYW5nZS5zZXRFbmRCZWZvcmUoYW5jZXN0b3IpO1xuICB9XG5cbiAgIWZhbHNlID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnRm91bmQgYW4gdW5leHBlY3RlZCBkZXRhY2hlZCBzdWJ0cmVlIHdoZW4gZ2V0dGluZyByYW5nZSBjbGllbnQgcmVjdHMuJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xufVxuLyogZXNsaW50LWVuYWJsZSBjb25zaXN0ZW50LXJldHVybiAqL1xuXG4vKipcbiAqIExpa2UgcmFuZ2UuZ2V0Q2xpZW50UmVjdHMoKSBidXQgbm9ybWFsaXplcyBmb3IgYnJvd3NlciBidWdzLlxuICovXG5cblxudmFyIGdldFJhbmdlQ2xpZW50UmVjdHMgPSBpc0Nocm9tZSA/IGdldFJhbmdlQ2xpZW50UmVjdHNDaHJvbWUgOiBmdW5jdGlvbiAocmFuZ2UpIHtcbiAgcmV0dXJuIEFycmF5LmZyb20ocmFuZ2UuZ2V0Q2xpZW50UmVjdHMoKSk7XG59O1xubW9kdWxlLmV4cG9ydHMgPSBnZXRSYW5nZUNsaWVudFJlY3RzOyJdLCJuYW1lcyI6WyJVc2VyQWdlbnQiLCJyZXF1aXJlIiwiaW52YXJpYW50IiwiaXNDaHJvbWUiLCJpc0Jyb3dzZXIiLCJnZXRSYW5nZUNsaWVudFJlY3RzQ2hyb21lIiwicmFuZ2UiLCJ0ZW1wUmFuZ2UiLCJjbG9uZVJhbmdlIiwiY2xpZW50UmVjdHMiLCJhbmNlc3RvciIsImVuZENvbnRhaW5lciIsInBhcmVudE5vZGUiLCJhdENvbW1vbkFuY2VzdG9yIiwiY29tbW9uQW5jZXN0b3JDb250YWluZXIiLCJzZXRTdGFydCIsInN0YXJ0Q29udGFpbmVyIiwic3RhcnRPZmZzZXQiLCJyZWN0cyIsIkFycmF5IiwiZnJvbSIsImdldENsaWVudFJlY3RzIiwicHVzaCIsIl9yZWYiLCJyZXZlcnNlIiwiY29uY2F0IiwiYXBwbHkiLCJzZXRFbmRCZWZvcmUiLCJwcm9jZXNzIiwiZ2V0UmFuZ2VDbGllbnRSZWN0cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getRangeClientRects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getRangesForDraftEntity.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/getRangesForDraftEntity.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\n/**\n * Obtain the start and end positions of the range that has the\n * specified entity applied to it.\n *\n * Entity keys are applied only to contiguous stretches of text, so this\n * method searches for the first instance of the entity key and returns\n * the subsequent range.\n */ function getRangesForDraftEntity(block, key) {\n    var ranges = [];\n    block.findEntityRanges(function(c) {\n        return c.getEntity() === key;\n    }, function(start, end) {\n        ranges.push({\n            start: start,\n            end: end\n        });\n    });\n    !!!ranges.length ?  true ? invariant(false, \"Entity key not found in this range.\") : 0 : void 0;\n    return ranges;\n}\nmodule.exports = getRangesForDraftEntity;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0UmFuZ2VzRm9yRHJhZnRFbnRpdHkuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyxvRkFBb0I7QUFDNUM7Ozs7Ozs7Q0FPQyxHQUdELFNBQVNDLHdCQUF3QkMsS0FBSyxFQUFFQyxHQUFHO0lBQ3pDLElBQUlDLFNBQVMsRUFBRTtJQUNmRixNQUFNRyxnQkFBZ0IsQ0FBQyxTQUFVQyxDQUFDO1FBQ2hDLE9BQU9BLEVBQUVDLFNBQVMsT0FBT0o7SUFDM0IsR0FBRyxTQUFVSyxLQUFLLEVBQUVDLEdBQUc7UUFDckJMLE9BQU9NLElBQUksQ0FBQztZQUNWRixPQUFPQTtZQUNQQyxLQUFLQTtRQUNQO0lBQ0Y7SUFDQSxDQUFDLENBQUMsQ0FBQ0wsT0FBT08sTUFBTSxHQUFHQyxLQUFxQyxHQUFHYixVQUFVLE9BQU8seUNBQXlDQSxDQUFnQixHQUFHLEtBQUs7SUFDN0ksT0FBT0s7QUFDVDtBQUVBUyxPQUFPQyxPQUFPLEdBQUdiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0UmFuZ2VzRm9yRHJhZnRFbnRpdHkuanM/ZTA1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcImZianMvbGliL2ludmFyaWFudFwiKTtcbi8qKlxuICogT2J0YWluIHRoZSBzdGFydCBhbmQgZW5kIHBvc2l0aW9ucyBvZiB0aGUgcmFuZ2UgdGhhdCBoYXMgdGhlXG4gKiBzcGVjaWZpZWQgZW50aXR5IGFwcGxpZWQgdG8gaXQuXG4gKlxuICogRW50aXR5IGtleXMgYXJlIGFwcGxpZWQgb25seSB0byBjb250aWd1b3VzIHN0cmV0Y2hlcyBvZiB0ZXh0LCBzbyB0aGlzXG4gKiBtZXRob2Qgc2VhcmNoZXMgZm9yIHRoZSBmaXJzdCBpbnN0YW5jZSBvZiB0aGUgZW50aXR5IGtleSBhbmQgcmV0dXJuc1xuICogdGhlIHN1YnNlcXVlbnQgcmFuZ2UuXG4gKi9cblxuXG5mdW5jdGlvbiBnZXRSYW5nZXNGb3JEcmFmdEVudGl0eShibG9jaywga2V5KSB7XG4gIHZhciByYW5nZXMgPSBbXTtcbiAgYmxvY2suZmluZEVudGl0eVJhbmdlcyhmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiBjLmdldEVudGl0eSgpID09PSBrZXk7XG4gIH0sIGZ1bmN0aW9uIChzdGFydCwgZW5kKSB7XG4gICAgcmFuZ2VzLnB1c2goe1xuICAgICAgc3RhcnQ6IHN0YXJ0LFxuICAgICAgZW5kOiBlbmRcbiAgICB9KTtcbiAgfSk7XG4gICEhIXJhbmdlcy5sZW5ndGggPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdFbnRpdHkga2V5IG5vdCBmb3VuZCBpbiB0aGlzIHJhbmdlLicpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgcmV0dXJuIHJhbmdlcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYW5nZXNGb3JEcmFmdEVudGl0eTsiXSwibmFtZXMiOlsiaW52YXJpYW50IiwicmVxdWlyZSIsImdldFJhbmdlc0ZvckRyYWZ0RW50aXR5IiwiYmxvY2siLCJrZXkiLCJyYW5nZXMiLCJmaW5kRW50aXR5UmFuZ2VzIiwiYyIsImdldEVudGl0eSIsInN0YXJ0IiwiZW5kIiwicHVzaCIsImxlbmd0aCIsInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getRangesForDraftEntity.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getSafeBodyFromHTML.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/getSafeBodyFromHTML.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isOldIE = UserAgent.isBrowser(\"IE <= 9\"); // Provides a dom node that will not execute scripts\n// https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation.createHTMLDocument\n// https://developer.mozilla.org/en-US/Add-ons/Code_snippets/HTML_to_DOM\nfunction getSafeBodyFromHTML(html) {\n    var doc;\n    var root = null; // Provides a safe context\n    if (!isOldIE && document.implementation && document.implementation.createHTMLDocument) {\n        doc = document.implementation.createHTMLDocument(\"foo\");\n        !doc.documentElement ?  true ? invariant(false, \"Missing doc.documentElement\") : 0 : void 0;\n        doc.documentElement.innerHTML = html;\n        root = doc.getElementsByTagName(\"body\")[0];\n    }\n    return root;\n}\nmodule.exports = getSafeBodyFromHTML;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0U2FmZUJvZHlGcm9tSFRNTC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLG9GQUFvQjtBQUU1QyxJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQyxvRkFBb0I7QUFFNUMsSUFBSUUsVUFBVUgsVUFBVUksU0FBUyxDQUFDLFlBQVksb0RBQW9EO0FBQ2xHLHdGQUF3RjtBQUN4Rix3RUFBd0U7QUFFeEUsU0FBU0Msb0JBQW9CQyxJQUFJO0lBQy9CLElBQUlDO0lBQ0osSUFBSUMsT0FBTyxNQUFNLDBCQUEwQjtJQUUzQyxJQUFJLENBQUNMLFdBQVdNLFNBQVNDLGNBQWMsSUFBSUQsU0FBU0MsY0FBYyxDQUFDQyxrQkFBa0IsRUFBRTtRQUNyRkosTUFBTUUsU0FBU0MsY0FBYyxDQUFDQyxrQkFBa0IsQ0FBQztRQUNqRCxDQUFDSixJQUFJSyxlQUFlLEdBQUdDLEtBQXFDLEdBQUdYLFVBQVUsT0FBTyxpQ0FBaUNBLENBQWdCLEdBQUcsS0FBSztRQUN6SUssSUFBSUssZUFBZSxDQUFDRSxTQUFTLEdBQUdSO1FBQ2hDRSxPQUFPRCxJQUFJUSxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsRUFBRTtJQUM1QztJQUVBLE9BQU9QO0FBQ1Q7QUFFQVEsT0FBT0MsT0FBTyxHQUFHWiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldFNhZmVCb2R5RnJvbUhUTUwuanM/OGQ3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVXNlckFnZW50ID0gcmVxdWlyZShcImZianMvbGliL1VzZXJBZ2VudFwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9pbnZhcmlhbnRcIik7XG5cbnZhciBpc09sZElFID0gVXNlckFnZW50LmlzQnJvd3NlcignSUUgPD0gOScpOyAvLyBQcm92aWRlcyBhIGRvbSBub2RlIHRoYXQgd2lsbCBub3QgZXhlY3V0ZSBzY3JpcHRzXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRE9NSW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9BZGQtb25zL0NvZGVfc25pcHBldHMvSFRNTF90b19ET01cblxuZnVuY3Rpb24gZ2V0U2FmZUJvZHlGcm9tSFRNTChodG1sKSB7XG4gIHZhciBkb2M7XG4gIHZhciByb290ID0gbnVsbDsgLy8gUHJvdmlkZXMgYSBzYWZlIGNvbnRleHRcblxuICBpZiAoIWlzT2xkSUUgJiYgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24gJiYgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KSB7XG4gICAgZG9jID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCdmb28nKTtcbiAgICAhZG9jLmRvY3VtZW50RWxlbWVudCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ01pc3NpbmcgZG9jLmRvY3VtZW50RWxlbWVudCcpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBkb2MuZG9jdW1lbnRFbGVtZW50LmlubmVySFRNTCA9IGh0bWw7XG4gICAgcm9vdCA9IGRvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdO1xuICB9XG5cbiAgcmV0dXJuIHJvb3Q7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0U2FmZUJvZHlGcm9tSFRNTDsiXSwibmFtZXMiOlsiVXNlckFnZW50IiwicmVxdWlyZSIsImludmFyaWFudCIsImlzT2xkSUUiLCJpc0Jyb3dzZXIiLCJnZXRTYWZlQm9keUZyb21IVE1MIiwiaHRtbCIsImRvYyIsInJvb3QiLCJkb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwiY3JlYXRlSFRNTERvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwicHJvY2VzcyIsImlubmVySFRNTCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getSafeBodyFromHTML.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getSelectionOffsetKeyForNode.js":
/*!*******************************************************************!*\
  !*** ./node_modules/draft-js/lib/getSelectionOffsetKeyForNode.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n/**\n * Get offset key from a node or it's child nodes. Return the first offset key\n * found on the DOM tree of given node.\n */ var isElement = __webpack_require__(/*! ./isElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\");\nfunction getSelectionOffsetKeyForNode(node) {\n    if (isElement(node)) {\n        var castedNode = node;\n        var offsetKey = castedNode.getAttribute(\"data-offset-key\");\n        if (offsetKey) {\n            return offsetKey;\n        }\n        for(var ii = 0; ii < castedNode.childNodes.length; ii++){\n            var childOffsetKey = getSelectionOffsetKeyForNode(castedNode.childNodes[ii]);\n            if (childOffsetKey) {\n                return childOffsetKey;\n            }\n        }\n    }\n    return null;\n}\nmodule.exports = getSelectionOffsetKeyForNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0U2VsZWN0aW9uT2Zmc2V0S2V5Rm9yTm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUNBOzs7Q0FHQyxHQUVELElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGlGQUFhO0FBRXJDLFNBQVNDLDZCQUE2QkMsSUFBSTtJQUN4QyxJQUFJSCxVQUFVRyxPQUFPO1FBQ25CLElBQUlDLGFBQWFEO1FBQ2pCLElBQUlFLFlBQVlELFdBQVdFLFlBQVksQ0FBQztRQUV4QyxJQUFJRCxXQUFXO1lBQ2IsT0FBT0E7UUFDVDtRQUVBLElBQUssSUFBSUUsS0FBSyxHQUFHQSxLQUFLSCxXQUFXSSxVQUFVLENBQUNDLE1BQU0sRUFBRUYsS0FBTTtZQUN4RCxJQUFJRyxpQkFBaUJSLDZCQUE2QkUsV0FBV0ksVUFBVSxDQUFDRCxHQUFHO1lBRTNFLElBQUlHLGdCQUFnQjtnQkFDbEIsT0FBT0E7WUFDVDtRQUNGO0lBQ0Y7SUFFQSxPQUFPO0FBQ1Q7QUFFQUMsT0FBT0MsT0FBTyxHQUFHViIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldFNlbGVjdGlvbk9mZnNldEtleUZvck5vZGUuanM/MzViZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuLyoqXG4gKiBHZXQgb2Zmc2V0IGtleSBmcm9tIGEgbm9kZSBvciBpdCdzIGNoaWxkIG5vZGVzLiBSZXR1cm4gdGhlIGZpcnN0IG9mZnNldCBrZXlcbiAqIGZvdW5kIG9uIHRoZSBET00gdHJlZSBvZiBnaXZlbiBub2RlLlxuICovXG5cbnZhciBpc0VsZW1lbnQgPSByZXF1aXJlKFwiLi9pc0VsZW1lbnRcIik7XG5cbmZ1bmN0aW9uIGdldFNlbGVjdGlvbk9mZnNldEtleUZvck5vZGUobm9kZSkge1xuICBpZiAoaXNFbGVtZW50KG5vZGUpKSB7XG4gICAgdmFyIGNhc3RlZE5vZGUgPSBub2RlO1xuICAgIHZhciBvZmZzZXRLZXkgPSBjYXN0ZWROb2RlLmdldEF0dHJpYnV0ZSgnZGF0YS1vZmZzZXQta2V5Jyk7XG5cbiAgICBpZiAob2Zmc2V0S2V5KSB7XG4gICAgICByZXR1cm4gb2Zmc2V0S2V5O1xuICAgIH1cblxuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCBjYXN0ZWROb2RlLmNoaWxkTm9kZXMubGVuZ3RoOyBpaSsrKSB7XG4gICAgICB2YXIgY2hpbGRPZmZzZXRLZXkgPSBnZXRTZWxlY3Rpb25PZmZzZXRLZXlGb3JOb2RlKGNhc3RlZE5vZGUuY2hpbGROb2Rlc1tpaV0pO1xuXG4gICAgICBpZiAoY2hpbGRPZmZzZXRLZXkpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkT2Zmc2V0S2V5O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFNlbGVjdGlvbk9mZnNldEtleUZvck5vZGU7Il0sIm5hbWVzIjpbImlzRWxlbWVudCIsInJlcXVpcmUiLCJnZXRTZWxlY3Rpb25PZmZzZXRLZXlGb3JOb2RlIiwibm9kZSIsImNhc3RlZE5vZGUiLCJvZmZzZXRLZXkiLCJnZXRBdHRyaWJ1dGUiLCJpaSIsImNoaWxkTm9kZXMiLCJsZW5ndGgiLCJjaGlsZE9mZnNldEtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getSelectionOffsetKeyForNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getTextContentFromFiles.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/getTextContentFromFiles.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar TEXT_CLIPPING_REGEX = /\\.textClipping$/;\nvar TEXT_TYPES = {\n    \"text/plain\": true,\n    \"text/html\": true,\n    \"text/rtf\": true\n}; // Somewhat arbitrary upper bound on text size. Let's not lock up the browser.\nvar TEXT_SIZE_UPPER_BOUND = 5000;\n/**\n * Extract the text content from a file list.\n */ function getTextContentFromFiles(files, callback) {\n    var readCount = 0;\n    var results = [];\n    files.forEach(function(/*blob*/ file) {\n        readFile(file, function(/*string*/ text) {\n            readCount++;\n            text && results.push(text.slice(0, TEXT_SIZE_UPPER_BOUND));\n            if (readCount == files.length) {\n                callback(results.join(\"\\r\"));\n            }\n        });\n    });\n}\n/**\n * todo isaac: Do work to turn html/rtf into a content fragment.\n */ function readFile(file, callback) {\n    if (!__webpack_require__.g.FileReader || file.type && !(file.type in TEXT_TYPES)) {\n        callback(\"\");\n        return;\n    }\n    if (file.type === \"\") {\n        var _contents = \"\"; // Special-case text clippings, which have an empty type but include\n        // `.textClipping` in the file name. `readAsText` results in an empty\n        // string for text clippings, so we force the file name to serve\n        // as the text value for the file.\n        if (TEXT_CLIPPING_REGEX.test(file.name)) {\n            _contents = file.name.replace(TEXT_CLIPPING_REGEX, \"\");\n        }\n        callback(_contents);\n        return;\n    }\n    var reader = new FileReader();\n    reader.onload = function() {\n        var result = reader.result;\n        !(typeof result === \"string\") ?  true ? invariant(false, 'We should be calling \"FileReader.readAsText\" which returns a string') : 0 : void 0;\n        callback(result);\n    };\n    reader.onerror = function() {\n        callback(\"\");\n    };\n    reader.readAsText(file);\n}\nmodule.exports = getTextContentFromFiles;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0VGV4dENvbnRlbnRGcm9tRmlsZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyxvRkFBb0I7QUFFNUMsSUFBSUMsc0JBQXNCO0FBQzFCLElBQUlDLGFBQWE7SUFDZixjQUFjO0lBQ2QsYUFBYTtJQUNiLFlBQVk7QUFDZCxHQUFHLDhFQUE4RTtBQUVqRixJQUFJQyx3QkFBd0I7QUFDNUI7O0NBRUMsR0FFRCxTQUFTQyx3QkFBd0JDLEtBQUssRUFBRUMsUUFBUTtJQUM5QyxJQUFJQyxZQUFZO0lBQ2hCLElBQUlDLFVBQVUsRUFBRTtJQUNoQkgsTUFBTUksT0FBTyxDQUFDLFNBQ2QsTUFBTSxHQUNOQyxJQUFJO1FBQ0ZDLFNBQVNELE1BQU0sU0FDZixRQUFRLEdBQ1JFLElBQUk7WUFDRkw7WUFDQUssUUFBUUosUUFBUUssSUFBSSxDQUFDRCxLQUFLRSxLQUFLLENBQUMsR0FBR1g7WUFFbkMsSUFBSUksYUFBYUYsTUFBTVUsTUFBTSxFQUFFO2dCQUM3QlQsU0FBU0UsUUFBUVEsSUFBSSxDQUFDO1lBQ3hCO1FBQ0Y7SUFDRjtBQUNGO0FBQ0E7O0NBRUMsR0FHRCxTQUFTTCxTQUFTRCxJQUFJLEVBQUVKLFFBQVE7SUFDOUIsSUFBSSxDQUFDVyxxQkFBTUEsQ0FBQ0MsVUFBVSxJQUFJUixLQUFLUyxJQUFJLElBQUksQ0FBRVQsQ0FBQUEsS0FBS1MsSUFBSSxJQUFJakIsVUFBUyxHQUFJO1FBQ2pFSSxTQUFTO1FBQ1Q7SUFDRjtJQUVBLElBQUlJLEtBQUtTLElBQUksS0FBSyxJQUFJO1FBQ3BCLElBQUlDLFlBQVksSUFBSSxvRUFBb0U7UUFDeEYscUVBQXFFO1FBQ3JFLGdFQUFnRTtRQUNoRSxrQ0FBa0M7UUFFbEMsSUFBSW5CLG9CQUFvQm9CLElBQUksQ0FBQ1gsS0FBS1ksSUFBSSxHQUFHO1lBQ3ZDRixZQUFZVixLQUFLWSxJQUFJLENBQUNDLE9BQU8sQ0FBQ3RCLHFCQUFxQjtRQUNyRDtRQUVBSyxTQUFTYztRQUNUO0lBQ0Y7SUFFQSxJQUFJSSxTQUFTLElBQUlOO0lBRWpCTSxPQUFPQyxNQUFNLEdBQUc7UUFDZCxJQUFJQyxTQUFTRixPQUFPRSxNQUFNO1FBQzFCLENBQUUsUUFBT0EsV0FBVyxRQUFPLElBQUtDLEtBQXFDLEdBQUc1QixVQUFVLE9BQU8seUVBQXlFQSxDQUFnQixHQUFHLEtBQUs7UUFDMUxPLFNBQVNvQjtJQUNYO0lBRUFGLE9BQU9JLE9BQU8sR0FBRztRQUNmdEIsU0FBUztJQUNYO0lBRUFrQixPQUFPSyxVQUFVLENBQUNuQjtBQUNwQjtBQUVBb0IsT0FBT0MsT0FBTyxHQUFHM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9nZXRUZXh0Q29udGVudEZyb21GaWxlcy5qcz9mOWU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpO1xuXG52YXIgVEVYVF9DTElQUElOR19SRUdFWCA9IC9cXC50ZXh0Q2xpcHBpbmckLztcbnZhciBURVhUX1RZUEVTID0ge1xuICAndGV4dC9wbGFpbic6IHRydWUsXG4gICd0ZXh0L2h0bWwnOiB0cnVlLFxuICAndGV4dC9ydGYnOiB0cnVlXG59OyAvLyBTb21ld2hhdCBhcmJpdHJhcnkgdXBwZXIgYm91bmQgb24gdGV4dCBzaXplLiBMZXQncyBub3QgbG9jayB1cCB0aGUgYnJvd3Nlci5cblxudmFyIFRFWFRfU0laRV9VUFBFUl9CT1VORCA9IDUwMDA7XG4vKipcbiAqIEV4dHJhY3QgdGhlIHRleHQgY29udGVudCBmcm9tIGEgZmlsZSBsaXN0LlxuICovXG5cbmZ1bmN0aW9uIGdldFRleHRDb250ZW50RnJvbUZpbGVzKGZpbGVzLCBjYWxsYmFjaykge1xuICB2YXIgcmVhZENvdW50ID0gMDtcbiAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgZmlsZXMuZm9yRWFjaChmdW5jdGlvbiAoXG4gIC8qYmxvYiovXG4gIGZpbGUpIHtcbiAgICByZWFkRmlsZShmaWxlLCBmdW5jdGlvbiAoXG4gICAgLypzdHJpbmcqL1xuICAgIHRleHQpIHtcbiAgICAgIHJlYWRDb3VudCsrO1xuICAgICAgdGV4dCAmJiByZXN1bHRzLnB1c2godGV4dC5zbGljZSgwLCBURVhUX1NJWkVfVVBQRVJfQk9VTkQpKTtcblxuICAgICAgaWYgKHJlYWRDb3VudCA9PSBmaWxlcy5sZW5ndGgpIHtcbiAgICAgICAgY2FsbGJhY2socmVzdWx0cy5qb2luKCdcXHInKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuLyoqXG4gKiB0b2RvIGlzYWFjOiBEbyB3b3JrIHRvIHR1cm4gaHRtbC9ydGYgaW50byBhIGNvbnRlbnQgZnJhZ21lbnQuXG4gKi9cblxuXG5mdW5jdGlvbiByZWFkRmlsZShmaWxlLCBjYWxsYmFjaykge1xuICBpZiAoIWdsb2JhbC5GaWxlUmVhZGVyIHx8IGZpbGUudHlwZSAmJiAhKGZpbGUudHlwZSBpbiBURVhUX1RZUEVTKSkge1xuICAgIGNhbGxiYWNrKCcnKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoZmlsZS50eXBlID09PSAnJykge1xuICAgIHZhciBfY29udGVudHMgPSAnJzsgLy8gU3BlY2lhbC1jYXNlIHRleHQgY2xpcHBpbmdzLCB3aGljaCBoYXZlIGFuIGVtcHR5IHR5cGUgYnV0IGluY2x1ZGVcbiAgICAvLyBgLnRleHRDbGlwcGluZ2AgaW4gdGhlIGZpbGUgbmFtZS4gYHJlYWRBc1RleHRgIHJlc3VsdHMgaW4gYW4gZW1wdHlcbiAgICAvLyBzdHJpbmcgZm9yIHRleHQgY2xpcHBpbmdzLCBzbyB3ZSBmb3JjZSB0aGUgZmlsZSBuYW1lIHRvIHNlcnZlXG4gICAgLy8gYXMgdGhlIHRleHQgdmFsdWUgZm9yIHRoZSBmaWxlLlxuXG4gICAgaWYgKFRFWFRfQ0xJUFBJTkdfUkVHRVgudGVzdChmaWxlLm5hbWUpKSB7XG4gICAgICBfY29udGVudHMgPSBmaWxlLm5hbWUucmVwbGFjZShURVhUX0NMSVBQSU5HX1JFR0VYLCAnJyk7XG4gICAgfVxuXG4gICAgY2FsbGJhY2soX2NvbnRlbnRzKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcblxuICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXN1bHQgPSByZWFkZXIucmVzdWx0O1xuICAgICEodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnV2Ugc2hvdWxkIGJlIGNhbGxpbmcgXCJGaWxlUmVhZGVyLnJlYWRBc1RleHRcIiB3aGljaCByZXR1cm5zIGEgc3RyaW5nJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGNhbGxiYWNrKHJlc3VsdCk7XG4gIH07XG5cbiAgcmVhZGVyLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgY2FsbGJhY2soJycpO1xuICB9O1xuXG4gIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFRleHRDb250ZW50RnJvbUZpbGVzOyJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJyZXF1aXJlIiwiVEVYVF9DTElQUElOR19SRUdFWCIsIlRFWFRfVFlQRVMiLCJURVhUX1NJWkVfVVBQRVJfQk9VTkQiLCJnZXRUZXh0Q29udGVudEZyb21GaWxlcyIsImZpbGVzIiwiY2FsbGJhY2siLCJyZWFkQ291bnQiLCJyZXN1bHRzIiwiZm9yRWFjaCIsImZpbGUiLCJyZWFkRmlsZSIsInRleHQiLCJwdXNoIiwic2xpY2UiLCJsZW5ndGgiLCJqb2luIiwiZ2xvYmFsIiwiRmlsZVJlYWRlciIsInR5cGUiLCJfY29udGVudHMiLCJ0ZXN0IiwibmFtZSIsInJlcGxhY2UiLCJyZWFkZXIiLCJvbmxvYWQiLCJyZXN1bHQiLCJwcm9jZXNzIiwib25lcnJvciIsInJlYWRBc1RleHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getTextContentFromFiles.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getUpdatedSelectionState.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/getUpdatedSelectionState.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftOffsetKey = __webpack_require__(/*! ./DraftOffsetKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftOffsetKey.js\");\nvar nullthrows = __webpack_require__(/*! fbjs/lib/nullthrows */ \"(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\");\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\n    var selection = nullthrows(editorState.getSelection());\n    if (!anchorKey || !focusKey) {\n        // If we cannot make sense of the updated selection state, stick to the current one.\n        if (true) {\n            /* eslint-disable-next-line */ console.warn(\"Invalid selection state.\", arguments, editorState.toJS());\n        }\n        return selection;\n    }\n    var anchorPath = DraftOffsetKey.decode(anchorKey);\n    var anchorBlockKey = anchorPath.blockKey;\n    var anchorLeafBlockTree = editorState.getBlockTree(anchorBlockKey);\n    var anchorLeaf = anchorLeafBlockTree && anchorLeafBlockTree.getIn([\n        anchorPath.decoratorKey,\n        \"leaves\",\n        anchorPath.leafKey\n    ]);\n    var focusPath = DraftOffsetKey.decode(focusKey);\n    var focusBlockKey = focusPath.blockKey;\n    var focusLeafBlockTree = editorState.getBlockTree(focusBlockKey);\n    var focusLeaf = focusLeafBlockTree && focusLeafBlockTree.getIn([\n        focusPath.decoratorKey,\n        \"leaves\",\n        focusPath.leafKey\n    ]);\n    if (!anchorLeaf || !focusLeaf) {\n        // If we cannot make sense of the updated selection state, stick to the current one.\n        if (true) {\n            /* eslint-disable-next-line */ console.warn(\"Invalid selection state.\", arguments, editorState.toJS());\n        }\n        return selection;\n    }\n    var anchorLeafStart = anchorLeaf.get(\"start\");\n    var focusLeafStart = focusLeaf.get(\"start\");\n    var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\n    var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\n    var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\n    if (areEqual) {\n        return selection;\n    }\n    var isBackward = false;\n    if (anchorBlockKey === focusBlockKey) {\n        var anchorLeafEnd = anchorLeaf.get(\"end\");\n        var focusLeafEnd = focusLeaf.get(\"end\");\n        if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\n            isBackward = focusOffset < anchorOffset;\n        } else {\n            isBackward = focusLeafStart < anchorLeafStart;\n        }\n    } else {\n        var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function(v) {\n            return v === anchorBlockKey || v === focusBlockKey;\n        }).first();\n        isBackward = startKey === focusBlockKey;\n    }\n    return selection.merge({\n        anchorKey: anchorBlockKey,\n        anchorOffset: anchorBlockOffset,\n        focusKey: focusBlockKey,\n        focusOffset: focusBlockOffset,\n        isBackward: isBackward\n    });\n}\nmodule.exports = getUpdatedSelectionState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0VXBkYXRlZFNlbGVjdGlvblN0YXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsaUJBQWlCQyxtQkFBT0EsQ0FBQywyRkFBa0I7QUFFL0MsSUFBSUMsYUFBYUQsbUJBQU9BLENBQUMsc0ZBQXFCO0FBRTlDLFNBQVNFLHlCQUF5QkMsV0FBVyxFQUFFQyxTQUFTLEVBQUVDLFlBQVksRUFBRUMsUUFBUSxFQUFFQyxXQUFXO0lBQzNGLElBQUlDLFlBQVlQLFdBQVdFLFlBQVlNLFlBQVk7SUFFbkQsSUFBSSxDQUFDTCxhQUFhLENBQUNFLFVBQVU7UUFDM0Isb0ZBQW9GO1FBQ3BGLElBQUlJLElBQXFDLEVBQUU7WUFDekMsNEJBQTRCLEdBQzVCQyxRQUFRQyxJQUFJLENBQUMsNEJBQTRCQyxXQUFXVixZQUFZVyxJQUFJO1FBQ3RFO1FBRUEsT0FBT047SUFDVDtJQUVBLElBQUlPLGFBQWFoQixlQUFlaUIsTUFBTSxDQUFDWjtJQUN2QyxJQUFJYSxpQkFBaUJGLFdBQVdHLFFBQVE7SUFDeEMsSUFBSUMsc0JBQXNCaEIsWUFBWWlCLFlBQVksQ0FBQ0g7SUFDbkQsSUFBSUksYUFBYUYsdUJBQXVCQSxvQkFBb0JHLEtBQUssQ0FBQztRQUFDUCxXQUFXUSxZQUFZO1FBQUU7UUFBVVIsV0FBV1MsT0FBTztLQUFDO0lBQ3pILElBQUlDLFlBQVkxQixlQUFlaUIsTUFBTSxDQUFDVjtJQUN0QyxJQUFJb0IsZ0JBQWdCRCxVQUFVUCxRQUFRO0lBQ3RDLElBQUlTLHFCQUFxQnhCLFlBQVlpQixZQUFZLENBQUNNO0lBQ2xELElBQUlFLFlBQVlELHNCQUFzQkEsbUJBQW1CTCxLQUFLLENBQUM7UUFBQ0csVUFBVUYsWUFBWTtRQUFFO1FBQVVFLFVBQVVELE9BQU87S0FBQztJQUVwSCxJQUFJLENBQUNILGNBQWMsQ0FBQ08sV0FBVztRQUM3QixvRkFBb0Y7UUFDcEYsSUFBSWxCLElBQXFDLEVBQUU7WUFDekMsNEJBQTRCLEdBQzVCQyxRQUFRQyxJQUFJLENBQUMsNEJBQTRCQyxXQUFXVixZQUFZVyxJQUFJO1FBQ3RFO1FBRUEsT0FBT047SUFDVDtJQUVBLElBQUlxQixrQkFBa0JSLFdBQVdTLEdBQUcsQ0FBQztJQUNyQyxJQUFJQyxpQkFBaUJILFVBQVVFLEdBQUcsQ0FBQztJQUNuQyxJQUFJRSxvQkFBb0JYLGFBQWFRLGtCQUFrQnhCLGVBQWU7SUFDdEUsSUFBSTRCLG1CQUFtQkwsWUFBWUcsaUJBQWlCeEIsY0FBYztJQUNsRSxJQUFJMkIsV0FBVzFCLFVBQVUyQixZQUFZLE9BQU9sQixrQkFBa0JULFVBQVU0QixlQUFlLE9BQU9KLHFCQUFxQnhCLFVBQVU2QixXQUFXLE9BQU9YLGlCQUFpQmxCLFVBQVU4QixjQUFjLE9BQU9MO0lBRS9MLElBQUlDLFVBQVU7UUFDWixPQUFPMUI7SUFDVDtJQUVBLElBQUkrQixhQUFhO0lBRWpCLElBQUl0QixtQkFBbUJTLGVBQWU7UUFDcEMsSUFBSWMsZ0JBQWdCbkIsV0FBV1MsR0FBRyxDQUFDO1FBQ25DLElBQUlXLGVBQWViLFVBQVVFLEdBQUcsQ0FBQztRQUVqQyxJQUFJQyxtQkFBbUJGLG1CQUFtQlksaUJBQWlCRCxlQUFlO1lBQ3hFRCxhQUFhaEMsY0FBY0Y7UUFDN0IsT0FBTztZQUNMa0MsYUFBYVIsaUJBQWlCRjtRQUNoQztJQUNGLE9BQU87UUFDTCxJQUFJYSxXQUFXdkMsWUFBWXdDLGlCQUFpQixHQUFHQyxXQUFXLEdBQUdDLE1BQU0sR0FBR0MsU0FBUyxDQUFDLFNBQVVDLENBQUM7WUFDekYsT0FBT0EsTUFBTTlCLGtCQUFrQjhCLE1BQU1yQjtRQUN2QyxHQUFHc0IsS0FBSztRQUNSVCxhQUFhRyxhQUFhaEI7SUFDNUI7SUFFQSxPQUFPbEIsVUFBVXlDLEtBQUssQ0FBQztRQUNyQjdDLFdBQVdhO1FBQ1haLGNBQWMyQjtRQUNkMUIsVUFBVW9CO1FBQ1ZuQixhQUFhMEI7UUFDYk0sWUFBWUE7SUFDZDtBQUNGO0FBRUFXLE9BQU9DLE9BQU8sR0FBR2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0VXBkYXRlZFNlbGVjdGlvblN0YXRlLmpzP2EwZjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIERyYWZ0T2Zmc2V0S2V5ID0gcmVxdWlyZShcIi4vRHJhZnRPZmZzZXRLZXlcIik7XG5cbnZhciBudWxsdGhyb3dzID0gcmVxdWlyZShcImZianMvbGliL251bGx0aHJvd3NcIik7XG5cbmZ1bmN0aW9uIGdldFVwZGF0ZWRTZWxlY3Rpb25TdGF0ZShlZGl0b3JTdGF0ZSwgYW5jaG9yS2V5LCBhbmNob3JPZmZzZXQsIGZvY3VzS2V5LCBmb2N1c09mZnNldCkge1xuICB2YXIgc2VsZWN0aW9uID0gbnVsbHRocm93cyhlZGl0b3JTdGF0ZS5nZXRTZWxlY3Rpb24oKSk7XG5cbiAgaWYgKCFhbmNob3JLZXkgfHwgIWZvY3VzS2V5KSB7XG4gICAgLy8gSWYgd2UgY2Fubm90IG1ha2Ugc2Vuc2Ugb2YgdGhlIHVwZGF0ZWQgc2VsZWN0aW9uIHN0YXRlLCBzdGljayB0byB0aGUgY3VycmVudCBvbmUuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lICovXG4gICAgICBjb25zb2xlLndhcm4oJ0ludmFsaWQgc2VsZWN0aW9uIHN0YXRlLicsIGFyZ3VtZW50cywgZWRpdG9yU3RhdGUudG9KUygpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc2VsZWN0aW9uO1xuICB9XG5cbiAgdmFyIGFuY2hvclBhdGggPSBEcmFmdE9mZnNldEtleS5kZWNvZGUoYW5jaG9yS2V5KTtcbiAgdmFyIGFuY2hvckJsb2NrS2V5ID0gYW5jaG9yUGF0aC5ibG9ja0tleTtcbiAgdmFyIGFuY2hvckxlYWZCbG9ja1RyZWUgPSBlZGl0b3JTdGF0ZS5nZXRCbG9ja1RyZWUoYW5jaG9yQmxvY2tLZXkpO1xuICB2YXIgYW5jaG9yTGVhZiA9IGFuY2hvckxlYWZCbG9ja1RyZWUgJiYgYW5jaG9yTGVhZkJsb2NrVHJlZS5nZXRJbihbYW5jaG9yUGF0aC5kZWNvcmF0b3JLZXksICdsZWF2ZXMnLCBhbmNob3JQYXRoLmxlYWZLZXldKTtcbiAgdmFyIGZvY3VzUGF0aCA9IERyYWZ0T2Zmc2V0S2V5LmRlY29kZShmb2N1c0tleSk7XG4gIHZhciBmb2N1c0Jsb2NrS2V5ID0gZm9jdXNQYXRoLmJsb2NrS2V5O1xuICB2YXIgZm9jdXNMZWFmQmxvY2tUcmVlID0gZWRpdG9yU3RhdGUuZ2V0QmxvY2tUcmVlKGZvY3VzQmxvY2tLZXkpO1xuICB2YXIgZm9jdXNMZWFmID0gZm9jdXNMZWFmQmxvY2tUcmVlICYmIGZvY3VzTGVhZkJsb2NrVHJlZS5nZXRJbihbZm9jdXNQYXRoLmRlY29yYXRvcktleSwgJ2xlYXZlcycsIGZvY3VzUGF0aC5sZWFmS2V5XSk7XG5cbiAgaWYgKCFhbmNob3JMZWFmIHx8ICFmb2N1c0xlYWYpIHtcbiAgICAvLyBJZiB3ZSBjYW5ub3QgbWFrZSBzZW5zZSBvZiB0aGUgdXBkYXRlZCBzZWxlY3Rpb24gc3RhdGUsIHN0aWNrIHRvIHRoZSBjdXJyZW50IG9uZS5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgKi9cbiAgICAgIGNvbnNvbGUud2FybignSW52YWxpZCBzZWxlY3Rpb24gc3RhdGUuJywgYXJndW1lbnRzLCBlZGl0b3JTdGF0ZS50b0pTKCkpO1xuICAgIH1cblxuICAgIHJldHVybiBzZWxlY3Rpb247XG4gIH1cblxuICB2YXIgYW5jaG9yTGVhZlN0YXJ0ID0gYW5jaG9yTGVhZi5nZXQoJ3N0YXJ0Jyk7XG4gIHZhciBmb2N1c0xlYWZTdGFydCA9IGZvY3VzTGVhZi5nZXQoJ3N0YXJ0Jyk7XG4gIHZhciBhbmNob3JCbG9ja09mZnNldCA9IGFuY2hvckxlYWYgPyBhbmNob3JMZWFmU3RhcnQgKyBhbmNob3JPZmZzZXQgOiBudWxsO1xuICB2YXIgZm9jdXNCbG9ja09mZnNldCA9IGZvY3VzTGVhZiA/IGZvY3VzTGVhZlN0YXJ0ICsgZm9jdXNPZmZzZXQgOiBudWxsO1xuICB2YXIgYXJlRXF1YWwgPSBzZWxlY3Rpb24uZ2V0QW5jaG9yS2V5KCkgPT09IGFuY2hvckJsb2NrS2V5ICYmIHNlbGVjdGlvbi5nZXRBbmNob3JPZmZzZXQoKSA9PT0gYW5jaG9yQmxvY2tPZmZzZXQgJiYgc2VsZWN0aW9uLmdldEZvY3VzS2V5KCkgPT09IGZvY3VzQmxvY2tLZXkgJiYgc2VsZWN0aW9uLmdldEZvY3VzT2Zmc2V0KCkgPT09IGZvY3VzQmxvY2tPZmZzZXQ7XG5cbiAgaWYgKGFyZUVxdWFsKSB7XG4gICAgcmV0dXJuIHNlbGVjdGlvbjtcbiAgfVxuXG4gIHZhciBpc0JhY2t3YXJkID0gZmFsc2U7XG5cbiAgaWYgKGFuY2hvckJsb2NrS2V5ID09PSBmb2N1c0Jsb2NrS2V5KSB7XG4gICAgdmFyIGFuY2hvckxlYWZFbmQgPSBhbmNob3JMZWFmLmdldCgnZW5kJyk7XG4gICAgdmFyIGZvY3VzTGVhZkVuZCA9IGZvY3VzTGVhZi5nZXQoJ2VuZCcpO1xuXG4gICAgaWYgKGZvY3VzTGVhZlN0YXJ0ID09PSBhbmNob3JMZWFmU3RhcnQgJiYgZm9jdXNMZWFmRW5kID09PSBhbmNob3JMZWFmRW5kKSB7XG4gICAgICBpc0JhY2t3YXJkID0gZm9jdXNPZmZzZXQgPCBhbmNob3JPZmZzZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlzQmFja3dhcmQgPSBmb2N1c0xlYWZTdGFydCA8IGFuY2hvckxlYWZTdGFydDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIHN0YXJ0S2V5ID0gZWRpdG9yU3RhdGUuZ2V0Q3VycmVudENvbnRlbnQoKS5nZXRCbG9ja01hcCgpLmtleVNlcSgpLnNraXBVbnRpbChmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuIHYgPT09IGFuY2hvckJsb2NrS2V5IHx8IHYgPT09IGZvY3VzQmxvY2tLZXk7XG4gICAgfSkuZmlyc3QoKTtcbiAgICBpc0JhY2t3YXJkID0gc3RhcnRLZXkgPT09IGZvY3VzQmxvY2tLZXk7XG4gIH1cblxuICByZXR1cm4gc2VsZWN0aW9uLm1lcmdlKHtcbiAgICBhbmNob3JLZXk6IGFuY2hvckJsb2NrS2V5LFxuICAgIGFuY2hvck9mZnNldDogYW5jaG9yQmxvY2tPZmZzZXQsXG4gICAgZm9jdXNLZXk6IGZvY3VzQmxvY2tLZXksXG4gICAgZm9jdXNPZmZzZXQ6IGZvY3VzQmxvY2tPZmZzZXQsXG4gICAgaXNCYWNrd2FyZDogaXNCYWNrd2FyZFxuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRVcGRhdGVkU2VsZWN0aW9uU3RhdGU7Il0sIm5hbWVzIjpbIkRyYWZ0T2Zmc2V0S2V5IiwicmVxdWlyZSIsIm51bGx0aHJvd3MiLCJnZXRVcGRhdGVkU2VsZWN0aW9uU3RhdGUiLCJlZGl0b3JTdGF0ZSIsImFuY2hvcktleSIsImFuY2hvck9mZnNldCIsImZvY3VzS2V5IiwiZm9jdXNPZmZzZXQiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3Rpb24iLCJwcm9jZXNzIiwiY29uc29sZSIsIndhcm4iLCJhcmd1bWVudHMiLCJ0b0pTIiwiYW5jaG9yUGF0aCIsImRlY29kZSIsImFuY2hvckJsb2NrS2V5IiwiYmxvY2tLZXkiLCJhbmNob3JMZWFmQmxvY2tUcmVlIiwiZ2V0QmxvY2tUcmVlIiwiYW5jaG9yTGVhZiIsImdldEluIiwiZGVjb3JhdG9yS2V5IiwibGVhZktleSIsImZvY3VzUGF0aCIsImZvY3VzQmxvY2tLZXkiLCJmb2N1c0xlYWZCbG9ja1RyZWUiLCJmb2N1c0xlYWYiLCJhbmNob3JMZWFmU3RhcnQiLCJnZXQiLCJmb2N1c0xlYWZTdGFydCIsImFuY2hvckJsb2NrT2Zmc2V0IiwiZm9jdXNCbG9ja09mZnNldCIsImFyZUVxdWFsIiwiZ2V0QW5jaG9yS2V5IiwiZ2V0QW5jaG9yT2Zmc2V0IiwiZ2V0Rm9jdXNLZXkiLCJnZXRGb2N1c09mZnNldCIsImlzQmFja3dhcmQiLCJhbmNob3JMZWFmRW5kIiwiZm9jdXNMZWFmRW5kIiwic3RhcnRLZXkiLCJnZXRDdXJyZW50Q29udGVudCIsImdldEJsb2NrTWFwIiwia2V5U2VxIiwic2tpcFVudGlsIiwidiIsImZpcnN0IiwibWVyZ2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getUpdatedSelectionState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getVisibleSelectionRect.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/getVisibleSelectionRect.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar getRangeBoundingClientRect = __webpack_require__(/*! ./getRangeBoundingClientRect */ \"(app-pages-browser)/./node_modules/draft-js/lib/getRangeBoundingClientRect.js\");\n/**\n * Return the bounding ClientRect for the visible DOM selection, if any.\n * In cases where there are no selected ranges or the bounding rect is\n * temporarily invalid, return null.\n *\n * When using from an iframe, you should pass the iframe window object\n */ function getVisibleSelectionRect(global) {\n    var selection = global.getSelection();\n    if (!selection.rangeCount) {\n        return null;\n    }\n    var range = selection.getRangeAt(0);\n    var boundingRect = getRangeBoundingClientRect(range);\n    var top = boundingRect.top, right = boundingRect.right, bottom = boundingRect.bottom, left = boundingRect.left; // When a re-render leads to a node being removed, the DOM selection will\n    // temporarily be placed on an ancestor node, which leads to an invalid\n    // bounding rect. Discard this state.\n    if (top === 0 && right === 0 && bottom === 0 && left === 0) {\n        return null;\n    }\n    return boundingRect;\n}\nmodule.exports = getVisibleSelectionRect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0VmlzaWJsZVNlbGVjdGlvblJlY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSw2QkFBNkJDLG1CQUFPQSxDQUFDLG1IQUE4QjtBQUN2RTs7Ozs7O0NBTUMsR0FHRCxTQUFTQyx3QkFBd0JDLE1BQU07SUFDckMsSUFBSUMsWUFBWUQsT0FBT0UsWUFBWTtJQUVuQyxJQUFJLENBQUNELFVBQVVFLFVBQVUsRUFBRTtRQUN6QixPQUFPO0lBQ1Q7SUFFQSxJQUFJQyxRQUFRSCxVQUFVSSxVQUFVLENBQUM7SUFDakMsSUFBSUMsZUFBZVQsMkJBQTJCTztJQUM5QyxJQUFJRyxNQUFNRCxhQUFhQyxHQUFHLEVBQ3RCQyxRQUFRRixhQUFhRSxLQUFLLEVBQzFCQyxTQUFTSCxhQUFhRyxNQUFNLEVBQzVCQyxPQUFPSixhQUFhSSxJQUFJLEVBQUUseUVBQXlFO0lBQ3ZHLHVFQUF1RTtJQUN2RSxxQ0FBcUM7SUFFckMsSUFBSUgsUUFBUSxLQUFLQyxVQUFVLEtBQUtDLFdBQVcsS0FBS0MsU0FBUyxHQUFHO1FBQzFELE9BQU87SUFDVDtJQUVBLE9BQU9KO0FBQ1Q7QUFFQUssT0FBT0MsT0FBTyxHQUFHYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldFZpc2libGVTZWxlY3Rpb25SZWN0LmpzPzMxMmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGdldFJhbmdlQm91bmRpbmdDbGllbnRSZWN0ID0gcmVxdWlyZShcIi4vZ2V0UmFuZ2VCb3VuZGluZ0NsaWVudFJlY3RcIik7XG4vKipcbiAqIFJldHVybiB0aGUgYm91bmRpbmcgQ2xpZW50UmVjdCBmb3IgdGhlIHZpc2libGUgRE9NIHNlbGVjdGlvbiwgaWYgYW55LlxuICogSW4gY2FzZXMgd2hlcmUgdGhlcmUgYXJlIG5vIHNlbGVjdGVkIHJhbmdlcyBvciB0aGUgYm91bmRpbmcgcmVjdCBpc1xuICogdGVtcG9yYXJpbHkgaW52YWxpZCwgcmV0dXJuIG51bGwuXG4gKlxuICogV2hlbiB1c2luZyBmcm9tIGFuIGlmcmFtZSwgeW91IHNob3VsZCBwYXNzIHRoZSBpZnJhbWUgd2luZG93IG9iamVjdFxuICovXG5cblxuZnVuY3Rpb24gZ2V0VmlzaWJsZVNlbGVjdGlvblJlY3QoZ2xvYmFsKSB7XG4gIHZhciBzZWxlY3Rpb24gPSBnbG9iYWwuZ2V0U2VsZWN0aW9uKCk7XG5cbiAgaWYgKCFzZWxlY3Rpb24ucmFuZ2VDb3VudCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIHJhbmdlID0gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCk7XG4gIHZhciBib3VuZGluZ1JlY3QgPSBnZXRSYW5nZUJvdW5kaW5nQ2xpZW50UmVjdChyYW5nZSk7XG4gIHZhciB0b3AgPSBib3VuZGluZ1JlY3QudG9wLFxuICAgICAgcmlnaHQgPSBib3VuZGluZ1JlY3QucmlnaHQsXG4gICAgICBib3R0b20gPSBib3VuZGluZ1JlY3QuYm90dG9tLFxuICAgICAgbGVmdCA9IGJvdW5kaW5nUmVjdC5sZWZ0OyAvLyBXaGVuIGEgcmUtcmVuZGVyIGxlYWRzIHRvIGEgbm9kZSBiZWluZyByZW1vdmVkLCB0aGUgRE9NIHNlbGVjdGlvbiB3aWxsXG4gIC8vIHRlbXBvcmFyaWx5IGJlIHBsYWNlZCBvbiBhbiBhbmNlc3RvciBub2RlLCB3aGljaCBsZWFkcyB0byBhbiBpbnZhbGlkXG4gIC8vIGJvdW5kaW5nIHJlY3QuIERpc2NhcmQgdGhpcyBzdGF0ZS5cblxuICBpZiAodG9wID09PSAwICYmIHJpZ2h0ID09PSAwICYmIGJvdHRvbSA9PT0gMCAmJiBsZWZ0ID09PSAwKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gYm91bmRpbmdSZWN0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFZpc2libGVTZWxlY3Rpb25SZWN0OyJdLCJuYW1lcyI6WyJnZXRSYW5nZUJvdW5kaW5nQ2xpZW50UmVjdCIsInJlcXVpcmUiLCJnZXRWaXNpYmxlU2VsZWN0aW9uUmVjdCIsImdsb2JhbCIsInNlbGVjdGlvbiIsImdldFNlbGVjdGlvbiIsInJhbmdlQ291bnQiLCJyYW5nZSIsImdldFJhbmdlQXQiLCJib3VuZGluZ1JlY3QiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getVisibleSelectionRect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/getWindowForNode.js":
/*!*******************************************************!*\
  !*** ./node_modules/draft-js/lib/getWindowForNode.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ function getWindowForNode(node) {\n    if (!node || !node.ownerDocument || !node.ownerDocument.defaultView) {\n        return window;\n    }\n    return node.ownerDocument.defaultView;\n}\nmodule.exports = getWindowForNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2V0V2luZG93Rm9yTm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7Ozs7Q0FTQyxHQUNELFNBQVNBLGlCQUFpQkMsSUFBSTtJQUM1QixJQUFJLENBQUNBLFFBQVEsQ0FBQ0EsS0FBS0MsYUFBYSxJQUFJLENBQUNELEtBQUtDLGFBQWEsQ0FBQ0MsV0FBVyxFQUFFO1FBQ25FLE9BQU9DO0lBQ1Q7SUFFQSxPQUFPSCxLQUFLQyxhQUFhLENBQUNDLFdBQVc7QUFDdkM7QUFFQUUsT0FBT0MsT0FBTyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dldFdpbmRvd0Zvck5vZGUuanM/NmZlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbmZ1bmN0aW9uIGdldFdpbmRvd0Zvck5vZGUobm9kZSkge1xuICBpZiAoIW5vZGUgfHwgIW5vZGUub3duZXJEb2N1bWVudCB8fCAhbm9kZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuXG4gIHJldHVybiBub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0V2luZG93Rm9yTm9kZTsiXSwibmFtZXMiOlsiZ2V0V2luZG93Rm9yTm9kZSIsIm5vZGUiLCJvd25lckRvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJ3aW5kb3ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/getWindowForNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/gkx.js":
/*!******************************************!*\
  !*** ./node_modules/draft-js/lib/gkx.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */ \nmodule.exports = function(name) {\n    if ( true && window.__DRAFT_GKX) {\n        return !!window.__DRAFT_GKX[name];\n    }\n    return false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvZ2t4LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDLEdBQ0Q7QUFFQUEsT0FBT0MsT0FBTyxHQUFHLFNBQVVDLElBQUk7SUFDN0IsSUFBSSxLQUFrQixJQUFlQyxPQUFPQyxXQUFXLEVBQUU7UUFDdkQsT0FBTyxDQUFDLENBQUNELE9BQU9DLFdBQVcsQ0FBQ0YsS0FBSztJQUNuQztJQUVBLE9BQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2dreC5qcz8wNTRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKi9cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Ll9fRFJBRlRfR0tYKSB7XG4gICAgcmV0dXJuICEhd2luZG93Ll9fRFJBRlRfR0tYW25hbWVdO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufTsiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJ3aW5kb3ciLCJfX0RSQUZUX0dLWCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/insertFragmentIntoContentState.js":
/*!*********************************************************************!*\
  !*** ./node_modules/draft-js/lib/insertFragmentIntoContentState.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar BlockMapBuilder = __webpack_require__(/*! ./BlockMapBuilder */ \"(app-pages-browser)/./node_modules/draft-js/lib/BlockMapBuilder.js\");\nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar insertIntoList = __webpack_require__(/*! ./insertIntoList */ \"(app-pages-browser)/./node_modules/draft-js/lib/insertIntoList.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar randomizeBlockMapKeys = __webpack_require__(/*! ./randomizeBlockMapKeys */ \"(app-pages-browser)/./node_modules/draft-js/lib/randomizeBlockMapKeys.js\");\nvar List = Immutable.List;\nvar updateExistingBlock = function updateExistingBlock(contentState, selectionState, blockMap, fragmentBlock, targetKey, targetOffset) {\n    var mergeBlockData = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : \"REPLACE_WITH_NEW_DATA\";\n    var targetBlock = blockMap.get(targetKey);\n    var text = targetBlock.getText();\n    var chars = targetBlock.getCharacterList();\n    var finalKey = targetKey;\n    var finalOffset = targetOffset + fragmentBlock.getText().length;\n    var data = null;\n    switch(mergeBlockData){\n        case \"MERGE_OLD_DATA_TO_NEW_DATA\":\n            data = fragmentBlock.getData().merge(targetBlock.getData());\n            break;\n        case \"REPLACE_WITH_NEW_DATA\":\n            data = fragmentBlock.getData();\n            break;\n    }\n    var type = targetBlock.getType();\n    if (text && type === \"unstyled\") {\n        type = fragmentBlock.getType();\n    }\n    var newBlock = targetBlock.merge({\n        text: text.slice(0, targetOffset) + fragmentBlock.getText() + text.slice(targetOffset),\n        characterList: insertIntoList(chars, fragmentBlock.getCharacterList(), targetOffset),\n        type: type,\n        data: data\n    });\n    return contentState.merge({\n        blockMap: blockMap.set(targetKey, newBlock),\n        selectionBefore: selectionState,\n        selectionAfter: selectionState.merge({\n            anchorKey: finalKey,\n            anchorOffset: finalOffset,\n            focusKey: finalKey,\n            focusOffset: finalOffset,\n            isBackward: false\n        })\n    });\n};\n/**\n * Appends text/characterList from the fragment first block to\n * target block.\n */ var updateHead = function updateHead(block, targetOffset, fragment) {\n    var text = block.getText();\n    var chars = block.getCharacterList(); // Modify head portion of block.\n    var headText = text.slice(0, targetOffset);\n    var headCharacters = chars.slice(0, targetOffset);\n    var appendToHead = fragment.first();\n    return block.merge({\n        text: headText + appendToHead.getText(),\n        characterList: headCharacters.concat(appendToHead.getCharacterList()),\n        type: headText ? block.getType() : appendToHead.getType(),\n        data: appendToHead.getData()\n    });\n};\n/**\n * Appends offset text/characterList from the target block to the last\n * fragment block.\n */ var updateTail = function updateTail(block, targetOffset, fragment) {\n    // Modify tail portion of block.\n    var text = block.getText();\n    var chars = block.getCharacterList(); // Modify head portion of block.\n    var blockSize = text.length;\n    var tailText = text.slice(targetOffset, blockSize);\n    var tailCharacters = chars.slice(targetOffset, blockSize);\n    var prependToTail = fragment.last();\n    return prependToTail.merge({\n        text: prependToTail.getText() + tailText,\n        characterList: prependToTail.getCharacterList().concat(tailCharacters),\n        data: prependToTail.getData()\n    });\n};\nvar getRootBlocks = function getRootBlocks(block, blockMap) {\n    var headKey = block.getKey();\n    var rootBlock = block;\n    var rootBlocks = []; // sometimes the fragment head block will not be part of the blockMap itself this can happen when\n    // the fragment head is used to update the target block, however when this does not happen we need\n    // to make sure that we include it on the rootBlocks since the first block of a fragment is always a\n    // fragment root block\n    if (blockMap.get(headKey)) {\n        rootBlocks.push(headKey);\n    }\n    while(rootBlock && rootBlock.getNextSiblingKey()){\n        var lastSiblingKey = rootBlock.getNextSiblingKey();\n        if (!lastSiblingKey) {\n            break;\n        }\n        rootBlocks.push(lastSiblingKey);\n        rootBlock = blockMap.get(lastSiblingKey);\n    }\n    return rootBlocks;\n};\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlockMap, targetBlock, fragmentHeadBlock) {\n    return blockMap.withMutations(function(blockMapState) {\n        var targetKey = targetBlock.getKey();\n        var headKey = fragmentHeadBlock.getKey();\n        var targetNextKey = targetBlock.getNextSiblingKey();\n        var targetParentKey = targetBlock.getParentKey();\n        var fragmentRootBlocks = getRootBlocks(fragmentHeadBlock, blockMap);\n        var lastRootFragmentBlockKey = fragmentRootBlocks[fragmentRootBlocks.length - 1];\n        if (blockMapState.get(headKey)) {\n            // update the fragment head when it is part of the blockMap otherwise\n            blockMapState.setIn([\n                targetKey,\n                \"nextSibling\"\n            ], headKey);\n            blockMapState.setIn([\n                headKey,\n                \"prevSibling\"\n            ], targetKey);\n        } else {\n            // update the target block that had the fragment head contents merged into it\n            blockMapState.setIn([\n                targetKey,\n                \"nextSibling\"\n            ], fragmentHeadBlock.getNextSiblingKey());\n            blockMapState.setIn([\n                fragmentHeadBlock.getNextSiblingKey(),\n                \"prevSibling\"\n            ], targetKey);\n        } // update the last root block fragment\n        blockMapState.setIn([\n            lastRootFragmentBlockKey,\n            \"nextSibling\"\n        ], targetNextKey); // update the original target next block\n        if (targetNextKey) {\n            blockMapState.setIn([\n                targetNextKey,\n                \"prevSibling\"\n            ], lastRootFragmentBlockKey);\n        } // update fragment parent links\n        fragmentRootBlocks.forEach(function(blockKey) {\n            return blockMapState.setIn([\n                blockKey,\n                \"parent\"\n            ], targetParentKey);\n        }); // update targetBlock parent child links\n        if (targetParentKey) {\n            var targetParent = blockMap.get(targetParentKey);\n            var originalTargetParentChildKeys = targetParent.getChildKeys();\n            var targetBlockIndex = originalTargetParentChildKeys.indexOf(targetKey);\n            var insertionIndex = targetBlockIndex + 1;\n            var newChildrenKeysArray = originalTargetParentChildKeys.toArray(); // insert fragment children\n            newChildrenKeysArray.splice.apply(newChildrenKeysArray, [\n                insertionIndex,\n                0\n            ].concat(fragmentRootBlocks));\n            blockMapState.setIn([\n                targetParentKey,\n                \"children\"\n            ], List(newChildrenKeysArray));\n        }\n    });\n};\nvar insertFragment = function insertFragment(contentState, selectionState, blockMap, fragment, targetKey, targetOffset) {\n    var isTreeBasedBlockMap = blockMap.first() instanceof ContentBlockNode;\n    var newBlockArr = [];\n    var fragmentSize = fragment.size;\n    var target = blockMap.get(targetKey);\n    var head = fragment.first();\n    var tail = fragment.last();\n    var finalOffset = tail.getLength();\n    var finalKey = tail.getKey();\n    var shouldNotUpdateFromFragmentBlock = isTreeBasedBlockMap && (!target.getChildKeys().isEmpty() || !head.getChildKeys().isEmpty());\n    blockMap.forEach(function(block, blockKey) {\n        if (blockKey !== targetKey) {\n            newBlockArr.push(block);\n            return;\n        }\n        if (shouldNotUpdateFromFragmentBlock) {\n            newBlockArr.push(block);\n        } else {\n            newBlockArr.push(updateHead(block, targetOffset, fragment));\n        } // Insert fragment blocks after the head and before the tail.\n        fragment // when we are updating the target block with the head fragment block we skip the first fragment\n        // head since its contents have already been merged with the target block otherwise we include\n        // the whole fragment\n        .slice(shouldNotUpdateFromFragmentBlock ? 0 : 1, fragmentSize - 1).forEach(function(fragmentBlock) {\n            return newBlockArr.push(fragmentBlock);\n        }); // update tail\n        newBlockArr.push(updateTail(block, targetOffset, fragment));\n    });\n    var updatedBlockMap = BlockMapBuilder.createFromArray(newBlockArr);\n    if (isTreeBasedBlockMap) {\n        updatedBlockMap = updateBlockMapLinks(updatedBlockMap, blockMap, target, head);\n    }\n    return contentState.merge({\n        blockMap: updatedBlockMap,\n        selectionBefore: selectionState,\n        selectionAfter: selectionState.merge({\n            anchorKey: finalKey,\n            anchorOffset: finalOffset,\n            focusKey: finalKey,\n            focusOffset: finalOffset,\n            isBackward: false\n        })\n    });\n};\nvar insertFragmentIntoContentState = function insertFragmentIntoContentState(contentState, selectionState, fragmentBlockMap) {\n    var mergeBlockData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"REPLACE_WITH_NEW_DATA\";\n    !selectionState.isCollapsed() ?  true ? invariant(false, \"`insertFragment` should only be called with a collapsed selection state.\") : 0 : void 0;\n    var blockMap = contentState.getBlockMap();\n    var fragment = randomizeBlockMapKeys(fragmentBlockMap);\n    var targetKey = selectionState.getStartKey();\n    var targetOffset = selectionState.getStartOffset();\n    var targetBlock = blockMap.get(targetKey);\n    if (targetBlock instanceof ContentBlockNode) {\n        !targetBlock.getChildKeys().isEmpty() ?  true ? invariant(false, \"`insertFragment` should not be called when a container node is selected.\") : 0 : void 0;\n    } // When we insert a fragment with a single block we simply update the target block\n    // with the contents of the inserted fragment block\n    if (fragment.size === 1) {\n        return updateExistingBlock(contentState, selectionState, blockMap, fragment.first(), targetKey, targetOffset, mergeBlockData);\n    }\n    return insertFragment(contentState, selectionState, blockMap, fragment, targetKey, targetOffset);\n};\nmodule.exports = insertFragmentIntoContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/insertFragmentIntoContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/insertIntoList.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/insertIntoList.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n/**\n * Maintain persistence for target list when appending and prepending.\n */ function insertIntoList(targetListArg, toInsert, offset) {\n    var targetList = targetListArg;\n    if (offset === targetList.count()) {\n        toInsert.forEach(function(c) {\n            targetList = targetList.push(c);\n        });\n    } else if (offset === 0) {\n        toInsert.reverse().forEach(function(c) {\n            targetList = targetList.unshift(c);\n        });\n    } else {\n        var head = targetList.slice(0, offset);\n        var tail = targetList.slice(offset);\n        targetList = head.concat(toInsert, tail).toList();\n    }\n    return targetList;\n}\nmodule.exports = insertIntoList;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaW5zZXJ0SW50b0xpc3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQTs7Q0FFQyxHQUNELFNBQVNBLGVBQWVDLGFBQWEsRUFBRUMsUUFBUSxFQUFFQyxNQUFNO0lBQ3JELElBQUlDLGFBQWFIO0lBRWpCLElBQUlFLFdBQVdDLFdBQVdDLEtBQUssSUFBSTtRQUNqQ0gsU0FBU0ksT0FBTyxDQUFDLFNBQVVDLENBQUM7WUFDMUJILGFBQWFBLFdBQVdJLElBQUksQ0FBQ0Q7UUFDL0I7SUFDRixPQUFPLElBQUlKLFdBQVcsR0FBRztRQUN2QkQsU0FBU08sT0FBTyxHQUFHSCxPQUFPLENBQUMsU0FBVUMsQ0FBQztZQUNwQ0gsYUFBYUEsV0FBV00sT0FBTyxDQUFDSDtRQUNsQztJQUNGLE9BQU87UUFDTCxJQUFJSSxPQUFPUCxXQUFXUSxLQUFLLENBQUMsR0FBR1Q7UUFDL0IsSUFBSVUsT0FBT1QsV0FBV1EsS0FBSyxDQUFDVDtRQUM1QkMsYUFBYU8sS0FBS0csTUFBTSxDQUFDWixVQUFVVyxNQUFNRSxNQUFNO0lBQ2pEO0lBRUEsT0FBT1g7QUFDVDtBQUVBWSxPQUFPQyxPQUFPLEdBQUdqQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2luc2VydEludG9MaXN0LmpzP2YwZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNYWludGFpbiBwZXJzaXN0ZW5jZSBmb3IgdGFyZ2V0IGxpc3Qgd2hlbiBhcHBlbmRpbmcgYW5kIHByZXBlbmRpbmcuXG4gKi9cbmZ1bmN0aW9uIGluc2VydEludG9MaXN0KHRhcmdldExpc3RBcmcsIHRvSW5zZXJ0LCBvZmZzZXQpIHtcbiAgdmFyIHRhcmdldExpc3QgPSB0YXJnZXRMaXN0QXJnO1xuXG4gIGlmIChvZmZzZXQgPT09IHRhcmdldExpc3QuY291bnQoKSkge1xuICAgIHRvSW5zZXJ0LmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICAgIHRhcmdldExpc3QgPSB0YXJnZXRMaXN0LnB1c2goYyk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAob2Zmc2V0ID09PSAwKSB7XG4gICAgdG9JbnNlcnQucmV2ZXJzZSgpLmZvckVhY2goZnVuY3Rpb24gKGMpIHtcbiAgICAgIHRhcmdldExpc3QgPSB0YXJnZXRMaXN0LnVuc2hpZnQoYyk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGhlYWQgPSB0YXJnZXRMaXN0LnNsaWNlKDAsIG9mZnNldCk7XG4gICAgdmFyIHRhaWwgPSB0YXJnZXRMaXN0LnNsaWNlKG9mZnNldCk7XG4gICAgdGFyZ2V0TGlzdCA9IGhlYWQuY29uY2F0KHRvSW5zZXJ0LCB0YWlsKS50b0xpc3QoKTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXRMaXN0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEludG9MaXN0OyJdLCJuYW1lcyI6WyJpbnNlcnRJbnRvTGlzdCIsInRhcmdldExpc3RBcmciLCJ0b0luc2VydCIsIm9mZnNldCIsInRhcmdldExpc3QiLCJjb3VudCIsImZvckVhY2giLCJjIiwicHVzaCIsInJldmVyc2UiLCJ1bnNoaWZ0IiwiaGVhZCIsInNsaWNlIiwidGFpbCIsImNvbmNhdCIsInRvTGlzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/insertIntoList.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/insertTextIntoContentState.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/insertTextIntoContentState.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar insertIntoList = __webpack_require__(/*! ./insertIntoList */ \"(app-pages-browser)/./node_modules/draft-js/lib/insertIntoList.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar Repeat = Immutable.Repeat;\nfunction insertTextIntoContentState(contentState, selectionState, text, characterMetadata) {\n    !selectionState.isCollapsed() ?  true ? invariant(false, \"`insertText` should only be called with a collapsed range.\") : 0 : void 0;\n    var len = null;\n    if (text != null) {\n        len = text.length;\n    }\n    if (len == null || len === 0) {\n        return contentState;\n    }\n    var blockMap = contentState.getBlockMap();\n    var key = selectionState.getStartKey();\n    var offset = selectionState.getStartOffset();\n    var block = blockMap.get(key);\n    var blockText = block.getText();\n    var newBlock = block.merge({\n        text: blockText.slice(0, offset) + text + blockText.slice(offset, block.getLength()),\n        characterList: insertIntoList(block.getCharacterList(), Repeat(characterMetadata, len).toList(), offset)\n    });\n    var newOffset = offset + len;\n    return contentState.merge({\n        blockMap: blockMap.set(key, newBlock),\n        selectionAfter: selectionState.merge({\n            anchorOffset: newOffset,\n            focusOffset: newOffset\n        })\n    });\n}\nmodule.exports = insertTextIntoContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaW5zZXJ0VGV4dEludG9Db250ZW50U3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyx1R0FBVztBQUVuQyxJQUFJQyxpQkFBaUJELG1CQUFPQSxDQUFDLDJGQUFrQjtBQUUvQyxJQUFJRSxZQUFZRixtQkFBT0EsQ0FBQyxvRkFBb0I7QUFFNUMsSUFBSUcsU0FBU0osVUFBVUksTUFBTTtBQUU3QixTQUFTQywyQkFBMkJDLFlBQVksRUFBRUMsY0FBYyxFQUFFQyxJQUFJLEVBQUVDLGlCQUFpQjtJQUN2RixDQUFDRixlQUFlRyxXQUFXLEtBQUtDLEtBQXFDLEdBQUdSLFVBQVUsT0FBTyxnRUFBZ0VBLENBQWdCLEdBQUcsS0FBSztJQUNqTCxJQUFJUyxNQUFNO0lBRVYsSUFBSUosUUFBUSxNQUFNO1FBQ2hCSSxNQUFNSixLQUFLSyxNQUFNO0lBQ25CO0lBRUEsSUFBSUQsT0FBTyxRQUFRQSxRQUFRLEdBQUc7UUFDNUIsT0FBT047SUFDVDtJQUVBLElBQUlRLFdBQVdSLGFBQWFTLFdBQVc7SUFDdkMsSUFBSUMsTUFBTVQsZUFBZVUsV0FBVztJQUNwQyxJQUFJQyxTQUFTWCxlQUFlWSxjQUFjO0lBQzFDLElBQUlDLFFBQVFOLFNBQVNPLEdBQUcsQ0FBQ0w7SUFDekIsSUFBSU0sWUFBWUYsTUFBTUcsT0FBTztJQUM3QixJQUFJQyxXQUFXSixNQUFNSyxLQUFLLENBQUM7UUFDekJqQixNQUFNYyxVQUFVSSxLQUFLLENBQUMsR0FBR1IsVUFBVVYsT0FBT2MsVUFBVUksS0FBSyxDQUFDUixRQUFRRSxNQUFNTyxTQUFTO1FBQ2pGQyxlQUFlMUIsZUFBZWtCLE1BQU1TLGdCQUFnQixJQUFJekIsT0FBT0ssbUJBQW1CRyxLQUFLa0IsTUFBTSxJQUFJWjtJQUNuRztJQUNBLElBQUlhLFlBQVliLFNBQVNOO0lBQ3pCLE9BQU9OLGFBQWFtQixLQUFLLENBQUM7UUFDeEJYLFVBQVVBLFNBQVNrQixHQUFHLENBQUNoQixLQUFLUTtRQUM1QlMsZ0JBQWdCMUIsZUFBZWtCLEtBQUssQ0FBQztZQUNuQ1MsY0FBY0g7WUFDZEksYUFBYUo7UUFDZjtJQUNGO0FBQ0Y7QUFFQUssT0FBT0MsT0FBTyxHQUFHaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9pbnNlcnRUZXh0SW50b0NvbnRlbnRTdGF0ZS5qcz81NWRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBJbW11dGFibGUgPSByZXF1aXJlKFwiaW1tdXRhYmxlXCIpO1xuXG52YXIgaW5zZXJ0SW50b0xpc3QgPSByZXF1aXJlKFwiLi9pbnNlcnRJbnRvTGlzdFwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCJmYmpzL2xpYi9pbnZhcmlhbnRcIik7XG5cbnZhciBSZXBlYXQgPSBJbW11dGFibGUuUmVwZWF0O1xuXG5mdW5jdGlvbiBpbnNlcnRUZXh0SW50b0NvbnRlbnRTdGF0ZShjb250ZW50U3RhdGUsIHNlbGVjdGlvblN0YXRlLCB0ZXh0LCBjaGFyYWN0ZXJNZXRhZGF0YSkge1xuICAhc2VsZWN0aW9uU3RhdGUuaXNDb2xsYXBzZWQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ2BpbnNlcnRUZXh0YCBzaG91bGQgb25seSBiZSBjYWxsZWQgd2l0aCBhIGNvbGxhcHNlZCByYW5nZS4nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBsZW4gPSBudWxsO1xuXG4gIGlmICh0ZXh0ICE9IG51bGwpIHtcbiAgICBsZW4gPSB0ZXh0Lmxlbmd0aDtcbiAgfVxuXG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPT09IDApIHtcbiAgICByZXR1cm4gY29udGVudFN0YXRlO1xuICB9XG5cbiAgdmFyIGJsb2NrTWFwID0gY29udGVudFN0YXRlLmdldEJsb2NrTWFwKCk7XG4gIHZhciBrZXkgPSBzZWxlY3Rpb25TdGF0ZS5nZXRTdGFydEtleSgpO1xuICB2YXIgb2Zmc2V0ID0gc2VsZWN0aW9uU3RhdGUuZ2V0U3RhcnRPZmZzZXQoKTtcbiAgdmFyIGJsb2NrID0gYmxvY2tNYXAuZ2V0KGtleSk7XG4gIHZhciBibG9ja1RleHQgPSBibG9jay5nZXRUZXh0KCk7XG4gIHZhciBuZXdCbG9jayA9IGJsb2NrLm1lcmdlKHtcbiAgICB0ZXh0OiBibG9ja1RleHQuc2xpY2UoMCwgb2Zmc2V0KSArIHRleHQgKyBibG9ja1RleHQuc2xpY2Uob2Zmc2V0LCBibG9jay5nZXRMZW5ndGgoKSksXG4gICAgY2hhcmFjdGVyTGlzdDogaW5zZXJ0SW50b0xpc3QoYmxvY2suZ2V0Q2hhcmFjdGVyTGlzdCgpLCBSZXBlYXQoY2hhcmFjdGVyTWV0YWRhdGEsIGxlbikudG9MaXN0KCksIG9mZnNldClcbiAgfSk7XG4gIHZhciBuZXdPZmZzZXQgPSBvZmZzZXQgKyBsZW47XG4gIHJldHVybiBjb250ZW50U3RhdGUubWVyZ2Uoe1xuICAgIGJsb2NrTWFwOiBibG9ja01hcC5zZXQoa2V5LCBuZXdCbG9jayksXG4gICAgc2VsZWN0aW9uQWZ0ZXI6IHNlbGVjdGlvblN0YXRlLm1lcmdlKHtcbiAgICAgIGFuY2hvck9mZnNldDogbmV3T2Zmc2V0LFxuICAgICAgZm9jdXNPZmZzZXQ6IG5ld09mZnNldFxuICAgIH0pXG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFRleHRJbnRvQ29udGVudFN0YXRlOyJdLCJuYW1lcyI6WyJJbW11dGFibGUiLCJyZXF1aXJlIiwiaW5zZXJ0SW50b0xpc3QiLCJpbnZhcmlhbnQiLCJSZXBlYXQiLCJpbnNlcnRUZXh0SW50b0NvbnRlbnRTdGF0ZSIsImNvbnRlbnRTdGF0ZSIsInNlbGVjdGlvblN0YXRlIiwidGV4dCIsImNoYXJhY3Rlck1ldGFkYXRhIiwiaXNDb2xsYXBzZWQiLCJwcm9jZXNzIiwibGVuIiwibGVuZ3RoIiwiYmxvY2tNYXAiLCJnZXRCbG9ja01hcCIsImtleSIsImdldFN0YXJ0S2V5Iiwib2Zmc2V0IiwiZ2V0U3RhcnRPZmZzZXQiLCJibG9jayIsImdldCIsImJsb2NrVGV4dCIsImdldFRleHQiLCJuZXdCbG9jayIsIm1lcmdlIiwic2xpY2UiLCJnZXRMZW5ndGgiLCJjaGFyYWN0ZXJMaXN0IiwiZ2V0Q2hhcmFjdGVyTGlzdCIsInRvTGlzdCIsIm5ld09mZnNldCIsInNldCIsInNlbGVjdGlvbkFmdGVyIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNPZmZzZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/insertTextIntoContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isElement.js":
/*!************************************************!*\
  !*** ./node_modules/draft-js/lib/isElement.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ function isElement(node) {\n    if (!node || !node.ownerDocument) {\n        return false;\n    }\n    return node.nodeType === Node.ELEMENT_NODE;\n}\nmodule.exports = isElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNFbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0EsVUFBVUMsSUFBSTtJQUNyQixJQUFJLENBQUNBLFFBQVEsQ0FBQ0EsS0FBS0MsYUFBYSxFQUFFO1FBQ2hDLE9BQU87SUFDVDtJQUVBLE9BQU9ELEtBQUtFLFFBQVEsS0FBS0MsS0FBS0MsWUFBWTtBQUM1QztBQUVBQyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNFbGVtZW50LmpzPzNmM2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG5mdW5jdGlvbiBpc0VsZW1lbnQobm9kZSkge1xuICBpZiAoIW5vZGUgfHwgIW5vZGUub3duZXJEb2N1bWVudCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBub2RlLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0VsZW1lbnQ7Il0sIm5hbWVzIjpbImlzRWxlbWVudCIsIm5vZGUiLCJvd25lckRvY3VtZW50Iiwibm9kZVR5cGUiLCJOb2RlIiwiRUxFTUVOVF9OT0RFIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isEventHandled.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/isEventHandled.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \n/**\n * Utility method for determining whether or not the value returned\n * from a handler indicates that it was handled.\n */ function isEventHandled(value) {\n    return value === \"handled\" || value === true;\n}\nmodule.exports = isEventHandled;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNFdmVudEhhbmRsZWQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQTs7O0NBR0MsR0FDRCxTQUFTQSxlQUFlQyxLQUFLO0lBQzNCLE9BQU9BLFVBQVUsYUFBYUEsVUFBVTtBQUMxQztBQUVBQyxPQUFPQyxPQUFPLEdBQUdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNFdmVudEhhbmRsZWQuanM/ODdkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFV0aWxpdHkgbWV0aG9kIGZvciBkZXRlcm1pbmluZyB3aGV0aGVyIG9yIG5vdCB0aGUgdmFsdWUgcmV0dXJuZWRcbiAqIGZyb20gYSBoYW5kbGVyIGluZGljYXRlcyB0aGF0IGl0IHdhcyBoYW5kbGVkLlxuICovXG5mdW5jdGlvbiBpc0V2ZW50SGFuZGxlZCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09ICdoYW5kbGVkJyB8fCB2YWx1ZSA9PT0gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0V2ZW50SGFuZGxlZDsiXSwibmFtZXMiOlsiaXNFdmVudEhhbmRsZWQiLCJ2YWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isEventHandled.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isHTMLAnchorElement.js":
/*!**********************************************************!*\
  !*** ./node_modules/draft-js/lib/isHTMLAnchorElement.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ var isElement = __webpack_require__(/*! ./isElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\");\nfunction isHTMLAnchorElement(node) {\n    if (!node || !node.ownerDocument) {\n        return false;\n    }\n    return isElement(node) && node.nodeName === \"A\";\n}\nmodule.exports = isHTMLAnchorElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNIVE1MQW5jaG9yRWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7Ozs7Q0FTQyxHQUNELElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGlGQUFhO0FBRXJDLFNBQVNDLG9CQUFvQkMsSUFBSTtJQUMvQixJQUFJLENBQUNBLFFBQVEsQ0FBQ0EsS0FBS0MsYUFBYSxFQUFFO1FBQ2hDLE9BQU87SUFDVDtJQUVBLE9BQU9KLFVBQVVHLFNBQVNBLEtBQUtFLFFBQVEsS0FBSztBQUM5QztBQUVBQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNIVE1MQW5jaG9yRWxlbWVudC5qcz82NTJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xudmFyIGlzRWxlbWVudCA9IHJlcXVpcmUoXCIuL2lzRWxlbWVudFwiKTtcblxuZnVuY3Rpb24gaXNIVE1MQW5jaG9yRWxlbWVudChub2RlKSB7XG4gIGlmICghbm9kZSB8fCAhbm9kZS5vd25lckRvY3VtZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBub2RlLm5vZGVOYW1lID09PSAnQSc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNIVE1MQW5jaG9yRWxlbWVudDsiXSwibmFtZXMiOlsiaXNFbGVtZW50IiwicmVxdWlyZSIsImlzSFRNTEFuY2hvckVsZW1lbnQiLCJub2RlIiwib3duZXJEb2N1bWVudCIsIm5vZGVOYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isHTMLAnchorElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isHTMLBRElement.js":
/*!******************************************************!*\
  !*** ./node_modules/draft-js/lib/isHTMLBRElement.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ var isElement = __webpack_require__(/*! ./isElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\");\nfunction isHTMLBRElement(node) {\n    if (!node || !node.ownerDocument) {\n        return false;\n    }\n    return isElement(node) && node.nodeName === \"BR\";\n}\nmodule.exports = isHTMLBRElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNIVE1MQlJFbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7OztDQVNDLEdBQ0QsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsaUZBQWE7QUFFckMsU0FBU0MsZ0JBQWdCQyxJQUFJO0lBQzNCLElBQUksQ0FBQ0EsUUFBUSxDQUFDQSxLQUFLQyxhQUFhLEVBQUU7UUFDaEMsT0FBTztJQUNUO0lBRUEsT0FBT0osVUFBVUcsU0FBU0EsS0FBS0UsUUFBUSxLQUFLO0FBQzlDO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9pc0hUTUxCUkVsZW1lbnQuanM/ODQxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbnZhciBpc0VsZW1lbnQgPSByZXF1aXJlKFwiLi9pc0VsZW1lbnRcIik7XG5cbmZ1bmN0aW9uIGlzSFRNTEJSRWxlbWVudChub2RlKSB7XG4gIGlmICghbm9kZSB8fCAhbm9kZS5vd25lckRvY3VtZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBub2RlLm5vZGVOYW1lID09PSAnQlInO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzSFRNTEJSRWxlbWVudDsiXSwibmFtZXMiOlsiaXNFbGVtZW50IiwicmVxdWlyZSIsImlzSFRNTEJSRWxlbWVudCIsIm5vZGUiLCJvd25lckRvY3VtZW50Iiwibm9kZU5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isHTMLBRElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isHTMLElement.js":
/*!****************************************************!*\
  !*** ./node_modules/draft-js/lib/isHTMLElement.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ function isHTMLElement(node) {\n    if (!node || !node.ownerDocument) {\n        return false;\n    }\n    if (!node.ownerDocument.defaultView) {\n        return node instanceof HTMLElement;\n    }\n    if (node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        return true;\n    }\n    return false;\n}\nmodule.exports = isHTMLElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNIVE1MRWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7Ozs7Q0FTQyxHQUNELFNBQVNBLGNBQWNDLElBQUk7SUFDekIsSUFBSSxDQUFDQSxRQUFRLENBQUNBLEtBQUtDLGFBQWEsRUFBRTtRQUNoQyxPQUFPO0lBQ1Q7SUFFQSxJQUFJLENBQUNELEtBQUtDLGFBQWEsQ0FBQ0MsV0FBVyxFQUFFO1FBQ25DLE9BQU9GLGdCQUFnQkc7SUFDekI7SUFFQSxJQUFJSCxnQkFBZ0JBLEtBQUtDLGFBQWEsQ0FBQ0MsV0FBVyxDQUFDQyxXQUFXLEVBQUU7UUFDOUQsT0FBTztJQUNUO0lBRUEsT0FBTztBQUNUO0FBRUFDLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9pc0hUTUxFbGVtZW50LmpzPzQzNzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG5mdW5jdGlvbiBpc0hUTUxFbGVtZW50KG5vZGUpIHtcbiAgaWYgKCFub2RlIHx8ICFub2RlLm93bmVyRG9jdW1lbnQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoIW5vZGUub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldykge1xuICAgIHJldHVybiBub2RlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQ7XG4gIH1cblxuICBpZiAobm9kZSBpbnN0YW5jZW9mIG5vZGUub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5IVE1MRWxlbWVudCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzSFRNTEVsZW1lbnQ7Il0sIm5hbWVzIjpbImlzSFRNTEVsZW1lbnQiLCJub2RlIiwib3duZXJEb2N1bWVudCIsImRlZmF1bHRWaWV3IiwiSFRNTEVsZW1lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isHTMLElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isHTMLImageElement.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/isHTMLImageElement.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ var isElement = __webpack_require__(/*! ./isElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\");\nfunction isHTMLImageElement(node) {\n    if (!node || !node.ownerDocument) {\n        return false;\n    }\n    return isElement(node) && node.nodeName === \"IMG\";\n}\nmodule.exports = isHTMLImageElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNIVE1MSW1hZ2VFbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7OztDQVNDLEdBQ0QsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsaUZBQWE7QUFFckMsU0FBU0MsbUJBQW1CQyxJQUFJO0lBQzlCLElBQUksQ0FBQ0EsUUFBUSxDQUFDQSxLQUFLQyxhQUFhLEVBQUU7UUFDaEMsT0FBTztJQUNUO0lBRUEsT0FBT0osVUFBVUcsU0FBU0EsS0FBS0UsUUFBUSxLQUFLO0FBQzlDO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9pc0hUTUxJbWFnZUVsZW1lbnQuanM/Y2VhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbnZhciBpc0VsZW1lbnQgPSByZXF1aXJlKFwiLi9pc0VsZW1lbnRcIik7XG5cbmZ1bmN0aW9uIGlzSFRNTEltYWdlRWxlbWVudChub2RlKSB7XG4gIGlmICghbm9kZSB8fCAhbm9kZS5vd25lckRvY3VtZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGlzRWxlbWVudChub2RlKSAmJiBub2RlLm5vZGVOYW1lID09PSAnSU1HJztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0hUTUxJbWFnZUVsZW1lbnQ7Il0sIm5hbWVzIjpbImlzRWxlbWVudCIsInJlcXVpcmUiLCJpc0hUTUxJbWFnZUVsZW1lbnQiLCJub2RlIiwib3duZXJEb2N1bWVudCIsIm5vZGVOYW1lIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isHTMLImageElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isInstanceOfNode.js":
/*!*******************************************************!*\
  !*** ./node_modules/draft-js/lib/isInstanceOfNode.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ function isInstanceOfNode(target) {\n    // we changed the name because of having duplicate module provider (fbjs)\n    if (!target || !(\"ownerDocument\" in target)) {\n        return false;\n    }\n    if (\"ownerDocument\" in target) {\n        var node = target;\n        if (!node.ownerDocument.defaultView) {\n            return node instanceof Node;\n        }\n        if (node instanceof node.ownerDocument.defaultView.Node) {\n            return true;\n        }\n    }\n    return false;\n}\nmodule.exports = isInstanceOfNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNJbnN0YW5jZU9mTm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7Ozs7Q0FTQyxHQUNELFNBQVNBLGlCQUFpQkMsTUFBTTtJQUM5Qix5RUFBeUU7SUFDekUsSUFBSSxDQUFDQSxVQUFVLENBQUUsb0JBQW1CQSxNQUFLLEdBQUk7UUFDM0MsT0FBTztJQUNUO0lBRUEsSUFBSSxtQkFBbUJBLFFBQVE7UUFDN0IsSUFBSUMsT0FBT0Q7UUFFWCxJQUFJLENBQUNDLEtBQUtDLGFBQWEsQ0FBQ0MsV0FBVyxFQUFFO1lBQ25DLE9BQU9GLGdCQUFnQkc7UUFDekI7UUFFQSxJQUFJSCxnQkFBZ0JBLEtBQUtDLGFBQWEsQ0FBQ0MsV0FBVyxDQUFDQyxJQUFJLEVBQUU7WUFDdkQsT0FBTztRQUNUO0lBQ0Y7SUFFQSxPQUFPO0FBQ1Q7QUFFQUMsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2lzSW5zdGFuY2VPZk5vZGUuanM/YWE0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbmZ1bmN0aW9uIGlzSW5zdGFuY2VPZk5vZGUodGFyZ2V0KSB7XG4gIC8vIHdlIGNoYW5nZWQgdGhlIG5hbWUgYmVjYXVzZSBvZiBoYXZpbmcgZHVwbGljYXRlIG1vZHVsZSBwcm92aWRlciAoZmJqcylcbiAgaWYgKCF0YXJnZXQgfHwgISgnb3duZXJEb2N1bWVudCcgaW4gdGFyZ2V0KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICgnb3duZXJEb2N1bWVudCcgaW4gdGFyZ2V0KSB7XG4gICAgdmFyIG5vZGUgPSB0YXJnZXQ7XG5cbiAgICBpZiAoIW5vZGUub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldykge1xuICAgICAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBOb2RlO1xuICAgIH1cblxuICAgIGlmIChub2RlIGluc3RhbmNlb2Ygbm9kZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3Lk5vZGUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0luc3RhbmNlT2ZOb2RlOyJdLCJuYW1lcyI6WyJpc0luc3RhbmNlT2ZOb2RlIiwidGFyZ2V0Iiwibm9kZSIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsIk5vZGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isInstanceOfNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isSelectionAtLeafStart.js":
/*!*************************************************************!*\
  !*** ./node_modules/draft-js/lib/isSelectionAtLeafStart.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nfunction isSelectionAtLeafStart(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var blockTree = editorState.getBlockTree(anchorKey);\n    var offset = selection.getStartOffset();\n    var isAtStart = false;\n    blockTree.some(function(leafSet) {\n        if (offset === leafSet.get(\"start\")) {\n            isAtStart = true;\n            return true;\n        }\n        if (offset < leafSet.get(\"end\")) {\n            return leafSet.get(\"leaves\").some(function(leaf) {\n                var leafStart = leaf.get(\"start\");\n                if (offset === leafStart) {\n                    isAtStart = true;\n                    return true;\n                }\n                return false;\n            });\n        }\n        return false;\n    });\n    return isAtStart;\n}\nmodule.exports = isSelectionAtLeafStart;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNTZWxlY3Rpb25BdExlYWZTdGFydC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLFNBQVNBLHVCQUF1QkMsV0FBVztJQUN6QyxJQUFJQyxZQUFZRCxZQUFZRSxZQUFZO0lBQ3hDLElBQUlDLFlBQVlGLFVBQVVHLFlBQVk7SUFDdEMsSUFBSUMsWUFBWUwsWUFBWU0sWUFBWSxDQUFDSDtJQUN6QyxJQUFJSSxTQUFTTixVQUFVTyxjQUFjO0lBQ3JDLElBQUlDLFlBQVk7SUFDaEJKLFVBQVVLLElBQUksQ0FBQyxTQUFVQyxPQUFPO1FBQzlCLElBQUlKLFdBQVdJLFFBQVFDLEdBQUcsQ0FBQyxVQUFVO1lBQ25DSCxZQUFZO1lBQ1osT0FBTztRQUNUO1FBRUEsSUFBSUYsU0FBU0ksUUFBUUMsR0FBRyxDQUFDLFFBQVE7WUFDL0IsT0FBT0QsUUFBUUMsR0FBRyxDQUFDLFVBQVVGLElBQUksQ0FBQyxTQUFVRyxJQUFJO2dCQUM5QyxJQUFJQyxZQUFZRCxLQUFLRCxHQUFHLENBQUM7Z0JBRXpCLElBQUlMLFdBQVdPLFdBQVc7b0JBQ3hCTCxZQUFZO29CQUNaLE9BQU87Z0JBQ1Q7Z0JBRUEsT0FBTztZQUNUO1FBQ0Y7UUFFQSxPQUFPO0lBQ1Q7SUFDQSxPQUFPQTtBQUNUO0FBRUFNLE9BQU9DLE9BQU8sR0FBR2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNTZWxlY3Rpb25BdExlYWZTdGFydC5qcz81NTMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGlzU2VsZWN0aW9uQXRMZWFmU3RhcnQoZWRpdG9yU3RhdGUpIHtcbiAgdmFyIHNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpO1xuICB2YXIgYW5jaG9yS2V5ID0gc2VsZWN0aW9uLmdldEFuY2hvcktleSgpO1xuICB2YXIgYmxvY2tUcmVlID0gZWRpdG9yU3RhdGUuZ2V0QmxvY2tUcmVlKGFuY2hvcktleSk7XG4gIHZhciBvZmZzZXQgPSBzZWxlY3Rpb24uZ2V0U3RhcnRPZmZzZXQoKTtcbiAgdmFyIGlzQXRTdGFydCA9IGZhbHNlO1xuICBibG9ja1RyZWUuc29tZShmdW5jdGlvbiAobGVhZlNldCkge1xuICAgIGlmIChvZmZzZXQgPT09IGxlYWZTZXQuZ2V0KCdzdGFydCcpKSB7XG4gICAgICBpc0F0U3RhcnQgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKG9mZnNldCA8IGxlYWZTZXQuZ2V0KCdlbmQnKSkge1xuICAgICAgcmV0dXJuIGxlYWZTZXQuZ2V0KCdsZWF2ZXMnKS5zb21lKGZ1bmN0aW9uIChsZWFmKSB7XG4gICAgICAgIHZhciBsZWFmU3RhcnQgPSBsZWFmLmdldCgnc3RhcnQnKTtcblxuICAgICAgICBpZiAob2Zmc2V0ID09PSBsZWFmU3RhcnQpIHtcbiAgICAgICAgICBpc0F0U3RhcnQgPSB0cnVlO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KTtcbiAgcmV0dXJuIGlzQXRTdGFydDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1NlbGVjdGlvbkF0TGVhZlN0YXJ0OyJdLCJuYW1lcyI6WyJpc1NlbGVjdGlvbkF0TGVhZlN0YXJ0IiwiZWRpdG9yU3RhdGUiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JLZXkiLCJnZXRBbmNob3JLZXkiLCJibG9ja1RyZWUiLCJnZXRCbG9ja1RyZWUiLCJvZmZzZXQiLCJnZXRTdGFydE9mZnNldCIsImlzQXRTdGFydCIsInNvbWUiLCJsZWFmU2V0IiwiZ2V0IiwibGVhZiIsImxlYWZTdGFydCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isSelectionAtLeafStart.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/isSoftNewlineEvent.js":
/*!*********************************************************!*\
  !*** ./node_modules/draft-js/lib/isSoftNewlineEvent.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar Keys = __webpack_require__(/*! fbjs/lib/Keys */ \"(app-pages-browser)/./node_modules/fbjs/lib/Keys.js\");\nfunction isSoftNewlineEvent(e) {\n    return e.which === Keys.RETURN && (e.getModifierState(\"Shift\") || e.getModifierState(\"Alt\") || e.getModifierState(\"Control\"));\n}\nmodule.exports = isSoftNewlineEvent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvaXNTb2Z0TmV3bGluZUV2ZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsT0FBT0MsbUJBQU9BLENBQUMsMEVBQWU7QUFFbEMsU0FBU0MsbUJBQW1CQyxDQUFDO0lBQzNCLE9BQU9BLEVBQUVDLEtBQUssS0FBS0osS0FBS0ssTUFBTSxJQUFLRixDQUFBQSxFQUFFRyxnQkFBZ0IsQ0FBQyxZQUFZSCxFQUFFRyxnQkFBZ0IsQ0FBQyxVQUFVSCxFQUFFRyxnQkFBZ0IsQ0FBQyxVQUFTO0FBQzdIO0FBRUFDLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9pc1NvZnROZXdsaW5lRXZlbnQuanM/YmI3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgS2V5cyA9IHJlcXVpcmUoXCJmYmpzL2xpYi9LZXlzXCIpO1xuXG5mdW5jdGlvbiBpc1NvZnROZXdsaW5lRXZlbnQoZSkge1xuICByZXR1cm4gZS53aGljaCA9PT0gS2V5cy5SRVRVUk4gJiYgKGUuZ2V0TW9kaWZpZXJTdGF0ZSgnU2hpZnQnKSB8fCBlLmdldE1vZGlmaWVyU3RhdGUoJ0FsdCcpIHx8IGUuZ2V0TW9kaWZpZXJTdGF0ZSgnQ29udHJvbCcpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1NvZnROZXdsaW5lRXZlbnQ7Il0sIm5hbWVzIjpbIktleXMiLCJyZXF1aXJlIiwiaXNTb2Z0TmV3bGluZUV2ZW50IiwiZSIsIndoaWNoIiwiUkVUVVJOIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/isSoftNewlineEvent.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandBackspaceToStartOfLine.js":
/*!***********************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandBackspaceToStartOfLine.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar expandRangeToStartOfLine = __webpack_require__(/*! ./expandRangeToStartOfLine */ \"(app-pages-browser)/./node_modules/draft-js/lib/expandRangeToStartOfLine.js\");\nvar getDraftEditorSelectionWithNodes = __webpack_require__(/*! ./getDraftEditorSelectionWithNodes */ \"(app-pages-browser)/./node_modules/draft-js/lib/getDraftEditorSelectionWithNodes.js\");\nvar moveSelectionBackward = __webpack_require__(/*! ./moveSelectionBackward */ \"(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionBackward.js\");\nvar removeTextWithStrategy = __webpack_require__(/*! ./removeTextWithStrategy */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeTextWithStrategy.js\");\nfunction keyCommandBackspaceToStartOfLine(editorState, e) {\n    var afterRemoval = removeTextWithStrategy(editorState, function(strategyState) {\n        var selection = strategyState.getSelection();\n        if (selection.isCollapsed() && selection.getAnchorOffset() === 0) {\n            return moveSelectionBackward(strategyState, 1);\n        }\n        var ownerDocument = e.currentTarget.ownerDocument;\n        var domSelection = ownerDocument.defaultView.getSelection(); // getRangeAt can technically throw if there's no selection, but we know\n        // there is one here because text editor has focus (the cursor is a\n        // selection of length 0). Therefore, we don't need to wrap this in a\n        // try-catch block.\n        var range = domSelection.getRangeAt(0);\n        range = expandRangeToStartOfLine(range);\n        return getDraftEditorSelectionWithNodes(strategyState, null, range.endContainer, range.endOffset, range.startContainer, range.startOffset).selectionState;\n    }, \"backward\");\n    if (afterRemoval === editorState.getCurrentContent()) {\n        return editorState;\n    }\n    return EditorState.push(editorState, afterRemoval, \"remove-range\");\n}\nmodule.exports = keyCommandBackspaceToStartOfLine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZEJhY2tzcGFjZVRvU3RhcnRPZkxpbmUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQyxxRkFBZTtBQUV6QyxJQUFJQywyQkFBMkJELG1CQUFPQSxDQUFDLCtHQUE0QjtBQUVuRSxJQUFJRSxtQ0FBbUNGLG1CQUFPQSxDQUFDLCtIQUFvQztBQUVuRixJQUFJRyx3QkFBd0JILG1CQUFPQSxDQUFDLHlHQUF5QjtBQUU3RCxJQUFJSSx5QkFBeUJKLG1CQUFPQSxDQUFDLDJHQUEwQjtBQUUvRCxTQUFTSyxpQ0FBaUNDLFdBQVcsRUFBRUMsQ0FBQztJQUN0RCxJQUFJQyxlQUFlSix1QkFBdUJFLGFBQWEsU0FBVUcsYUFBYTtRQUM1RSxJQUFJQyxZQUFZRCxjQUFjRSxZQUFZO1FBRTFDLElBQUlELFVBQVVFLFdBQVcsTUFBTUYsVUFBVUcsZUFBZSxPQUFPLEdBQUc7WUFDaEUsT0FBT1Ysc0JBQXNCTSxlQUFlO1FBQzlDO1FBRUEsSUFBSUssZ0JBQWdCUCxFQUFFUSxhQUFhLENBQUNELGFBQWE7UUFDakQsSUFBSUUsZUFBZUYsY0FBY0csV0FBVyxDQUFDTixZQUFZLElBQUksd0VBQXdFO1FBQ3JJLG1FQUFtRTtRQUNuRSxxRUFBcUU7UUFDckUsbUJBQW1CO1FBRW5CLElBQUlPLFFBQVFGLGFBQWFHLFVBQVUsQ0FBQztRQUNwQ0QsUUFBUWpCLHlCQUF5QmlCO1FBQ2pDLE9BQU9oQixpQ0FBaUNPLGVBQWUsTUFBTVMsTUFBTUUsWUFBWSxFQUFFRixNQUFNRyxTQUFTLEVBQUVILE1BQU1JLGNBQWMsRUFBRUosTUFBTUssV0FBVyxFQUFFQyxjQUFjO0lBQzNKLEdBQUc7SUFFSCxJQUFJaEIsaUJBQWlCRixZQUFZbUIsaUJBQWlCLElBQUk7UUFDcEQsT0FBT25CO0lBQ1Q7SUFFQSxPQUFPUCxZQUFZMkIsSUFBSSxDQUFDcEIsYUFBYUUsY0FBYztBQUNyRDtBQUVBbUIsT0FBT0MsT0FBTyxHQUFHdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9rZXlDb21tYW5kQmFja3NwYWNlVG9TdGFydE9mTGluZS5qcz81ZjMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFZGl0b3JTdGF0ZSA9IHJlcXVpcmUoXCIuL0VkaXRvclN0YXRlXCIpO1xuXG52YXIgZXhwYW5kUmFuZ2VUb1N0YXJ0T2ZMaW5lID0gcmVxdWlyZShcIi4vZXhwYW5kUmFuZ2VUb1N0YXJ0T2ZMaW5lXCIpO1xuXG52YXIgZ2V0RHJhZnRFZGl0b3JTZWxlY3Rpb25XaXRoTm9kZXMgPSByZXF1aXJlKFwiLi9nZXREcmFmdEVkaXRvclNlbGVjdGlvbldpdGhOb2Rlc1wiKTtcblxudmFyIG1vdmVTZWxlY3Rpb25CYWNrd2FyZCA9IHJlcXVpcmUoXCIuL21vdmVTZWxlY3Rpb25CYWNrd2FyZFwiKTtcblxudmFyIHJlbW92ZVRleHRXaXRoU3RyYXRlZ3kgPSByZXF1aXJlKFwiLi9yZW1vdmVUZXh0V2l0aFN0cmF0ZWd5XCIpO1xuXG5mdW5jdGlvbiBrZXlDb21tYW5kQmFja3NwYWNlVG9TdGFydE9mTGluZShlZGl0b3JTdGF0ZSwgZSkge1xuICB2YXIgYWZ0ZXJSZW1vdmFsID0gcmVtb3ZlVGV4dFdpdGhTdHJhdGVneShlZGl0b3JTdGF0ZSwgZnVuY3Rpb24gKHN0cmF0ZWd5U3RhdGUpIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gc3RyYXRlZ3lTdGF0ZS5nZXRTZWxlY3Rpb24oKTtcblxuICAgIGlmIChzZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSAmJiBzZWxlY3Rpb24uZ2V0QW5jaG9yT2Zmc2V0KCkgPT09IDApIHtcbiAgICAgIHJldHVybiBtb3ZlU2VsZWN0aW9uQmFja3dhcmQoc3RyYXRlZ3lTdGF0ZSwgMSk7XG4gICAgfVxuXG4gICAgdmFyIG93bmVyRG9jdW1lbnQgPSBlLmN1cnJlbnRUYXJnZXQub3duZXJEb2N1bWVudDtcbiAgICB2YXIgZG9tU2VsZWN0aW9uID0gb3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRTZWxlY3Rpb24oKTsgLy8gZ2V0UmFuZ2VBdCBjYW4gdGVjaG5pY2FsbHkgdGhyb3cgaWYgdGhlcmUncyBubyBzZWxlY3Rpb24sIGJ1dCB3ZSBrbm93XG4gICAgLy8gdGhlcmUgaXMgb25lIGhlcmUgYmVjYXVzZSB0ZXh0IGVkaXRvciBoYXMgZm9jdXMgKHRoZSBjdXJzb3IgaXMgYVxuICAgIC8vIHNlbGVjdGlvbiBvZiBsZW5ndGggMCkuIFRoZXJlZm9yZSwgd2UgZG9uJ3QgbmVlZCB0byB3cmFwIHRoaXMgaW4gYVxuICAgIC8vIHRyeS1jYXRjaCBibG9jay5cblxuICAgIHZhciByYW5nZSA9IGRvbVNlbGVjdGlvbi5nZXRSYW5nZUF0KDApO1xuICAgIHJhbmdlID0gZXhwYW5kUmFuZ2VUb1N0YXJ0T2ZMaW5lKHJhbmdlKTtcbiAgICByZXR1cm4gZ2V0RHJhZnRFZGl0b3JTZWxlY3Rpb25XaXRoTm9kZXMoc3RyYXRlZ3lTdGF0ZSwgbnVsbCwgcmFuZ2UuZW5kQ29udGFpbmVyLCByYW5nZS5lbmRPZmZzZXQsIHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5zdGFydE9mZnNldCkuc2VsZWN0aW9uU3RhdGU7XG4gIH0sICdiYWNrd2FyZCcpO1xuXG4gIGlmIChhZnRlclJlbW92YWwgPT09IGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCkpIHtcbiAgICByZXR1cm4gZWRpdG9yU3RhdGU7XG4gIH1cblxuICByZXR1cm4gRWRpdG9yU3RhdGUucHVzaChlZGl0b3JTdGF0ZSwgYWZ0ZXJSZW1vdmFsLCAncmVtb3ZlLXJhbmdlJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5Q29tbWFuZEJhY2tzcGFjZVRvU3RhcnRPZkxpbmU7Il0sIm5hbWVzIjpbIkVkaXRvclN0YXRlIiwicmVxdWlyZSIsImV4cGFuZFJhbmdlVG9TdGFydE9mTGluZSIsImdldERyYWZ0RWRpdG9yU2VsZWN0aW9uV2l0aE5vZGVzIiwibW92ZVNlbGVjdGlvbkJhY2t3YXJkIiwicmVtb3ZlVGV4dFdpdGhTdHJhdGVneSIsImtleUNvbW1hbmRCYWNrc3BhY2VUb1N0YXJ0T2ZMaW5lIiwiZWRpdG9yU3RhdGUiLCJlIiwiYWZ0ZXJSZW1vdmFsIiwic3RyYXRlZ3lTdGF0ZSIsInNlbGVjdGlvbiIsImdldFNlbGVjdGlvbiIsImlzQ29sbGFwc2VkIiwiZ2V0QW5jaG9yT2Zmc2V0Iiwib3duZXJEb2N1bWVudCIsImN1cnJlbnRUYXJnZXQiLCJkb21TZWxlY3Rpb24iLCJkZWZhdWx0VmlldyIsInJhbmdlIiwiZ2V0UmFuZ2VBdCIsImVuZENvbnRhaW5lciIsImVuZE9mZnNldCIsInN0YXJ0Q29udGFpbmVyIiwic3RhcnRPZmZzZXQiLCJzZWxlY3Rpb25TdGF0ZSIsImdldEN1cnJlbnRDb250ZW50IiwicHVzaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandBackspaceToStartOfLine.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandBackspaceWord.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandBackspaceWord.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftRemovableWord = __webpack_require__(/*! ./DraftRemovableWord */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftRemovableWord.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar moveSelectionBackward = __webpack_require__(/*! ./moveSelectionBackward */ \"(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionBackward.js\");\nvar removeTextWithStrategy = __webpack_require__(/*! ./removeTextWithStrategy */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeTextWithStrategy.js\");\n/**\n * Delete the word that is left of the cursor, as well as any spaces or\n * punctuation after the word.\n */ function keyCommandBackspaceWord(editorState) {\n    var afterRemoval = removeTextWithStrategy(editorState, function(strategyState) {\n        var selection = strategyState.getSelection();\n        var offset = selection.getStartOffset(); // If there are no words before the cursor, remove the preceding newline.\n        if (offset === 0) {\n            return moveSelectionBackward(strategyState, 1);\n        }\n        var key = selection.getStartKey();\n        var content = strategyState.getCurrentContent();\n        var text = content.getBlockForKey(key).getText().slice(0, offset);\n        var toRemove = DraftRemovableWord.getBackward(text);\n        return moveSelectionBackward(strategyState, toRemove.length || 1);\n    }, \"backward\");\n    if (afterRemoval === editorState.getCurrentContent()) {\n        return editorState;\n    }\n    return EditorState.push(editorState, afterRemoval, \"remove-range\");\n}\nmodule.exports = keyCommandBackspaceWord;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZEJhY2tzcGFjZVdvcmQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxxQkFBcUJDLG1CQUFPQSxDQUFDLG1HQUFzQjtBQUV2RCxJQUFJQyxjQUFjRCxtQkFBT0EsQ0FBQyxxRkFBZTtBQUV6QyxJQUFJRSx3QkFBd0JGLG1CQUFPQSxDQUFDLHlHQUF5QjtBQUU3RCxJQUFJRyx5QkFBeUJILG1CQUFPQSxDQUFDLDJHQUEwQjtBQUMvRDs7O0NBR0MsR0FHRCxTQUFTSSx3QkFBd0JDLFdBQVc7SUFDMUMsSUFBSUMsZUFBZUgsdUJBQXVCRSxhQUFhLFNBQVVFLGFBQWE7UUFDNUUsSUFBSUMsWUFBWUQsY0FBY0UsWUFBWTtRQUMxQyxJQUFJQyxTQUFTRixVQUFVRyxjQUFjLElBQUkseUVBQXlFO1FBRWxILElBQUlELFdBQVcsR0FBRztZQUNoQixPQUFPUixzQkFBc0JLLGVBQWU7UUFDOUM7UUFFQSxJQUFJSyxNQUFNSixVQUFVSyxXQUFXO1FBQy9CLElBQUlDLFVBQVVQLGNBQWNRLGlCQUFpQjtRQUM3QyxJQUFJQyxPQUFPRixRQUFRRyxjQUFjLENBQUNMLEtBQUtNLE9BQU8sR0FBR0MsS0FBSyxDQUFDLEdBQUdUO1FBQzFELElBQUlVLFdBQVdyQixtQkFBbUJzQixXQUFXLENBQUNMO1FBQzlDLE9BQU9kLHNCQUFzQkssZUFBZWEsU0FBU0UsTUFBTSxJQUFJO0lBQ2pFLEdBQUc7SUFFSCxJQUFJaEIsaUJBQWlCRCxZQUFZVSxpQkFBaUIsSUFBSTtRQUNwRCxPQUFPVjtJQUNUO0lBRUEsT0FBT0osWUFBWXNCLElBQUksQ0FBQ2xCLGFBQWFDLGNBQWM7QUFDckQ7QUFFQWtCLE9BQU9DLE9BQU8sR0FBR3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZEJhY2tzcGFjZVdvcmQuanM/ZGFiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRHJhZnRSZW1vdmFibGVXb3JkID0gcmVxdWlyZShcIi4vRHJhZnRSZW1vdmFibGVXb3JkXCIpO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcblxudmFyIG1vdmVTZWxlY3Rpb25CYWNrd2FyZCA9IHJlcXVpcmUoXCIuL21vdmVTZWxlY3Rpb25CYWNrd2FyZFwiKTtcblxudmFyIHJlbW92ZVRleHRXaXRoU3RyYXRlZ3kgPSByZXF1aXJlKFwiLi9yZW1vdmVUZXh0V2l0aFN0cmF0ZWd5XCIpO1xuLyoqXG4gKiBEZWxldGUgdGhlIHdvcmQgdGhhdCBpcyBsZWZ0IG9mIHRoZSBjdXJzb3IsIGFzIHdlbGwgYXMgYW55IHNwYWNlcyBvclxuICogcHVuY3R1YXRpb24gYWZ0ZXIgdGhlIHdvcmQuXG4gKi9cblxuXG5mdW5jdGlvbiBrZXlDb21tYW5kQmFja3NwYWNlV29yZChlZGl0b3JTdGF0ZSkge1xuICB2YXIgYWZ0ZXJSZW1vdmFsID0gcmVtb3ZlVGV4dFdpdGhTdHJhdGVneShlZGl0b3JTdGF0ZSwgZnVuY3Rpb24gKHN0cmF0ZWd5U3RhdGUpIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gc3RyYXRlZ3lTdGF0ZS5nZXRTZWxlY3Rpb24oKTtcbiAgICB2YXIgb2Zmc2V0ID0gc2VsZWN0aW9uLmdldFN0YXJ0T2Zmc2V0KCk7IC8vIElmIHRoZXJlIGFyZSBubyB3b3JkcyBiZWZvcmUgdGhlIGN1cnNvciwgcmVtb3ZlIHRoZSBwcmVjZWRpbmcgbmV3bGluZS5cblxuICAgIGlmIChvZmZzZXQgPT09IDApIHtcbiAgICAgIHJldHVybiBtb3ZlU2VsZWN0aW9uQmFja3dhcmQoc3RyYXRlZ3lTdGF0ZSwgMSk7XG4gICAgfVxuXG4gICAgdmFyIGtleSA9IHNlbGVjdGlvbi5nZXRTdGFydEtleSgpO1xuICAgIHZhciBjb250ZW50ID0gc3RyYXRlZ3lTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpO1xuICAgIHZhciB0ZXh0ID0gY29udGVudC5nZXRCbG9ja0ZvcktleShrZXkpLmdldFRleHQoKS5zbGljZSgwLCBvZmZzZXQpO1xuICAgIHZhciB0b1JlbW92ZSA9IERyYWZ0UmVtb3ZhYmxlV29yZC5nZXRCYWNrd2FyZCh0ZXh0KTtcbiAgICByZXR1cm4gbW92ZVNlbGVjdGlvbkJhY2t3YXJkKHN0cmF0ZWd5U3RhdGUsIHRvUmVtb3ZlLmxlbmd0aCB8fCAxKTtcbiAgfSwgJ2JhY2t3YXJkJyk7XG5cbiAgaWYgKGFmdGVyUmVtb3ZhbCA9PT0gZWRpdG9yU3RhdGUuZ2V0Q3VycmVudENvbnRlbnQoKSkge1xuICAgIHJldHVybiBlZGl0b3JTdGF0ZTtcbiAgfVxuXG4gIHJldHVybiBFZGl0b3JTdGF0ZS5wdXNoKGVkaXRvclN0YXRlLCBhZnRlclJlbW92YWwsICdyZW1vdmUtcmFuZ2UnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBrZXlDb21tYW5kQmFja3NwYWNlV29yZDsiXSwibmFtZXMiOlsiRHJhZnRSZW1vdmFibGVXb3JkIiwicmVxdWlyZSIsIkVkaXRvclN0YXRlIiwibW92ZVNlbGVjdGlvbkJhY2t3YXJkIiwicmVtb3ZlVGV4dFdpdGhTdHJhdGVneSIsImtleUNvbW1hbmRCYWNrc3BhY2VXb3JkIiwiZWRpdG9yU3RhdGUiLCJhZnRlclJlbW92YWwiLCJzdHJhdGVneVN0YXRlIiwic2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwib2Zmc2V0IiwiZ2V0U3RhcnRPZmZzZXQiLCJrZXkiLCJnZXRTdGFydEtleSIsImNvbnRlbnQiLCJnZXRDdXJyZW50Q29udGVudCIsInRleHQiLCJnZXRCbG9ja0ZvcktleSIsImdldFRleHQiLCJzbGljZSIsInRvUmVtb3ZlIiwiZ2V0QmFja3dhcmQiLCJsZW5ndGgiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandBackspaceWord.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandDeleteWord.js":
/*!***********************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandDeleteWord.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftRemovableWord = __webpack_require__(/*! ./DraftRemovableWord */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftRemovableWord.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar moveSelectionForward = __webpack_require__(/*! ./moveSelectionForward */ \"(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionForward.js\");\nvar removeTextWithStrategy = __webpack_require__(/*! ./removeTextWithStrategy */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeTextWithStrategy.js\");\n/**\n * Delete the word that is right of the cursor, as well as any spaces or\n * punctuation before the word.\n */ function keyCommandDeleteWord(editorState) {\n    var afterRemoval = removeTextWithStrategy(editorState, function(strategyState) {\n        var selection = strategyState.getSelection();\n        var offset = selection.getStartOffset();\n        var key = selection.getStartKey();\n        var content = strategyState.getCurrentContent();\n        var text = content.getBlockForKey(key).getText().slice(offset);\n        var toRemove = DraftRemovableWord.getForward(text); // If there are no words in front of the cursor, remove the newline.\n        return moveSelectionForward(strategyState, toRemove.length || 1);\n    }, \"forward\");\n    if (afterRemoval === editorState.getCurrentContent()) {\n        return editorState;\n    }\n    return EditorState.push(editorState, afterRemoval, \"remove-range\");\n}\nmodule.exports = keyCommandDeleteWord;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZERlbGV0ZVdvcmQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxxQkFBcUJDLG1CQUFPQSxDQUFDLG1HQUFzQjtBQUV2RCxJQUFJQyxjQUFjRCxtQkFBT0EsQ0FBQyxxRkFBZTtBQUV6QyxJQUFJRSx1QkFBdUJGLG1CQUFPQSxDQUFDLHVHQUF3QjtBQUUzRCxJQUFJRyx5QkFBeUJILG1CQUFPQSxDQUFDLDJHQUEwQjtBQUMvRDs7O0NBR0MsR0FHRCxTQUFTSSxxQkFBcUJDLFdBQVc7SUFDdkMsSUFBSUMsZUFBZUgsdUJBQXVCRSxhQUFhLFNBQVVFLGFBQWE7UUFDNUUsSUFBSUMsWUFBWUQsY0FBY0UsWUFBWTtRQUMxQyxJQUFJQyxTQUFTRixVQUFVRyxjQUFjO1FBQ3JDLElBQUlDLE1BQU1KLFVBQVVLLFdBQVc7UUFDL0IsSUFBSUMsVUFBVVAsY0FBY1EsaUJBQWlCO1FBQzdDLElBQUlDLE9BQU9GLFFBQVFHLGNBQWMsQ0FBQ0wsS0FBS00sT0FBTyxHQUFHQyxLQUFLLENBQUNUO1FBQ3ZELElBQUlVLFdBQVdyQixtQkFBbUJzQixVQUFVLENBQUNMLE9BQU8sb0VBQW9FO1FBRXhILE9BQU9kLHFCQUFxQkssZUFBZWEsU0FBU0UsTUFBTSxJQUFJO0lBQ2hFLEdBQUc7SUFFSCxJQUFJaEIsaUJBQWlCRCxZQUFZVSxpQkFBaUIsSUFBSTtRQUNwRCxPQUFPVjtJQUNUO0lBRUEsT0FBT0osWUFBWXNCLElBQUksQ0FBQ2xCLGFBQWFDLGNBQWM7QUFDckQ7QUFFQWtCLE9BQU9DLE9BQU8sR0FBR3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZERlbGV0ZVdvcmQuanM/ZWE0OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRHJhZnRSZW1vdmFibGVXb3JkID0gcmVxdWlyZShcIi4vRHJhZnRSZW1vdmFibGVXb3JkXCIpO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcblxudmFyIG1vdmVTZWxlY3Rpb25Gb3J3YXJkID0gcmVxdWlyZShcIi4vbW92ZVNlbGVjdGlvbkZvcndhcmRcIik7XG5cbnZhciByZW1vdmVUZXh0V2l0aFN0cmF0ZWd5ID0gcmVxdWlyZShcIi4vcmVtb3ZlVGV4dFdpdGhTdHJhdGVneVwiKTtcbi8qKlxuICogRGVsZXRlIHRoZSB3b3JkIHRoYXQgaXMgcmlnaHQgb2YgdGhlIGN1cnNvciwgYXMgd2VsbCBhcyBhbnkgc3BhY2VzIG9yXG4gKiBwdW5jdHVhdGlvbiBiZWZvcmUgdGhlIHdvcmQuXG4gKi9cblxuXG5mdW5jdGlvbiBrZXlDb21tYW5kRGVsZXRlV29yZChlZGl0b3JTdGF0ZSkge1xuICB2YXIgYWZ0ZXJSZW1vdmFsID0gcmVtb3ZlVGV4dFdpdGhTdHJhdGVneShlZGl0b3JTdGF0ZSwgZnVuY3Rpb24gKHN0cmF0ZWd5U3RhdGUpIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gc3RyYXRlZ3lTdGF0ZS5nZXRTZWxlY3Rpb24oKTtcbiAgICB2YXIgb2Zmc2V0ID0gc2VsZWN0aW9uLmdldFN0YXJ0T2Zmc2V0KCk7XG4gICAgdmFyIGtleSA9IHNlbGVjdGlvbi5nZXRTdGFydEtleSgpO1xuICAgIHZhciBjb250ZW50ID0gc3RyYXRlZ3lTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpO1xuICAgIHZhciB0ZXh0ID0gY29udGVudC5nZXRCbG9ja0ZvcktleShrZXkpLmdldFRleHQoKS5zbGljZShvZmZzZXQpO1xuICAgIHZhciB0b1JlbW92ZSA9IERyYWZ0UmVtb3ZhYmxlV29yZC5nZXRGb3J3YXJkKHRleHQpOyAvLyBJZiB0aGVyZSBhcmUgbm8gd29yZHMgaW4gZnJvbnQgb2YgdGhlIGN1cnNvciwgcmVtb3ZlIHRoZSBuZXdsaW5lLlxuXG4gICAgcmV0dXJuIG1vdmVTZWxlY3Rpb25Gb3J3YXJkKHN0cmF0ZWd5U3RhdGUsIHRvUmVtb3ZlLmxlbmd0aCB8fCAxKTtcbiAgfSwgJ2ZvcndhcmQnKTtcblxuICBpZiAoYWZ0ZXJSZW1vdmFsID09PSBlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpKSB7XG4gICAgcmV0dXJuIGVkaXRvclN0YXRlO1xuICB9XG5cbiAgcmV0dXJuIEVkaXRvclN0YXRlLnB1c2goZWRpdG9yU3RhdGUsIGFmdGVyUmVtb3ZhbCwgJ3JlbW92ZS1yYW5nZScpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleUNvbW1hbmREZWxldGVXb3JkOyJdLCJuYW1lcyI6WyJEcmFmdFJlbW92YWJsZVdvcmQiLCJyZXF1aXJlIiwiRWRpdG9yU3RhdGUiLCJtb3ZlU2VsZWN0aW9uRm9yd2FyZCIsInJlbW92ZVRleHRXaXRoU3RyYXRlZ3kiLCJrZXlDb21tYW5kRGVsZXRlV29yZCIsImVkaXRvclN0YXRlIiwiYWZ0ZXJSZW1vdmFsIiwic3RyYXRlZ3lTdGF0ZSIsInNlbGVjdGlvbiIsImdldFNlbGVjdGlvbiIsIm9mZnNldCIsImdldFN0YXJ0T2Zmc2V0Iiwia2V5IiwiZ2V0U3RhcnRLZXkiLCJjb250ZW50IiwiZ2V0Q3VycmVudENvbnRlbnQiLCJ0ZXh0IiwiZ2V0QmxvY2tGb3JLZXkiLCJnZXRUZXh0Iiwic2xpY2UiLCJ0b1JlbW92ZSIsImdldEZvcndhcmQiLCJsZW5ndGgiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandDeleteWord.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandInsertNewline.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandInsertNewline.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nfunction keyCommandInsertNewline(editorState) {\n    var contentState = DraftModifier.splitBlock(editorState.getCurrentContent(), editorState.getSelection());\n    return EditorState.push(editorState, contentState, \"split-block\");\n}\nmodule.exports = keyCommandInsertNewline;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZEluc2VydE5ld2xpbmUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxnQkFBZ0JDLG1CQUFPQSxDQUFDLHlGQUFpQjtBQUU3QyxJQUFJQyxjQUFjRCxtQkFBT0EsQ0FBQyxxRkFBZTtBQUV6QyxTQUFTRSx3QkFBd0JDLFdBQVc7SUFDMUMsSUFBSUMsZUFBZUwsY0FBY00sVUFBVSxDQUFDRixZQUFZRyxpQkFBaUIsSUFBSUgsWUFBWUksWUFBWTtJQUNyRyxPQUFPTixZQUFZTyxJQUFJLENBQUNMLGFBQWFDLGNBQWM7QUFDckQ7QUFFQUssT0FBT0MsT0FBTyxHQUFHUiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2tleUNvbW1hbmRJbnNlcnROZXdsaW5lLmpzP2YwZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIERyYWZ0TW9kaWZpZXIgPSByZXF1aXJlKFwiLi9EcmFmdE1vZGlmaWVyXCIpO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcblxuZnVuY3Rpb24ga2V5Q29tbWFuZEluc2VydE5ld2xpbmUoZWRpdG9yU3RhdGUpIHtcbiAgdmFyIGNvbnRlbnRTdGF0ZSA9IERyYWZ0TW9kaWZpZXIuc3BsaXRCbG9jayhlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpLCBlZGl0b3JTdGF0ZS5nZXRTZWxlY3Rpb24oKSk7XG4gIHJldHVybiBFZGl0b3JTdGF0ZS5wdXNoKGVkaXRvclN0YXRlLCBjb250ZW50U3RhdGUsICdzcGxpdC1ibG9jaycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleUNvbW1hbmRJbnNlcnROZXdsaW5lOyJdLCJuYW1lcyI6WyJEcmFmdE1vZGlmaWVyIiwicmVxdWlyZSIsIkVkaXRvclN0YXRlIiwia2V5Q29tbWFuZEluc2VydE5ld2xpbmUiLCJlZGl0b3JTdGF0ZSIsImNvbnRlbnRTdGF0ZSIsInNwbGl0QmxvY2siLCJnZXRDdXJyZW50Q29udGVudCIsImdldFNlbGVjdGlvbiIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandInsertNewline.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandMoveSelectionToEndOfBlock.js":
/*!**************************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandMoveSelectionToEndOfBlock.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\n/**\n * See comment for `moveSelectionToStartOfBlock`.\n */ function keyCommandMoveSelectionToEndOfBlock(editorState) {\n    var selection = editorState.getSelection();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var textLength = content.getBlockForKey(endKey).getLength();\n    return EditorState.set(editorState, {\n        selection: selection.merge({\n            anchorKey: endKey,\n            anchorOffset: textLength,\n            focusKey: endKey,\n            focusOffset: textLength,\n            isBackward: false\n        }),\n        forceSelection: true\n    });\n}\nmodule.exports = keyCommandMoveSelectionToEndOfBlock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZE1vdmVTZWxlY3Rpb25Ub0VuZE9mQmxvY2suanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQyxxRkFBZTtBQUN6Qzs7Q0FFQyxHQUdELFNBQVNDLG9DQUFvQ0MsV0FBVztJQUN0RCxJQUFJQyxZQUFZRCxZQUFZRSxZQUFZO0lBQ3hDLElBQUlDLFNBQVNGLFVBQVVHLFNBQVM7SUFDaEMsSUFBSUMsVUFBVUwsWUFBWU0saUJBQWlCO0lBQzNDLElBQUlDLGFBQWFGLFFBQVFHLGNBQWMsQ0FBQ0wsUUFBUU0sU0FBUztJQUN6RCxPQUFPWixZQUFZYSxHQUFHLENBQUNWLGFBQWE7UUFDbENDLFdBQVdBLFVBQVVVLEtBQUssQ0FBQztZQUN6QkMsV0FBV1Q7WUFDWFUsY0FBY047WUFDZE8sVUFBVVg7WUFDVlksYUFBYVI7WUFDYlMsWUFBWTtRQUNkO1FBQ0FDLGdCQUFnQjtJQUNsQjtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBR3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZE1vdmVTZWxlY3Rpb25Ub0VuZE9mQmxvY2suanM/Yzk5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRWRpdG9yU3RhdGUgPSByZXF1aXJlKFwiLi9FZGl0b3JTdGF0ZVwiKTtcbi8qKlxuICogU2VlIGNvbW1lbnQgZm9yIGBtb3ZlU2VsZWN0aW9uVG9TdGFydE9mQmxvY2tgLlxuICovXG5cblxuZnVuY3Rpb24ga2V5Q29tbWFuZE1vdmVTZWxlY3Rpb25Ub0VuZE9mQmxvY2soZWRpdG9yU3RhdGUpIHtcbiAgdmFyIHNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpO1xuICB2YXIgZW5kS2V5ID0gc2VsZWN0aW9uLmdldEVuZEtleSgpO1xuICB2YXIgY29udGVudCA9IGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCk7XG4gIHZhciB0ZXh0TGVuZ3RoID0gY29udGVudC5nZXRCbG9ja0ZvcktleShlbmRLZXkpLmdldExlbmd0aCgpO1xuICByZXR1cm4gRWRpdG9yU3RhdGUuc2V0KGVkaXRvclN0YXRlLCB7XG4gICAgc2VsZWN0aW9uOiBzZWxlY3Rpb24ubWVyZ2Uoe1xuICAgICAgYW5jaG9yS2V5OiBlbmRLZXksXG4gICAgICBhbmNob3JPZmZzZXQ6IHRleHRMZW5ndGgsXG4gICAgICBmb2N1c0tleTogZW5kS2V5LFxuICAgICAgZm9jdXNPZmZzZXQ6IHRleHRMZW5ndGgsXG4gICAgICBpc0JhY2t3YXJkOiBmYWxzZVxuICAgIH0pLFxuICAgIGZvcmNlU2VsZWN0aW9uOiB0cnVlXG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleUNvbW1hbmRNb3ZlU2VsZWN0aW9uVG9FbmRPZkJsb2NrOyJdLCJuYW1lcyI6WyJFZGl0b3JTdGF0ZSIsInJlcXVpcmUiLCJrZXlDb21tYW5kTW92ZVNlbGVjdGlvblRvRW5kT2ZCbG9jayIsImVkaXRvclN0YXRlIiwic2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwiZW5kS2V5IiwiZ2V0RW5kS2V5IiwiY29udGVudCIsImdldEN1cnJlbnRDb250ZW50IiwidGV4dExlbmd0aCIsImdldEJsb2NrRm9yS2V5IiwiZ2V0TGVuZ3RoIiwic2V0IiwibWVyZ2UiLCJhbmNob3JLZXkiLCJhbmNob3JPZmZzZXQiLCJmb2N1c0tleSIsImZvY3VzT2Zmc2V0IiwiaXNCYWNrd2FyZCIsImZvcmNlU2VsZWN0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandMoveSelectionToEndOfBlock.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandMoveSelectionToStartOfBlock.js":
/*!****************************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandMoveSelectionToStartOfBlock.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\n/**\n * Collapse selection at the start of the first selected block. This is used\n * for Firefox versions that attempt to navigate forward/backward instead of\n * moving the cursor. Other browsers are able to move the cursor natively.\n */ function keyCommandMoveSelectionToStartOfBlock(editorState) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    return EditorState.set(editorState, {\n        selection: selection.merge({\n            anchorKey: startKey,\n            anchorOffset: 0,\n            focusKey: startKey,\n            focusOffset: 0,\n            isBackward: false\n        }),\n        forceSelection: true\n    });\n}\nmodule.exports = keyCommandMoveSelectionToStartOfBlock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZE1vdmVTZWxlY3Rpb25Ub1N0YXJ0T2ZCbG9jay5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDLHFGQUFlO0FBQ3pDOzs7O0NBSUMsR0FHRCxTQUFTQyxzQ0FBc0NDLFdBQVc7SUFDeEQsSUFBSUMsWUFBWUQsWUFBWUUsWUFBWTtJQUN4QyxJQUFJQyxXQUFXRixVQUFVRyxXQUFXO0lBQ3BDLE9BQU9QLFlBQVlRLEdBQUcsQ0FBQ0wsYUFBYTtRQUNsQ0MsV0FBV0EsVUFBVUssS0FBSyxDQUFDO1lBQ3pCQyxXQUFXSjtZQUNYSyxjQUFjO1lBQ2RDLFVBQVVOO1lBQ1ZPLGFBQWE7WUFDYkMsWUFBWTtRQUNkO1FBQ0FDLGdCQUFnQjtJQUNsQjtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBR2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9rZXlDb21tYW5kTW92ZVNlbGVjdGlvblRvU3RhcnRPZkJsb2NrLmpzP2IyOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIEVkaXRvclN0YXRlID0gcmVxdWlyZShcIi4vRWRpdG9yU3RhdGVcIik7XG4vKipcbiAqIENvbGxhcHNlIHNlbGVjdGlvbiBhdCB0aGUgc3RhcnQgb2YgdGhlIGZpcnN0IHNlbGVjdGVkIGJsb2NrLiBUaGlzIGlzIHVzZWRcbiAqIGZvciBGaXJlZm94IHZlcnNpb25zIHRoYXQgYXR0ZW1wdCB0byBuYXZpZ2F0ZSBmb3J3YXJkL2JhY2t3YXJkIGluc3RlYWQgb2ZcbiAqIG1vdmluZyB0aGUgY3Vyc29yLiBPdGhlciBicm93c2VycyBhcmUgYWJsZSB0byBtb3ZlIHRoZSBjdXJzb3IgbmF0aXZlbHkuXG4gKi9cblxuXG5mdW5jdGlvbiBrZXlDb21tYW5kTW92ZVNlbGVjdGlvblRvU3RhcnRPZkJsb2NrKGVkaXRvclN0YXRlKSB7XG4gIHZhciBzZWxlY3Rpb24gPSBlZGl0b3JTdGF0ZS5nZXRTZWxlY3Rpb24oKTtcbiAgdmFyIHN0YXJ0S2V5ID0gc2VsZWN0aW9uLmdldFN0YXJ0S2V5KCk7XG4gIHJldHVybiBFZGl0b3JTdGF0ZS5zZXQoZWRpdG9yU3RhdGUsIHtcbiAgICBzZWxlY3Rpb246IHNlbGVjdGlvbi5tZXJnZSh7XG4gICAgICBhbmNob3JLZXk6IHN0YXJ0S2V5LFxuICAgICAgYW5jaG9yT2Zmc2V0OiAwLFxuICAgICAgZm9jdXNLZXk6IHN0YXJ0S2V5LFxuICAgICAgZm9jdXNPZmZzZXQ6IDAsXG4gICAgICBpc0JhY2t3YXJkOiBmYWxzZVxuICAgIH0pLFxuICAgIGZvcmNlU2VsZWN0aW9uOiB0cnVlXG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleUNvbW1hbmRNb3ZlU2VsZWN0aW9uVG9TdGFydE9mQmxvY2s7Il0sIm5hbWVzIjpbIkVkaXRvclN0YXRlIiwicmVxdWlyZSIsImtleUNvbW1hbmRNb3ZlU2VsZWN0aW9uVG9TdGFydE9mQmxvY2siLCJlZGl0b3JTdGF0ZSIsInNlbGVjdGlvbiIsImdldFNlbGVjdGlvbiIsInN0YXJ0S2V5IiwiZ2V0U3RhcnRLZXkiLCJzZXQiLCJtZXJnZSIsImFuY2hvcktleSIsImFuY2hvck9mZnNldCIsImZvY3VzS2V5IiwiZm9jdXNPZmZzZXQiLCJpc0JhY2t3YXJkIiwiZm9yY2VTZWxlY3Rpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandMoveSelectionToStartOfBlock.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandPlainBackspace.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandPlainBackspace.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar UnicodeUtils = __webpack_require__(/*! fbjs/lib/UnicodeUtils */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\");\nvar moveSelectionBackward = __webpack_require__(/*! ./moveSelectionBackward */ \"(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionBackward.js\");\nvar removeTextWithStrategy = __webpack_require__(/*! ./removeTextWithStrategy */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeTextWithStrategy.js\");\n/**\n * Remove the selected range. If the cursor is collapsed, remove the preceding\n * character. This operation is Unicode-aware, so removing a single character\n * will remove a surrogate pair properly as well.\n */ function keyCommandPlainBackspace(editorState) {\n    var afterRemoval = removeTextWithStrategy(editorState, function(strategyState) {\n        var selection = strategyState.getSelection();\n        var content = strategyState.getCurrentContent();\n        var key = selection.getAnchorKey();\n        var offset = selection.getAnchorOffset();\n        var charBehind = content.getBlockForKey(key).getText()[offset - 1];\n        return moveSelectionBackward(strategyState, charBehind ? UnicodeUtils.getUTF16Length(charBehind, 0) : 1);\n    }, \"backward\");\n    if (afterRemoval === editorState.getCurrentContent()) {\n        return editorState;\n    }\n    var selection = editorState.getSelection();\n    return EditorState.push(editorState, afterRemoval.set(\"selectionBefore\", selection), selection.isCollapsed() ? \"backspace-character\" : \"remove-range\");\n}\nmodule.exports = keyCommandPlainBackspace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZFBsYWluQmFja3NwYWNlLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUMscUZBQWU7QUFFekMsSUFBSUMsZUFBZUQsbUJBQU9BLENBQUMsMEZBQXVCO0FBRWxELElBQUlFLHdCQUF3QkYsbUJBQU9BLENBQUMseUdBQXlCO0FBRTdELElBQUlHLHlCQUF5QkgsbUJBQU9BLENBQUMsMkdBQTBCO0FBQy9EOzs7O0NBSUMsR0FHRCxTQUFTSSx5QkFBeUJDLFdBQVc7SUFDM0MsSUFBSUMsZUFBZUgsdUJBQXVCRSxhQUFhLFNBQVVFLGFBQWE7UUFDNUUsSUFBSUMsWUFBWUQsY0FBY0UsWUFBWTtRQUMxQyxJQUFJQyxVQUFVSCxjQUFjSSxpQkFBaUI7UUFDN0MsSUFBSUMsTUFBTUosVUFBVUssWUFBWTtRQUNoQyxJQUFJQyxTQUFTTixVQUFVTyxlQUFlO1FBQ3RDLElBQUlDLGFBQWFOLFFBQVFPLGNBQWMsQ0FBQ0wsS0FBS00sT0FBTyxFQUFFLENBQUNKLFNBQVMsRUFBRTtRQUNsRSxPQUFPWixzQkFBc0JLLGVBQWVTLGFBQWFmLGFBQWFrQixjQUFjLENBQUNILFlBQVksS0FBSztJQUN4RyxHQUFHO0lBRUgsSUFBSVYsaUJBQWlCRCxZQUFZTSxpQkFBaUIsSUFBSTtRQUNwRCxPQUFPTjtJQUNUO0lBRUEsSUFBSUcsWUFBWUgsWUFBWUksWUFBWTtJQUN4QyxPQUFPVixZQUFZcUIsSUFBSSxDQUFDZixhQUFhQyxhQUFhZSxHQUFHLENBQUMsbUJBQW1CYixZQUFZQSxVQUFVYyxXQUFXLEtBQUssd0JBQXdCO0FBQ3pJO0FBRUFDLE9BQU9DLE9BQU8sR0FBR3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZFBsYWluQmFja3NwYWNlLmpzPzFlYTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIEVkaXRvclN0YXRlID0gcmVxdWlyZShcIi4vRWRpdG9yU3RhdGVcIik7XG5cbnZhciBVbmljb2RlVXRpbHMgPSByZXF1aXJlKFwiZmJqcy9saWIvVW5pY29kZVV0aWxzXCIpO1xuXG52YXIgbW92ZVNlbGVjdGlvbkJhY2t3YXJkID0gcmVxdWlyZShcIi4vbW92ZVNlbGVjdGlvbkJhY2t3YXJkXCIpO1xuXG52YXIgcmVtb3ZlVGV4dFdpdGhTdHJhdGVneSA9IHJlcXVpcmUoXCIuL3JlbW92ZVRleHRXaXRoU3RyYXRlZ3lcIik7XG4vKipcbiAqIFJlbW92ZSB0aGUgc2VsZWN0ZWQgcmFuZ2UuIElmIHRoZSBjdXJzb3IgaXMgY29sbGFwc2VkLCByZW1vdmUgdGhlIHByZWNlZGluZ1xuICogY2hhcmFjdGVyLiBUaGlzIG9wZXJhdGlvbiBpcyBVbmljb2RlLWF3YXJlLCBzbyByZW1vdmluZyBhIHNpbmdsZSBjaGFyYWN0ZXJcbiAqIHdpbGwgcmVtb3ZlIGEgc3Vycm9nYXRlIHBhaXIgcHJvcGVybHkgYXMgd2VsbC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGtleUNvbW1hbmRQbGFpbkJhY2tzcGFjZShlZGl0b3JTdGF0ZSkge1xuICB2YXIgYWZ0ZXJSZW1vdmFsID0gcmVtb3ZlVGV4dFdpdGhTdHJhdGVneShlZGl0b3JTdGF0ZSwgZnVuY3Rpb24gKHN0cmF0ZWd5U3RhdGUpIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gc3RyYXRlZ3lTdGF0ZS5nZXRTZWxlY3Rpb24oKTtcbiAgICB2YXIgY29udGVudCA9IHN0cmF0ZWd5U3RhdGUuZ2V0Q3VycmVudENvbnRlbnQoKTtcbiAgICB2YXIga2V5ID0gc2VsZWN0aW9uLmdldEFuY2hvcktleSgpO1xuICAgIHZhciBvZmZzZXQgPSBzZWxlY3Rpb24uZ2V0QW5jaG9yT2Zmc2V0KCk7XG4gICAgdmFyIGNoYXJCZWhpbmQgPSBjb250ZW50LmdldEJsb2NrRm9yS2V5KGtleSkuZ2V0VGV4dCgpW29mZnNldCAtIDFdO1xuICAgIHJldHVybiBtb3ZlU2VsZWN0aW9uQmFja3dhcmQoc3RyYXRlZ3lTdGF0ZSwgY2hhckJlaGluZCA/IFVuaWNvZGVVdGlscy5nZXRVVEYxNkxlbmd0aChjaGFyQmVoaW5kLCAwKSA6IDEpO1xuICB9LCAnYmFja3dhcmQnKTtcblxuICBpZiAoYWZ0ZXJSZW1vdmFsID09PSBlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpKSB7XG4gICAgcmV0dXJuIGVkaXRvclN0YXRlO1xuICB9XG5cbiAgdmFyIHNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpO1xuICByZXR1cm4gRWRpdG9yU3RhdGUucHVzaChlZGl0b3JTdGF0ZSwgYWZ0ZXJSZW1vdmFsLnNldCgnc2VsZWN0aW9uQmVmb3JlJywgc2VsZWN0aW9uKSwgc2VsZWN0aW9uLmlzQ29sbGFwc2VkKCkgPyAnYmFja3NwYWNlLWNoYXJhY3RlcicgOiAncmVtb3ZlLXJhbmdlJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5Q29tbWFuZFBsYWluQmFja3NwYWNlOyJdLCJuYW1lcyI6WyJFZGl0b3JTdGF0ZSIsInJlcXVpcmUiLCJVbmljb2RlVXRpbHMiLCJtb3ZlU2VsZWN0aW9uQmFja3dhcmQiLCJyZW1vdmVUZXh0V2l0aFN0cmF0ZWd5Iiwia2V5Q29tbWFuZFBsYWluQmFja3NwYWNlIiwiZWRpdG9yU3RhdGUiLCJhZnRlclJlbW92YWwiLCJzdHJhdGVneVN0YXRlIiwic2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwiY29udGVudCIsImdldEN1cnJlbnRDb250ZW50Iiwia2V5IiwiZ2V0QW5jaG9yS2V5Iiwib2Zmc2V0IiwiZ2V0QW5jaG9yT2Zmc2V0IiwiY2hhckJlaGluZCIsImdldEJsb2NrRm9yS2V5IiwiZ2V0VGV4dCIsImdldFVURjE2TGVuZ3RoIiwicHVzaCIsInNldCIsImlzQ29sbGFwc2VkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandPlainBackspace.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandPlainDelete.js":
/*!************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandPlainDelete.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar UnicodeUtils = __webpack_require__(/*! fbjs/lib/UnicodeUtils */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\");\nvar moveSelectionForward = __webpack_require__(/*! ./moveSelectionForward */ \"(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionForward.js\");\nvar removeTextWithStrategy = __webpack_require__(/*! ./removeTextWithStrategy */ \"(app-pages-browser)/./node_modules/draft-js/lib/removeTextWithStrategy.js\");\n/**\n * Remove the selected range. If the cursor is collapsed, remove the following\n * character. This operation is Unicode-aware, so removing a single character\n * will remove a surrogate pair properly as well.\n */ function keyCommandPlainDelete(editorState) {\n    var afterRemoval = removeTextWithStrategy(editorState, function(strategyState) {\n        var selection = strategyState.getSelection();\n        var content = strategyState.getCurrentContent();\n        var key = selection.getAnchorKey();\n        var offset = selection.getAnchorOffset();\n        var charAhead = content.getBlockForKey(key).getText()[offset];\n        return moveSelectionForward(strategyState, charAhead ? UnicodeUtils.getUTF16Length(charAhead, 0) : 1);\n    }, \"forward\");\n    if (afterRemoval === editorState.getCurrentContent()) {\n        return editorState;\n    }\n    var selection = editorState.getSelection();\n    return EditorState.push(editorState, afterRemoval.set(\"selectionBefore\", selection), selection.isCollapsed() ? \"delete-character\" : \"remove-range\");\n}\nmodule.exports = keyCommandPlainDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZFBsYWluRGVsZXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUMscUZBQWU7QUFFekMsSUFBSUMsZUFBZUQsbUJBQU9BLENBQUMsMEZBQXVCO0FBRWxELElBQUlFLHVCQUF1QkYsbUJBQU9BLENBQUMsdUdBQXdCO0FBRTNELElBQUlHLHlCQUF5QkgsbUJBQU9BLENBQUMsMkdBQTBCO0FBQy9EOzs7O0NBSUMsR0FHRCxTQUFTSSxzQkFBc0JDLFdBQVc7SUFDeEMsSUFBSUMsZUFBZUgsdUJBQXVCRSxhQUFhLFNBQVVFLGFBQWE7UUFDNUUsSUFBSUMsWUFBWUQsY0FBY0UsWUFBWTtRQUMxQyxJQUFJQyxVQUFVSCxjQUFjSSxpQkFBaUI7UUFDN0MsSUFBSUMsTUFBTUosVUFBVUssWUFBWTtRQUNoQyxJQUFJQyxTQUFTTixVQUFVTyxlQUFlO1FBQ3RDLElBQUlDLFlBQVlOLFFBQVFPLGNBQWMsQ0FBQ0wsS0FBS00sT0FBTyxFQUFFLENBQUNKLE9BQU87UUFDN0QsT0FBT1oscUJBQXFCSyxlQUFlUyxZQUFZZixhQUFha0IsY0FBYyxDQUFDSCxXQUFXLEtBQUs7SUFDckcsR0FBRztJQUVILElBQUlWLGlCQUFpQkQsWUFBWU0saUJBQWlCLElBQUk7UUFDcEQsT0FBT047SUFDVDtJQUVBLElBQUlHLFlBQVlILFlBQVlJLFlBQVk7SUFDeEMsT0FBT1YsWUFBWXFCLElBQUksQ0FBQ2YsYUFBYUMsYUFBYWUsR0FBRyxDQUFDLG1CQUFtQmIsWUFBWUEsVUFBVWMsV0FBVyxLQUFLLHFCQUFxQjtBQUN0STtBQUVBQyxPQUFPQyxPQUFPLEdBQUdwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2tleUNvbW1hbmRQbGFpbkRlbGV0ZS5qcz84YTA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFZGl0b3JTdGF0ZSA9IHJlcXVpcmUoXCIuL0VkaXRvclN0YXRlXCIpO1xuXG52YXIgVW5pY29kZVV0aWxzID0gcmVxdWlyZShcImZianMvbGliL1VuaWNvZGVVdGlsc1wiKTtcblxudmFyIG1vdmVTZWxlY3Rpb25Gb3J3YXJkID0gcmVxdWlyZShcIi4vbW92ZVNlbGVjdGlvbkZvcndhcmRcIik7XG5cbnZhciByZW1vdmVUZXh0V2l0aFN0cmF0ZWd5ID0gcmVxdWlyZShcIi4vcmVtb3ZlVGV4dFdpdGhTdHJhdGVneVwiKTtcbi8qKlxuICogUmVtb3ZlIHRoZSBzZWxlY3RlZCByYW5nZS4gSWYgdGhlIGN1cnNvciBpcyBjb2xsYXBzZWQsIHJlbW92ZSB0aGUgZm9sbG93aW5nXG4gKiBjaGFyYWN0ZXIuIFRoaXMgb3BlcmF0aW9uIGlzIFVuaWNvZGUtYXdhcmUsIHNvIHJlbW92aW5nIGEgc2luZ2xlIGNoYXJhY3RlclxuICogd2lsbCByZW1vdmUgYSBzdXJyb2dhdGUgcGFpciBwcm9wZXJseSBhcyB3ZWxsLlxuICovXG5cblxuZnVuY3Rpb24ga2V5Q29tbWFuZFBsYWluRGVsZXRlKGVkaXRvclN0YXRlKSB7XG4gIHZhciBhZnRlclJlbW92YWwgPSByZW1vdmVUZXh0V2l0aFN0cmF0ZWd5KGVkaXRvclN0YXRlLCBmdW5jdGlvbiAoc3RyYXRlZ3lTdGF0ZSkge1xuICAgIHZhciBzZWxlY3Rpb24gPSBzdHJhdGVneVN0YXRlLmdldFNlbGVjdGlvbigpO1xuICAgIHZhciBjb250ZW50ID0gc3RyYXRlZ3lTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpO1xuICAgIHZhciBrZXkgPSBzZWxlY3Rpb24uZ2V0QW5jaG9yS2V5KCk7XG4gICAgdmFyIG9mZnNldCA9IHNlbGVjdGlvbi5nZXRBbmNob3JPZmZzZXQoKTtcbiAgICB2YXIgY2hhckFoZWFkID0gY29udGVudC5nZXRCbG9ja0ZvcktleShrZXkpLmdldFRleHQoKVtvZmZzZXRdO1xuICAgIHJldHVybiBtb3ZlU2VsZWN0aW9uRm9yd2FyZChzdHJhdGVneVN0YXRlLCBjaGFyQWhlYWQgPyBVbmljb2RlVXRpbHMuZ2V0VVRGMTZMZW5ndGgoY2hhckFoZWFkLCAwKSA6IDEpO1xuICB9LCAnZm9yd2FyZCcpO1xuXG4gIGlmIChhZnRlclJlbW92YWwgPT09IGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCkpIHtcbiAgICByZXR1cm4gZWRpdG9yU3RhdGU7XG4gIH1cblxuICB2YXIgc2VsZWN0aW9uID0gZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCk7XG4gIHJldHVybiBFZGl0b3JTdGF0ZS5wdXNoKGVkaXRvclN0YXRlLCBhZnRlclJlbW92YWwuc2V0KCdzZWxlY3Rpb25CZWZvcmUnLCBzZWxlY3Rpb24pLCBzZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSA/ICdkZWxldGUtY2hhcmFjdGVyJyA6ICdyZW1vdmUtcmFuZ2UnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBrZXlDb21tYW5kUGxhaW5EZWxldGU7Il0sIm5hbWVzIjpbIkVkaXRvclN0YXRlIiwicmVxdWlyZSIsIlVuaWNvZGVVdGlscyIsIm1vdmVTZWxlY3Rpb25Gb3J3YXJkIiwicmVtb3ZlVGV4dFdpdGhTdHJhdGVneSIsImtleUNvbW1hbmRQbGFpbkRlbGV0ZSIsImVkaXRvclN0YXRlIiwiYWZ0ZXJSZW1vdmFsIiwic3RyYXRlZ3lTdGF0ZSIsInNlbGVjdGlvbiIsImdldFNlbGVjdGlvbiIsImNvbnRlbnQiLCJnZXRDdXJyZW50Q29udGVudCIsImtleSIsImdldEFuY2hvcktleSIsIm9mZnNldCIsImdldEFuY2hvck9mZnNldCIsImNoYXJBaGVhZCIsImdldEJsb2NrRm9yS2V5IiwiZ2V0VGV4dCIsImdldFVURjE2TGVuZ3RoIiwicHVzaCIsInNldCIsImlzQ29sbGFwc2VkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandPlainDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandTransposeCharacters.js":
/*!********************************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandTransposeCharacters.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nvar getContentStateFragment = __webpack_require__(/*! ./getContentStateFragment */ \"(app-pages-browser)/./node_modules/draft-js/lib/getContentStateFragment.js\");\n/**\n * Transpose the characters on either side of a collapsed cursor, or\n * if the cursor is at the end of the block, transpose the last two\n * characters.\n */ function keyCommandTransposeCharacters(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed()) {\n        return editorState;\n    }\n    var offset = selection.getAnchorOffset();\n    if (offset === 0) {\n        return editorState;\n    }\n    var blockKey = selection.getAnchorKey();\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(blockKey);\n    var length = block.getLength(); // Nothing to transpose if there aren't two characters.\n    if (length <= 1) {\n        return editorState;\n    }\n    var removalRange;\n    var finalSelection;\n    if (offset === length) {\n        // The cursor is at the end of the block. Swap the last two characters.\n        removalRange = selection.set(\"anchorOffset\", offset - 1);\n        finalSelection = selection;\n    } else {\n        removalRange = selection.set(\"focusOffset\", offset + 1);\n        finalSelection = removalRange.set(\"anchorOffset\", offset + 1);\n    } // Extract the character to move as a fragment. This preserves its\n    // styling and entity, if any.\n    var movedFragment = getContentStateFragment(content, removalRange);\n    var afterRemoval = DraftModifier.removeRange(content, removalRange, \"backward\"); // After the removal, the insertion target is one character back.\n    var selectionAfter = afterRemoval.getSelectionAfter();\n    var targetOffset = selectionAfter.getAnchorOffset() - 1;\n    var targetRange = selectionAfter.merge({\n        anchorOffset: targetOffset,\n        focusOffset: targetOffset\n    });\n    var afterInsert = DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n    var newEditorState = EditorState.push(editorState, afterInsert, \"insert-fragment\");\n    return EditorState.acceptSelection(newEditorState, finalSelection);\n}\nmodule.exports = keyCommandTransposeCharacters;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZFRyYW5zcG9zZUNoYXJhY3RlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxnQkFBZ0JDLG1CQUFPQSxDQUFDLHlGQUFpQjtBQUU3QyxJQUFJQyxjQUFjRCxtQkFBT0EsQ0FBQyxxRkFBZTtBQUV6QyxJQUFJRSwwQkFBMEJGLG1CQUFPQSxDQUFDLDZHQUEyQjtBQUNqRTs7OztDQUlDLEdBR0QsU0FBU0csOEJBQThCQyxXQUFXO0lBQ2hELElBQUlDLFlBQVlELFlBQVlFLFlBQVk7SUFFeEMsSUFBSSxDQUFDRCxVQUFVRSxXQUFXLElBQUk7UUFDNUIsT0FBT0g7SUFDVDtJQUVBLElBQUlJLFNBQVNILFVBQVVJLGVBQWU7SUFFdEMsSUFBSUQsV0FBVyxHQUFHO1FBQ2hCLE9BQU9KO0lBQ1Q7SUFFQSxJQUFJTSxXQUFXTCxVQUFVTSxZQUFZO0lBQ3JDLElBQUlDLFVBQVVSLFlBQVlTLGlCQUFpQjtJQUMzQyxJQUFJQyxRQUFRRixRQUFRRyxjQUFjLENBQUNMO0lBQ25DLElBQUlNLFNBQVNGLE1BQU1HLFNBQVMsSUFBSSx1REFBdUQ7SUFFdkYsSUFBSUQsVUFBVSxHQUFHO1FBQ2YsT0FBT1o7SUFDVDtJQUVBLElBQUljO0lBQ0osSUFBSUM7SUFFSixJQUFJWCxXQUFXUSxRQUFRO1FBQ3JCLHVFQUF1RTtRQUN2RUUsZUFBZWIsVUFBVWUsR0FBRyxDQUFDLGdCQUFnQlosU0FBUztRQUN0RFcsaUJBQWlCZDtJQUNuQixPQUFPO1FBQ0xhLGVBQWViLFVBQVVlLEdBQUcsQ0FBQyxlQUFlWixTQUFTO1FBQ3JEVyxpQkFBaUJELGFBQWFFLEdBQUcsQ0FBQyxnQkFBZ0JaLFNBQVM7SUFDN0QsRUFBRSxrRUFBa0U7SUFDcEUsOEJBQThCO0lBRzlCLElBQUlhLGdCQUFnQm5CLHdCQUF3QlUsU0FBU007SUFDckQsSUFBSUksZUFBZXZCLGNBQWN3QixXQUFXLENBQUNYLFNBQVNNLGNBQWMsYUFBYSxpRUFBaUU7SUFFbEosSUFBSU0saUJBQWlCRixhQUFhRyxpQkFBaUI7SUFDbkQsSUFBSUMsZUFBZUYsZUFBZWYsZUFBZSxLQUFLO0lBQ3RELElBQUlrQixjQUFjSCxlQUFlSSxLQUFLLENBQUM7UUFDckNDLGNBQWNIO1FBQ2RJLGFBQWFKO0lBQ2Y7SUFDQSxJQUFJSyxjQUFjaEMsY0FBY2lDLG1CQUFtQixDQUFDVixjQUFjSyxhQUFhTjtJQUMvRSxJQUFJWSxpQkFBaUJoQyxZQUFZaUMsSUFBSSxDQUFDOUIsYUFBYTJCLGFBQWE7SUFDaEUsT0FBTzlCLFlBQVlrQyxlQUFlLENBQUNGLGdCQUFnQmQ7QUFDckQ7QUFFQWlCLE9BQU9DLE9BQU8sR0FBR2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZFRyYW5zcG9zZUNoYXJhY3RlcnMuanM/M2JkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRHJhZnRNb2RpZmllciA9IHJlcXVpcmUoXCIuL0RyYWZ0TW9kaWZpZXJcIik7XG5cbnZhciBFZGl0b3JTdGF0ZSA9IHJlcXVpcmUoXCIuL0VkaXRvclN0YXRlXCIpO1xuXG52YXIgZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQgPSByZXF1aXJlKFwiLi9nZXRDb250ZW50U3RhdGVGcmFnbWVudFwiKTtcbi8qKlxuICogVHJhbnNwb3NlIHRoZSBjaGFyYWN0ZXJzIG9uIGVpdGhlciBzaWRlIG9mIGEgY29sbGFwc2VkIGN1cnNvciwgb3JcbiAqIGlmIHRoZSBjdXJzb3IgaXMgYXQgdGhlIGVuZCBvZiB0aGUgYmxvY2ssIHRyYW5zcG9zZSB0aGUgbGFzdCB0d29cbiAqIGNoYXJhY3RlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBrZXlDb21tYW5kVHJhbnNwb3NlQ2hhcmFjdGVycyhlZGl0b3JTdGF0ZSkge1xuICB2YXIgc2VsZWN0aW9uID0gZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCk7XG5cbiAgaWYgKCFzZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSkge1xuICAgIHJldHVybiBlZGl0b3JTdGF0ZTtcbiAgfVxuXG4gIHZhciBvZmZzZXQgPSBzZWxlY3Rpb24uZ2V0QW5jaG9yT2Zmc2V0KCk7XG5cbiAgaWYgKG9mZnNldCA9PT0gMCkge1xuICAgIHJldHVybiBlZGl0b3JTdGF0ZTtcbiAgfVxuXG4gIHZhciBibG9ja0tleSA9IHNlbGVjdGlvbi5nZXRBbmNob3JLZXkoKTtcbiAgdmFyIGNvbnRlbnQgPSBlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpO1xuICB2YXIgYmxvY2sgPSBjb250ZW50LmdldEJsb2NrRm9yS2V5KGJsb2NrS2V5KTtcbiAgdmFyIGxlbmd0aCA9IGJsb2NrLmdldExlbmd0aCgpOyAvLyBOb3RoaW5nIHRvIHRyYW5zcG9zZSBpZiB0aGVyZSBhcmVuJ3QgdHdvIGNoYXJhY3RlcnMuXG5cbiAgaWYgKGxlbmd0aCA8PSAxKSB7XG4gICAgcmV0dXJuIGVkaXRvclN0YXRlO1xuICB9XG5cbiAgdmFyIHJlbW92YWxSYW5nZTtcbiAgdmFyIGZpbmFsU2VsZWN0aW9uO1xuXG4gIGlmIChvZmZzZXQgPT09IGxlbmd0aCkge1xuICAgIC8vIFRoZSBjdXJzb3IgaXMgYXQgdGhlIGVuZCBvZiB0aGUgYmxvY2suIFN3YXAgdGhlIGxhc3QgdHdvIGNoYXJhY3RlcnMuXG4gICAgcmVtb3ZhbFJhbmdlID0gc2VsZWN0aW9uLnNldCgnYW5jaG9yT2Zmc2V0Jywgb2Zmc2V0IC0gMSk7XG4gICAgZmluYWxTZWxlY3Rpb24gPSBzZWxlY3Rpb247XG4gIH0gZWxzZSB7XG4gICAgcmVtb3ZhbFJhbmdlID0gc2VsZWN0aW9uLnNldCgnZm9jdXNPZmZzZXQnLCBvZmZzZXQgKyAxKTtcbiAgICBmaW5hbFNlbGVjdGlvbiA9IHJlbW92YWxSYW5nZS5zZXQoJ2FuY2hvck9mZnNldCcsIG9mZnNldCArIDEpO1xuICB9IC8vIEV4dHJhY3QgdGhlIGNoYXJhY3RlciB0byBtb3ZlIGFzIGEgZnJhZ21lbnQuIFRoaXMgcHJlc2VydmVzIGl0c1xuICAvLyBzdHlsaW5nIGFuZCBlbnRpdHksIGlmIGFueS5cblxuXG4gIHZhciBtb3ZlZEZyYWdtZW50ID0gZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQoY29udGVudCwgcmVtb3ZhbFJhbmdlKTtcbiAgdmFyIGFmdGVyUmVtb3ZhbCA9IERyYWZ0TW9kaWZpZXIucmVtb3ZlUmFuZ2UoY29udGVudCwgcmVtb3ZhbFJhbmdlLCAnYmFja3dhcmQnKTsgLy8gQWZ0ZXIgdGhlIHJlbW92YWwsIHRoZSBpbnNlcnRpb24gdGFyZ2V0IGlzIG9uZSBjaGFyYWN0ZXIgYmFjay5cblxuICB2YXIgc2VsZWN0aW9uQWZ0ZXIgPSBhZnRlclJlbW92YWwuZ2V0U2VsZWN0aW9uQWZ0ZXIoKTtcbiAgdmFyIHRhcmdldE9mZnNldCA9IHNlbGVjdGlvbkFmdGVyLmdldEFuY2hvck9mZnNldCgpIC0gMTtcbiAgdmFyIHRhcmdldFJhbmdlID0gc2VsZWN0aW9uQWZ0ZXIubWVyZ2Uoe1xuICAgIGFuY2hvck9mZnNldDogdGFyZ2V0T2Zmc2V0LFxuICAgIGZvY3VzT2Zmc2V0OiB0YXJnZXRPZmZzZXRcbiAgfSk7XG4gIHZhciBhZnRlckluc2VydCA9IERyYWZ0TW9kaWZpZXIucmVwbGFjZVdpdGhGcmFnbWVudChhZnRlclJlbW92YWwsIHRhcmdldFJhbmdlLCBtb3ZlZEZyYWdtZW50KTtcbiAgdmFyIG5ld0VkaXRvclN0YXRlID0gRWRpdG9yU3RhdGUucHVzaChlZGl0b3JTdGF0ZSwgYWZ0ZXJJbnNlcnQsICdpbnNlcnQtZnJhZ21lbnQnKTtcbiAgcmV0dXJuIEVkaXRvclN0YXRlLmFjY2VwdFNlbGVjdGlvbihuZXdFZGl0b3JTdGF0ZSwgZmluYWxTZWxlY3Rpb24pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleUNvbW1hbmRUcmFuc3Bvc2VDaGFyYWN0ZXJzOyJdLCJuYW1lcyI6WyJEcmFmdE1vZGlmaWVyIiwicmVxdWlyZSIsIkVkaXRvclN0YXRlIiwiZ2V0Q29udGVudFN0YXRlRnJhZ21lbnQiLCJrZXlDb21tYW5kVHJhbnNwb3NlQ2hhcmFjdGVycyIsImVkaXRvclN0YXRlIiwic2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwiaXNDb2xsYXBzZWQiLCJvZmZzZXQiLCJnZXRBbmNob3JPZmZzZXQiLCJibG9ja0tleSIsImdldEFuY2hvcktleSIsImNvbnRlbnQiLCJnZXRDdXJyZW50Q29udGVudCIsImJsb2NrIiwiZ2V0QmxvY2tGb3JLZXkiLCJsZW5ndGgiLCJnZXRMZW5ndGgiLCJyZW1vdmFsUmFuZ2UiLCJmaW5hbFNlbGVjdGlvbiIsInNldCIsIm1vdmVkRnJhZ21lbnQiLCJhZnRlclJlbW92YWwiLCJyZW1vdmVSYW5nZSIsInNlbGVjdGlvbkFmdGVyIiwiZ2V0U2VsZWN0aW9uQWZ0ZXIiLCJ0YXJnZXRPZmZzZXQiLCJ0YXJnZXRSYW5nZSIsIm1lcmdlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNPZmZzZXQiLCJhZnRlckluc2VydCIsInJlcGxhY2VXaXRoRnJhZ21lbnQiLCJuZXdFZGl0b3JTdGF0ZSIsInB1c2giLCJhY2NlcHRTZWxlY3Rpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandTransposeCharacters.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/keyCommandUndo.js":
/*!*****************************************************!*\
  !*** ./node_modules/draft-js/lib/keyCommandUndo.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar EditorState = __webpack_require__(/*! ./EditorState */ \"(app-pages-browser)/./node_modules/draft-js/lib/EditorState.js\");\nfunction keyCommandUndo(e, editorState, updateFn) {\n    var undoneState = EditorState.undo(editorState); // If the last change to occur was a spellcheck change, allow the undo\n    // event to fall through to the browser. This allows the browser to record\n    // the unwanted change, which should soon lead it to learn not to suggest\n    // the correction again.\n    if (editorState.getLastChangeType() === \"spellcheck-change\") {\n        var nativelyRenderedContent = undoneState.getCurrentContent();\n        updateFn(EditorState.set(undoneState, {\n            nativelyRenderedContent: nativelyRenderedContent\n        }));\n        return;\n    } // Otheriwse, manage the undo behavior manually.\n    e.preventDefault();\n    if (!editorState.getNativelyRenderedContent()) {\n        updateFn(undoneState);\n        return;\n    } // Trigger a re-render with the current content state to ensure that the\n    // component tree has up-to-date props for comparison.\n    updateFn(EditorState.set(editorState, {\n        nativelyRenderedContent: null\n    })); // Wait to ensure that the re-render has occurred before performing\n    // the undo action.\n    setTimeout(function() {\n        updateFn(undoneState);\n    }, 0);\n}\nmodule.exports = keyCommandUndo;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIva2V5Q29tbWFuZFVuZG8uanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQyxxRkFBZTtBQUV6QyxTQUFTQyxlQUFlQyxDQUFDLEVBQUVDLFdBQVcsRUFBRUMsUUFBUTtJQUM5QyxJQUFJQyxjQUFjTixZQUFZTyxJQUFJLENBQUNILGNBQWMsc0VBQXNFO0lBQ3ZILDBFQUEwRTtJQUMxRSx5RUFBeUU7SUFDekUsd0JBQXdCO0lBRXhCLElBQUlBLFlBQVlJLGlCQUFpQixPQUFPLHFCQUFxQjtRQUMzRCxJQUFJQywwQkFBMEJILFlBQVlJLGlCQUFpQjtRQUMzREwsU0FBU0wsWUFBWVcsR0FBRyxDQUFDTCxhQUFhO1lBQ3BDRyx5QkFBeUJBO1FBQzNCO1FBQ0E7SUFDRixFQUFFLGdEQUFnRDtJQUdsRE4sRUFBRVMsY0FBYztJQUVoQixJQUFJLENBQUNSLFlBQVlTLDBCQUEwQixJQUFJO1FBQzdDUixTQUFTQztRQUNUO0lBQ0YsRUFBRSx3RUFBd0U7SUFDMUUsc0RBQXNEO0lBR3RERCxTQUFTTCxZQUFZVyxHQUFHLENBQUNQLGFBQWE7UUFDcENLLHlCQUF5QjtJQUMzQixLQUFLLG1FQUFtRTtJQUN4RSxtQkFBbUI7SUFFbkJLLFdBQVc7UUFDVFQsU0FBU0M7SUFDWCxHQUFHO0FBQ0w7QUFFQVMsT0FBT0MsT0FBTyxHQUFHZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL2tleUNvbW1hbmRVbmRvLmpzPzgwNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIEVkaXRvclN0YXRlID0gcmVxdWlyZShcIi4vRWRpdG9yU3RhdGVcIik7XG5cbmZ1bmN0aW9uIGtleUNvbW1hbmRVbmRvKGUsIGVkaXRvclN0YXRlLCB1cGRhdGVGbikge1xuICB2YXIgdW5kb25lU3RhdGUgPSBFZGl0b3JTdGF0ZS51bmRvKGVkaXRvclN0YXRlKTsgLy8gSWYgdGhlIGxhc3QgY2hhbmdlIHRvIG9jY3VyIHdhcyBhIHNwZWxsY2hlY2sgY2hhbmdlLCBhbGxvdyB0aGUgdW5kb1xuICAvLyBldmVudCB0byBmYWxsIHRocm91Z2ggdG8gdGhlIGJyb3dzZXIuIFRoaXMgYWxsb3dzIHRoZSBicm93c2VyIHRvIHJlY29yZFxuICAvLyB0aGUgdW53YW50ZWQgY2hhbmdlLCB3aGljaCBzaG91bGQgc29vbiBsZWFkIGl0IHRvIGxlYXJuIG5vdCB0byBzdWdnZXN0XG4gIC8vIHRoZSBjb3JyZWN0aW9uIGFnYWluLlxuXG4gIGlmIChlZGl0b3JTdGF0ZS5nZXRMYXN0Q2hhbmdlVHlwZSgpID09PSAnc3BlbGxjaGVjay1jaGFuZ2UnKSB7XG4gICAgdmFyIG5hdGl2ZWx5UmVuZGVyZWRDb250ZW50ID0gdW5kb25lU3RhdGUuZ2V0Q3VycmVudENvbnRlbnQoKTtcbiAgICB1cGRhdGVGbihFZGl0b3JTdGF0ZS5zZXQodW5kb25lU3RhdGUsIHtcbiAgICAgIG5hdGl2ZWx5UmVuZGVyZWRDb250ZW50OiBuYXRpdmVseVJlbmRlcmVkQ29udGVudFxuICAgIH0pKTtcbiAgICByZXR1cm47XG4gIH0gLy8gT3RoZXJpd3NlLCBtYW5hZ2UgdGhlIHVuZG8gYmVoYXZpb3IgbWFudWFsbHkuXG5cblxuICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgaWYgKCFlZGl0b3JTdGF0ZS5nZXROYXRpdmVseVJlbmRlcmVkQ29udGVudCgpKSB7XG4gICAgdXBkYXRlRm4odW5kb25lU3RhdGUpO1xuICAgIHJldHVybjtcbiAgfSAvLyBUcmlnZ2VyIGEgcmUtcmVuZGVyIHdpdGggdGhlIGN1cnJlbnQgY29udGVudCBzdGF0ZSB0byBlbnN1cmUgdGhhdCB0aGVcbiAgLy8gY29tcG9uZW50IHRyZWUgaGFzIHVwLXRvLWRhdGUgcHJvcHMgZm9yIGNvbXBhcmlzb24uXG5cblxuICB1cGRhdGVGbihFZGl0b3JTdGF0ZS5zZXQoZWRpdG9yU3RhdGUsIHtcbiAgICBuYXRpdmVseVJlbmRlcmVkQ29udGVudDogbnVsbFxuICB9KSk7IC8vIFdhaXQgdG8gZW5zdXJlIHRoYXQgdGhlIHJlLXJlbmRlciBoYXMgb2NjdXJyZWQgYmVmb3JlIHBlcmZvcm1pbmdcbiAgLy8gdGhlIHVuZG8gYWN0aW9uLlxuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgIHVwZGF0ZUZuKHVuZG9uZVN0YXRlKTtcbiAgfSwgMCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5Q29tbWFuZFVuZG87Il0sIm5hbWVzIjpbIkVkaXRvclN0YXRlIiwicmVxdWlyZSIsImtleUNvbW1hbmRVbmRvIiwiZSIsImVkaXRvclN0YXRlIiwidXBkYXRlRm4iLCJ1bmRvbmVTdGF0ZSIsInVuZG8iLCJnZXRMYXN0Q2hhbmdlVHlwZSIsIm5hdGl2ZWx5UmVuZGVyZWRDb250ZW50IiwiZ2V0Q3VycmVudENvbnRlbnQiLCJzZXQiLCJwcmV2ZW50RGVmYXVsdCIsImdldE5hdGl2ZWx5UmVuZGVyZWRDb250ZW50Iiwic2V0VGltZW91dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/keyCommandUndo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/modifyBlockForContentState.js":
/*!*****************************************************************!*\
  !*** ./node_modules/draft-js/lib/modifyBlockForContentState.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar Map = Immutable.Map;\nfunction modifyBlockForContentState(contentState, selectionState, operation) {\n    var startKey = selectionState.getStartKey();\n    var endKey = selectionState.getEndKey();\n    var blockMap = contentState.getBlockMap();\n    var newBlocks = blockMap.toSeq().skipUntil(function(_, k) {\n        return k === startKey;\n    }).takeUntil(function(_, k) {\n        return k === endKey;\n    }).concat(Map([\n        [\n            endKey,\n            blockMap.get(endKey)\n        ]\n    ])).map(operation);\n    return contentState.merge({\n        blockMap: blockMap.merge(newBlocks),\n        selectionBefore: selectionState,\n        selectionAfter: selectionState\n    });\n}\nmodule.exports = modifyBlockForContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvbW9kaWZ5QmxvY2tGb3JDb250ZW50U3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyx1R0FBVztBQUVuQyxJQUFJQyxNQUFNRixVQUFVRSxHQUFHO0FBRXZCLFNBQVNDLDJCQUEyQkMsWUFBWSxFQUFFQyxjQUFjLEVBQUVDLFNBQVM7SUFDekUsSUFBSUMsV0FBV0YsZUFBZUcsV0FBVztJQUN6QyxJQUFJQyxTQUFTSixlQUFlSyxTQUFTO0lBQ3JDLElBQUlDLFdBQVdQLGFBQWFRLFdBQVc7SUFDdkMsSUFBSUMsWUFBWUYsU0FBU0csS0FBSyxHQUFHQyxTQUFTLENBQUMsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQ3ZELE9BQU9BLE1BQU1WO0lBQ2YsR0FBR1csU0FBUyxDQUFDLFNBQVVGLENBQUMsRUFBRUMsQ0FBQztRQUN6QixPQUFPQSxNQUFNUjtJQUNmLEdBQUdVLE1BQU0sQ0FBQ2pCLElBQUk7UUFBQztZQUFDTztZQUFRRSxTQUFTUyxHQUFHLENBQUNYO1NBQVE7S0FBQyxHQUFHWSxHQUFHLENBQUNmO0lBQ3JELE9BQU9GLGFBQWFrQixLQUFLLENBQUM7UUFDeEJYLFVBQVVBLFNBQVNXLEtBQUssQ0FBQ1Q7UUFDekJVLGlCQUFpQmxCO1FBQ2pCbUIsZ0JBQWdCbkI7SUFDbEI7QUFDRjtBQUVBb0IsT0FBT0MsT0FBTyxHQUFHdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi9tb2RpZnlCbG9ja0ZvckNvbnRlbnRTdGF0ZS5qcz82MzJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBJbW11dGFibGUgPSByZXF1aXJlKFwiaW1tdXRhYmxlXCIpO1xuXG52YXIgTWFwID0gSW1tdXRhYmxlLk1hcDtcblxuZnVuY3Rpb24gbW9kaWZ5QmxvY2tGb3JDb250ZW50U3RhdGUoY29udGVudFN0YXRlLCBzZWxlY3Rpb25TdGF0ZSwgb3BlcmF0aW9uKSB7XG4gIHZhciBzdGFydEtleSA9IHNlbGVjdGlvblN0YXRlLmdldFN0YXJ0S2V5KCk7XG4gIHZhciBlbmRLZXkgPSBzZWxlY3Rpb25TdGF0ZS5nZXRFbmRLZXkoKTtcbiAgdmFyIGJsb2NrTWFwID0gY29udGVudFN0YXRlLmdldEJsb2NrTWFwKCk7XG4gIHZhciBuZXdCbG9ja3MgPSBibG9ja01hcC50b1NlcSgpLnNraXBVbnRpbChmdW5jdGlvbiAoXywgaykge1xuICAgIHJldHVybiBrID09PSBzdGFydEtleTtcbiAgfSkudGFrZVVudGlsKGZ1bmN0aW9uIChfLCBrKSB7XG4gICAgcmV0dXJuIGsgPT09IGVuZEtleTtcbiAgfSkuY29uY2F0KE1hcChbW2VuZEtleSwgYmxvY2tNYXAuZ2V0KGVuZEtleSldXSkpLm1hcChvcGVyYXRpb24pO1xuICByZXR1cm4gY29udGVudFN0YXRlLm1lcmdlKHtcbiAgICBibG9ja01hcDogYmxvY2tNYXAubWVyZ2UobmV3QmxvY2tzKSxcbiAgICBzZWxlY3Rpb25CZWZvcmU6IHNlbGVjdGlvblN0YXRlLFxuICAgIHNlbGVjdGlvbkFmdGVyOiBzZWxlY3Rpb25TdGF0ZVxuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtb2RpZnlCbG9ja0ZvckNvbnRlbnRTdGF0ZTsiXSwibmFtZXMiOlsiSW1tdXRhYmxlIiwicmVxdWlyZSIsIk1hcCIsIm1vZGlmeUJsb2NrRm9yQ29udGVudFN0YXRlIiwiY29udGVudFN0YXRlIiwic2VsZWN0aW9uU3RhdGUiLCJvcGVyYXRpb24iLCJzdGFydEtleSIsImdldFN0YXJ0S2V5IiwiZW5kS2V5IiwiZ2V0RW5kS2V5IiwiYmxvY2tNYXAiLCJnZXRCbG9ja01hcCIsIm5ld0Jsb2NrcyIsInRvU2VxIiwic2tpcFVudGlsIiwiXyIsImsiLCJ0YWtlVW50aWwiLCJjb25jYXQiLCJnZXQiLCJtYXAiLCJtZXJnZSIsInNlbGVjdGlvbkJlZm9yZSIsInNlbGVjdGlvbkFmdGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/modifyBlockForContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/moveBlockInContentState.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/moveBlockInContentState.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar getNextDelimiterBlockKey = __webpack_require__(/*! ./getNextDelimiterBlockKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/getNextDelimiterBlockKey.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar OrderedMap = Immutable.OrderedMap, List = Immutable.List;\nvar transformBlock = function transformBlock(key, blockMap, func) {\n    if (!key) {\n        return;\n    }\n    var block = blockMap.get(key);\n    if (!block) {\n        return;\n    }\n    blockMap.set(key, func(block));\n};\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlockToBeMoved, originalTargetBlock, insertionMode, isExperimentalTreeBlock) {\n    if (!isExperimentalTreeBlock) {\n        return blockMap;\n    } // possible values of 'insertionMode' are: 'after', 'before'\n    var isInsertedAfterTarget = insertionMode === \"after\";\n    var originalBlockKey = originalBlockToBeMoved.getKey();\n    var originalTargetKey = originalTargetBlock.getKey();\n    var originalParentKey = originalBlockToBeMoved.getParentKey();\n    var originalNextSiblingKey = originalBlockToBeMoved.getNextSiblingKey();\n    var originalPrevSiblingKey = originalBlockToBeMoved.getPrevSiblingKey();\n    var newParentKey = originalTargetBlock.getParentKey();\n    var newNextSiblingKey = isInsertedAfterTarget ? originalTargetBlock.getNextSiblingKey() : originalTargetKey;\n    var newPrevSiblingKey = isInsertedAfterTarget ? originalTargetKey : originalTargetBlock.getPrevSiblingKey();\n    return blockMap.withMutations(function(blocks) {\n        // update old parent\n        transformBlock(originalParentKey, blocks, function(block) {\n            var parentChildrenList = block.getChildKeys();\n            return block.merge({\n                children: parentChildrenList[\"delete\"](parentChildrenList.indexOf(originalBlockKey))\n            });\n        }); // update old prev\n        transformBlock(originalPrevSiblingKey, blocks, function(block) {\n            return block.merge({\n                nextSibling: originalNextSiblingKey\n            });\n        }); // update old next\n        transformBlock(originalNextSiblingKey, blocks, function(block) {\n            return block.merge({\n                prevSibling: originalPrevSiblingKey\n            });\n        }); // update new next\n        transformBlock(newNextSiblingKey, blocks, function(block) {\n            return block.merge({\n                prevSibling: originalBlockKey\n            });\n        }); // update new prev\n        transformBlock(newPrevSiblingKey, blocks, function(block) {\n            return block.merge({\n                nextSibling: originalBlockKey\n            });\n        }); // update new parent\n        transformBlock(newParentKey, blocks, function(block) {\n            var newParentChildrenList = block.getChildKeys();\n            var targetBlockIndex = newParentChildrenList.indexOf(originalTargetKey);\n            var insertionIndex = isInsertedAfterTarget ? targetBlockIndex + 1 : targetBlockIndex !== 0 ? targetBlockIndex - 1 : 0;\n            var newChildrenArray = newParentChildrenList.toArray();\n            newChildrenArray.splice(insertionIndex, 0, originalBlockKey);\n            return block.merge({\n                children: List(newChildrenArray)\n            });\n        }); // update block\n        transformBlock(originalBlockKey, blocks, function(block) {\n            return block.merge({\n                nextSibling: newNextSiblingKey,\n                prevSibling: newPrevSiblingKey,\n                parent: newParentKey\n            });\n        });\n    });\n};\nvar moveBlockInContentState = function moveBlockInContentState(contentState, blockToBeMoved, targetBlock, insertionMode) {\n    !(insertionMode !== \"replace\") ?  true ? invariant(false, \"Replacing blocks is not supported.\") : 0 : void 0;\n    var targetKey = targetBlock.getKey();\n    var blockKey = blockToBeMoved.getKey();\n    !(blockKey !== targetKey) ?  true ? invariant(false, \"Block cannot be moved next to itself.\") : 0 : void 0;\n    var blockMap = contentState.getBlockMap();\n    var isExperimentalTreeBlock = blockToBeMoved instanceof ContentBlockNode;\n    var blocksToBeMoved = [\n        blockToBeMoved\n    ];\n    var blockMapWithoutBlocksToBeMoved = blockMap[\"delete\"](blockKey);\n    if (isExperimentalTreeBlock) {\n        blocksToBeMoved = [];\n        blockMapWithoutBlocksToBeMoved = blockMap.withMutations(function(blocks) {\n            var nextSiblingKey = blockToBeMoved.getNextSiblingKey();\n            var nextDelimiterBlockKey = getNextDelimiterBlockKey(blockToBeMoved, blocks);\n            blocks.toSeq().skipUntil(function(block) {\n                return block.getKey() === blockKey;\n            }).takeWhile(function(block) {\n                var key = block.getKey();\n                var isBlockToBeMoved = key === blockKey;\n                var hasNextSiblingAndIsNotNextSibling = nextSiblingKey && key !== nextSiblingKey;\n                var doesNotHaveNextSiblingAndIsNotDelimiter = !nextSiblingKey && block.getParentKey() && (!nextDelimiterBlockKey || key !== nextDelimiterBlockKey);\n                return !!(isBlockToBeMoved || hasNextSiblingAndIsNotNextSibling || doesNotHaveNextSiblingAndIsNotDelimiter);\n            }).forEach(function(block) {\n                blocksToBeMoved.push(block);\n                blocks[\"delete\"](block.getKey());\n            });\n        });\n    }\n    var blocksBefore = blockMapWithoutBlocksToBeMoved.toSeq().takeUntil(function(v) {\n        return v === targetBlock;\n    });\n    var blocksAfter = blockMapWithoutBlocksToBeMoved.toSeq().skipUntil(function(v) {\n        return v === targetBlock;\n    }).skip(1);\n    var slicedBlocks = blocksToBeMoved.map(function(block) {\n        return [\n            block.getKey(),\n            block\n        ];\n    });\n    var newBlocks = OrderedMap();\n    if (insertionMode === \"before\") {\n        var blockBefore = contentState.getBlockBefore(targetKey);\n        !(!blockBefore || blockBefore.getKey() !== blockToBeMoved.getKey()) ?  true ? invariant(false, \"Block cannot be moved next to itself.\") : 0 : void 0;\n        newBlocks = blocksBefore.concat([].concat(slicedBlocks, [\n            [\n                targetKey,\n                targetBlock\n            ]\n        ]), blocksAfter).toOrderedMap();\n    } else if (insertionMode === \"after\") {\n        var blockAfter = contentState.getBlockAfter(targetKey);\n        !(!blockAfter || blockAfter.getKey() !== blockKey) ?  true ? invariant(false, \"Block cannot be moved next to itself.\") : 0 : void 0;\n        newBlocks = blocksBefore.concat([\n            [\n                targetKey,\n                targetBlock\n            ]\n        ].concat(slicedBlocks), blocksAfter).toOrderedMap();\n    }\n    return contentState.merge({\n        blockMap: updateBlockMapLinks(newBlocks, blockToBeMoved, targetBlock, insertionMode, isExperimentalTreeBlock),\n        selectionBefore: contentState.getSelectionAfter(),\n        selectionAfter: contentState.getSelectionAfter().merge({\n            anchorKey: blockKey,\n            focusKey: blockKey\n        })\n    });\n};\nmodule.exports = moveBlockInContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/moveBlockInContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionBackward.js":
/*!************************************************************!*\
  !*** ./node_modules/draft-js/lib/moveSelectionBackward.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar warning = __webpack_require__(/*! fbjs/lib/warning */ \"(app-pages-browser)/./node_modules/fbjs/lib/warning.js\");\n/**\n * Given a collapsed selection, move the focus `maxDistance` backward within\n * the selected block. If the selection will go beyond the start of the block,\n * move focus to the end of the previous block, but no further.\n *\n * This function is not Unicode-aware, so surrogate pairs will be treated\n * as having length 2.\n */ function moveSelectionBackward(editorState, maxDistance) {\n    var selection = editorState.getSelection(); // Should eventually make this an invariant\n     true ? warning(selection.isCollapsed(), \"moveSelectionBackward should only be called with a collapsed SelectionState\") : 0;\n    var content = editorState.getCurrentContent();\n    var key = selection.getStartKey();\n    var offset = selection.getStartOffset();\n    var focusKey = key;\n    var focusOffset = 0;\n    if (maxDistance > offset) {\n        var keyBefore = content.getKeyBefore(key);\n        if (keyBefore == null) {\n            focusKey = key;\n        } else {\n            focusKey = keyBefore;\n            var blockBefore = content.getBlockForKey(keyBefore);\n            focusOffset = blockBefore.getText().length;\n        }\n    } else {\n        focusOffset = offset - maxDistance;\n    }\n    return selection.merge({\n        focusKey: focusKey,\n        focusOffset: focusOffset,\n        isBackward: true\n    });\n}\nmodule.exports = moveSelectionBackward;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvbW92ZVNlbGVjdGlvbkJhY2t3YXJkLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsVUFBVUMsbUJBQU9BLENBQUMsZ0ZBQWtCO0FBQ3hDOzs7Ozs7O0NBT0MsR0FHRCxTQUFTQyxzQkFBc0JDLFdBQVcsRUFBRUMsV0FBVztJQUNyRCxJQUFJQyxZQUFZRixZQUFZRyxZQUFZLElBQUksMkNBQTJDO0lBeEJ6RixLQTBCdUMsR0FBR04sUUFBUUssVUFBVUUsV0FBVyxJQUFJLGlGQUFpRixDQUFNO0lBQ2hLLElBQUlDLFVBQVVMLFlBQVlNLGlCQUFpQjtJQUMzQyxJQUFJQyxNQUFNTCxVQUFVTSxXQUFXO0lBQy9CLElBQUlDLFNBQVNQLFVBQVVRLGNBQWM7SUFDckMsSUFBSUMsV0FBV0o7SUFDZixJQUFJSyxjQUFjO0lBRWxCLElBQUlYLGNBQWNRLFFBQVE7UUFDeEIsSUFBSUksWUFBWVIsUUFBUVMsWUFBWSxDQUFDUDtRQUVyQyxJQUFJTSxhQUFhLE1BQU07WUFDckJGLFdBQVdKO1FBQ2IsT0FBTztZQUNMSSxXQUFXRTtZQUNYLElBQUlFLGNBQWNWLFFBQVFXLGNBQWMsQ0FBQ0g7WUFDekNELGNBQWNHLFlBQVlFLE9BQU8sR0FBR0MsTUFBTTtRQUM1QztJQUNGLE9BQU87UUFDTE4sY0FBY0gsU0FBU1I7SUFDekI7SUFFQSxPQUFPQyxVQUFVaUIsS0FBSyxDQUFDO1FBQ3JCUixVQUFVQTtRQUNWQyxhQUFhQTtRQUNiUSxZQUFZO0lBQ2Q7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUd2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL21vdmVTZWxlY3Rpb25CYWNrd2FyZC5qcz9jOTFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciB3YXJuaW5nID0gcmVxdWlyZShcImZianMvbGliL3dhcm5pbmdcIik7XG4vKipcbiAqIEdpdmVuIGEgY29sbGFwc2VkIHNlbGVjdGlvbiwgbW92ZSB0aGUgZm9jdXMgYG1heERpc3RhbmNlYCBiYWNrd2FyZCB3aXRoaW5cbiAqIHRoZSBzZWxlY3RlZCBibG9jay4gSWYgdGhlIHNlbGVjdGlvbiB3aWxsIGdvIGJleW9uZCB0aGUgc3RhcnQgb2YgdGhlIGJsb2NrLFxuICogbW92ZSBmb2N1cyB0byB0aGUgZW5kIG9mIHRoZSBwcmV2aW91cyBibG9jaywgYnV0IG5vIGZ1cnRoZXIuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBpcyBub3QgVW5pY29kZS1hd2FyZSwgc28gc3Vycm9nYXRlIHBhaXJzIHdpbGwgYmUgdHJlYXRlZFxuICogYXMgaGF2aW5nIGxlbmd0aCAyLlxuICovXG5cblxuZnVuY3Rpb24gbW92ZVNlbGVjdGlvbkJhY2t3YXJkKGVkaXRvclN0YXRlLCBtYXhEaXN0YW5jZSkge1xuICB2YXIgc2VsZWN0aW9uID0gZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCk7IC8vIFNob3VsZCBldmVudHVhbGx5IG1ha2UgdGhpcyBhbiBpbnZhcmlhbnRcblxuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHNlbGVjdGlvbi5pc0NvbGxhcHNlZCgpLCAnbW92ZVNlbGVjdGlvbkJhY2t3YXJkIHNob3VsZCBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgY29sbGFwc2VkIFNlbGVjdGlvblN0YXRlJykgOiB2b2lkIDA7XG4gIHZhciBjb250ZW50ID0gZWRpdG9yU3RhdGUuZ2V0Q3VycmVudENvbnRlbnQoKTtcbiAgdmFyIGtleSA9IHNlbGVjdGlvbi5nZXRTdGFydEtleSgpO1xuICB2YXIgb2Zmc2V0ID0gc2VsZWN0aW9uLmdldFN0YXJ0T2Zmc2V0KCk7XG4gIHZhciBmb2N1c0tleSA9IGtleTtcbiAgdmFyIGZvY3VzT2Zmc2V0ID0gMDtcblxuICBpZiAobWF4RGlzdGFuY2UgPiBvZmZzZXQpIHtcbiAgICB2YXIga2V5QmVmb3JlID0gY29udGVudC5nZXRLZXlCZWZvcmUoa2V5KTtcblxuICAgIGlmIChrZXlCZWZvcmUgPT0gbnVsbCkge1xuICAgICAgZm9jdXNLZXkgPSBrZXk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvY3VzS2V5ID0ga2V5QmVmb3JlO1xuICAgICAgdmFyIGJsb2NrQmVmb3JlID0gY29udGVudC5nZXRCbG9ja0ZvcktleShrZXlCZWZvcmUpO1xuICAgICAgZm9jdXNPZmZzZXQgPSBibG9ja0JlZm9yZS5nZXRUZXh0KCkubGVuZ3RoO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb2N1c09mZnNldCA9IG9mZnNldCAtIG1heERpc3RhbmNlO1xuICB9XG5cbiAgcmV0dXJuIHNlbGVjdGlvbi5tZXJnZSh7XG4gICAgZm9jdXNLZXk6IGZvY3VzS2V5LFxuICAgIGZvY3VzT2Zmc2V0OiBmb2N1c09mZnNldCxcbiAgICBpc0JhY2t3YXJkOiB0cnVlXG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1vdmVTZWxlY3Rpb25CYWNrd2FyZDsiXSwibmFtZXMiOlsid2FybmluZyIsInJlcXVpcmUiLCJtb3ZlU2VsZWN0aW9uQmFja3dhcmQiLCJlZGl0b3JTdGF0ZSIsIm1heERpc3RhbmNlIiwic2VsZWN0aW9uIiwiZ2V0U2VsZWN0aW9uIiwiaXNDb2xsYXBzZWQiLCJjb250ZW50IiwiZ2V0Q3VycmVudENvbnRlbnQiLCJrZXkiLCJnZXRTdGFydEtleSIsIm9mZnNldCIsImdldFN0YXJ0T2Zmc2V0IiwiZm9jdXNLZXkiLCJmb2N1c09mZnNldCIsImtleUJlZm9yZSIsImdldEtleUJlZm9yZSIsImJsb2NrQmVmb3JlIiwiZ2V0QmxvY2tGb3JLZXkiLCJnZXRUZXh0IiwibGVuZ3RoIiwibWVyZ2UiLCJpc0JhY2t3YXJkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionBackward.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionForward.js":
/*!***********************************************************!*\
  !*** ./node_modules/draft-js/lib/moveSelectionForward.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar warning = __webpack_require__(/*! fbjs/lib/warning */ \"(app-pages-browser)/./node_modules/fbjs/lib/warning.js\");\n/**\n * Given a collapsed selection, move the focus `maxDistance` forward within\n * the selected block. If the selection will go beyond the end of the block,\n * move focus to the start of the next block, but no further.\n *\n * This function is not Unicode-aware, so surrogate pairs will be treated\n * as having length 2.\n */ function moveSelectionForward(editorState, maxDistance) {\n    var selection = editorState.getSelection(); // Should eventually make this an invariant\n     true ? warning(selection.isCollapsed(), \"moveSelectionForward should only be called with a collapsed SelectionState\") : 0;\n    var key = selection.getStartKey();\n    var offset = selection.getStartOffset();\n    var content = editorState.getCurrentContent();\n    var focusKey = key;\n    var focusOffset;\n    var block = content.getBlockForKey(key);\n    if (maxDistance > block.getText().length - offset) {\n        focusKey = content.getKeyAfter(key);\n        focusOffset = 0;\n    } else {\n        focusOffset = offset + maxDistance;\n    }\n    return selection.merge({\n        focusKey: focusKey,\n        focusOffset: focusOffset\n    });\n}\nmodule.exports = moveSelectionForward;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvbW92ZVNlbGVjdGlvbkZvcndhcmQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxVQUFVQyxtQkFBT0EsQ0FBQyxnRkFBa0I7QUFDeEM7Ozs7Ozs7Q0FPQyxHQUdELFNBQVNDLHFCQUFxQkMsV0FBVyxFQUFFQyxXQUFXO0lBQ3BELElBQUlDLFlBQVlGLFlBQVlHLFlBQVksSUFBSSwyQ0FBMkM7SUF4QnpGLEtBMEJ1QyxHQUFHTixRQUFRSyxVQUFVRSxXQUFXLElBQUksZ0ZBQWdGLENBQU07SUFDL0osSUFBSUMsTUFBTUgsVUFBVUksV0FBVztJQUMvQixJQUFJQyxTQUFTTCxVQUFVTSxjQUFjO0lBQ3JDLElBQUlDLFVBQVVULFlBQVlVLGlCQUFpQjtJQUMzQyxJQUFJQyxXQUFXTjtJQUNmLElBQUlPO0lBQ0osSUFBSUMsUUFBUUosUUFBUUssY0FBYyxDQUFDVDtJQUVuQyxJQUFJSixjQUFjWSxNQUFNRSxPQUFPLEdBQUdDLE1BQU0sR0FBR1QsUUFBUTtRQUNqREksV0FBV0YsUUFBUVEsV0FBVyxDQUFDWjtRQUMvQk8sY0FBYztJQUNoQixPQUFPO1FBQ0xBLGNBQWNMLFNBQVNOO0lBQ3pCO0lBRUEsT0FBT0MsVUFBVWdCLEtBQUssQ0FBQztRQUNyQlAsVUFBVUE7UUFDVkMsYUFBYUE7SUFDZjtBQUNGO0FBRUFPLE9BQU9DLE9BQU8sR0FBR3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvbW92ZVNlbGVjdGlvbkZvcndhcmQuanM/ZTFiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgd2FybmluZyA9IHJlcXVpcmUoXCJmYmpzL2xpYi93YXJuaW5nXCIpO1xuLyoqXG4gKiBHaXZlbiBhIGNvbGxhcHNlZCBzZWxlY3Rpb24sIG1vdmUgdGhlIGZvY3VzIGBtYXhEaXN0YW5jZWAgZm9yd2FyZCB3aXRoaW5cbiAqIHRoZSBzZWxlY3RlZCBibG9jay4gSWYgdGhlIHNlbGVjdGlvbiB3aWxsIGdvIGJleW9uZCB0aGUgZW5kIG9mIHRoZSBibG9jayxcbiAqIG1vdmUgZm9jdXMgdG8gdGhlIHN0YXJ0IG9mIHRoZSBuZXh0IGJsb2NrLCBidXQgbm8gZnVydGhlci5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIG5vdCBVbmljb2RlLWF3YXJlLCBzbyBzdXJyb2dhdGUgcGFpcnMgd2lsbCBiZSB0cmVhdGVkXG4gKiBhcyBoYXZpbmcgbGVuZ3RoIDIuXG4gKi9cblxuXG5mdW5jdGlvbiBtb3ZlU2VsZWN0aW9uRm9yd2FyZChlZGl0b3JTdGF0ZSwgbWF4RGlzdGFuY2UpIHtcbiAgdmFyIHNlbGVjdGlvbiA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpOyAvLyBTaG91bGQgZXZlbnR1YWxseSBtYWtlIHRoaXMgYW4gaW52YXJpYW50XG5cbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSwgJ21vdmVTZWxlY3Rpb25Gb3J3YXJkIHNob3VsZCBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgY29sbGFwc2VkIFNlbGVjdGlvblN0YXRlJykgOiB2b2lkIDA7XG4gIHZhciBrZXkgPSBzZWxlY3Rpb24uZ2V0U3RhcnRLZXkoKTtcbiAgdmFyIG9mZnNldCA9IHNlbGVjdGlvbi5nZXRTdGFydE9mZnNldCgpO1xuICB2YXIgY29udGVudCA9IGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCk7XG4gIHZhciBmb2N1c0tleSA9IGtleTtcbiAgdmFyIGZvY3VzT2Zmc2V0O1xuICB2YXIgYmxvY2sgPSBjb250ZW50LmdldEJsb2NrRm9yS2V5KGtleSk7XG5cbiAgaWYgKG1heERpc3RhbmNlID4gYmxvY2suZ2V0VGV4dCgpLmxlbmd0aCAtIG9mZnNldCkge1xuICAgIGZvY3VzS2V5ID0gY29udGVudC5nZXRLZXlBZnRlcihrZXkpO1xuICAgIGZvY3VzT2Zmc2V0ID0gMDtcbiAgfSBlbHNlIHtcbiAgICBmb2N1c09mZnNldCA9IG9mZnNldCArIG1heERpc3RhbmNlO1xuICB9XG5cbiAgcmV0dXJuIHNlbGVjdGlvbi5tZXJnZSh7XG4gICAgZm9jdXNLZXk6IGZvY3VzS2V5LFxuICAgIGZvY3VzT2Zmc2V0OiBmb2N1c09mZnNldFxuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtb3ZlU2VsZWN0aW9uRm9yd2FyZDsiXSwibmFtZXMiOlsid2FybmluZyIsInJlcXVpcmUiLCJtb3ZlU2VsZWN0aW9uRm9yd2FyZCIsImVkaXRvclN0YXRlIiwibWF4RGlzdGFuY2UiLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3Rpb24iLCJpc0NvbGxhcHNlZCIsImtleSIsImdldFN0YXJ0S2V5Iiwib2Zmc2V0IiwiZ2V0U3RhcnRPZmZzZXQiLCJjb250ZW50IiwiZ2V0Q3VycmVudENvbnRlbnQiLCJmb2N1c0tleSIsImZvY3VzT2Zmc2V0IiwiYmxvY2siLCJnZXRCbG9ja0ZvcktleSIsImdldFRleHQiLCJsZW5ndGgiLCJnZXRLZXlBZnRlciIsIm1lcmdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/moveSelectionForward.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/randomizeBlockMapKeys.js":
/*!************************************************************!*\
  !*** ./node_modules/draft-js/lib/randomizeBlockMapKeys.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar OrderedMap = Immutable.OrderedMap;\nvar randomizeContentBlockNodeKeys = function randomizeContentBlockNodeKeys(blockMap) {\n    var newKeysRef = {}; // we keep track of root blocks in order to update subsequent sibling links\n    var lastRootBlock;\n    return OrderedMap(blockMap.withMutations(function(blockMapState) {\n        blockMapState.forEach(function(block, index) {\n            var oldKey = block.getKey();\n            var nextKey = block.getNextSiblingKey();\n            var prevKey = block.getPrevSiblingKey();\n            var childrenKeys = block.getChildKeys();\n            var parentKey = block.getParentKey(); // new key that we will use to build linking\n            var key = generateRandomKey(); // we will add it here to re-use it later\n            newKeysRef[oldKey] = key;\n            if (nextKey) {\n                var nextBlock = blockMapState.get(nextKey);\n                if (nextBlock) {\n                    blockMapState.setIn([\n                        nextKey,\n                        \"prevSibling\"\n                    ], key);\n                } else {\n                    // this can happen when generating random keys for fragments\n                    blockMapState.setIn([\n                        oldKey,\n                        \"nextSibling\"\n                    ], null);\n                }\n            }\n            if (prevKey) {\n                var prevBlock = blockMapState.get(prevKey);\n                if (prevBlock) {\n                    blockMapState.setIn([\n                        prevKey,\n                        \"nextSibling\"\n                    ], key);\n                } else {\n                    // this can happen when generating random keys for fragments\n                    blockMapState.setIn([\n                        oldKey,\n                        \"prevSibling\"\n                    ], null);\n                }\n            }\n            if (parentKey && blockMapState.get(parentKey)) {\n                var parentBlock = blockMapState.get(parentKey);\n                var parentChildrenList = parentBlock.getChildKeys();\n                blockMapState.setIn([\n                    parentKey,\n                    \"children\"\n                ], parentChildrenList.set(parentChildrenList.indexOf(block.getKey()), key));\n            } else {\n                // blocks will then be treated as root block nodes\n                blockMapState.setIn([\n                    oldKey,\n                    \"parent\"\n                ], null);\n                if (lastRootBlock) {\n                    blockMapState.setIn([\n                        lastRootBlock.getKey(),\n                        \"nextSibling\"\n                    ], key);\n                    blockMapState.setIn([\n                        oldKey,\n                        \"prevSibling\"\n                    ], newKeysRef[lastRootBlock.getKey()]);\n                }\n                lastRootBlock = blockMapState.get(oldKey);\n            }\n            childrenKeys.forEach(function(childKey) {\n                var childBlock = blockMapState.get(childKey);\n                if (childBlock) {\n                    blockMapState.setIn([\n                        childKey,\n                        \"parent\"\n                    ], key);\n                } else {\n                    blockMapState.setIn([\n                        oldKey,\n                        \"children\"\n                    ], block.getChildKeys().filter(function(child) {\n                        return child !== childKey;\n                    }));\n                }\n            });\n        });\n    }).toArray().map(function(block) {\n        return [\n            newKeysRef[block.getKey()],\n            block.set(\"key\", newKeysRef[block.getKey()])\n        ];\n    }));\n};\nvar randomizeContentBlockKeys = function randomizeContentBlockKeys(blockMap) {\n    return OrderedMap(blockMap.toArray().map(function(block) {\n        var key = generateRandomKey();\n        return [\n            key,\n            block.set(\"key\", key)\n        ];\n    }));\n};\nvar randomizeBlockMapKeys = function randomizeBlockMapKeys(blockMap) {\n    var isTreeBasedBlockMap = blockMap.first() instanceof ContentBlockNode;\n    if (!isTreeBasedBlockMap) {\n        return randomizeContentBlockKeys(blockMap);\n    }\n    return randomizeContentBlockNodeKeys(blockMap);\n};\nmodule.exports = randomizeBlockMapKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/randomizeBlockMapKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/removeEntitiesAtEdges.js":
/*!************************************************************!*\
  !*** ./node_modules/draft-js/lib/removeEntitiesAtEdges.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar CharacterMetadata = __webpack_require__(/*! ./CharacterMetadata */ \"(app-pages-browser)/./node_modules/draft-js/lib/CharacterMetadata.js\");\nvar findRangesImmutable = __webpack_require__(/*! ./findRangesImmutable */ \"(app-pages-browser)/./node_modules/draft-js/lib/findRangesImmutable.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nfunction removeEntitiesAtEdges(contentState, selectionState) {\n    var blockMap = contentState.getBlockMap();\n    var entityMap = contentState.getEntityMap();\n    var updatedBlocks = {};\n    var startKey = selectionState.getStartKey();\n    var startOffset = selectionState.getStartOffset();\n    var startBlock = blockMap.get(startKey);\n    var updatedStart = removeForBlock(entityMap, startBlock, startOffset);\n    if (updatedStart !== startBlock) {\n        updatedBlocks[startKey] = updatedStart;\n    }\n    var endKey = selectionState.getEndKey();\n    var endOffset = selectionState.getEndOffset();\n    var endBlock = blockMap.get(endKey);\n    if (startKey === endKey) {\n        endBlock = updatedStart;\n    }\n    var updatedEnd = removeForBlock(entityMap, endBlock, endOffset);\n    if (updatedEnd !== endBlock) {\n        updatedBlocks[endKey] = updatedEnd;\n    }\n    if (!Object.keys(updatedBlocks).length) {\n        return contentState.set(\"selectionAfter\", selectionState);\n    }\n    return contentState.merge({\n        blockMap: blockMap.merge(updatedBlocks),\n        selectionAfter: selectionState\n    });\n}\n/**\n * Given a list of characters and an offset that is in the middle of an entity,\n * returns the start and end of the entity that is overlapping the offset.\n * Note: This method requires that the offset be in an entity range.\n */ function getRemovalRange(characters, entityKey, offset) {\n    var removalRange; // Iterates through a list looking for ranges of matching items\n    // based on the 'isEqual' callback.\n    // Then instead of returning the result, call the 'found' callback\n    // with each range.\n    // Then filters those ranges based on the 'filter' callback\n    //\n    // Here we use it to find ranges of characters with the same entity key.\n    findRangesImmutable(characters, function(a, b) {\n        return a.getEntity() === b.getEntity();\n    }, function(element) {\n        return element.getEntity() === entityKey;\n    }, function(start, end) {\n        // 'found' callback\n        if (start <= offset && end >= offset) {\n            // this entity overlaps the offset index\n            removalRange = {\n                start: start,\n                end: end\n            };\n        }\n    });\n    !(typeof removalRange === \"object\") ?  true ? invariant(false, \"Removal range must exist within character list.\") : 0 : void 0;\n    return removalRange;\n}\nfunction removeForBlock(entityMap, block, offset) {\n    var chars = block.getCharacterList();\n    var charBefore = offset > 0 ? chars.get(offset - 1) : undefined;\n    var charAfter = offset < chars.count() ? chars.get(offset) : undefined;\n    var entityBeforeCursor = charBefore ? charBefore.getEntity() : undefined;\n    var entityAfterCursor = charAfter ? charAfter.getEntity() : undefined;\n    if (entityAfterCursor && entityAfterCursor === entityBeforeCursor) {\n        var entity = entityMap.__get(entityAfterCursor);\n        if (entity.getMutability() !== \"MUTABLE\") {\n            var _getRemovalRange = getRemovalRange(chars, entityAfterCursor, offset), start = _getRemovalRange.start, end = _getRemovalRange.end;\n            var current;\n            while(start < end){\n                current = chars.get(start);\n                chars = chars.set(start, CharacterMetadata.applyEntity(current, null));\n                start++;\n            }\n            return block.set(\"characterList\", chars);\n        }\n    }\n    return block;\n}\nmodule.exports = removeEntitiesAtEdges;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/removeEntitiesAtEdges.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/removeRangeFromContentState.js":
/*!******************************************************************!*\
  !*** ./node_modules/draft-js/lib/removeRangeFromContentState.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar getNextDelimiterBlockKey = __webpack_require__(/*! ./getNextDelimiterBlockKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/getNextDelimiterBlockKey.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar List = Immutable.List, Map = Immutable.Map;\nvar transformBlock = function transformBlock(key, blockMap, func) {\n    if (!key) {\n        return;\n    }\n    var block = blockMap.get(key);\n    if (!block) {\n        return;\n    }\n    blockMap.set(key, func(block));\n};\n/**\n * Ancestors needs to be preserved when there are non selected\n * children to make sure we do not leave any orphans behind\n */ var getAncestorsKeys = function getAncestorsKeys(blockKey, blockMap) {\n    var parents = [];\n    if (!blockKey) {\n        return parents;\n    }\n    var blockNode = blockMap.get(blockKey);\n    while(blockNode && blockNode.getParentKey()){\n        var parentKey = blockNode.getParentKey();\n        if (parentKey) {\n            parents.push(parentKey);\n        }\n        blockNode = parentKey ? blockMap.get(parentKey) : null;\n    }\n    return parents;\n};\n/**\n * Get all next delimiter keys until we hit a root delimiter and return\n * an array of key references\n */ var getNextDelimitersBlockKeys = function getNextDelimitersBlockKeys(block, blockMap) {\n    var nextDelimiters = [];\n    if (!block) {\n        return nextDelimiters;\n    }\n    var nextDelimiter = getNextDelimiterBlockKey(block, blockMap);\n    while(nextDelimiter && blockMap.get(nextDelimiter)){\n        var _block = blockMap.get(nextDelimiter);\n        nextDelimiters.push(nextDelimiter); // we do not need to keep checking all root node siblings, just the first occurance\n        nextDelimiter = _block.getParentKey() ? getNextDelimiterBlockKey(_block, blockMap) : null;\n    }\n    return nextDelimiters;\n};\nvar getNextValidSibling = function getNextValidSibling(block, blockMap, originalBlockMap) {\n    if (!block) {\n        return null;\n    } // note that we need to make sure we refer to the original block since this\n    // function is called within a withMutations\n    var nextValidSiblingKey = originalBlockMap.get(block.getKey()).getNextSiblingKey();\n    while(nextValidSiblingKey && !blockMap.get(nextValidSiblingKey)){\n        nextValidSiblingKey = originalBlockMap.get(nextValidSiblingKey).getNextSiblingKey() || null;\n    }\n    return nextValidSiblingKey;\n};\nvar getPrevValidSibling = function getPrevValidSibling(block, blockMap, originalBlockMap) {\n    if (!block) {\n        return null;\n    } // note that we need to make sure we refer to the original block since this\n    // function is called within a withMutations\n    var prevValidSiblingKey = originalBlockMap.get(block.getKey()).getPrevSiblingKey();\n    while(prevValidSiblingKey && !blockMap.get(prevValidSiblingKey)){\n        prevValidSiblingKey = originalBlockMap.get(prevValidSiblingKey).getPrevSiblingKey() || null;\n    }\n    return prevValidSiblingKey;\n};\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, startBlock, endBlock, originalBlockMap) {\n    return blockMap.withMutations(function(blocks) {\n        // update start block if its retained\n        transformBlock(startBlock.getKey(), blocks, function(block) {\n            return block.merge({\n                nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\n                prevSibling: getPrevValidSibling(block, blocks, originalBlockMap)\n            });\n        }); // update endblock if its retained\n        transformBlock(endBlock.getKey(), blocks, function(block) {\n            return block.merge({\n                nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\n                prevSibling: getPrevValidSibling(block, blocks, originalBlockMap)\n            });\n        }); // update start block parent ancestors\n        getAncestorsKeys(startBlock.getKey(), originalBlockMap).forEach(function(parentKey) {\n            return transformBlock(parentKey, blocks, function(block) {\n                return block.merge({\n                    children: block.getChildKeys().filter(function(key) {\n                        return blocks.get(key);\n                    }),\n                    nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\n                    prevSibling: getPrevValidSibling(block, blocks, originalBlockMap)\n                });\n            });\n        }); // update start block next - can only happen if startBlock == endBlock\n        transformBlock(startBlock.getNextSiblingKey(), blocks, function(block) {\n            return block.merge({\n                prevSibling: startBlock.getPrevSiblingKey()\n            });\n        }); // update start block prev\n        transformBlock(startBlock.getPrevSiblingKey(), blocks, function(block) {\n            return block.merge({\n                nextSibling: getNextValidSibling(block, blocks, originalBlockMap)\n            });\n        }); // update end block next\n        transformBlock(endBlock.getNextSiblingKey(), blocks, function(block) {\n            return block.merge({\n                prevSibling: getPrevValidSibling(block, blocks, originalBlockMap)\n            });\n        }); // update end block prev\n        transformBlock(endBlock.getPrevSiblingKey(), blocks, function(block) {\n            return block.merge({\n                nextSibling: endBlock.getNextSiblingKey()\n            });\n        }); // update end block parent ancestors\n        getAncestorsKeys(endBlock.getKey(), originalBlockMap).forEach(function(parentKey) {\n            transformBlock(parentKey, blocks, function(block) {\n                return block.merge({\n                    children: block.getChildKeys().filter(function(key) {\n                        return blocks.get(key);\n                    }),\n                    nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\n                    prevSibling: getPrevValidSibling(block, blocks, originalBlockMap)\n                });\n            });\n        }); // update next delimiters all the way to a root delimiter\n        getNextDelimitersBlockKeys(endBlock, originalBlockMap).forEach(function(delimiterKey) {\n            return transformBlock(delimiterKey, blocks, function(block) {\n                return block.merge({\n                    nextSibling: getNextValidSibling(block, blocks, originalBlockMap),\n                    prevSibling: getPrevValidSibling(block, blocks, originalBlockMap)\n                });\n            });\n        }); // if parent (startBlock) was deleted\n        if (blockMap.get(startBlock.getKey()) == null && blockMap.get(endBlock.getKey()) != null && endBlock.getParentKey() === startBlock.getKey() && endBlock.getPrevSiblingKey() == null) {\n            var prevSiblingKey = startBlock.getPrevSiblingKey(); // endBlock becomes next sibling of parent's prevSibling\n            transformBlock(endBlock.getKey(), blocks, function(block) {\n                return block.merge({\n                    prevSibling: prevSiblingKey\n                });\n            });\n            transformBlock(prevSiblingKey, blocks, function(block) {\n                return block.merge({\n                    nextSibling: endBlock.getKey()\n                });\n            }); // Update parent for previous parent's children, and children for that parent\n            var prevSibling = prevSiblingKey ? blockMap.get(prevSiblingKey) : null;\n            var newParentKey = prevSibling ? prevSibling.getParentKey() : null;\n            startBlock.getChildKeys().forEach(function(childKey) {\n                transformBlock(childKey, blocks, function(block) {\n                    return block.merge({\n                        parent: newParentKey // set to null if there is no parent\n                    });\n                });\n            });\n            if (newParentKey != null) {\n                var newParent = blockMap.get(newParentKey);\n                transformBlock(newParentKey, blocks, function(block) {\n                    return block.merge({\n                        children: newParent.getChildKeys().concat(startBlock.getChildKeys())\n                    });\n                });\n            } // last child of deleted parent should point to next sibling\n            transformBlock(startBlock.getChildKeys().find(function(key) {\n                var block = blockMap.get(key);\n                return block.getNextSiblingKey() === null;\n            }), blocks, function(block) {\n                return block.merge({\n                    nextSibling: startBlock.getNextSiblingKey()\n                });\n            });\n        }\n    });\n};\nvar removeRangeFromContentState = function removeRangeFromContentState(contentState, selectionState) {\n    if (selectionState.isCollapsed()) {\n        return contentState;\n    }\n    var blockMap = contentState.getBlockMap();\n    var startKey = selectionState.getStartKey();\n    var startOffset = selectionState.getStartOffset();\n    var endKey = selectionState.getEndKey();\n    var endOffset = selectionState.getEndOffset();\n    var startBlock = blockMap.get(startKey);\n    var endBlock = blockMap.get(endKey); // we assume that ContentBlockNode and ContentBlocks are not mixed together\n    var isExperimentalTreeBlock = startBlock instanceof ContentBlockNode; // used to retain blocks that should not be deleted to avoid orphan children\n    var parentAncestors = [];\n    if (isExperimentalTreeBlock) {\n        var endBlockchildrenKeys = endBlock.getChildKeys();\n        var endBlockAncestors = getAncestorsKeys(endKey, blockMap); // endBlock has unselected siblings so we can not remove its ancestors parents\n        if (endBlock.getNextSiblingKey()) {\n            parentAncestors = parentAncestors.concat(endBlockAncestors);\n        } // endBlock has children so can not remove this block or any of its ancestors\n        if (!endBlockchildrenKeys.isEmpty()) {\n            parentAncestors = parentAncestors.concat(endBlockAncestors.concat([\n                endKey\n            ]));\n        } // we need to retain all ancestors of the next delimiter block\n        parentAncestors = parentAncestors.concat(getAncestorsKeys(getNextDelimiterBlockKey(endBlock, blockMap), blockMap));\n    }\n    var characterList;\n    if (startBlock === endBlock) {\n        characterList = removeFromList(startBlock.getCharacterList(), startOffset, endOffset);\n    } else {\n        characterList = startBlock.getCharacterList().slice(0, startOffset).concat(endBlock.getCharacterList().slice(endOffset));\n    }\n    var modifiedStart = startBlock.merge({\n        text: startBlock.getText().slice(0, startOffset) + endBlock.getText().slice(endOffset),\n        characterList: characterList\n    }); // If cursor (collapsed) is at the start of the first child, delete parent\n    // instead of child\n    var shouldDeleteParent = isExperimentalTreeBlock && startOffset === 0 && endOffset === 0 && endBlock.getParentKey() === startKey && endBlock.getPrevSiblingKey() == null;\n    var newBlocks = shouldDeleteParent ? Map([\n        [\n            startKey,\n            null\n        ]\n    ]) : blockMap.toSeq().skipUntil(function(_, k) {\n        return k === startKey;\n    }).takeUntil(function(_, k) {\n        return k === endKey;\n    }).filter(function(_, k) {\n        return parentAncestors.indexOf(k) === -1;\n    }).concat(Map([\n        [\n            endKey,\n            null\n        ]\n    ])).map(function(_, k) {\n        return k === startKey ? modifiedStart : null;\n    });\n    var updatedBlockMap = blockMap.merge(newBlocks).filter(function(block) {\n        return !!block;\n    }); // Only update tree block pointers if the range is across blocks\n    if (isExperimentalTreeBlock && startBlock !== endBlock) {\n        updatedBlockMap = updateBlockMapLinks(updatedBlockMap, startBlock, endBlock, blockMap);\n    }\n    return contentState.merge({\n        blockMap: updatedBlockMap,\n        selectionBefore: selectionState,\n        selectionAfter: selectionState.merge({\n            anchorKey: startKey,\n            anchorOffset: startOffset,\n            focusKey: startKey,\n            focusOffset: startOffset,\n            isBackward: false\n        })\n    });\n};\n/**\n * Maintain persistence for target list when removing characters on the\n * head and tail of the character list.\n */ var removeFromList = function removeFromList(targetList, startOffset, endOffset) {\n    if (startOffset === 0) {\n        while(startOffset < endOffset){\n            targetList = targetList.shift();\n            startOffset++;\n        }\n    } else if (endOffset === targetList.count()) {\n        while(endOffset > startOffset){\n            targetList = targetList.pop();\n            endOffset--;\n        }\n    } else {\n        var head = targetList.slice(0, startOffset);\n        var tail = targetList.slice(endOffset);\n        targetList = head.concat(tail).toList();\n    }\n    return targetList;\n};\nmodule.exports = removeRangeFromContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/removeRangeFromContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/removeTextWithStrategy.js":
/*!*************************************************************!*\
  !*** ./node_modules/draft-js/lib/removeTextWithStrategy.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftModifier = __webpack_require__(/*! ./DraftModifier */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftModifier.js\");\nvar gkx = __webpack_require__(/*! ./gkx */ \"(app-pages-browser)/./node_modules/draft-js/lib/gkx.js\");\nvar experimentalTreeDataSupport = gkx(\"draft_tree_data_support\");\n/**\n * For a collapsed selection state, remove text based on the specified strategy.\n * If the selection state is not collapsed, remove the entire selected range.\n */ function removeTextWithStrategy(editorState, strategy, direction) {\n    var selection = editorState.getSelection();\n    var content = editorState.getCurrentContent();\n    var target = selection;\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n    var anchorBlock = content.getBlockForKey(anchorKey);\n    if (experimentalTreeDataSupport) {\n        if (direction === \"forward\") {\n            if (anchorKey !== focusKey) {\n                // For now we ignore forward delete across blocks,\n                // if there is demand for this we will implement it.\n                return content;\n            }\n        }\n    }\n    if (selection.isCollapsed()) {\n        if (direction === \"forward\") {\n            if (editorState.isSelectionAtEndOfContent()) {\n                return content;\n            }\n            if (experimentalTreeDataSupport) {\n                var isAtEndOfBlock = selection.getAnchorOffset() === content.getBlockForKey(anchorKey).getLength();\n                if (isAtEndOfBlock) {\n                    var anchorBlockSibling = content.getBlockForKey(anchorBlock.nextSibling);\n                    if (!anchorBlockSibling || anchorBlockSibling.getLength() === 0) {\n                        // For now we ignore forward delete at the end of a block,\n                        // if there is demand for this we will implement it.\n                        return content;\n                    }\n                }\n            }\n        } else if (editorState.isSelectionAtStartOfContent()) {\n            return content;\n        }\n        target = strategy(editorState);\n        if (target === selection) {\n            return content;\n        }\n    }\n    return DraftModifier.removeRange(content, target, direction);\n}\nmodule.exports = removeTextWithStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvcmVtb3ZlVGV4dFdpdGhTdHJhdGVneS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0MsR0FDRDtBQUVBLElBQUlBLGdCQUFnQkMsbUJBQU9BLENBQUMseUZBQWlCO0FBRTdDLElBQUlDLE1BQU1ELG1CQUFPQSxDQUFDLHFFQUFPO0FBRXpCLElBQUlFLDhCQUE4QkQsSUFBSTtBQUN0Qzs7O0NBR0MsR0FFRCxTQUFTRSx1QkFBdUJDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxTQUFTO0lBQzlELElBQUlDLFlBQVlILFlBQVlJLFlBQVk7SUFDeEMsSUFBSUMsVUFBVUwsWUFBWU0saUJBQWlCO0lBQzNDLElBQUlDLFNBQVNKO0lBQ2IsSUFBSUssWUFBWUwsVUFBVU0sWUFBWTtJQUN0QyxJQUFJQyxXQUFXUCxVQUFVUSxXQUFXO0lBQ3BDLElBQUlDLGNBQWNQLFFBQVFRLGNBQWMsQ0FBQ0w7SUFFekMsSUFBSVYsNkJBQTZCO1FBQy9CLElBQUlJLGNBQWMsV0FBVztZQUMzQixJQUFJTSxjQUFjRSxVQUFVO2dCQUMxQixrREFBa0Q7Z0JBQ2xELG9EQUFvRDtnQkFDcEQsT0FBT0w7WUFDVDtRQUNGO0lBQ0Y7SUFFQSxJQUFJRixVQUFVVyxXQUFXLElBQUk7UUFDM0IsSUFBSVosY0FBYyxXQUFXO1lBQzNCLElBQUlGLFlBQVllLHlCQUF5QixJQUFJO2dCQUMzQyxPQUFPVjtZQUNUO1lBRUEsSUFBSVAsNkJBQTZCO2dCQUMvQixJQUFJa0IsaUJBQWlCYixVQUFVYyxlQUFlLE9BQU9aLFFBQVFRLGNBQWMsQ0FBQ0wsV0FBV1UsU0FBUztnQkFFaEcsSUFBSUYsZ0JBQWdCO29CQUNsQixJQUFJRyxxQkFBcUJkLFFBQVFRLGNBQWMsQ0FBQ0QsWUFBWVEsV0FBVztvQkFFdkUsSUFBSSxDQUFDRCxzQkFBc0JBLG1CQUFtQkQsU0FBUyxPQUFPLEdBQUc7d0JBQy9ELDBEQUEwRDt3QkFDMUQsb0RBQW9EO3dCQUNwRCxPQUFPYjtvQkFDVDtnQkFDRjtZQUNGO1FBQ0YsT0FBTyxJQUFJTCxZQUFZcUIsMkJBQTJCLElBQUk7WUFDcEQsT0FBT2hCO1FBQ1Q7UUFFQUUsU0FBU04sU0FBU0Q7UUFFbEIsSUFBSU8sV0FBV0osV0FBVztZQUN4QixPQUFPRTtRQUNUO0lBQ0Y7SUFFQSxPQUFPVixjQUFjMkIsV0FBVyxDQUFDakIsU0FBU0UsUUFBUUw7QUFDcEQ7QUFFQXFCLE9BQU9DLE9BQU8sR0FBR3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvcmVtb3ZlVGV4dFdpdGhTdHJhdGVneS5qcz81MmRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogXG4gKiBAZW1haWxzIG9uY2FsbCtkcmFmdF9qc1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBEcmFmdE1vZGlmaWVyID0gcmVxdWlyZShcIi4vRHJhZnRNb2RpZmllclwiKTtcblxudmFyIGdreCA9IHJlcXVpcmUoXCIuL2dreFwiKTtcblxudmFyIGV4cGVyaW1lbnRhbFRyZWVEYXRhU3VwcG9ydCA9IGdreCgnZHJhZnRfdHJlZV9kYXRhX3N1cHBvcnQnKTtcbi8qKlxuICogRm9yIGEgY29sbGFwc2VkIHNlbGVjdGlvbiBzdGF0ZSwgcmVtb3ZlIHRleHQgYmFzZWQgb24gdGhlIHNwZWNpZmllZCBzdHJhdGVneS5cbiAqIElmIHRoZSBzZWxlY3Rpb24gc3RhdGUgaXMgbm90IGNvbGxhcHNlZCwgcmVtb3ZlIHRoZSBlbnRpcmUgc2VsZWN0ZWQgcmFuZ2UuXG4gKi9cblxuZnVuY3Rpb24gcmVtb3ZlVGV4dFdpdGhTdHJhdGVneShlZGl0b3JTdGF0ZSwgc3RyYXRlZ3ksIGRpcmVjdGlvbikge1xuICB2YXIgc2VsZWN0aW9uID0gZWRpdG9yU3RhdGUuZ2V0U2VsZWN0aW9uKCk7XG4gIHZhciBjb250ZW50ID0gZWRpdG9yU3RhdGUuZ2V0Q3VycmVudENvbnRlbnQoKTtcbiAgdmFyIHRhcmdldCA9IHNlbGVjdGlvbjtcbiAgdmFyIGFuY2hvcktleSA9IHNlbGVjdGlvbi5nZXRBbmNob3JLZXkoKTtcbiAgdmFyIGZvY3VzS2V5ID0gc2VsZWN0aW9uLmdldEZvY3VzS2V5KCk7XG4gIHZhciBhbmNob3JCbG9jayA9IGNvbnRlbnQuZ2V0QmxvY2tGb3JLZXkoYW5jaG9yS2V5KTtcblxuICBpZiAoZXhwZXJpbWVudGFsVHJlZURhdGFTdXBwb3J0KSB7XG4gICAgaWYgKGRpcmVjdGlvbiA9PT0gJ2ZvcndhcmQnKSB7XG4gICAgICBpZiAoYW5jaG9yS2V5ICE9PSBmb2N1c0tleSkge1xuICAgICAgICAvLyBGb3Igbm93IHdlIGlnbm9yZSBmb3J3YXJkIGRlbGV0ZSBhY3Jvc3MgYmxvY2tzLFxuICAgICAgICAvLyBpZiB0aGVyZSBpcyBkZW1hbmQgZm9yIHRoaXMgd2Ugd2lsbCBpbXBsZW1lbnQgaXQuXG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChzZWxlY3Rpb24uaXNDb2xsYXBzZWQoKSkge1xuICAgIGlmIChkaXJlY3Rpb24gPT09ICdmb3J3YXJkJykge1xuICAgICAgaWYgKGVkaXRvclN0YXRlLmlzU2VsZWN0aW9uQXRFbmRPZkNvbnRlbnQoKSkge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgIH1cblxuICAgICAgaWYgKGV4cGVyaW1lbnRhbFRyZWVEYXRhU3VwcG9ydCkge1xuICAgICAgICB2YXIgaXNBdEVuZE9mQmxvY2sgPSBzZWxlY3Rpb24uZ2V0QW5jaG9yT2Zmc2V0KCkgPT09IGNvbnRlbnQuZ2V0QmxvY2tGb3JLZXkoYW5jaG9yS2V5KS5nZXRMZW5ndGgoKTtcblxuICAgICAgICBpZiAoaXNBdEVuZE9mQmxvY2spIHtcbiAgICAgICAgICB2YXIgYW5jaG9yQmxvY2tTaWJsaW5nID0gY29udGVudC5nZXRCbG9ja0ZvcktleShhbmNob3JCbG9jay5uZXh0U2libGluZyk7XG5cbiAgICAgICAgICBpZiAoIWFuY2hvckJsb2NrU2libGluZyB8fCBhbmNob3JCbG9ja1NpYmxpbmcuZ2V0TGVuZ3RoKCkgPT09IDApIHtcbiAgICAgICAgICAgIC8vIEZvciBub3cgd2UgaWdub3JlIGZvcndhcmQgZGVsZXRlIGF0IHRoZSBlbmQgb2YgYSBibG9jayxcbiAgICAgICAgICAgIC8vIGlmIHRoZXJlIGlzIGRlbWFuZCBmb3IgdGhpcyB3ZSB3aWxsIGltcGxlbWVudCBpdC5cbiAgICAgICAgICAgIHJldHVybiBjb250ZW50O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZWRpdG9yU3RhdGUuaXNTZWxlY3Rpb25BdFN0YXJ0T2ZDb250ZW50KCkpIHtcbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cblxuICAgIHRhcmdldCA9IHN0cmF0ZWd5KGVkaXRvclN0YXRlKTtcblxuICAgIGlmICh0YXJnZXQgPT09IHNlbGVjdGlvbikge1xuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIERyYWZ0TW9kaWZpZXIucmVtb3ZlUmFuZ2UoY29udGVudCwgdGFyZ2V0LCBkaXJlY3Rpb24pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlbW92ZVRleHRXaXRoU3RyYXRlZ3k7Il0sIm5hbWVzIjpbIkRyYWZ0TW9kaWZpZXIiLCJyZXF1aXJlIiwiZ2t4IiwiZXhwZXJpbWVudGFsVHJlZURhdGFTdXBwb3J0IiwicmVtb3ZlVGV4dFdpdGhTdHJhdGVneSIsImVkaXRvclN0YXRlIiwic3RyYXRlZ3kiLCJkaXJlY3Rpb24iLCJzZWxlY3Rpb24iLCJnZXRTZWxlY3Rpb24iLCJjb250ZW50IiwiZ2V0Q3VycmVudENvbnRlbnQiLCJ0YXJnZXQiLCJhbmNob3JLZXkiLCJnZXRBbmNob3JLZXkiLCJmb2N1c0tleSIsImdldEZvY3VzS2V5IiwiYW5jaG9yQmxvY2siLCJnZXRCbG9ja0ZvcktleSIsImlzQ29sbGFwc2VkIiwiaXNTZWxlY3Rpb25BdEVuZE9mQ29udGVudCIsImlzQXRFbmRPZkJsb2NrIiwiZ2V0QW5jaG9yT2Zmc2V0IiwiZ2V0TGVuZ3RoIiwiYW5jaG9yQmxvY2tTaWJsaW5nIiwibmV4dFNpYmxpbmciLCJpc1NlbGVjdGlvbkF0U3RhcnRPZkNvbnRlbnQiLCJyZW1vdmVSYW5nZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/removeTextWithStrategy.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/sanitizeDraftText.js":
/*!********************************************************!*\
  !*** ./node_modules/draft-js/lib/sanitizeDraftText.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar REGEX_BLOCK_DELIMITER = new RegExp(\"\\r\", \"g\");\nfunction sanitizeDraftText(input) {\n    return input.replace(REGEX_BLOCK_DELIMITER, \"\");\n}\nmodule.exports = sanitizeDraftText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvc2FuaXRpemVEcmFmdFRleHQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSx3QkFBd0IsSUFBSUMsT0FBTyxNQUFNO0FBRTdDLFNBQVNDLGtCQUFrQkMsS0FBSztJQUM5QixPQUFPQSxNQUFNQyxPQUFPLENBQUNKLHVCQUF1QjtBQUM5QztBQUVBSyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvc2FuaXRpemVEcmFmdFRleHQuanM/Y2EwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIFxuICogQGVtYWlscyBvbmNhbGwrZHJhZnRfanNcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUkVHRVhfQkxPQ0tfREVMSU1JVEVSID0gbmV3IFJlZ0V4cCgnXFxyJywgJ2cnKTtcblxuZnVuY3Rpb24gc2FuaXRpemVEcmFmdFRleHQoaW5wdXQpIHtcbiAgcmV0dXJuIGlucHV0LnJlcGxhY2UoUkVHRVhfQkxPQ0tfREVMSU1JVEVSLCAnJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2FuaXRpemVEcmFmdFRleHQ7Il0sIm5hbWVzIjpbIlJFR0VYX0JMT0NLX0RFTElNSVRFUiIsIlJlZ0V4cCIsInNhbml0aXplRHJhZnRUZXh0IiwiaW5wdXQiLCJyZXBsYWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/sanitizeDraftText.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/setDraftEditorSelection.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/setDraftEditorSelection.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar DraftEffects = __webpack_require__(/*! ./DraftEffects */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftEffects.js\");\nvar DraftJsDebugLogging = __webpack_require__(/*! ./DraftJsDebugLogging */ \"(app-pages-browser)/./node_modules/draft-js/lib/DraftJsDebugLogging.js\");\nvar UserAgent = __webpack_require__(/*! fbjs/lib/UserAgent */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\");\nvar containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ \"(app-pages-browser)/./node_modules/fbjs/lib/containsNode.js\");\nvar getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ \"(app-pages-browser)/./node_modules/fbjs/lib/getActiveElement.js\");\nvar getCorrectDocumentFromNode = __webpack_require__(/*! ./getCorrectDocumentFromNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/getCorrectDocumentFromNode.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar isElement = __webpack_require__(/*! ./isElement */ \"(app-pages-browser)/./node_modules/draft-js/lib/isElement.js\");\nvar isIE = UserAgent.isBrowser(\"IE\");\nfunction getAnonymizedDOM(node, getNodeLabels) {\n    if (!node) {\n        return \"[empty]\";\n    }\n    var anonymized = anonymizeTextWithin(node, getNodeLabels);\n    if (anonymized.nodeType === Node.TEXT_NODE) {\n        return anonymized.textContent;\n    }\n    !isElement(anonymized) ?  true ? invariant(false, \"Node must be an Element if it is not a text node.\") : 0 : void 0;\n    var castedElement = anonymized;\n    return castedElement.outerHTML;\n}\nfunction anonymizeTextWithin(node, getNodeLabels) {\n    var labels = getNodeLabels !== undefined ? getNodeLabels(node) : [];\n    if (node.nodeType === Node.TEXT_NODE) {\n        var length = node.textContent.length;\n        return getCorrectDocumentFromNode(node).createTextNode(\"[text \" + length + (labels.length ? \" | \" + labels.join(\", \") : \"\") + \"]\");\n    }\n    var clone = node.cloneNode();\n    if (clone.nodeType === 1 && labels.length) {\n        clone.setAttribute(\"data-labels\", labels.join(\", \"));\n    }\n    var childNodes = node.childNodes;\n    for(var ii = 0; ii < childNodes.length; ii++){\n        clone.appendChild(anonymizeTextWithin(childNodes[ii], getNodeLabels));\n    }\n    return clone;\n}\nfunction getAnonymizedEditorDOM(node, getNodeLabels) {\n    // grabbing the DOM content of the Draft editor\n    var currentNode = node; // this should only be used after checking with isElement\n    var castedNode = currentNode;\n    while(currentNode){\n        if (isElement(currentNode) && castedNode.hasAttribute(\"contenteditable\")) {\n            // found the Draft editor container\n            return getAnonymizedDOM(currentNode, getNodeLabels);\n        } else {\n            currentNode = currentNode.parentNode;\n            castedNode = currentNode;\n        }\n    }\n    return \"Could not find contentEditable parent of node\";\n}\nfunction getNodeLength(node) {\n    return node.nodeValue === null ? node.childNodes.length : node.nodeValue.length;\n}\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n */ function setDraftEditorSelection(selectionState, node, blockKey, nodeStart, nodeEnd) {\n    // It's possible that the editor has been removed from the DOM but\n    // our selection code doesn't know it yet. Forcing selection in\n    // this case may lead to errors, so just bail now.\n    var documentObject = getCorrectDocumentFromNode(node);\n    if (!containsNode(documentObject.documentElement, node)) {\n        return;\n    }\n    var selection = documentObject.defaultView.getSelection();\n    var anchorKey = selectionState.getAnchorKey();\n    var anchorOffset = selectionState.getAnchorOffset();\n    var focusKey = selectionState.getFocusKey();\n    var focusOffset = selectionState.getFocusOffset();\n    var isBackward = selectionState.getIsBackward(); // IE doesn't support backward selection. Swap key/offset pairs.\n    if (!selection.extend && isBackward) {\n        var tempKey = anchorKey;\n        var tempOffset = anchorOffset;\n        anchorKey = focusKey;\n        anchorOffset = focusOffset;\n        focusKey = tempKey;\n        focusOffset = tempOffset;\n        isBackward = false;\n    }\n    var hasAnchor = anchorKey === blockKey && nodeStart <= anchorOffset && nodeEnd >= anchorOffset;\n    var hasFocus = focusKey === blockKey && nodeStart <= focusOffset && nodeEnd >= focusOffset; // If the selection is entirely bound within this node, set the selection\n    // and be done.\n    if (hasAnchor && hasFocus) {\n        selection.removeAllRanges();\n        addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\n        addFocusToSelection(selection, node, focusOffset - nodeStart, selectionState);\n        return;\n    }\n    if (!isBackward) {\n        // If the anchor is within this node, set the range start.\n        if (hasAnchor) {\n            selection.removeAllRanges();\n            addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\n        } // If the focus is within this node, we can assume that we have\n        // already set the appropriate start range on the selection, and\n        // can simply extend the selection.\n        if (hasFocus) {\n            addFocusToSelection(selection, node, focusOffset - nodeStart, selectionState);\n        }\n    } else {\n        // If this node has the focus, set the selection range to be a\n        // collapsed range beginning here. Later, when we encounter the anchor,\n        // we'll use this information to extend the selection.\n        if (hasFocus) {\n            selection.removeAllRanges();\n            addPointToSelection(selection, node, focusOffset - nodeStart, selectionState);\n        } // If this node has the anchor, we may assume that the correct\n        // focus information is already stored on the selection object.\n        // We keep track of it, reset the selection range, and extend it\n        // back to the focus point.\n        if (hasAnchor) {\n            var storedFocusNode = selection.focusNode;\n            var storedFocusOffset = selection.focusOffset;\n            selection.removeAllRanges();\n            addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\n            addFocusToSelection(selection, storedFocusNode, storedFocusOffset, selectionState);\n        }\n    }\n}\n/**\n * Extend selection towards focus point.\n */ function addFocusToSelection(selection, node, offset, selectionState) {\n    var activeElement = getActiveElement();\n    var extend = selection.extend; // containsNode returns false if node is null.\n    // Let's refine the type of this value out here so flow knows.\n    if (extend && node != null && containsNode(activeElement, node)) {\n        // If `extend` is called while another element has focus, an error is\n        // thrown. We therefore disable `extend` if the active element is somewhere\n        // other than the node we are selecting. This should only occur in Firefox,\n        // since it is the only browser to support multiple selections.\n        // See https://bugzilla.mozilla.org/show_bug.cgi?id=921444.\n        // logging to catch bug that is being reported in t16250795\n        if (offset > getNodeLength(node)) {\n            // the call to 'selection.extend' is about to throw\n            DraftJsDebugLogging.logSelectionStateFailure({\n                anonymizedDom: getAnonymizedEditorDOM(node),\n                extraParams: JSON.stringify({\n                    offset: offset\n                }),\n                selectionState: JSON.stringify(selectionState.toJS())\n            });\n        } // logging to catch bug that is being reported in t18110632\n        var nodeWasFocus = node === selection.focusNode;\n        try {\n            // Fixes some reports of \"InvalidStateError: Failed to execute 'extend' on\n            // 'Selection': This Selection object doesn't have any Ranges.\"\n            // Note: selection.extend does not exist in IE.\n            if (selection.rangeCount > 0 && selection.extend) {\n                selection.extend(node, offset);\n            }\n        } catch (e) {\n            DraftJsDebugLogging.logSelectionStateFailure({\n                anonymizedDom: getAnonymizedEditorDOM(node, function(n) {\n                    var labels = [];\n                    if (n === activeElement) {\n                        labels.push(\"active element\");\n                    }\n                    if (n === selection.anchorNode) {\n                        labels.push(\"selection anchor node\");\n                    }\n                    if (n === selection.focusNode) {\n                        labels.push(\"selection focus node\");\n                    }\n                    return labels;\n                }),\n                extraParams: JSON.stringify({\n                    activeElementName: activeElement ? activeElement.nodeName : null,\n                    nodeIsFocus: node === selection.focusNode,\n                    nodeWasFocus: nodeWasFocus,\n                    selectionRangeCount: selection.rangeCount,\n                    selectionAnchorNodeName: selection.anchorNode ? selection.anchorNode.nodeName : null,\n                    selectionAnchorOffset: selection.anchorOffset,\n                    selectionFocusNodeName: selection.focusNode ? selection.focusNode.nodeName : null,\n                    selectionFocusOffset: selection.focusOffset,\n                    message: e ? \"\" + e : null,\n                    offset: offset\n                }, null, 2),\n                selectionState: JSON.stringify(selectionState.toJS(), null, 2)\n            }); // allow the error to be thrown -\n            // better than continuing in a broken state\n            throw e;\n        }\n    } else {\n        // IE doesn't support extend. This will mean no backward selection.\n        // Extract the existing selection range and add focus to it.\n        // Additionally, clone the selection range. IE11 throws an\n        // InvalidStateError when attempting to access selection properties\n        // after the range is detached.\n        if (node && selection.rangeCount > 0) {\n            var range = selection.getRangeAt(0);\n            range.setEnd(node, offset);\n            selection.addRange(range.cloneRange());\n        }\n    }\n}\nfunction addPointToSelection(selection, node, offset, selectionState) {\n    var range = getCorrectDocumentFromNode(node).createRange(); // logging to catch bug that is being reported in t16250795\n    if (offset > getNodeLength(node)) {\n        // in this case we know that the call to 'range.setStart' is about to throw\n        DraftJsDebugLogging.logSelectionStateFailure({\n            anonymizedDom: getAnonymizedEditorDOM(node),\n            extraParams: JSON.stringify({\n                offset: offset\n            }),\n            selectionState: JSON.stringify(selectionState.toJS())\n        });\n        DraftEffects.handleExtensionCausedError();\n    }\n    range.setStart(node, offset); // IE sometimes throws Unspecified Error when trying to addRange\n    if (isIE) {\n        try {\n            selection.addRange(range);\n        } catch (e) {\n            if (true) {\n                /* eslint-disable-next-line no-console */ console.warn(\"Call to selection.addRange() threw exception: \", e);\n            }\n        }\n    } else {\n        selection.addRange(range);\n    }\n}\nmodule.exports = {\n    setDraftEditorSelection: setDraftEditorSelection,\n    addFocusToSelection: addFocusToSelection\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/setDraftEditorSelection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/splitBlockInContentState.js":
/*!***************************************************************!*\
  !*** ./node_modules/draft-js/lib/splitBlockInContentState.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar ContentBlockNode = __webpack_require__(/*! ./ContentBlockNode */ \"(app-pages-browser)/./node_modules/draft-js/lib/ContentBlockNode.js\");\nvar generateRandomKey = __webpack_require__(/*! ./generateRandomKey */ \"(app-pages-browser)/./node_modules/draft-js/lib/generateRandomKey.js\");\nvar Immutable = __webpack_require__(/*! immutable */ \"(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar modifyBlockForContentState = __webpack_require__(/*! ./modifyBlockForContentState */ \"(app-pages-browser)/./node_modules/draft-js/lib/modifyBlockForContentState.js\");\nvar List = Immutable.List, Map = Immutable.Map;\nvar transformBlock = function transformBlock(key, blockMap, func) {\n    if (!key) {\n        return;\n    }\n    var block = blockMap.get(key);\n    if (!block) {\n        return;\n    }\n    blockMap.set(key, func(block));\n};\nvar updateBlockMapLinks = function updateBlockMapLinks(blockMap, originalBlock, belowBlock) {\n    return blockMap.withMutations(function(blocks) {\n        var originalBlockKey = originalBlock.getKey();\n        var belowBlockKey = belowBlock.getKey(); // update block parent\n        transformBlock(originalBlock.getParentKey(), blocks, function(block) {\n            var parentChildrenList = block.getChildKeys();\n            var insertionIndex = parentChildrenList.indexOf(originalBlockKey) + 1;\n            var newChildrenArray = parentChildrenList.toArray();\n            newChildrenArray.splice(insertionIndex, 0, belowBlockKey);\n            return block.merge({\n                children: List(newChildrenArray)\n            });\n        }); // update original next block\n        transformBlock(originalBlock.getNextSiblingKey(), blocks, function(block) {\n            return block.merge({\n                prevSibling: belowBlockKey\n            });\n        }); // update original block\n        transformBlock(originalBlockKey, blocks, function(block) {\n            return block.merge({\n                nextSibling: belowBlockKey\n            });\n        }); // update below block\n        transformBlock(belowBlockKey, blocks, function(block) {\n            return block.merge({\n                prevSibling: originalBlockKey\n            });\n        });\n    });\n};\nvar splitBlockInContentState = function splitBlockInContentState(contentState, selectionState) {\n    !selectionState.isCollapsed() ?  true ? invariant(false, \"Selection range must be collapsed.\") : 0 : void 0;\n    var key = selectionState.getAnchorKey();\n    var blockMap = contentState.getBlockMap();\n    var blockToSplit = blockMap.get(key);\n    var text = blockToSplit.getText();\n    if (!text) {\n        var blockType = blockToSplit.getType();\n        if (blockType === \"unordered-list-item\" || blockType === \"ordered-list-item\") {\n            return modifyBlockForContentState(contentState, selectionState, function(block) {\n                return block.merge({\n                    type: \"unstyled\",\n                    depth: 0\n                });\n            });\n        }\n    }\n    var offset = selectionState.getAnchorOffset();\n    var chars = blockToSplit.getCharacterList();\n    var keyBelow = generateRandomKey();\n    var isExperimentalTreeBlock = blockToSplit instanceof ContentBlockNode;\n    var blockAbove = blockToSplit.merge({\n        text: text.slice(0, offset),\n        characterList: chars.slice(0, offset)\n    });\n    var blockBelow = blockAbove.merge({\n        key: keyBelow,\n        text: text.slice(offset),\n        characterList: chars.slice(offset),\n        data: Map()\n    });\n    var blocksBefore = blockMap.toSeq().takeUntil(function(v) {\n        return v === blockToSplit;\n    });\n    var blocksAfter = blockMap.toSeq().skipUntil(function(v) {\n        return v === blockToSplit;\n    }).rest();\n    var newBlocks = blocksBefore.concat([\n        [\n            key,\n            blockAbove\n        ],\n        [\n            keyBelow,\n            blockBelow\n        ]\n    ], blocksAfter).toOrderedMap();\n    if (isExperimentalTreeBlock) {\n        !blockToSplit.getChildKeys().isEmpty() ?  true ? invariant(false, \"ContentBlockNode must not have children\") : 0 : void 0;\n        newBlocks = updateBlockMapLinks(newBlocks, blockAbove, blockBelow);\n    }\n    return contentState.merge({\n        blockMap: newBlocks,\n        selectionBefore: selectionState,\n        selectionAfter: selectionState.merge({\n            anchorKey: keyBelow,\n            anchorOffset: 0,\n            focusKey: keyBelow,\n            focusOffset: 0,\n            isBackward: false\n        })\n    });\n};\nmodule.exports = splitBlockInContentState;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/splitBlockInContentState.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/splitTextIntoTextBlocks.js":
/*!**************************************************************!*\
  !*** ./node_modules/draft-js/lib/splitTextIntoTextBlocks.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */ \nvar NEWLINE_REGEX = /\\r\\n?|\\n/g;\nfunction splitTextIntoTextBlocks(text) {\n    return text.split(NEWLINE_REGEX);\n}\nmodule.exports = splitTextIntoTextBlocks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvc3BsaXRUZXh0SW50b1RleHRCbG9ja3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0Q7QUFFQSxJQUFJQSxnQkFBZ0I7QUFFcEIsU0FBU0Msd0JBQXdCQyxJQUFJO0lBQ25DLE9BQU9BLEtBQUtDLEtBQUssQ0FBQ0g7QUFDcEI7QUFFQUksT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZHJhZnQtanMvbGliL3NwbGl0VGV4dEludG9UZXh0QmxvY2tzLmpzPzM3ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBcbiAqIEBlbWFpbHMgb25jYWxsK2RyYWZ0X2pzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIE5FV0xJTkVfUkVHRVggPSAvXFxyXFxuP3xcXG4vZztcblxuZnVuY3Rpb24gc3BsaXRUZXh0SW50b1RleHRCbG9ja3ModGV4dCkge1xuICByZXR1cm4gdGV4dC5zcGxpdChORVdMSU5FX1JFR0VYKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzcGxpdFRleHRJbnRvVGV4dEJsb2NrczsiXSwibmFtZXMiOlsiTkVXTElORV9SRUdFWCIsInNwbGl0VGV4dEludG9UZXh0QmxvY2tzIiwidGV4dCIsInNwbGl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/splitTextIntoTextBlocks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/lib/uuid.js":
/*!*******************************************!*\
  !*** ./node_modules/draft-js/lib/uuid.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright 2004-present Facebook. All Rights Reserved.\n *\n * @typechecks\n * \n * @format\n */ /*eslint-disable no-bitwise */ /**\n * Based on the rfc4122-compliant solution posted at\n * http://stackoverflow.com/questions/105034\n */ function uuid() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0;\n        var v = c == \"x\" ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n    });\n}\nmodule.exports = uuid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9saWIvdXVpZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7Q0FNQyxHQUVELDRCQUE0QixHQUU1Qjs7O0NBR0MsR0FDRCxTQUFTQTtJQUNQLE9BQU8sdUNBQXVDQyxPQUFPLENBQUMsU0FBUyxTQUFVQyxDQUFDO1FBQ3hFLElBQUlDLElBQUlDLEtBQUtDLE1BQU0sS0FBSyxLQUFLO1FBQzdCLElBQUlDLElBQUlKLEtBQUssTUFBTUMsSUFBSUEsSUFBSSxNQUFNO1FBQ2pDLE9BQU9HLEVBQUVDLFFBQVEsQ0FBQztJQUNwQjtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBR1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2xpYi91dWlkLmpzP2I3NmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMDQtcHJlc2VudCBGYWNlYm9vay4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICogXG4gKiBAZm9ybWF0XG4gKi9cblxuLyplc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qKlxuICogQmFzZWQgb24gdGhlIHJmYzQxMjItY29tcGxpYW50IHNvbHV0aW9uIHBvc3RlZCBhdFxuICogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDUwMzRcbiAqL1xuZnVuY3Rpb24gdXVpZCgpIHtcbiAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24gKGMpIHtcbiAgICB2YXIgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDA7XG4gICAgdmFyIHYgPSBjID09ICd4JyA/IHIgOiByICYgMHgzIHwgMHg4O1xuICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdXVpZDsiXSwibmFtZXMiOlsidXVpZCIsInJlcGxhY2UiLCJjIiwiciIsIk1hdGgiLCJyYW5kb20iLCJ2IiwidG9TdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/lib/uuid.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js":
/*!************************************************************************!*\
  !*** ./node_modules/draft-js/node_modules/immutable/dist/immutable.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */ (function(global, factory) {\n     true ? module.exports = factory() : 0;\n})(void 0, function() {\n    \"use strict\";\n    var SLICE$0 = Array.prototype.slice;\n    function createClass(ctor, superClass) {\n        if (superClass) {\n            ctor.prototype = Object.create(superClass.prototype);\n        }\n        ctor.prototype.constructor = ctor;\n    }\n    function Iterable(value) {\n        return isIterable(value) ? value : Seq(value);\n    }\n    createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n        return isKeyed(value) ? value : KeyedSeq(value);\n    }\n    createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n        return isIndexed(value) ? value : IndexedSeq(value);\n    }\n    createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n        return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n    function isIterable(maybeIterable) {\n        return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n    }\n    function isKeyed(maybeKeyed) {\n        return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n    }\n    function isIndexed(maybeIndexed) {\n        return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n    }\n    function isAssociative(maybeAssociative) {\n        return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n    }\n    function isOrdered(maybeOrdered) {\n        return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n    }\n    Iterable.isIterable = isIterable;\n    Iterable.isKeyed = isKeyed;\n    Iterable.isIndexed = isIndexed;\n    Iterable.isAssociative = isAssociative;\n    Iterable.isOrdered = isOrdered;\n    Iterable.Keyed = KeyedIterable;\n    Iterable.Indexed = IndexedIterable;\n    Iterable.Set = SetIterable;\n    var IS_ITERABLE_SENTINEL = \"@@__IMMUTABLE_ITERABLE__@@\";\n    var IS_KEYED_SENTINEL = \"@@__IMMUTABLE_KEYED__@@\";\n    var IS_INDEXED_SENTINEL = \"@@__IMMUTABLE_INDEXED__@@\";\n    var IS_ORDERED_SENTINEL = \"@@__IMMUTABLE_ORDERED__@@\";\n    // Used for setting prototype methods that IE8 chokes on.\n    var DELETE = \"delete\";\n    // Constants describing the size of trie nodes.\n    var SHIFT = 5; // Resulted in best performance after ______?\n    var SIZE = 1 << SHIFT;\n    var MASK = SIZE - 1;\n    // A consistent shared value representing \"not set\" which equals nothing other\n    // than itself, and nothing that could be provided externally.\n    var NOT_SET = {};\n    // Boolean references, Rough equivalent of `bool &`.\n    var CHANGE_LENGTH = {\n        value: false\n    };\n    var DID_ALTER = {\n        value: false\n    };\n    function MakeRef(ref) {\n        ref.value = false;\n        return ref;\n    }\n    function SetRef(ref) {\n        ref && (ref.value = true);\n    }\n    // A function which returns a value representing an \"owner\" for transient writes\n    // to tries. The return value will only ever equal itself, and will not equal\n    // the return of any subsequent call of this function.\n    function OwnerID() {}\n    // http://jsperf.com/copy-array-inline\n    function arrCopy(arr, offset) {\n        offset = offset || 0;\n        var len = Math.max(0, arr.length - offset);\n        var newArr = new Array(len);\n        for(var ii = 0; ii < len; ii++){\n            newArr[ii] = arr[ii + offset];\n        }\n        return newArr;\n    }\n    function ensureSize(iter) {\n        if (iter.size === undefined) {\n            iter.size = iter.__iterate(returnTrue);\n        }\n        return iter.size;\n    }\n    function wrapIndex(iter, index) {\n        // This implements \"is array index\" which the ECMAString spec defines as:\n        //\n        //     A String property name P is an array index if and only if\n        //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n        //     to 2^32−1.\n        //\n        // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n        if (typeof index !== \"number\") {\n            var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n            if (\"\" + uint32Index !== index || uint32Index === 4294967295) {\n                return NaN;\n            }\n            index = uint32Index;\n        }\n        return index < 0 ? ensureSize(iter) + index : index;\n    }\n    function returnTrue() {\n        return true;\n    }\n    function wholeSlice(begin, end, size) {\n        return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n    }\n    function resolveBegin(begin, size) {\n        return resolveIndex(begin, size, 0);\n    }\n    function resolveEnd(end, size) {\n        return resolveIndex(end, size, size);\n    }\n    function resolveIndex(index, size, defaultIndex) {\n        return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);\n    }\n    /* global Symbol */ var ITERATE_KEYS = 0;\n    var ITERATE_VALUES = 1;\n    var ITERATE_ENTRIES = 2;\n    var REAL_ITERATOR_SYMBOL = typeof Symbol === \"function\" && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n    var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n    function Iterator(next) {\n        this.next = next;\n    }\n    Iterator.prototype.toString = function() {\n        return \"[Iterator]\";\n    };\n    Iterator.KEYS = ITERATE_KEYS;\n    Iterator.VALUES = ITERATE_VALUES;\n    Iterator.ENTRIES = ITERATE_ENTRIES;\n    Iterator.prototype.inspect = Iterator.prototype.toSource = function() {\n        return this.toString();\n    };\n    Iterator.prototype[ITERATOR_SYMBOL] = function() {\n        return this;\n    };\n    function iteratorValue(type, k, v, iteratorResult) {\n        var value = type === 0 ? k : type === 1 ? v : [\n            k,\n            v\n        ];\n        iteratorResult ? iteratorResult.value = value : iteratorResult = {\n            value: value,\n            done: false\n        };\n        return iteratorResult;\n    }\n    function iteratorDone() {\n        return {\n            value: undefined,\n            done: true\n        };\n    }\n    function hasIterator(maybeIterable) {\n        return !!getIteratorFn(maybeIterable);\n    }\n    function isIterator(maybeIterator) {\n        return maybeIterator && typeof maybeIterator.next === \"function\";\n    }\n    function getIterator(iterable) {\n        var iteratorFn = getIteratorFn(iterable);\n        return iteratorFn && iteratorFn.call(iterable);\n    }\n    function getIteratorFn(iterable) {\n        var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n        if (typeof iteratorFn === \"function\") {\n            return iteratorFn;\n        }\n    }\n    function isArrayLike(value) {\n        return value && typeof value.length === \"number\";\n    }\n    createClass(Seq, Iterable);\n    function Seq(value) {\n        return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n    Seq.of = function() {\n        return Seq(arguments);\n    };\n    Seq.prototype.toSeq = function() {\n        return this;\n    };\n    Seq.prototype.toString = function() {\n        return this.__toString(\"Seq {\", \"}\");\n    };\n    Seq.prototype.cacheResult = function() {\n        if (!this._cache && this.__iterateUncached) {\n            this._cache = this.entrySeq().toArray();\n            this.size = this._cache.length;\n        }\n        return this;\n    };\n    // abstract __iterateUncached(fn, reverse)\n    Seq.prototype.__iterate = function(fn, reverse) {\n        return seqIterate(this, fn, reverse, true);\n    };\n    // abstract __iteratorUncached(type, reverse)\n    Seq.prototype.__iterator = function(type, reverse) {\n        return seqIterator(this, type, reverse, true);\n    };\n    createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n        return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);\n    }\n    KeyedSeq.prototype.toKeyedSeq = function() {\n        return this;\n    };\n    createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n        return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n    IndexedSeq.of = function() {\n        return IndexedSeq(arguments);\n    };\n    IndexedSeq.prototype.toIndexedSeq = function() {\n        return this;\n    };\n    IndexedSeq.prototype.toString = function() {\n        return this.__toString(\"Seq [\", \"]\");\n    };\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n        return seqIterate(this, fn, reverse, false);\n    };\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n        return seqIterator(this, type, reverse, false);\n    };\n    createClass(SetSeq, Seq);\n    function SetSeq(value) {\n        return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();\n    }\n    SetSeq.of = function() {\n        return SetSeq(arguments);\n    };\n    SetSeq.prototype.toSetSeq = function() {\n        return this;\n    };\n    Seq.isSeq = isSeq;\n    Seq.Keyed = KeyedSeq;\n    Seq.Set = SetSeq;\n    Seq.Indexed = IndexedSeq;\n    var IS_SEQ_SENTINEL = \"@@__IMMUTABLE_SEQ__@@\";\n    Seq.prototype[IS_SEQ_SENTINEL] = true;\n    createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n        this._array = array;\n        this.size = array.length;\n    }\n    ArraySeq.prototype.get = function(index, notSetValue) {\n        return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n        var array = this._array;\n        var maxIndex = array.length - 1;\n        for(var ii = 0; ii <= maxIndex; ii++){\n            if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n                return ii + 1;\n            }\n        }\n        return ii;\n    };\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n        var array = this._array;\n        var maxIndex = array.length - 1;\n        var ii = 0;\n        return new Iterator(function() {\n            return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);\n        });\n    };\n    createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n        var keys = Object.keys(object);\n        this._object = object;\n        this._keys = keys;\n        this.size = keys.length;\n    }\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n        if (notSetValue !== undefined && !this.has(key)) {\n            return notSetValue;\n        }\n        return this._object[key];\n    };\n    ObjectSeq.prototype.has = function(key) {\n        return this._object.hasOwnProperty(key);\n    };\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n        var object = this._object;\n        var keys = this._keys;\n        var maxIndex = keys.length - 1;\n        for(var ii = 0; ii <= maxIndex; ii++){\n            var key = keys[reverse ? maxIndex - ii : ii];\n            if (fn(object[key], key, this) === false) {\n                return ii + 1;\n            }\n        }\n        return ii;\n    };\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n        var object = this._object;\n        var keys = this._keys;\n        var maxIndex = keys.length - 1;\n        var ii = 0;\n        return new Iterator(function() {\n            var key = keys[reverse ? maxIndex - ii : ii];\n            return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);\n        });\n    };\n    ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n    createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n        this._iterable = iterable;\n        this.size = iterable.length || iterable.size;\n    }\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n        if (reverse) {\n            return this.cacheResult().__iterate(fn, reverse);\n        }\n        var iterable = this._iterable;\n        var iterator = getIterator(iterable);\n        var iterations = 0;\n        if (isIterator(iterator)) {\n            var step;\n            while(!(step = iterator.next()).done){\n                if (fn(step.value, iterations++, this) === false) {\n                    break;\n                }\n            }\n        }\n        return iterations;\n    };\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n        if (reverse) {\n            return this.cacheResult().__iterator(type, reverse);\n        }\n        var iterable = this._iterable;\n        var iterator = getIterator(iterable);\n        if (!isIterator(iterator)) {\n            return new Iterator(iteratorDone);\n        }\n        var iterations = 0;\n        return new Iterator(function() {\n            var step = iterator.next();\n            return step.done ? step : iteratorValue(type, iterations++, step.value);\n        });\n    };\n    createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n        this._iterator = iterator;\n        this._iteratorCache = [];\n    }\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n        if (reverse) {\n            return this.cacheResult().__iterate(fn, reverse);\n        }\n        var iterator = this._iterator;\n        var cache = this._iteratorCache;\n        var iterations = 0;\n        while(iterations < cache.length){\n            if (fn(cache[iterations], iterations++, this) === false) {\n                return iterations;\n            }\n        }\n        var step;\n        while(!(step = iterator.next()).done){\n            var val = step.value;\n            cache[iterations] = val;\n            if (fn(val, iterations++, this) === false) {\n                break;\n            }\n        }\n        return iterations;\n    };\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n        if (reverse) {\n            return this.cacheResult().__iterator(type, reverse);\n        }\n        var iterator = this._iterator;\n        var cache = this._iteratorCache;\n        var iterations = 0;\n        return new Iterator(function() {\n            if (iterations >= cache.length) {\n                var step = iterator.next();\n                if (step.done) {\n                    return step;\n                }\n                cache[iterations] = step.value;\n            }\n            return iteratorValue(type, iterations, cache[iterations++]);\n        });\n    };\n    // # pragma Helper functions\n    function isSeq(maybeSeq) {\n        return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n    }\n    var EMPTY_SEQ;\n    function emptySequence() {\n        return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n    }\n    function keyedSeqFromValue(value) {\n        var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === \"object\" ? new ObjectSeq(value) : undefined;\n        if (!seq) {\n            throw new TypeError(\"Expected Array or iterable object of [k, v] entries, \" + \"or keyed object: \" + value);\n        }\n        return seq;\n    }\n    function indexedSeqFromValue(value) {\n        var seq = maybeIndexedSeqFromValue(value);\n        if (!seq) {\n            throw new TypeError(\"Expected Array or iterable object of values: \" + value);\n        }\n        return seq;\n    }\n    function seqFromValue(value) {\n        var seq = maybeIndexedSeqFromValue(value) || typeof value === \"object\" && new ObjectSeq(value);\n        if (!seq) {\n            throw new TypeError(\"Expected Array or iterable object of values, or keyed object: \" + value);\n        }\n        return seq;\n    }\n    function maybeIndexedSeqFromValue(value) {\n        return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;\n    }\n    function seqIterate(seq, fn, reverse, useKeys) {\n        var cache = seq._cache;\n        if (cache) {\n            var maxIndex = cache.length - 1;\n            for(var ii = 0; ii <= maxIndex; ii++){\n                var entry = cache[reverse ? maxIndex - ii : ii];\n                if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n                    return ii + 1;\n                }\n            }\n            return ii;\n        }\n        return seq.__iterateUncached(fn, reverse);\n    }\n    function seqIterator(seq, type, reverse, useKeys) {\n        var cache = seq._cache;\n        if (cache) {\n            var maxIndex = cache.length - 1;\n            var ii = 0;\n            return new Iterator(function() {\n                var entry = cache[reverse ? maxIndex - ii : ii];\n                return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n            });\n        }\n        return seq.__iteratorUncached(type, reverse);\n    }\n    function fromJS(json, converter) {\n        return converter ? fromJSWith(converter, json, \"\", {\n            \"\": json\n        }) : fromJSDefault(json);\n    }\n    function fromJSWith(converter, json, key, parentJSON) {\n        if (Array.isArray(json)) {\n            return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k) {\n                return fromJSWith(converter, v, k, json);\n            }));\n        }\n        if (isPlainObj(json)) {\n            return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k) {\n                return fromJSWith(converter, v, k, json);\n            }));\n        }\n        return json;\n    }\n    function fromJSDefault(json) {\n        if (Array.isArray(json)) {\n            return IndexedSeq(json).map(fromJSDefault).toList();\n        }\n        if (isPlainObj(json)) {\n            return KeyedSeq(json).map(fromJSDefault).toMap();\n        }\n        return json;\n    }\n    function isPlainObj(value) {\n        return value && (value.constructor === Object || value.constructor === undefined);\n    }\n    /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */ function is(valueA, valueB) {\n        if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n            return true;\n        }\n        if (!valueA || !valueB) {\n            return false;\n        }\n        if (typeof valueA.valueOf === \"function\" && typeof valueB.valueOf === \"function\") {\n            valueA = valueA.valueOf();\n            valueB = valueB.valueOf();\n            if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n                return true;\n            }\n            if (!valueA || !valueB) {\n                return false;\n            }\n        }\n        if (typeof valueA.equals === \"function\" && typeof valueB.equals === \"function\" && valueA.equals(valueB)) {\n            return true;\n        }\n        return false;\n    }\n    function deepEqual(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n            return false;\n        }\n        if (a.size === 0 && b.size === 0) {\n            return true;\n        }\n        var notAssociative = !isAssociative(a);\n        if (isOrdered(a)) {\n            var entries = a.entries();\n            return b.every(function(v, k) {\n                var entry = entries.next().value;\n                return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n            }) && entries.next().done;\n        }\n        var flipped = false;\n        if (a.size === undefined) {\n            if (b.size === undefined) {\n                if (typeof a.cacheResult === \"function\") {\n                    a.cacheResult();\n                }\n            } else {\n                flipped = true;\n                var _ = a;\n                a = b;\n                b = _;\n            }\n        }\n        var allEqual = true;\n        var bSize = b.__iterate(function(v, k) {\n            if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n                allEqual = false;\n                return false;\n            }\n        });\n        return allEqual && a.size === bSize;\n    }\n    createClass(Repeat, IndexedSeq);\n    function Repeat(value, times) {\n        if (!(this instanceof Repeat)) {\n            return new Repeat(value, times);\n        }\n        this._value = value;\n        this.size = times === undefined ? Infinity : Math.max(0, times);\n        if (this.size === 0) {\n            if (EMPTY_REPEAT) {\n                return EMPTY_REPEAT;\n            }\n            EMPTY_REPEAT = this;\n        }\n    }\n    Repeat.prototype.toString = function() {\n        if (this.size === 0) {\n            return \"Repeat []\";\n        }\n        return \"Repeat [ \" + this._value + \" \" + this.size + \" times ]\";\n    };\n    Repeat.prototype.get = function(index, notSetValue) {\n        return this.has(index) ? this._value : notSetValue;\n    };\n    Repeat.prototype.includes = function(searchValue) {\n        return is(this._value, searchValue);\n    };\n    Repeat.prototype.slice = function(begin, end) {\n        var size = this.size;\n        return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n    Repeat.prototype.reverse = function() {\n        return this;\n    };\n    Repeat.prototype.indexOf = function(searchValue) {\n        if (is(this._value, searchValue)) {\n            return 0;\n        }\n        return -1;\n    };\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n        if (is(this._value, searchValue)) {\n            return this.size;\n        }\n        return -1;\n    };\n    Repeat.prototype.__iterate = function(fn, reverse) {\n        for(var ii = 0; ii < this.size; ii++){\n            if (fn(this._value, ii, this) === false) {\n                return ii + 1;\n            }\n        }\n        return ii;\n    };\n    Repeat.prototype.__iterator = function(type, reverse) {\n        var this$0 = this;\n        var ii = 0;\n        return new Iterator(function() {\n            return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();\n        });\n    };\n    Repeat.prototype.equals = function(other) {\n        return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n    };\n    var EMPTY_REPEAT;\n    function invariant(condition, error) {\n        if (!condition) throw new Error(error);\n    }\n    createClass(Range, IndexedSeq);\n    function Range(start, end, step) {\n        if (!(this instanceof Range)) {\n            return new Range(start, end, step);\n        }\n        invariant(step !== 0, \"Cannot step a Range by 0\");\n        start = start || 0;\n        if (end === undefined) {\n            end = Infinity;\n        }\n        step = step === undefined ? 1 : Math.abs(step);\n        if (end < start) {\n            step = -step;\n        }\n        this._start = start;\n        this._end = end;\n        this._step = step;\n        this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n        if (this.size === 0) {\n            if (EMPTY_RANGE) {\n                return EMPTY_RANGE;\n            }\n            EMPTY_RANGE = this;\n        }\n    }\n    Range.prototype.toString = function() {\n        if (this.size === 0) {\n            return \"Range []\";\n        }\n        return \"Range [ \" + this._start + \"...\" + this._end + (this._step > 1 ? \" by \" + this._step : \"\") + \" ]\";\n    };\n    Range.prototype.get = function(index, notSetValue) {\n        return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n    };\n    Range.prototype.includes = function(searchValue) {\n        var possibleIndex = (searchValue - this._start) / this._step;\n        return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n    };\n    Range.prototype.slice = function(begin, end) {\n        if (wholeSlice(begin, end, this.size)) {\n            return this;\n        }\n        begin = resolveBegin(begin, this.size);\n        end = resolveEnd(end, this.size);\n        if (end <= begin) {\n            return new Range(0, 0);\n        }\n        return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n    Range.prototype.indexOf = function(searchValue) {\n        var offsetValue = searchValue - this._start;\n        if (offsetValue % this._step === 0) {\n            var index = offsetValue / this._step;\n            if (index >= 0 && index < this.size) {\n                return index;\n            }\n        }\n        return -1;\n    };\n    Range.prototype.lastIndexOf = function(searchValue) {\n        return this.indexOf(searchValue);\n    };\n    Range.prototype.__iterate = function(fn, reverse) {\n        var maxIndex = this.size - 1;\n        var step = this._step;\n        var value = reverse ? this._start + maxIndex * step : this._start;\n        for(var ii = 0; ii <= maxIndex; ii++){\n            if (fn(value, ii, this) === false) {\n                return ii + 1;\n            }\n            value += reverse ? -step : step;\n        }\n        return ii;\n    };\n    Range.prototype.__iterator = function(type, reverse) {\n        var maxIndex = this.size - 1;\n        var step = this._step;\n        var value = reverse ? this._start + maxIndex * step : this._start;\n        var ii = 0;\n        return new Iterator(function() {\n            var v = value;\n            value += reverse ? -step : step;\n            return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n        });\n    };\n    Range.prototype.equals = function(other) {\n        return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n    };\n    var EMPTY_RANGE;\n    createClass(Collection, Iterable);\n    function Collection() {\n        throw TypeError(\"Abstract\");\n    }\n    createClass(KeyedCollection, Collection);\n    function KeyedCollection() {}\n    createClass(IndexedCollection, Collection);\n    function IndexedCollection() {}\n    createClass(SetCollection, Collection);\n    function SetCollection() {}\n    Collection.Keyed = KeyedCollection;\n    Collection.Indexed = IndexedCollection;\n    Collection.Set = SetCollection;\n    var imul = typeof Math.imul === \"function\" && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n        a = a | 0; // int\n        b = b | 0; // int\n        var c = a & 0xffff;\n        var d = b & 0xffff;\n        // Shift by 0 fixes the sign on the high part.\n        return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n    };\n    // v8 has an optimization for storing 31-bit signed numbers.\n    // Values which have either 00 or 11 as the high order bits qualify.\n    // This function drops the highest order bit in a signed number, maintaining\n    // the sign bit.\n    function smi(i32) {\n        return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;\n    }\n    function hash(o) {\n        if (o === false || o === null || o === undefined) {\n            return 0;\n        }\n        if (typeof o.valueOf === \"function\") {\n            o = o.valueOf();\n            if (o === false || o === null || o === undefined) {\n                return 0;\n            }\n        }\n        if (o === true) {\n            return 1;\n        }\n        var type = typeof o;\n        if (type === \"number\") {\n            var h = o | 0;\n            if (h !== o) {\n                h ^= o * 0xFFFFFFFF;\n            }\n            while(o > 0xFFFFFFFF){\n                o /= 0xFFFFFFFF;\n                h ^= o;\n            }\n            return smi(h);\n        }\n        if (type === \"string\") {\n            return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n        }\n        if (typeof o.hashCode === \"function\") {\n            return o.hashCode();\n        }\n        if (type === \"object\") {\n            return hashJSObj(o);\n        }\n        if (typeof o.toString === \"function\") {\n            return hashString(o.toString());\n        }\n        throw new Error(\"Value type \" + type + \" cannot be hashed.\");\n    }\n    function cachedHashString(string) {\n        var hash = stringHashCache[string];\n        if (hash === undefined) {\n            hash = hashString(string);\n            if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n                STRING_HASH_CACHE_SIZE = 0;\n                stringHashCache = {};\n            }\n            STRING_HASH_CACHE_SIZE++;\n            stringHashCache[string] = hash;\n        }\n        return hash;\n    }\n    // http://jsperf.com/hashing-strings\n    function hashString(string) {\n        // This is the hash from JVM\n        // The hash code for a string is computed as\n        // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n        // where s[i] is the ith character of the string and n is the length of\n        // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n        // (exclusive) by dropping high bits.\n        var hash = 0;\n        for(var ii = 0; ii < string.length; ii++){\n            hash = 31 * hash + string.charCodeAt(ii) | 0;\n        }\n        return smi(hash);\n    }\n    function hashJSObj(obj) {\n        var hash;\n        if (usingWeakMap) {\n            hash = weakMap.get(obj);\n            if (hash !== undefined) {\n                return hash;\n            }\n        }\n        hash = obj[UID_HASH_KEY];\n        if (hash !== undefined) {\n            return hash;\n        }\n        if (!canDefineProperty) {\n            hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n            if (hash !== undefined) {\n                return hash;\n            }\n            hash = getIENodeHash(obj);\n            if (hash !== undefined) {\n                return hash;\n            }\n        }\n        hash = ++objHashUID;\n        if (objHashUID & 0x40000000) {\n            objHashUID = 0;\n        }\n        if (usingWeakMap) {\n            weakMap.set(obj, hash);\n        } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n            throw new Error(\"Non-extensible objects are not allowed as keys.\");\n        } else if (canDefineProperty) {\n            Object.defineProperty(obj, UID_HASH_KEY, {\n                \"enumerable\": false,\n                \"configurable\": false,\n                \"writable\": false,\n                \"value\": hash\n            });\n        } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n            // Since we can't define a non-enumerable property on the object\n            // we'll hijack one of the less-used non-enumerable properties to\n            // save our hash on it. Since this is a function it will not show up in\n            // `JSON.stringify` which is what we want.\n            obj.propertyIsEnumerable = function() {\n                return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n            };\n            obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n        } else if (obj.nodeType !== undefined) {\n            // At this point we couldn't get the IE `uniqueID` to use as a hash\n            // and we couldn't use a non-enumerable property to exploit the\n            // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n            // itself.\n            obj[UID_HASH_KEY] = hash;\n        } else {\n            throw new Error(\"Unable to set a non-enumerable property on object.\");\n        }\n        return hash;\n    }\n    // Get references to ES5 object methods.\n    var isExtensible = Object.isExtensible;\n    // True if Object.defineProperty works as expected. IE8 fails this test.\n    var canDefineProperty = function() {\n        try {\n            Object.defineProperty({}, \"@\", {});\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }();\n    // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n    // and avoid memory leaks from the IE cloneNode bug.\n    function getIENodeHash(node) {\n        if (node && node.nodeType > 0) {\n            switch(node.nodeType){\n                case 1:\n                    return node.uniqueID;\n                case 9:\n                    return node.documentElement && node.documentElement.uniqueID;\n            }\n        }\n    }\n    // If possible, use a WeakMap.\n    var usingWeakMap = typeof WeakMap === \"function\";\n    var weakMap;\n    if (usingWeakMap) {\n        weakMap = new WeakMap();\n    }\n    var objHashUID = 0;\n    var UID_HASH_KEY = \"__immutablehash__\";\n    if (typeof Symbol === \"function\") {\n        UID_HASH_KEY = Symbol(UID_HASH_KEY);\n    }\n    var STRING_HASH_CACHE_MIN_STRLEN = 16;\n    var STRING_HASH_CACHE_MAX_SIZE = 255;\n    var STRING_HASH_CACHE_SIZE = 0;\n    var stringHashCache = {};\n    function assertNotInfinite(size) {\n        invariant(size !== Infinity, \"Cannot perform this action with an infinite size.\");\n    }\n    createClass(Map, KeyedCollection);\n    // @pragma Construction\n    function Map(value) {\n        return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function(map) {\n            var iter = KeyedIterable(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function(v, k) {\n                return map.set(k, v);\n            });\n        });\n    }\n    Map.prototype.toString = function() {\n        return this.__toString(\"Map {\", \"}\");\n    };\n    // @pragma Access\n    Map.prototype.get = function(k, notSetValue) {\n        return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n    };\n    // @pragma Modification\n    Map.prototype.set = function(k, v) {\n        return updateMap(this, k, v);\n    };\n    Map.prototype.setIn = function(keyPath, v) {\n        return this.updateIn(keyPath, NOT_SET, function() {\n            return v;\n        });\n    };\n    Map.prototype.remove = function(k) {\n        return updateMap(this, k, NOT_SET);\n    };\n    Map.prototype.deleteIn = function(keyPath) {\n        return this.updateIn(keyPath, function() {\n            return NOT_SET;\n        });\n    };\n    Map.prototype.update = function(k, notSetValue, updater) {\n        return arguments.length === 1 ? k(this) : this.updateIn([\n            k\n        ], notSetValue, updater);\n    };\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n        if (!updater) {\n            updater = notSetValue;\n            notSetValue = undefined;\n        }\n        var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);\n        return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n    Map.prototype.clear = function() {\n        if (this.size === 0) {\n            return this;\n        }\n        if (this.__ownerID) {\n            this.size = 0;\n            this._root = null;\n            this.__hash = undefined;\n            this.__altered = true;\n            return this;\n        }\n        return emptyMap();\n    };\n    // @pragma Composition\n    Map.prototype.merge = function() {\n        return mergeIntoMapWith(this, undefined, arguments);\n    };\n    Map.prototype.mergeWith = function(merger) {\n        var iters = SLICE$0.call(arguments, 1);\n        return mergeIntoMapWith(this, merger, iters);\n    };\n    Map.prototype.mergeIn = function(keyPath) {\n        var iters = SLICE$0.call(arguments, 1);\n        return this.updateIn(keyPath, emptyMap(), function(m) {\n            return typeof m.merge === \"function\" ? m.merge.apply(m, iters) : iters[iters.length - 1];\n        });\n    };\n    Map.prototype.mergeDeep = function() {\n        return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n    Map.prototype.mergeDeepWith = function(merger) {\n        var iters = SLICE$0.call(arguments, 1);\n        return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n    Map.prototype.mergeDeepIn = function(keyPath) {\n        var iters = SLICE$0.call(arguments, 1);\n        return this.updateIn(keyPath, emptyMap(), function(m) {\n            return typeof m.mergeDeep === \"function\" ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];\n        });\n    };\n    Map.prototype.sort = function(comparator) {\n        // Late binding\n        return OrderedMap(sortFactory(this, comparator));\n    };\n    Map.prototype.sortBy = function(mapper, comparator) {\n        // Late binding\n        return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n    // @pragma Mutability\n    Map.prototype.withMutations = function(fn) {\n        var mutable = this.asMutable();\n        fn(mutable);\n        return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n    Map.prototype.asMutable = function() {\n        return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n    Map.prototype.asImmutable = function() {\n        return this.__ensureOwner();\n    };\n    Map.prototype.wasAltered = function() {\n        return this.__altered;\n    };\n    Map.prototype.__iterator = function(type, reverse) {\n        return new MapIterator(this, type, reverse);\n    };\n    Map.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        var iterations = 0;\n        this._root && this._root.iterate(function(entry) {\n            iterations++;\n            return fn(entry[1], entry[0], this$0);\n        }, reverse);\n        return iterations;\n    };\n    Map.prototype.__ensureOwner = function(ownerID) {\n        if (ownerID === this.__ownerID) {\n            return this;\n        }\n        if (!ownerID) {\n            this.__ownerID = ownerID;\n            this.__altered = false;\n            return this;\n        }\n        return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n    function isMap(maybeMap) {\n        return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n    }\n    Map.isMap = isMap;\n    var IS_MAP_SENTINEL = \"@@__IMMUTABLE_MAP__@@\";\n    var MapPrototype = Map.prototype;\n    MapPrototype[IS_MAP_SENTINEL] = true;\n    MapPrototype[DELETE] = MapPrototype.remove;\n    MapPrototype.removeIn = MapPrototype.deleteIn;\n    // #pragma Trie Nodes\n    function ArrayMapNode(ownerID, entries) {\n        this.ownerID = ownerID;\n        this.entries = entries;\n    }\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n        var entries = this.entries;\n        for(var ii = 0, len = entries.length; ii < len; ii++){\n            if (is(key, entries[ii][0])) {\n                return entries[ii][1];\n            }\n        }\n        return notSetValue;\n    };\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n        var removed = value === NOT_SET;\n        var entries = this.entries;\n        var idx = 0;\n        for(var len = entries.length; idx < len; idx++){\n            if (is(key, entries[idx][0])) {\n                break;\n            }\n        }\n        var exists = idx < len;\n        if (exists ? entries[idx][1] === value : removed) {\n            return this;\n        }\n        SetRef(didAlter);\n        (removed || !exists) && SetRef(didChangeSize);\n        if (removed && entries.length === 1) {\n            return; // undefined\n        }\n        if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n            return createNodes(ownerID, entries, key, value);\n        }\n        var isEditable = ownerID && ownerID === this.ownerID;\n        var newEntries = isEditable ? entries : arrCopy(entries);\n        if (exists) {\n            if (removed) {\n                idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n            } else {\n                newEntries[idx] = [\n                    key,\n                    value\n                ];\n            }\n        } else {\n            newEntries.push([\n                key,\n                value\n            ]);\n        }\n        if (isEditable) {\n            this.entries = newEntries;\n            return this;\n        }\n        return new ArrayMapNode(ownerID, newEntries);\n    };\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n        this.ownerID = ownerID;\n        this.bitmap = bitmap;\n        this.nodes = nodes;\n    }\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n        if (keyHash === undefined) {\n            keyHash = hash(key);\n        }\n        var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n        var bitmap = this.bitmap;\n        return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n        if (keyHash === undefined) {\n            keyHash = hash(key);\n        }\n        var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n        var bit = 1 << keyHashFrag;\n        var bitmap = this.bitmap;\n        var exists = (bitmap & bit) !== 0;\n        if (!exists && value === NOT_SET) {\n            return this;\n        }\n        var idx = popCount(bitmap & bit - 1);\n        var nodes = this.nodes;\n        var node = exists ? nodes[idx] : undefined;\n        var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n        if (newNode === node) {\n            return this;\n        }\n        if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n            return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n        }\n        if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n            return nodes[idx ^ 1];\n        }\n        if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n            return newNode;\n        }\n        var isEditable = ownerID && ownerID === this.ownerID;\n        var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n        var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n        if (isEditable) {\n            this.bitmap = newBitmap;\n            this.nodes = newNodes;\n            return this;\n        }\n        return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n    function HashArrayMapNode(ownerID, count, nodes) {\n        this.ownerID = ownerID;\n        this.count = count;\n        this.nodes = nodes;\n    }\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n        if (keyHash === undefined) {\n            keyHash = hash(key);\n        }\n        var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n        var node = this.nodes[idx];\n        return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n        if (keyHash === undefined) {\n            keyHash = hash(key);\n        }\n        var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n        var removed = value === NOT_SET;\n        var nodes = this.nodes;\n        var node = nodes[idx];\n        if (removed && !node) {\n            return this;\n        }\n        var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n        if (newNode === node) {\n            return this;\n        }\n        var newCount = this.count;\n        if (!node) {\n            newCount++;\n        } else if (!newNode) {\n            newCount--;\n            if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n                return packNodes(ownerID, nodes, newCount, idx);\n            }\n        }\n        var isEditable = ownerID && ownerID === this.ownerID;\n        var newNodes = setIn(nodes, idx, newNode, isEditable);\n        if (isEditable) {\n            this.count = newCount;\n            this.nodes = newNodes;\n            return this;\n        }\n        return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n    function HashCollisionNode(ownerID, keyHash, entries) {\n        this.ownerID = ownerID;\n        this.keyHash = keyHash;\n        this.entries = entries;\n    }\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n        var entries = this.entries;\n        for(var ii = 0, len = entries.length; ii < len; ii++){\n            if (is(key, entries[ii][0])) {\n                return entries[ii][1];\n            }\n        }\n        return notSetValue;\n    };\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n        if (keyHash === undefined) {\n            keyHash = hash(key);\n        }\n        var removed = value === NOT_SET;\n        if (keyHash !== this.keyHash) {\n            if (removed) {\n                return this;\n            }\n            SetRef(didAlter);\n            SetRef(didChangeSize);\n            return mergeIntoNode(this, ownerID, shift, keyHash, [\n                key,\n                value\n            ]);\n        }\n        var entries = this.entries;\n        var idx = 0;\n        for(var len = entries.length; idx < len; idx++){\n            if (is(key, entries[idx][0])) {\n                break;\n            }\n        }\n        var exists = idx < len;\n        if (exists ? entries[idx][1] === value : removed) {\n            return this;\n        }\n        SetRef(didAlter);\n        (removed || !exists) && SetRef(didChangeSize);\n        if (removed && len === 2) {\n            return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n        }\n        var isEditable = ownerID && ownerID === this.ownerID;\n        var newEntries = isEditable ? entries : arrCopy(entries);\n        if (exists) {\n            if (removed) {\n                idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n            } else {\n                newEntries[idx] = [\n                    key,\n                    value\n                ];\n            }\n        } else {\n            newEntries.push([\n                key,\n                value\n            ]);\n        }\n        if (isEditable) {\n            this.entries = newEntries;\n            return this;\n        }\n        return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n    function ValueNode(ownerID, keyHash, entry) {\n        this.ownerID = ownerID;\n        this.keyHash = keyHash;\n        this.entry = entry;\n    }\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n        return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n        var removed = value === NOT_SET;\n        var keyMatch = is(key, this.entry[0]);\n        if (keyMatch ? value === this.entry[1] : removed) {\n            return this;\n        }\n        SetRef(didAlter);\n        if (removed) {\n            SetRef(didChangeSize);\n            return; // undefined\n        }\n        if (keyMatch) {\n            if (ownerID && ownerID === this.ownerID) {\n                this.entry[1] = value;\n                return this;\n            }\n            return new ValueNode(ownerID, this.keyHash, [\n                key,\n                value\n            ]);\n        }\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, hash(key), [\n            key,\n            value\n        ]);\n    };\n    // #pragma Iterators\n    ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function(fn, reverse) {\n        var entries = this.entries;\n        for(var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++){\n            if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n                return false;\n            }\n        }\n    };\n    BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function(fn, reverse) {\n        var nodes = this.nodes;\n        for(var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++){\n            var node = nodes[reverse ? maxIndex - ii : ii];\n            if (node && node.iterate(fn, reverse) === false) {\n                return false;\n            }\n        }\n    };\n    ValueNode.prototype.iterate = function(fn, reverse) {\n        return fn(this.entry);\n    };\n    createClass(MapIterator, Iterator);\n    function MapIterator(map, type, reverse) {\n        this._type = type;\n        this._reverse = reverse;\n        this._stack = map._root && mapIteratorFrame(map._root);\n    }\n    MapIterator.prototype.next = function() {\n        var type = this._type;\n        var stack = this._stack;\n        while(stack){\n            var node = stack.node;\n            var index = stack.index++;\n            var maxIndex;\n            if (node.entry) {\n                if (index === 0) {\n                    return mapIteratorValue(type, node.entry);\n                }\n            } else if (node.entries) {\n                maxIndex = node.entries.length - 1;\n                if (index <= maxIndex) {\n                    return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n                }\n            } else {\n                maxIndex = node.nodes.length - 1;\n                if (index <= maxIndex) {\n                    var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n                    if (subNode) {\n                        if (subNode.entry) {\n                            return mapIteratorValue(type, subNode.entry);\n                        }\n                        stack = this._stack = mapIteratorFrame(subNode, stack);\n                    }\n                    continue;\n                }\n            }\n            stack = this._stack = this._stack.__prev;\n        }\n        return iteratorDone();\n    };\n    function mapIteratorValue(type, entry) {\n        return iteratorValue(type, entry[0], entry[1]);\n    }\n    function mapIteratorFrame(node, prev) {\n        return {\n            node: node,\n            index: 0,\n            __prev: prev\n        };\n    }\n    function makeMap(size, root, ownerID, hash) {\n        var map = Object.create(MapPrototype);\n        map.size = size;\n        map._root = root;\n        map.__ownerID = ownerID;\n        map.__hash = hash;\n        map.__altered = false;\n        return map;\n    }\n    var EMPTY_MAP;\n    function emptyMap() {\n        return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n    }\n    function updateMap(map, k, v) {\n        var newRoot;\n        var newSize;\n        if (!map._root) {\n            if (v === NOT_SET) {\n                return map;\n            }\n            newSize = 1;\n            newRoot = new ArrayMapNode(map.__ownerID, [\n                [\n                    k,\n                    v\n                ]\n            ]);\n        } else {\n            var didChangeSize = MakeRef(CHANGE_LENGTH);\n            var didAlter = MakeRef(DID_ALTER);\n            newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n            if (!didAlter.value) {\n                return map;\n            }\n            newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n        }\n        if (map.__ownerID) {\n            map.size = newSize;\n            map._root = newRoot;\n            map.__hash = undefined;\n            map.__altered = true;\n            return map;\n        }\n        return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n    }\n    function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n        if (!node) {\n            if (value === NOT_SET) {\n                return node;\n            }\n            SetRef(didAlter);\n            SetRef(didChangeSize);\n            return new ValueNode(ownerID, keyHash, [\n                key,\n                value\n            ]);\n        }\n        return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n    }\n    function isLeafNode(node) {\n        return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n    }\n    function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n        if (node.keyHash === keyHash) {\n            return new HashCollisionNode(ownerID, keyHash, [\n                node.entry,\n                entry\n            ]);\n        }\n        var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n        var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n        var newNode;\n        var nodes = idx1 === idx2 ? [\n            mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)\n        ] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [\n            node,\n            newNode\n        ] : [\n            newNode,\n            node\n        ]);\n        return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n    }\n    function createNodes(ownerID, entries, key, value) {\n        if (!ownerID) {\n            ownerID = new OwnerID();\n        }\n        var node = new ValueNode(ownerID, hash(key), [\n            key,\n            value\n        ]);\n        for(var ii = 0; ii < entries.length; ii++){\n            var entry = entries[ii];\n            node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n        }\n        return node;\n    }\n    function packNodes(ownerID, nodes, count, excluding) {\n        var bitmap = 0;\n        var packedII = 0;\n        var packedNodes = new Array(count);\n        for(var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1){\n            var node = nodes[ii];\n            if (node !== undefined && ii !== excluding) {\n                bitmap |= bit;\n                packedNodes[packedII++] = node;\n            }\n        }\n        return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n    }\n    function expandNodes(ownerID, nodes, bitmap, including, node) {\n        var count = 0;\n        var expandedNodes = new Array(SIZE);\n        for(var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1){\n            expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n        }\n        expandedNodes[including] = node;\n        return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n    }\n    function mergeIntoMapWith(map, merger, iterables) {\n        var iters = [];\n        for(var ii = 0; ii < iterables.length; ii++){\n            var value = iterables[ii];\n            var iter = KeyedIterable(value);\n            if (!isIterable(value)) {\n                iter = iter.map(function(v) {\n                    return fromJS(v);\n                });\n            }\n            iters.push(iter);\n        }\n        return mergeIntoCollectionWith(map, merger, iters);\n    }\n    function deepMerger(existing, value, key) {\n        return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;\n    }\n    function deepMergerWith(merger) {\n        return function(existing, value, key) {\n            if (existing && existing.mergeDeepWith && isIterable(value)) {\n                return existing.mergeDeepWith(merger, value);\n            }\n            var nextValue = merger(existing, value, key);\n            return is(existing, nextValue) ? existing : nextValue;\n        };\n    }\n    function mergeIntoCollectionWith(collection, merger, iters) {\n        iters = iters.filter(function(x) {\n            return x.size !== 0;\n        });\n        if (iters.length === 0) {\n            return collection;\n        }\n        if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n            return collection.constructor(iters[0]);\n        }\n        return collection.withMutations(function(collection) {\n            var mergeIntoMap = merger ? function(value, key) {\n                collection.update(key, NOT_SET, function(existing) {\n                    return existing === NOT_SET ? value : merger(existing, value, key);\n                });\n            } : function(value, key) {\n                collection.set(key, value);\n            };\n            for(var ii = 0; ii < iters.length; ii++){\n                iters[ii].forEach(mergeIntoMap);\n            }\n        });\n    }\n    function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n        var isNotSet = existing === NOT_SET;\n        var step = keyPathIter.next();\n        if (step.done) {\n            var existingValue = isNotSet ? notSetValue : existing;\n            var newValue = updater(existingValue);\n            return newValue === existingValue ? existing : newValue;\n        }\n        invariant(isNotSet || existing && existing.set, \"invalid keyPath\");\n        var key = step.value;\n        var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n        var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);\n        return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n    }\n    function popCount(x) {\n        x = x - (x >> 1 & 0x55555555);\n        x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n        x = x + (x >> 4) & 0x0f0f0f0f;\n        x = x + (x >> 8);\n        x = x + (x >> 16);\n        return x & 0x7f;\n    }\n    function setIn(array, idx, val, canEdit) {\n        var newArray = canEdit ? array : arrCopy(array);\n        newArray[idx] = val;\n        return newArray;\n    }\n    function spliceIn(array, idx, val, canEdit) {\n        var newLen = array.length + 1;\n        if (canEdit && idx + 1 === newLen) {\n            array[idx] = val;\n            return array;\n        }\n        var newArray = new Array(newLen);\n        var after = 0;\n        for(var ii = 0; ii < newLen; ii++){\n            if (ii === idx) {\n                newArray[ii] = val;\n                after = -1;\n            } else {\n                newArray[ii] = array[ii + after];\n            }\n        }\n        return newArray;\n    }\n    function spliceOut(array, idx, canEdit) {\n        var newLen = array.length - 1;\n        if (canEdit && idx === newLen) {\n            array.pop();\n            return array;\n        }\n        var newArray = new Array(newLen);\n        var after = 0;\n        for(var ii = 0; ii < newLen; ii++){\n            if (ii === idx) {\n                after = 1;\n            }\n            newArray[ii] = array[ii + after];\n        }\n        return newArray;\n    }\n    var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n    var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n    var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n    createClass(List, IndexedCollection);\n    // @pragma Construction\n    function List(value) {\n        var empty = emptyList();\n        if (value === null || value === undefined) {\n            return empty;\n        }\n        if (isList(value)) {\n            return value;\n        }\n        var iter = IndexedIterable(value);\n        var size = iter.size;\n        if (size === 0) {\n            return empty;\n        }\n        assertNotInfinite(size);\n        if (size > 0 && size < SIZE) {\n            return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n        }\n        return empty.withMutations(function(list) {\n            list.setSize(size);\n            iter.forEach(function(v, i) {\n                return list.set(i, v);\n            });\n        });\n    }\n    List.of = function() {\n        return this(arguments);\n    };\n    List.prototype.toString = function() {\n        return this.__toString(\"List [\", \"]\");\n    };\n    // @pragma Access\n    List.prototype.get = function(index, notSetValue) {\n        index = wrapIndex(this, index);\n        if (index >= 0 && index < this.size) {\n            index += this._origin;\n            var node = listNodeFor(this, index);\n            return node && node.array[index & MASK];\n        }\n        return notSetValue;\n    };\n    // @pragma Modification\n    List.prototype.set = function(index, value) {\n        return updateList(this, index, value);\n    };\n    List.prototype.remove = function(index) {\n        return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n    };\n    List.prototype.insert = function(index, value) {\n        return this.splice(index, 0, value);\n    };\n    List.prototype.clear = function() {\n        if (this.size === 0) {\n            return this;\n        }\n        if (this.__ownerID) {\n            this.size = this._origin = this._capacity = 0;\n            this._level = SHIFT;\n            this._root = this._tail = null;\n            this.__hash = undefined;\n            this.__altered = true;\n            return this;\n        }\n        return emptyList();\n    };\n    List.prototype.push = function() {\n        var values = arguments;\n        var oldSize = this.size;\n        return this.withMutations(function(list) {\n            setListBounds(list, 0, oldSize + values.length);\n            for(var ii = 0; ii < values.length; ii++){\n                list.set(oldSize + ii, values[ii]);\n            }\n        });\n    };\n    List.prototype.pop = function() {\n        return setListBounds(this, 0, -1);\n    };\n    List.prototype.unshift = function() {\n        var values = arguments;\n        return this.withMutations(function(list) {\n            setListBounds(list, -values.length);\n            for(var ii = 0; ii < values.length; ii++){\n                list.set(ii, values[ii]);\n            }\n        });\n    };\n    List.prototype.shift = function() {\n        return setListBounds(this, 1);\n    };\n    // @pragma Composition\n    List.prototype.merge = function() {\n        return mergeIntoListWith(this, undefined, arguments);\n    };\n    List.prototype.mergeWith = function(merger) {\n        var iters = SLICE$0.call(arguments, 1);\n        return mergeIntoListWith(this, merger, iters);\n    };\n    List.prototype.mergeDeep = function() {\n        return mergeIntoListWith(this, deepMerger, arguments);\n    };\n    List.prototype.mergeDeepWith = function(merger) {\n        var iters = SLICE$0.call(arguments, 1);\n        return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n    List.prototype.setSize = function(size) {\n        return setListBounds(this, 0, size);\n    };\n    // @pragma Iteration\n    List.prototype.slice = function(begin, end) {\n        var size = this.size;\n        if (wholeSlice(begin, end, size)) {\n            return this;\n        }\n        return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n    };\n    List.prototype.__iterator = function(type, reverse) {\n        var index = 0;\n        var values = iterateList(this, reverse);\n        return new Iterator(function() {\n            var value = values();\n            return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);\n        });\n    };\n    List.prototype.__iterate = function(fn, reverse) {\n        var index = 0;\n        var values = iterateList(this, reverse);\n        var value;\n        while((value = values()) !== DONE){\n            if (fn(value, index++, this) === false) {\n                break;\n            }\n        }\n        return index;\n    };\n    List.prototype.__ensureOwner = function(ownerID) {\n        if (ownerID === this.__ownerID) {\n            return this;\n        }\n        if (!ownerID) {\n            this.__ownerID = ownerID;\n            return this;\n        }\n        return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n    function isList(maybeList) {\n        return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n    }\n    List.isList = isList;\n    var IS_LIST_SENTINEL = \"@@__IMMUTABLE_LIST__@@\";\n    var ListPrototype = List.prototype;\n    ListPrototype[IS_LIST_SENTINEL] = true;\n    ListPrototype[DELETE] = ListPrototype.remove;\n    ListPrototype.setIn = MapPrototype.setIn;\n    ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;\n    ListPrototype.update = MapPrototype.update;\n    ListPrototype.updateIn = MapPrototype.updateIn;\n    ListPrototype.mergeIn = MapPrototype.mergeIn;\n    ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n    ListPrototype.withMutations = MapPrototype.withMutations;\n    ListPrototype.asMutable = MapPrototype.asMutable;\n    ListPrototype.asImmutable = MapPrototype.asImmutable;\n    ListPrototype.wasAltered = MapPrototype.wasAltered;\n    function VNode(array, ownerID) {\n        this.array = array;\n        this.ownerID = ownerID;\n    }\n    // TODO: seems like these methods are very similar\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n        if (index === level ? 1 << level :  false || this.array.length === 0) {\n            return this;\n        }\n        var originIndex = index >>> level & MASK;\n        if (originIndex >= this.array.length) {\n            return new VNode([], ownerID);\n        }\n        var removingFirst = originIndex === 0;\n        var newChild;\n        if (level > 0) {\n            var oldChild = this.array[originIndex];\n            newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n            if (newChild === oldChild && removingFirst) {\n                return this;\n            }\n        }\n        if (removingFirst && !newChild) {\n            return this;\n        }\n        var editable = editableVNode(this, ownerID);\n        if (!removingFirst) {\n            for(var ii = 0; ii < originIndex; ii++){\n                editable.array[ii] = undefined;\n            }\n        }\n        if (newChild) {\n            editable.array[originIndex] = newChild;\n        }\n        return editable;\n    };\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n        if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n            return this;\n        }\n        var sizeIndex = index - 1 >>> level & MASK;\n        if (sizeIndex >= this.array.length) {\n            return this;\n        }\n        var newChild;\n        if (level > 0) {\n            var oldChild = this.array[sizeIndex];\n            newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n            if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n                return this;\n            }\n        }\n        var editable = editableVNode(this, ownerID);\n        editable.array.splice(sizeIndex + 1);\n        if (newChild) {\n            editable.array[sizeIndex] = newChild;\n        }\n        return editable;\n    };\n    var DONE = {};\n    function iterateList(list, reverse) {\n        var left = list._origin;\n        var right = list._capacity;\n        var tailPos = getTailOffset(right);\n        var tail = list._tail;\n        return iterateNodeOrLeaf(list._root, list._level, 0);\n        function iterateNodeOrLeaf(node, level, offset) {\n            return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n        }\n        function iterateLeaf(node, offset) {\n            var array = offset === tailPos ? tail && tail.array : node && node.array;\n            var from = offset > left ? 0 : left - offset;\n            var to = right - offset;\n            if (to > SIZE) {\n                to = SIZE;\n            }\n            return function() {\n                if (from === to) {\n                    return DONE;\n                }\n                var idx = reverse ? --to : from++;\n                return array && array[idx];\n            };\n        }\n        function iterateNode(node, level, offset) {\n            var values;\n            var array = node && node.array;\n            var from = offset > left ? 0 : left - offset >> level;\n            var to = (right - offset >> level) + 1;\n            if (to > SIZE) {\n                to = SIZE;\n            }\n            return function() {\n                do {\n                    if (values) {\n                        var value = values();\n                        if (value !== DONE) {\n                            return value;\n                        }\n                        values = null;\n                    }\n                    if (from === to) {\n                        return DONE;\n                    }\n                    var idx = reverse ? --to : from++;\n                    values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n                }while (true);\n            };\n        }\n    }\n    function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n        var list = Object.create(ListPrototype);\n        list.size = capacity - origin;\n        list._origin = origin;\n        list._capacity = capacity;\n        list._level = level;\n        list._root = root;\n        list._tail = tail;\n        list.__ownerID = ownerID;\n        list.__hash = hash;\n        list.__altered = false;\n        return list;\n    }\n    var EMPTY_LIST;\n    function emptyList() {\n        return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n    }\n    function updateList(list, index, value) {\n        index = wrapIndex(list, index);\n        if (index !== index) {\n            return list;\n        }\n        if (index >= list.size || index < 0) {\n            return list.withMutations(function(list) {\n                index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n            });\n        }\n        index += list._origin;\n        var newTail = list._tail;\n        var newRoot = list._root;\n        var didAlter = MakeRef(DID_ALTER);\n        if (index >= getTailOffset(list._capacity)) {\n            newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n        } else {\n            newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n        }\n        if (!didAlter.value) {\n            return list;\n        }\n        if (list.__ownerID) {\n            list._root = newRoot;\n            list._tail = newTail;\n            list.__hash = undefined;\n            list.__altered = true;\n            return list;\n        }\n        return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n    }\n    function updateVNode(node, ownerID, level, index, value, didAlter) {\n        var idx = index >>> level & MASK;\n        var nodeHas = node && idx < node.array.length;\n        if (!nodeHas && value === undefined) {\n            return node;\n        }\n        var newNode;\n        if (level > 0) {\n            var lowerNode = node && node.array[idx];\n            var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n            if (newLowerNode === lowerNode) {\n                return node;\n            }\n            newNode = editableVNode(node, ownerID);\n            newNode.array[idx] = newLowerNode;\n            return newNode;\n        }\n        if (nodeHas && node.array[idx] === value) {\n            return node;\n        }\n        SetRef(didAlter);\n        newNode = editableVNode(node, ownerID);\n        if (value === undefined && idx === newNode.array.length - 1) {\n            newNode.array.pop();\n        } else {\n            newNode.array[idx] = value;\n        }\n        return newNode;\n    }\n    function editableVNode(node, ownerID) {\n        if (ownerID && node && ownerID === node.ownerID) {\n            return node;\n        }\n        return new VNode(node ? node.array.slice() : [], ownerID);\n    }\n    function listNodeFor(list, rawIndex) {\n        if (rawIndex >= getTailOffset(list._capacity)) {\n            return list._tail;\n        }\n        if (rawIndex < 1 << list._level + SHIFT) {\n            var node = list._root;\n            var level = list._level;\n            while(node && level > 0){\n                node = node.array[rawIndex >>> level & MASK];\n                level -= SHIFT;\n            }\n            return node;\n        }\n    }\n    function setListBounds(list, begin, end) {\n        // Sanitize begin & end using this shorthand for ToInt32(argument)\n        // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n        if (begin !== undefined) {\n            begin = begin | 0;\n        }\n        if (end !== undefined) {\n            end = end | 0;\n        }\n        var owner = list.__ownerID || new OwnerID();\n        var oldOrigin = list._origin;\n        var oldCapacity = list._capacity;\n        var newOrigin = oldOrigin + begin;\n        var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n        if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n            return list;\n        }\n        // If it's going to end after it starts, it's empty.\n        if (newOrigin >= newCapacity) {\n            return list.clear();\n        }\n        var newLevel = list._level;\n        var newRoot = list._root;\n        // New origin might need creating a higher root.\n        var offsetShift = 0;\n        while(newOrigin + offsetShift < 0){\n            newRoot = new VNode(newRoot && newRoot.array.length ? [\n                undefined,\n                newRoot\n            ] : [], owner);\n            newLevel += SHIFT;\n            offsetShift += 1 << newLevel;\n        }\n        if (offsetShift) {\n            newOrigin += offsetShift;\n            oldOrigin += offsetShift;\n            newCapacity += offsetShift;\n            oldCapacity += offsetShift;\n        }\n        var oldTailOffset = getTailOffset(oldCapacity);\n        var newTailOffset = getTailOffset(newCapacity);\n        // New size might need creating a higher root.\n        while(newTailOffset >= 1 << newLevel + SHIFT){\n            newRoot = new VNode(newRoot && newRoot.array.length ? [\n                newRoot\n            ] : [], owner);\n            newLevel += SHIFT;\n        }\n        // Locate or create the new tail.\n        var oldTail = list._tail;\n        var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n        // Merge Tail into tree.\n        if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n            newRoot = editableVNode(newRoot, owner);\n            var node = newRoot;\n            for(var level = newLevel; level > SHIFT; level -= SHIFT){\n                var idx = oldTailOffset >>> level & MASK;\n                node = node.array[idx] = editableVNode(node.array[idx], owner);\n            }\n            node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n        }\n        // If the size has been reduced, there's a chance the tail needs to be trimmed.\n        if (newCapacity < oldCapacity) {\n            newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n        }\n        // If the new origin is within the tail, then we do not need a root.\n        if (newOrigin >= newTailOffset) {\n            newOrigin -= newTailOffset;\n            newCapacity -= newTailOffset;\n            newLevel = SHIFT;\n            newRoot = null;\n            newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n        // Otherwise, if the root has been trimmed, garbage collect.\n        } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n            offsetShift = 0;\n            // Identify the new top root node of the subtree of the old root.\n            while(newRoot){\n                var beginIndex = newOrigin >>> newLevel & MASK;\n                if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n                    break;\n                }\n                if (beginIndex) {\n                    offsetShift += (1 << newLevel) * beginIndex;\n                }\n                newLevel -= SHIFT;\n                newRoot = newRoot.array[beginIndex];\n            }\n            // Trim the new sides of the new root.\n            if (newRoot && newOrigin > oldOrigin) {\n                newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n            }\n            if (newRoot && newTailOffset < oldTailOffset) {\n                newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n            }\n            if (offsetShift) {\n                newOrigin -= offsetShift;\n                newCapacity -= offsetShift;\n            }\n        }\n        if (list.__ownerID) {\n            list.size = newCapacity - newOrigin;\n            list._origin = newOrigin;\n            list._capacity = newCapacity;\n            list._level = newLevel;\n            list._root = newRoot;\n            list._tail = newTail;\n            list.__hash = undefined;\n            list.__altered = true;\n            return list;\n        }\n        return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n    }\n    function mergeIntoListWith(list, merger, iterables) {\n        var iters = [];\n        var maxSize = 0;\n        for(var ii = 0; ii < iterables.length; ii++){\n            var value = iterables[ii];\n            var iter = IndexedIterable(value);\n            if (iter.size > maxSize) {\n                maxSize = iter.size;\n            }\n            if (!isIterable(value)) {\n                iter = iter.map(function(v) {\n                    return fromJS(v);\n                });\n            }\n            iters.push(iter);\n        }\n        if (maxSize > list.size) {\n            list = list.setSize(maxSize);\n        }\n        return mergeIntoCollectionWith(list, merger, iters);\n    }\n    function getTailOffset(size) {\n        return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n    }\n    createClass(OrderedMap, Map);\n    // @pragma Construction\n    function OrderedMap(value) {\n        return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function(map) {\n            var iter = KeyedIterable(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function(v, k) {\n                return map.set(k, v);\n            });\n        });\n    }\n    OrderedMap.of = function() {\n        return this(arguments);\n    };\n    OrderedMap.prototype.toString = function() {\n        return this.__toString(\"OrderedMap {\", \"}\");\n    };\n    // @pragma Access\n    OrderedMap.prototype.get = function(k, notSetValue) {\n        var index = this._map.get(k);\n        return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n    // @pragma Modification\n    OrderedMap.prototype.clear = function() {\n        if (this.size === 0) {\n            return this;\n        }\n        if (this.__ownerID) {\n            this.size = 0;\n            this._map.clear();\n            this._list.clear();\n            return this;\n        }\n        return emptyOrderedMap();\n    };\n    OrderedMap.prototype.set = function(k, v) {\n        return updateOrderedMap(this, k, v);\n    };\n    OrderedMap.prototype.remove = function(k) {\n        return updateOrderedMap(this, k, NOT_SET);\n    };\n    OrderedMap.prototype.wasAltered = function() {\n        return this._map.wasAltered() || this._list.wasAltered();\n    };\n    OrderedMap.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        return this._list.__iterate(function(entry) {\n            return entry && fn(entry[1], entry[0], this$0);\n        }, reverse);\n    };\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n        return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n        if (ownerID === this.__ownerID) {\n            return this;\n        }\n        var newMap = this._map.__ensureOwner(ownerID);\n        var newList = this._list.__ensureOwner(ownerID);\n        if (!ownerID) {\n            this.__ownerID = ownerID;\n            this._map = newMap;\n            this._list = newList;\n            return this;\n        }\n        return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n    function isOrderedMap(maybeOrderedMap) {\n        return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n    }\n    OrderedMap.isOrderedMap = isOrderedMap;\n    OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n    OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n    function makeOrderedMap(map, list, ownerID, hash) {\n        var omap = Object.create(OrderedMap.prototype);\n        omap.size = map ? map.size : 0;\n        omap._map = map;\n        omap._list = list;\n        omap.__ownerID = ownerID;\n        omap.__hash = hash;\n        return omap;\n    }\n    var EMPTY_ORDERED_MAP;\n    function emptyOrderedMap() {\n        return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n    }\n    function updateOrderedMap(omap, k, v) {\n        var map = omap._map;\n        var list = omap._list;\n        var i = map.get(k);\n        var has = i !== undefined;\n        var newMap;\n        var newList;\n        if (v === NOT_SET) {\n            if (!has) {\n                return omap;\n            }\n            if (list.size >= SIZE && list.size >= map.size * 2) {\n                newList = list.filter(function(entry, idx) {\n                    return entry !== undefined && i !== idx;\n                });\n                newMap = newList.toKeyedSeq().map(function(entry) {\n                    return entry[0];\n                }).flip().toMap();\n                if (omap.__ownerID) {\n                    newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n                }\n            } else {\n                newMap = map.remove(k);\n                newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n            }\n        } else {\n            if (has) {\n                if (v === list.get(i)[1]) {\n                    return omap;\n                }\n                newMap = map;\n                newList = list.set(i, [\n                    k,\n                    v\n                ]);\n            } else {\n                newMap = map.set(k, list.size);\n                newList = list.set(list.size, [\n                    k,\n                    v\n                ]);\n            }\n        }\n        if (omap.__ownerID) {\n            omap.size = newMap.size;\n            omap._map = newMap;\n            omap._list = newList;\n            omap.__hash = undefined;\n            return omap;\n        }\n        return makeOrderedMap(newMap, newList);\n    }\n    createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n        this._iter = indexed;\n        this._useKeys = useKeys;\n        this.size = indexed.size;\n    }\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n        return this._iter.get(key, notSetValue);\n    };\n    ToKeyedSequence.prototype.has = function(key) {\n        return this._iter.has(key);\n    };\n    ToKeyedSequence.prototype.valueSeq = function() {\n        return this._iter.valueSeq();\n    };\n    ToKeyedSequence.prototype.reverse = function() {\n        var this$0 = this;\n        var reversedSequence = reverseFactory(this, true);\n        if (!this._useKeys) {\n            reversedSequence.valueSeq = function() {\n                return this$0._iter.toSeq().reverse();\n            };\n        }\n        return reversedSequence;\n    };\n    ToKeyedSequence.prototype.map = function(mapper, context) {\n        var this$0 = this;\n        var mappedSequence = mapFactory(this, mapper, context);\n        if (!this._useKeys) {\n            mappedSequence.valueSeq = function() {\n                return this$0._iter.toSeq().map(mapper, context);\n            };\n        }\n        return mappedSequence;\n    };\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        var ii;\n        return this._iter.__iterate(this._useKeys ? function(v, k) {\n            return fn(v, k, this$0);\n        } : (ii = reverse ? resolveSize(this) : 0, function(v) {\n            return fn(v, reverse ? --ii : ii++, this$0);\n        }), reverse);\n    };\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n        if (this._useKeys) {\n            return this._iter.__iterator(type, reverse);\n        }\n        var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n        var ii = reverse ? resolveSize(this) : 0;\n        return new Iterator(function() {\n            var step = iterator.next();\n            return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n        });\n    };\n    ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n    createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n        this._iter = iter;\n        this.size = iter.size;\n    }\n    ToIndexedSequence.prototype.includes = function(value) {\n        return this._iter.includes(value);\n    };\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        var iterations = 0;\n        return this._iter.__iterate(function(v) {\n            return fn(v, iterations++, this$0);\n        }, reverse);\n    };\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n        var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n        var iterations = 0;\n        return new Iterator(function() {\n            var step = iterator.next();\n            return step.done ? step : iteratorValue(type, iterations++, step.value, step);\n        });\n    };\n    createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n        this._iter = iter;\n        this.size = iter.size;\n    }\n    ToSetSequence.prototype.has = function(key) {\n        return this._iter.includes(key);\n    };\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        return this._iter.__iterate(function(v) {\n            return fn(v, v, this$0);\n        }, reverse);\n    };\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n        var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n        return new Iterator(function() {\n            var step = iterator.next();\n            return step.done ? step : iteratorValue(type, step.value, step.value, step);\n        });\n    };\n    createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n        this._iter = entries;\n        this.size = entries.size;\n    }\n    FromEntriesSequence.prototype.entrySeq = function() {\n        return this._iter.toSeq();\n    };\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        return this._iter.__iterate(function(entry) {\n            // Check if entry exists first so array access doesn't throw for holes\n            // in the parent iteration.\n            if (entry) {\n                validateEntry(entry);\n                var indexedIterable = isIterable(entry);\n                return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);\n            }\n        }, reverse);\n    };\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n        var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n        return new Iterator(function() {\n            while(true){\n                var step = iterator.next();\n                if (step.done) {\n                    return step;\n                }\n                var entry = step.value;\n                // Check if entry exists first so array access doesn't throw for holes\n                // in the parent iteration.\n                if (entry) {\n                    validateEntry(entry);\n                    var indexedIterable = isIterable(entry);\n                    return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);\n                }\n            }\n        });\n    };\n    ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n    function flipFactory(iterable) {\n        var flipSequence = makeSequence(iterable);\n        flipSequence._iter = iterable;\n        flipSequence.size = iterable.size;\n        flipSequence.flip = function() {\n            return iterable;\n        };\n        flipSequence.reverse = function() {\n            var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n            reversedSequence.flip = function() {\n                return iterable.reverse();\n            };\n            return reversedSequence;\n        };\n        flipSequence.has = function(key) {\n            return iterable.includes(key);\n        };\n        flipSequence.includes = function(key) {\n            return iterable.has(key);\n        };\n        flipSequence.cacheResult = cacheResultThrough;\n        flipSequence.__iterateUncached = function(fn, reverse) {\n            var this$0 = this;\n            return iterable.__iterate(function(v, k) {\n                return fn(k, v, this$0) !== false;\n            }, reverse);\n        };\n        flipSequence.__iteratorUncached = function(type, reverse) {\n            if (type === ITERATE_ENTRIES) {\n                var iterator = iterable.__iterator(type, reverse);\n                return new Iterator(function() {\n                    var step = iterator.next();\n                    if (!step.done) {\n                        var k = step.value[0];\n                        step.value[0] = step.value[1];\n                        step.value[1] = k;\n                    }\n                    return step;\n                });\n            }\n            return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n        };\n        return flipSequence;\n    }\n    function mapFactory(iterable, mapper, context) {\n        var mappedSequence = makeSequence(iterable);\n        mappedSequence.size = iterable.size;\n        mappedSequence.has = function(key) {\n            return iterable.has(key);\n        };\n        mappedSequence.get = function(key, notSetValue) {\n            var v = iterable.get(key, NOT_SET);\n            return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);\n        };\n        mappedSequence.__iterateUncached = function(fn, reverse) {\n            var this$0 = this;\n            return iterable.__iterate(function(v, k, c) {\n                return fn(mapper.call(context, v, k, c), k, this$0) !== false;\n            }, reverse);\n        };\n        mappedSequence.__iteratorUncached = function(type, reverse) {\n            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n            return new Iterator(function() {\n                var step = iterator.next();\n                if (step.done) {\n                    return step;\n                }\n                var entry = step.value;\n                var key = entry[0];\n                return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);\n            });\n        };\n        return mappedSequence;\n    }\n    function reverseFactory(iterable, useKeys) {\n        var reversedSequence = makeSequence(iterable);\n        reversedSequence._iter = iterable;\n        reversedSequence.size = iterable.size;\n        reversedSequence.reverse = function() {\n            return iterable;\n        };\n        if (iterable.flip) {\n            reversedSequence.flip = function() {\n                var flipSequence = flipFactory(iterable);\n                flipSequence.reverse = function() {\n                    return iterable.flip();\n                };\n                return flipSequence;\n            };\n        }\n        reversedSequence.get = function(key, notSetValue) {\n            return iterable.get(useKeys ? key : -1 - key, notSetValue);\n        };\n        reversedSequence.has = function(key) {\n            return iterable.has(useKeys ? key : -1 - key);\n        };\n        reversedSequence.includes = function(value) {\n            return iterable.includes(value);\n        };\n        reversedSequence.cacheResult = cacheResultThrough;\n        reversedSequence.__iterate = function(fn, reverse) {\n            var this$0 = this;\n            return iterable.__iterate(function(v, k) {\n                return fn(v, k, this$0);\n            }, !reverse);\n        };\n        reversedSequence.__iterator = function(type, reverse) {\n            return iterable.__iterator(type, !reverse);\n        };\n        return reversedSequence;\n    }\n    function filterFactory(iterable, predicate, context, useKeys) {\n        var filterSequence = makeSequence(iterable);\n        if (useKeys) {\n            filterSequence.has = function(key) {\n                var v = iterable.get(key, NOT_SET);\n                return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n            };\n            filterSequence.get = function(key, notSetValue) {\n                var v = iterable.get(key, NOT_SET);\n                return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;\n            };\n        }\n        filterSequence.__iterateUncached = function(fn, reverse) {\n            var this$0 = this;\n            var iterations = 0;\n            iterable.__iterate(function(v, k, c) {\n                if (predicate.call(context, v, k, c)) {\n                    iterations++;\n                    return fn(v, useKeys ? k : iterations - 1, this$0);\n                }\n            }, reverse);\n            return iterations;\n        };\n        filterSequence.__iteratorUncached = function(type, reverse) {\n            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n            var iterations = 0;\n            return new Iterator(function() {\n                while(true){\n                    var step = iterator.next();\n                    if (step.done) {\n                        return step;\n                    }\n                    var entry = step.value;\n                    var key = entry[0];\n                    var value = entry[1];\n                    if (predicate.call(context, value, key, iterable)) {\n                        return iteratorValue(type, useKeys ? key : iterations++, value, step);\n                    }\n                }\n            });\n        };\n        return filterSequence;\n    }\n    function countByFactory(iterable, grouper, context) {\n        var groups = Map().asMutable();\n        iterable.__iterate(function(v, k) {\n            groups.update(grouper.call(context, v, k, iterable), 0, function(a) {\n                return a + 1;\n            });\n        });\n        return groups.asImmutable();\n    }\n    function groupByFactory(iterable, grouper, context) {\n        var isKeyedIter = isKeyed(iterable);\n        var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n        iterable.__iterate(function(v, k) {\n            groups.update(grouper.call(context, v, k, iterable), function(a) {\n                return a = a || [], a.push(isKeyedIter ? [\n                    k,\n                    v\n                ] : v), a;\n            });\n        });\n        var coerce = iterableClass(iterable);\n        return groups.map(function(arr) {\n            return reify(iterable, coerce(arr));\n        });\n    }\n    function sliceFactory(iterable, begin, end, useKeys) {\n        var originalSize = iterable.size;\n        // Sanitize begin & end using this shorthand for ToInt32(argument)\n        // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n        if (begin !== undefined) {\n            begin = begin | 0;\n        }\n        if (end !== undefined) {\n            end = end | 0;\n        }\n        if (wholeSlice(begin, end, originalSize)) {\n            return iterable;\n        }\n        var resolvedBegin = resolveBegin(begin, originalSize);\n        var resolvedEnd = resolveEnd(end, originalSize);\n        // begin or end will be NaN if they were provided as negative numbers and\n        // this iterable's size is unknown. In that case, cache first so there is\n        // a known size and these do not resolve to NaN.\n        if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n            return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n        }\n        // Note: resolvedEnd is undefined when the original sequence's length is\n        // unknown and this slice did not supply an end and should contain all\n        // elements after resolvedBegin.\n        // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n        var resolvedSize = resolvedEnd - resolvedBegin;\n        var sliceSize;\n        if (resolvedSize === resolvedSize) {\n            sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n        }\n        var sliceSeq = makeSequence(iterable);\n        // If iterable.size is undefined, the size of the realized sliceSeq is\n        // unknown at this point unless the number of items to slice is 0\n        sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n        if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n            sliceSeq.get = function(index, notSetValue) {\n                index = wrapIndex(this, index);\n                return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;\n            };\n        }\n        sliceSeq.__iterateUncached = function(fn, reverse) {\n            var this$0 = this;\n            if (sliceSize === 0) {\n                return 0;\n            }\n            if (reverse) {\n                return this.cacheResult().__iterate(fn, reverse);\n            }\n            var skipped = 0;\n            var isSkipping = true;\n            var iterations = 0;\n            iterable.__iterate(function(v, k) {\n                if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n                    iterations++;\n                    return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;\n                }\n            });\n            return iterations;\n        };\n        sliceSeq.__iteratorUncached = function(type, reverse) {\n            if (sliceSize !== 0 && reverse) {\n                return this.cacheResult().__iterator(type, reverse);\n            }\n            // Don't bother instantiating parent iterator if taking 0.\n            var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n            var skipped = 0;\n            var iterations = 0;\n            return new Iterator(function() {\n                while(skipped++ < resolvedBegin){\n                    iterator.next();\n                }\n                if (++iterations > sliceSize) {\n                    return iteratorDone();\n                }\n                var step = iterator.next();\n                if (useKeys || type === ITERATE_VALUES) {\n                    return step;\n                } else if (type === ITERATE_KEYS) {\n                    return iteratorValue(type, iterations - 1, undefined, step);\n                } else {\n                    return iteratorValue(type, iterations - 1, step.value[1], step);\n                }\n            });\n        };\n        return sliceSeq;\n    }\n    function takeWhileFactory(iterable, predicate, context) {\n        var takeSequence = makeSequence(iterable);\n        takeSequence.__iterateUncached = function(fn, reverse) {\n            var this$0 = this;\n            if (reverse) {\n                return this.cacheResult().__iterate(fn, reverse);\n            }\n            var iterations = 0;\n            iterable.__iterate(function(v, k, c) {\n                return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);\n            });\n            return iterations;\n        };\n        takeSequence.__iteratorUncached = function(type, reverse) {\n            var this$0 = this;\n            if (reverse) {\n                return this.cacheResult().__iterator(type, reverse);\n            }\n            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n            var iterating = true;\n            return new Iterator(function() {\n                if (!iterating) {\n                    return iteratorDone();\n                }\n                var step = iterator.next();\n                if (step.done) {\n                    return step;\n                }\n                var entry = step.value;\n                var k = entry[0];\n                var v = entry[1];\n                if (!predicate.call(context, v, k, this$0)) {\n                    iterating = false;\n                    return iteratorDone();\n                }\n                return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n            });\n        };\n        return takeSequence;\n    }\n    function skipWhileFactory(iterable, predicate, context, useKeys) {\n        var skipSequence = makeSequence(iterable);\n        skipSequence.__iterateUncached = function(fn, reverse) {\n            var this$0 = this;\n            if (reverse) {\n                return this.cacheResult().__iterate(fn, reverse);\n            }\n            var isSkipping = true;\n            var iterations = 0;\n            iterable.__iterate(function(v, k, c) {\n                if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n                    iterations++;\n                    return fn(v, useKeys ? k : iterations - 1, this$0);\n                }\n            });\n            return iterations;\n        };\n        skipSequence.__iteratorUncached = function(type, reverse) {\n            var this$0 = this;\n            if (reverse) {\n                return this.cacheResult().__iterator(type, reverse);\n            }\n            var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n            var skipping = true;\n            var iterations = 0;\n            return new Iterator(function() {\n                var step, k, v;\n                do {\n                    step = iterator.next();\n                    if (step.done) {\n                        if (useKeys || type === ITERATE_VALUES) {\n                            return step;\n                        } else if (type === ITERATE_KEYS) {\n                            return iteratorValue(type, iterations++, undefined, step);\n                        } else {\n                            return iteratorValue(type, iterations++, step.value[1], step);\n                        }\n                    }\n                    var entry = step.value;\n                    k = entry[0];\n                    v = entry[1];\n                    skipping && (skipping = predicate.call(context, v, k, this$0));\n                }while (skipping);\n                return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n            });\n        };\n        return skipSequence;\n    }\n    function concatFactory(iterable, values) {\n        var isKeyedIterable = isKeyed(iterable);\n        var iters = [\n            iterable\n        ].concat(values).map(function(v) {\n            if (!isIterable(v)) {\n                v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [\n                    v\n                ]);\n            } else if (isKeyedIterable) {\n                v = KeyedIterable(v);\n            }\n            return v;\n        }).filter(function(v) {\n            return v.size !== 0;\n        });\n        if (iters.length === 0) {\n            return iterable;\n        }\n        if (iters.length === 1) {\n            var singleton = iters[0];\n            if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {\n                return singleton;\n            }\n        }\n        var concatSeq = new ArraySeq(iters);\n        if (isKeyedIterable) {\n            concatSeq = concatSeq.toKeyedSeq();\n        } else if (!isIndexed(iterable)) {\n            concatSeq = concatSeq.toSetSeq();\n        }\n        concatSeq = concatSeq.flatten(true);\n        concatSeq.size = iters.reduce(function(sum, seq) {\n            if (sum !== undefined) {\n                var size = seq.size;\n                if (size !== undefined) {\n                    return sum + size;\n                }\n            }\n        }, 0);\n        return concatSeq;\n    }\n    function flattenFactory(iterable, depth, useKeys) {\n        var flatSequence = makeSequence(iterable);\n        flatSequence.__iterateUncached = function(fn, reverse) {\n            var iterations = 0;\n            var stopped = false;\n            function flatDeep(iter, currentDepth) {\n                var this$0 = this;\n                iter.__iterate(function(v, k) {\n                    if ((!depth || currentDepth < depth) && isIterable(v)) {\n                        flatDeep(v, currentDepth + 1);\n                    } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n                        stopped = true;\n                    }\n                    return !stopped;\n                }, reverse);\n            }\n            flatDeep(iterable, 0);\n            return iterations;\n        };\n        flatSequence.__iteratorUncached = function(type, reverse) {\n            var iterator = iterable.__iterator(type, reverse);\n            var stack = [];\n            var iterations = 0;\n            return new Iterator(function() {\n                while(iterator){\n                    var step = iterator.next();\n                    if (step.done !== false) {\n                        iterator = stack.pop();\n                        continue;\n                    }\n                    var v = step.value;\n                    if (type === ITERATE_ENTRIES) {\n                        v = v[1];\n                    }\n                    if ((!depth || stack.length < depth) && isIterable(v)) {\n                        stack.push(iterator);\n                        iterator = v.__iterator(type, reverse);\n                    } else {\n                        return useKeys ? step : iteratorValue(type, iterations++, v, step);\n                    }\n                }\n                return iteratorDone();\n            });\n        };\n        return flatSequence;\n    }\n    function flatMapFactory(iterable, mapper, context) {\n        var coerce = iterableClass(iterable);\n        return iterable.toSeq().map(function(v, k) {\n            return coerce(mapper.call(context, v, k, iterable));\n        }).flatten(true);\n    }\n    function interposeFactory(iterable, separator) {\n        var interposedSequence = makeSequence(iterable);\n        interposedSequence.size = iterable.size && iterable.size * 2 - 1;\n        interposedSequence.__iterateUncached = function(fn, reverse) {\n            var this$0 = this;\n            var iterations = 0;\n            iterable.__iterate(function(v, k) {\n                return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;\n            }, reverse);\n            return iterations;\n        };\n        interposedSequence.__iteratorUncached = function(type, reverse) {\n            var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n            var iterations = 0;\n            var step;\n            return new Iterator(function() {\n                if (!step || iterations % 2) {\n                    step = iterator.next();\n                    if (step.done) {\n                        return step;\n                    }\n                }\n                return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n            });\n        };\n        return interposedSequence;\n    }\n    function sortFactory(iterable, comparator, mapper) {\n        if (!comparator) {\n            comparator = defaultComparator;\n        }\n        var isKeyedIterable = isKeyed(iterable);\n        var index = 0;\n        var entries = iterable.toSeq().map(function(v, k) {\n            return [\n                k,\n                v,\n                index++,\n                mapper ? mapper(v, k, iterable) : v\n            ];\n        }).toArray();\n        entries.sort(function(a, b) {\n            return comparator(a[3], b[3]) || a[2] - b[2];\n        }).forEach(isKeyedIterable ? function(v, i) {\n            entries[i].length = 2;\n        } : function(v, i) {\n            entries[i] = v[1];\n        });\n        return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);\n    }\n    function maxFactory(iterable, comparator, mapper) {\n        if (!comparator) {\n            comparator = defaultComparator;\n        }\n        if (mapper) {\n            var entry = iterable.toSeq().map(function(v, k) {\n                return [\n                    v,\n                    mapper(v, k, iterable)\n                ];\n            }).reduce(function(a, b) {\n                return maxCompare(comparator, a[1], b[1]) ? b : a;\n            });\n            return entry && entry[0];\n        } else {\n            return iterable.reduce(function(a, b) {\n                return maxCompare(comparator, a, b) ? b : a;\n            });\n        }\n    }\n    function maxCompare(comparator, a, b) {\n        var comp = comparator(b, a);\n        // b is considered the new max if the comparator declares them equal, but\n        // they are not equal and b is in fact a nullish value.\n        return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n    }\n    function zipWithFactory(keyIter, zipper, iters) {\n        var zipSequence = makeSequence(keyIter);\n        zipSequence.size = new ArraySeq(iters).map(function(i) {\n            return i.size;\n        }).min();\n        // Note: this a generic base implementation of __iterate in terms of\n        // __iterator which may be more generically useful in the future.\n        zipSequence.__iterate = function(fn, reverse) {\n            /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */ // indexed:\n            var iterator = this.__iterator(ITERATE_VALUES, reverse);\n            var step;\n            var iterations = 0;\n            while(!(step = iterator.next()).done){\n                if (fn(step.value, iterations++, this) === false) {\n                    break;\n                }\n            }\n            return iterations;\n        };\n        zipSequence.__iteratorUncached = function(type, reverse) {\n            var iterators = iters.map(function(i) {\n                return i = Iterable(i), getIterator(reverse ? i.reverse() : i);\n            });\n            var iterations = 0;\n            var isDone = false;\n            return new Iterator(function() {\n                var steps;\n                if (!isDone) {\n                    steps = iterators.map(function(i) {\n                        return i.next();\n                    });\n                    isDone = steps.some(function(s) {\n                        return s.done;\n                    });\n                }\n                if (isDone) {\n                    return iteratorDone();\n                }\n                return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function(s) {\n                    return s.value;\n                })));\n            });\n        };\n        return zipSequence;\n    }\n    // #pragma Helper Functions\n    function reify(iter, seq) {\n        return isSeq(iter) ? seq : iter.constructor(seq);\n    }\n    function validateEntry(entry) {\n        if (entry !== Object(entry)) {\n            throw new TypeError(\"Expected [K, V] tuple: \" + entry);\n        }\n    }\n    function resolveSize(iter) {\n        assertNotInfinite(iter.size);\n        return ensureSize(iter);\n    }\n    function iterableClass(iterable) {\n        return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;\n    }\n    function makeSequence(iterable) {\n        return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);\n    }\n    function cacheResultThrough() {\n        if (this._iter.cacheResult) {\n            this._iter.cacheResult();\n            this.size = this._iter.size;\n            return this;\n        } else {\n            return Seq.prototype.cacheResult.call(this);\n        }\n    }\n    function defaultComparator(a, b) {\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n    function forceIterator(keyPath) {\n        var iter = getIterator(keyPath);\n        if (!iter) {\n            // Array might not be iterable in this environment, so we need a fallback\n            // to our wrapped type.\n            if (!isArrayLike(keyPath)) {\n                throw new TypeError(\"Expected iterable or array-like: \" + keyPath);\n            }\n            iter = getIterator(Iterable(keyPath));\n        }\n        return iter;\n    }\n    createClass(Record, KeyedCollection);\n    function Record(defaultValues, name) {\n        var hasInitialized;\n        var RecordType = function Record(values) {\n            if (values instanceof RecordType) {\n                return values;\n            }\n            if (!(this instanceof RecordType)) {\n                return new RecordType(values);\n            }\n            if (!hasInitialized) {\n                hasInitialized = true;\n                var keys = Object.keys(defaultValues);\n                setProps(RecordTypePrototype, keys);\n                RecordTypePrototype.size = keys.length;\n                RecordTypePrototype._name = name;\n                RecordTypePrototype._keys = keys;\n                RecordTypePrototype._defaultValues = defaultValues;\n            }\n            this._map = Map(values);\n        };\n        var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n        RecordTypePrototype.constructor = RecordType;\n        return RecordType;\n    }\n    Record.prototype.toString = function() {\n        return this.__toString(recordName(this) + \" {\", \"}\");\n    };\n    // @pragma Access\n    Record.prototype.has = function(k) {\n        return this._defaultValues.hasOwnProperty(k);\n    };\n    Record.prototype.get = function(k, notSetValue) {\n        if (!this.has(k)) {\n            return notSetValue;\n        }\n        var defaultVal = this._defaultValues[k];\n        return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n    // @pragma Modification\n    Record.prototype.clear = function() {\n        if (this.__ownerID) {\n            this._map && this._map.clear();\n            return this;\n        }\n        var RecordType = this.constructor;\n        return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n    Record.prototype.set = function(k, v) {\n        if (!this.has(k)) {\n            throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n        }\n        var newMap = this._map && this._map.set(k, v);\n        if (this.__ownerID || newMap === this._map) {\n            return this;\n        }\n        return makeRecord(this, newMap);\n    };\n    Record.prototype.remove = function(k) {\n        if (!this.has(k)) {\n            return this;\n        }\n        var newMap = this._map && this._map.remove(k);\n        if (this.__ownerID || newMap === this._map) {\n            return this;\n        }\n        return makeRecord(this, newMap);\n    };\n    Record.prototype.wasAltered = function() {\n        return this._map.wasAltered();\n    };\n    Record.prototype.__iterator = function(type, reverse) {\n        var this$0 = this;\n        return KeyedIterable(this._defaultValues).map(function(_, k) {\n            return this$0.get(k);\n        }).__iterator(type, reverse);\n    };\n    Record.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        return KeyedIterable(this._defaultValues).map(function(_, k) {\n            return this$0.get(k);\n        }).__iterate(fn, reverse);\n    };\n    Record.prototype.__ensureOwner = function(ownerID) {\n        if (ownerID === this.__ownerID) {\n            return this;\n        }\n        var newMap = this._map && this._map.__ensureOwner(ownerID);\n        if (!ownerID) {\n            this.__ownerID = ownerID;\n            this._map = newMap;\n            return this;\n        }\n        return makeRecord(this, newMap, ownerID);\n    };\n    var RecordPrototype = Record.prototype;\n    RecordPrototype[DELETE] = RecordPrototype.remove;\n    RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;\n    RecordPrototype.merge = MapPrototype.merge;\n    RecordPrototype.mergeWith = MapPrototype.mergeWith;\n    RecordPrototype.mergeIn = MapPrototype.mergeIn;\n    RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n    RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n    RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n    RecordPrototype.setIn = MapPrototype.setIn;\n    RecordPrototype.update = MapPrototype.update;\n    RecordPrototype.updateIn = MapPrototype.updateIn;\n    RecordPrototype.withMutations = MapPrototype.withMutations;\n    RecordPrototype.asMutable = MapPrototype.asMutable;\n    RecordPrototype.asImmutable = MapPrototype.asImmutable;\n    function makeRecord(likeRecord, map, ownerID) {\n        var record = Object.create(Object.getPrototypeOf(likeRecord));\n        record._map = map;\n        record.__ownerID = ownerID;\n        return record;\n    }\n    function recordName(record) {\n        return record._name || record.constructor.name || \"Record\";\n    }\n    function setProps(prototype, names) {\n        try {\n            names.forEach(setProp.bind(undefined, prototype));\n        } catch (error) {\n        // Object.defineProperty failed. Probably IE8.\n        }\n    }\n    function setProp(prototype, name) {\n        Object.defineProperty(prototype, name, {\n            get: function() {\n                return this.get(name);\n            },\n            set: function(value) {\n                invariant(this.__ownerID, \"Cannot set on an immutable record.\");\n                this.set(name, value);\n            }\n        });\n    }\n    createClass(Set, SetCollection);\n    // @pragma Construction\n    function Set(value) {\n        return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function(set) {\n            var iter = SetIterable(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function(v) {\n                return set.add(v);\n            });\n        });\n    }\n    Set.of = function() {\n        return this(arguments);\n    };\n    Set.fromKeys = function(value) {\n        return this(KeyedIterable(value).keySeq());\n    };\n    Set.prototype.toString = function() {\n        return this.__toString(\"Set {\", \"}\");\n    };\n    // @pragma Access\n    Set.prototype.has = function(value) {\n        return this._map.has(value);\n    };\n    // @pragma Modification\n    Set.prototype.add = function(value) {\n        return updateSet(this, this._map.set(value, true));\n    };\n    Set.prototype.remove = function(value) {\n        return updateSet(this, this._map.remove(value));\n    };\n    Set.prototype.clear = function() {\n        return updateSet(this, this._map.clear());\n    };\n    // @pragma Composition\n    Set.prototype.union = function() {\n        var iters = SLICE$0.call(arguments, 0);\n        iters = iters.filter(function(x) {\n            return x.size !== 0;\n        });\n        if (iters.length === 0) {\n            return this;\n        }\n        if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n            return this.constructor(iters[0]);\n        }\n        return this.withMutations(function(set) {\n            for(var ii = 0; ii < iters.length; ii++){\n                SetIterable(iters[ii]).forEach(function(value) {\n                    return set.add(value);\n                });\n            }\n        });\n    };\n    Set.prototype.intersect = function() {\n        var iters = SLICE$0.call(arguments, 0);\n        if (iters.length === 0) {\n            return this;\n        }\n        iters = iters.map(function(iter) {\n            return SetIterable(iter);\n        });\n        var originalSet = this;\n        return this.withMutations(function(set) {\n            originalSet.forEach(function(value) {\n                if (!iters.every(function(iter) {\n                    return iter.includes(value);\n                })) {\n                    set.remove(value);\n                }\n            });\n        });\n    };\n    Set.prototype.subtract = function() {\n        var iters = SLICE$0.call(arguments, 0);\n        if (iters.length === 0) {\n            return this;\n        }\n        iters = iters.map(function(iter) {\n            return SetIterable(iter);\n        });\n        var originalSet = this;\n        return this.withMutations(function(set) {\n            originalSet.forEach(function(value) {\n                if (iters.some(function(iter) {\n                    return iter.includes(value);\n                })) {\n                    set.remove(value);\n                }\n            });\n        });\n    };\n    Set.prototype.merge = function() {\n        return this.union.apply(this, arguments);\n    };\n    Set.prototype.mergeWith = function(merger) {\n        var iters = SLICE$0.call(arguments, 1);\n        return this.union.apply(this, iters);\n    };\n    Set.prototype.sort = function(comparator) {\n        // Late binding\n        return OrderedSet(sortFactory(this, comparator));\n    };\n    Set.prototype.sortBy = function(mapper, comparator) {\n        // Late binding\n        return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n    Set.prototype.wasAltered = function() {\n        return this._map.wasAltered();\n    };\n    Set.prototype.__iterate = function(fn, reverse) {\n        var this$0 = this;\n        return this._map.__iterate(function(_, k) {\n            return fn(k, k, this$0);\n        }, reverse);\n    };\n    Set.prototype.__iterator = function(type, reverse) {\n        return this._map.map(function(_, k) {\n            return k;\n        }).__iterator(type, reverse);\n    };\n    Set.prototype.__ensureOwner = function(ownerID) {\n        if (ownerID === this.__ownerID) {\n            return this;\n        }\n        var newMap = this._map.__ensureOwner(ownerID);\n        if (!ownerID) {\n            this.__ownerID = ownerID;\n            this._map = newMap;\n            return this;\n        }\n        return this.__make(newMap, ownerID);\n    };\n    function isSet(maybeSet) {\n        return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n    }\n    Set.isSet = isSet;\n    var IS_SET_SENTINEL = \"@@__IMMUTABLE_SET__@@\";\n    var SetPrototype = Set.prototype;\n    SetPrototype[IS_SET_SENTINEL] = true;\n    SetPrototype[DELETE] = SetPrototype.remove;\n    SetPrototype.mergeDeep = SetPrototype.merge;\n    SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n    SetPrototype.withMutations = MapPrototype.withMutations;\n    SetPrototype.asMutable = MapPrototype.asMutable;\n    SetPrototype.asImmutable = MapPrototype.asImmutable;\n    SetPrototype.__empty = emptySet;\n    SetPrototype.__make = makeSet;\n    function updateSet(set, newMap) {\n        if (set.__ownerID) {\n            set.size = newMap.size;\n            set._map = newMap;\n            return set;\n        }\n        return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n    }\n    function makeSet(map, ownerID) {\n        var set = Object.create(SetPrototype);\n        set.size = map ? map.size : 0;\n        set._map = map;\n        set.__ownerID = ownerID;\n        return set;\n    }\n    var EMPTY_SET;\n    function emptySet() {\n        return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n    }\n    createClass(OrderedSet, Set);\n    // @pragma Construction\n    function OrderedSet(value) {\n        return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function(set) {\n            var iter = SetIterable(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function(v) {\n                return set.add(v);\n            });\n        });\n    }\n    OrderedSet.of = function() {\n        return this(arguments);\n    };\n    OrderedSet.fromKeys = function(value) {\n        return this(KeyedIterable(value).keySeq());\n    };\n    OrderedSet.prototype.toString = function() {\n        return this.__toString(\"OrderedSet {\", \"}\");\n    };\n    function isOrderedSet(maybeOrderedSet) {\n        return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n    }\n    OrderedSet.isOrderedSet = isOrderedSet;\n    var OrderedSetPrototype = OrderedSet.prototype;\n    OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n    OrderedSetPrototype.__empty = emptyOrderedSet;\n    OrderedSetPrototype.__make = makeOrderedSet;\n    function makeOrderedSet(map, ownerID) {\n        var set = Object.create(OrderedSetPrototype);\n        set.size = map ? map.size : 0;\n        set._map = map;\n        set.__ownerID = ownerID;\n        return set;\n    }\n    var EMPTY_ORDERED_SET;\n    function emptyOrderedSet() {\n        return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n    }\n    createClass(Stack, IndexedCollection);\n    // @pragma Construction\n    function Stack(value) {\n        return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);\n    }\n    Stack.of = function() {\n        return this(arguments);\n    };\n    Stack.prototype.toString = function() {\n        return this.__toString(\"Stack [\", \"]\");\n    };\n    // @pragma Access\n    Stack.prototype.get = function(index, notSetValue) {\n        var head = this._head;\n        index = wrapIndex(this, index);\n        while(head && index--){\n            head = head.next;\n        }\n        return head ? head.value : notSetValue;\n    };\n    Stack.prototype.peek = function() {\n        return this._head && this._head.value;\n    };\n    // @pragma Modification\n    Stack.prototype.push = function() {\n        if (arguments.length === 0) {\n            return this;\n        }\n        var newSize = this.size + arguments.length;\n        var head = this._head;\n        for(var ii = arguments.length - 1; ii >= 0; ii--){\n            head = {\n                value: arguments[ii],\n                next: head\n            };\n        }\n        if (this.__ownerID) {\n            this.size = newSize;\n            this._head = head;\n            this.__hash = undefined;\n            this.__altered = true;\n            return this;\n        }\n        return makeStack(newSize, head);\n    };\n    Stack.prototype.pushAll = function(iter) {\n        iter = IndexedIterable(iter);\n        if (iter.size === 0) {\n            return this;\n        }\n        assertNotInfinite(iter.size);\n        var newSize = this.size;\n        var head = this._head;\n        iter.reverse().forEach(function(value) {\n            newSize++;\n            head = {\n                value: value,\n                next: head\n            };\n        });\n        if (this.__ownerID) {\n            this.size = newSize;\n            this._head = head;\n            this.__hash = undefined;\n            this.__altered = true;\n            return this;\n        }\n        return makeStack(newSize, head);\n    };\n    Stack.prototype.pop = function() {\n        return this.slice(1);\n    };\n    Stack.prototype.unshift = function() {\n        return this.push.apply(this, arguments);\n    };\n    Stack.prototype.unshiftAll = function(iter) {\n        return this.pushAll(iter);\n    };\n    Stack.prototype.shift = function() {\n        return this.pop.apply(this, arguments);\n    };\n    Stack.prototype.clear = function() {\n        if (this.size === 0) {\n            return this;\n        }\n        if (this.__ownerID) {\n            this.size = 0;\n            this._head = undefined;\n            this.__hash = undefined;\n            this.__altered = true;\n            return this;\n        }\n        return emptyStack();\n    };\n    Stack.prototype.slice = function(begin, end) {\n        if (wholeSlice(begin, end, this.size)) {\n            return this;\n        }\n        var resolvedBegin = resolveBegin(begin, this.size);\n        var resolvedEnd = resolveEnd(end, this.size);\n        if (resolvedEnd !== this.size) {\n            // super.slice(begin, end);\n            return IndexedCollection.prototype.slice.call(this, begin, end);\n        }\n        var newSize = this.size - resolvedBegin;\n        var head = this._head;\n        while(resolvedBegin--){\n            head = head.next;\n        }\n        if (this.__ownerID) {\n            this.size = newSize;\n            this._head = head;\n            this.__hash = undefined;\n            this.__altered = true;\n            return this;\n        }\n        return makeStack(newSize, head);\n    };\n    // @pragma Mutability\n    Stack.prototype.__ensureOwner = function(ownerID) {\n        if (ownerID === this.__ownerID) {\n            return this;\n        }\n        if (!ownerID) {\n            this.__ownerID = ownerID;\n            this.__altered = false;\n            return this;\n        }\n        return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n    // @pragma Iteration\n    Stack.prototype.__iterate = function(fn, reverse) {\n        if (reverse) {\n            return this.reverse().__iterate(fn);\n        }\n        var iterations = 0;\n        var node = this._head;\n        while(node){\n            if (fn(node.value, iterations++, this) === false) {\n                break;\n            }\n            node = node.next;\n        }\n        return iterations;\n    };\n    Stack.prototype.__iterator = function(type, reverse) {\n        if (reverse) {\n            return this.reverse().__iterator(type);\n        }\n        var iterations = 0;\n        var node = this._head;\n        return new Iterator(function() {\n            if (node) {\n                var value = node.value;\n                node = node.next;\n                return iteratorValue(type, iterations++, value);\n            }\n            return iteratorDone();\n        });\n    };\n    function isStack(maybeStack) {\n        return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n    }\n    Stack.isStack = isStack;\n    var IS_STACK_SENTINEL = \"@@__IMMUTABLE_STACK__@@\";\n    var StackPrototype = Stack.prototype;\n    StackPrototype[IS_STACK_SENTINEL] = true;\n    StackPrototype.withMutations = MapPrototype.withMutations;\n    StackPrototype.asMutable = MapPrototype.asMutable;\n    StackPrototype.asImmutable = MapPrototype.asImmutable;\n    StackPrototype.wasAltered = MapPrototype.wasAltered;\n    function makeStack(size, head, ownerID, hash) {\n        var map = Object.create(StackPrototype);\n        map.size = size;\n        map._head = head;\n        map.__ownerID = ownerID;\n        map.__hash = hash;\n        map.__altered = false;\n        return map;\n    }\n    var EMPTY_STACK;\n    function emptyStack() {\n        return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n    }\n    /**\n   * Contributes additional methods to a constructor\n   */ function mixin(ctor, methods) {\n        var keyCopier = function(key) {\n            ctor.prototype[key] = methods[key];\n        };\n        Object.keys(methods).forEach(keyCopier);\n        Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n        return ctor;\n    }\n    Iterable.Iterator = Iterator;\n    mixin(Iterable, {\n        // ### Conversion to other types\n        toArray: function() {\n            assertNotInfinite(this.size);\n            var array = new Array(this.size || 0);\n            this.valueSeq().__iterate(function(v, i) {\n                array[i] = v;\n            });\n            return array;\n        },\n        toIndexedSeq: function() {\n            return new ToIndexedSequence(this);\n        },\n        toJS: function() {\n            return this.toSeq().map(function(value) {\n                return value && typeof value.toJS === \"function\" ? value.toJS() : value;\n            }).__toJS();\n        },\n        toJSON: function() {\n            return this.toSeq().map(function(value) {\n                return value && typeof value.toJSON === \"function\" ? value.toJSON() : value;\n            }).__toJS();\n        },\n        toKeyedSeq: function() {\n            return new ToKeyedSequence(this, true);\n        },\n        toMap: function() {\n            // Use Late Binding here to solve the circular dependency.\n            return Map(this.toKeyedSeq());\n        },\n        toObject: function() {\n            assertNotInfinite(this.size);\n            var object = {};\n            this.__iterate(function(v, k) {\n                object[k] = v;\n            });\n            return object;\n        },\n        toOrderedMap: function() {\n            // Use Late Binding here to solve the circular dependency.\n            return OrderedMap(this.toKeyedSeq());\n        },\n        toOrderedSet: function() {\n            // Use Late Binding here to solve the circular dependency.\n            return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n        },\n        toSet: function() {\n            // Use Late Binding here to solve the circular dependency.\n            return Set(isKeyed(this) ? this.valueSeq() : this);\n        },\n        toSetSeq: function() {\n            return new ToSetSequence(this);\n        },\n        toSeq: function() {\n            return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n        },\n        toStack: function() {\n            // Use Late Binding here to solve the circular dependency.\n            return Stack(isKeyed(this) ? this.valueSeq() : this);\n        },\n        toList: function() {\n            // Use Late Binding here to solve the circular dependency.\n            return List(isKeyed(this) ? this.valueSeq() : this);\n        },\n        // ### Common JavaScript methods and properties\n        toString: function() {\n            return \"[Iterable]\";\n        },\n        __toString: function(head, tail) {\n            if (this.size === 0) {\n                return head + tail;\n            }\n            return head + \" \" + this.toSeq().map(this.__toStringMapper).join(\", \") + \" \" + tail;\n        },\n        // ### ES6 Collection methods (ES6 Array and Map)\n        concat: function() {\n            var values = SLICE$0.call(arguments, 0);\n            return reify(this, concatFactory(this, values));\n        },\n        includes: function(searchValue) {\n            return this.some(function(value) {\n                return is(value, searchValue);\n            });\n        },\n        entries: function() {\n            return this.__iterator(ITERATE_ENTRIES);\n        },\n        every: function(predicate, context) {\n            assertNotInfinite(this.size);\n            var returnValue = true;\n            this.__iterate(function(v, k, c) {\n                if (!predicate.call(context, v, k, c)) {\n                    returnValue = false;\n                    return false;\n                }\n            });\n            return returnValue;\n        },\n        filter: function(predicate, context) {\n            return reify(this, filterFactory(this, predicate, context, true));\n        },\n        find: function(predicate, context, notSetValue) {\n            var entry = this.findEntry(predicate, context);\n            return entry ? entry[1] : notSetValue;\n        },\n        findEntry: function(predicate, context) {\n            var found;\n            this.__iterate(function(v, k, c) {\n                if (predicate.call(context, v, k, c)) {\n                    found = [\n                        k,\n                        v\n                    ];\n                    return false;\n                }\n            });\n            return found;\n        },\n        findLastEntry: function(predicate, context) {\n            return this.toSeq().reverse().findEntry(predicate, context);\n        },\n        forEach: function(sideEffect, context) {\n            assertNotInfinite(this.size);\n            return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n        },\n        join: function(separator) {\n            assertNotInfinite(this.size);\n            separator = separator !== undefined ? \"\" + separator : \",\";\n            var joined = \"\";\n            var isFirst = true;\n            this.__iterate(function(v) {\n                isFirst ? isFirst = false : joined += separator;\n                joined += v !== null && v !== undefined ? v.toString() : \"\";\n            });\n            return joined;\n        },\n        keys: function() {\n            return this.__iterator(ITERATE_KEYS);\n        },\n        map: function(mapper, context) {\n            return reify(this, mapFactory(this, mapper, context));\n        },\n        reduce: function(reducer, initialReduction, context) {\n            assertNotInfinite(this.size);\n            var reduction;\n            var useFirst;\n            if (arguments.length < 2) {\n                useFirst = true;\n            } else {\n                reduction = initialReduction;\n            }\n            this.__iterate(function(v, k, c) {\n                if (useFirst) {\n                    useFirst = false;\n                    reduction = v;\n                } else {\n                    reduction = reducer.call(context, reduction, v, k, c);\n                }\n            });\n            return reduction;\n        },\n        reduceRight: function(reducer, initialReduction, context) {\n            var reversed = this.toKeyedSeq().reverse();\n            return reversed.reduce.apply(reversed, arguments);\n        },\n        reverse: function() {\n            return reify(this, reverseFactory(this, true));\n        },\n        slice: function(begin, end) {\n            return reify(this, sliceFactory(this, begin, end, true));\n        },\n        some: function(predicate, context) {\n            return !this.every(not(predicate), context);\n        },\n        sort: function(comparator) {\n            return reify(this, sortFactory(this, comparator));\n        },\n        values: function() {\n            return this.__iterator(ITERATE_VALUES);\n        },\n        // ### More sequential methods\n        butLast: function() {\n            return this.slice(0, -1);\n        },\n        isEmpty: function() {\n            return this.size !== undefined ? this.size === 0 : !this.some(function() {\n                return true;\n            });\n        },\n        count: function(predicate, context) {\n            return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n        },\n        countBy: function(grouper, context) {\n            return countByFactory(this, grouper, context);\n        },\n        equals: function(other) {\n            return deepEqual(this, other);\n        },\n        entrySeq: function() {\n            var iterable = this;\n            if (iterable._cache) {\n                // We cache as an entries array, so we can just return the cache!\n                return new ArraySeq(iterable._cache);\n            }\n            var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n            entriesSequence.fromEntrySeq = function() {\n                return iterable.toSeq();\n            };\n            return entriesSequence;\n        },\n        filterNot: function(predicate, context) {\n            return this.filter(not(predicate), context);\n        },\n        findLast: function(predicate, context, notSetValue) {\n            return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n        },\n        first: function() {\n            return this.find(returnTrue);\n        },\n        flatMap: function(mapper, context) {\n            return reify(this, flatMapFactory(this, mapper, context));\n        },\n        flatten: function(depth) {\n            return reify(this, flattenFactory(this, depth, true));\n        },\n        fromEntrySeq: function() {\n            return new FromEntriesSequence(this);\n        },\n        get: function(searchKey, notSetValue) {\n            return this.find(function(_, key) {\n                return is(key, searchKey);\n            }, undefined, notSetValue);\n        },\n        getIn: function(searchKeyPath, notSetValue) {\n            var nested = this;\n            // Note: in an ES6 environment, we would prefer:\n            // for (var key of searchKeyPath) {\n            var iter = forceIterator(searchKeyPath);\n            var step;\n            while(!(step = iter.next()).done){\n                var key = step.value;\n                nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n                if (nested === NOT_SET) {\n                    return notSetValue;\n                }\n            }\n            return nested;\n        },\n        groupBy: function(grouper, context) {\n            return groupByFactory(this, grouper, context);\n        },\n        has: function(searchKey) {\n            return this.get(searchKey, NOT_SET) !== NOT_SET;\n        },\n        hasIn: function(searchKeyPath) {\n            return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n        },\n        isSubset: function(iter) {\n            iter = typeof iter.includes === \"function\" ? iter : Iterable(iter);\n            return this.every(function(value) {\n                return iter.includes(value);\n            });\n        },\n        isSuperset: function(iter) {\n            iter = typeof iter.isSubset === \"function\" ? iter : Iterable(iter);\n            return iter.isSubset(this);\n        },\n        keySeq: function() {\n            return this.toSeq().map(keyMapper).toIndexedSeq();\n        },\n        last: function() {\n            return this.toSeq().reverse().first();\n        },\n        max: function(comparator) {\n            return maxFactory(this, comparator);\n        },\n        maxBy: function(mapper, comparator) {\n            return maxFactory(this, comparator, mapper);\n        },\n        min: function(comparator) {\n            return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n        },\n        minBy: function(mapper, comparator) {\n            return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n        },\n        rest: function() {\n            return this.slice(1);\n        },\n        skip: function(amount) {\n            return this.slice(Math.max(0, amount));\n        },\n        skipLast: function(amount) {\n            return reify(this, this.toSeq().reverse().skip(amount).reverse());\n        },\n        skipWhile: function(predicate, context) {\n            return reify(this, skipWhileFactory(this, predicate, context, true));\n        },\n        skipUntil: function(predicate, context) {\n            return this.skipWhile(not(predicate), context);\n        },\n        sortBy: function(mapper, comparator) {\n            return reify(this, sortFactory(this, comparator, mapper));\n        },\n        take: function(amount) {\n            return this.slice(0, Math.max(0, amount));\n        },\n        takeLast: function(amount) {\n            return reify(this, this.toSeq().reverse().take(amount).reverse());\n        },\n        takeWhile: function(predicate, context) {\n            return reify(this, takeWhileFactory(this, predicate, context));\n        },\n        takeUntil: function(predicate, context) {\n            return this.takeWhile(not(predicate), context);\n        },\n        valueSeq: function() {\n            return this.toIndexedSeq();\n        },\n        // ### Hashable Object\n        hashCode: function() {\n            return this.__hash || (this.__hash = hashIterable(this));\n        }\n    });\n    // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n    // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n    // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n    // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n    var IterablePrototype = Iterable.prototype;\n    IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n    IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n    IterablePrototype.__toJS = IterablePrototype.toArray;\n    IterablePrototype.__toStringMapper = quoteString;\n    IterablePrototype.inspect = IterablePrototype.toSource = function() {\n        return this.toString();\n    };\n    IterablePrototype.chain = IterablePrototype.flatMap;\n    IterablePrototype.contains = IterablePrototype.includes;\n    // Temporary warning about using length\n    (function() {\n        try {\n            Object.defineProperty(IterablePrototype, \"length\", {\n                get: function() {\n                    if (!Iterable.noLengthWarning) {\n                        var stack;\n                        try {\n                            throw new Error();\n                        } catch (error) {\n                            stack = error.stack;\n                        }\n                        if (stack.indexOf(\"_wrapObject\") === -1) {\n                            console && console.warn && console.warn(\"iterable.length has been deprecated, \" + \"use iterable.size or iterable.count(). \" + \"This warning will become a silent error in a future version. \" + stack);\n                            return this.size;\n                        }\n                    }\n                }\n            });\n        } catch (e) {}\n    })();\n    mixin(KeyedIterable, {\n        // ### More sequential methods\n        flip: function() {\n            return reify(this, flipFactory(this));\n        },\n        findKey: function(predicate, context) {\n            var entry = this.findEntry(predicate, context);\n            return entry && entry[0];\n        },\n        findLastKey: function(predicate, context) {\n            return this.toSeq().reverse().findKey(predicate, context);\n        },\n        keyOf: function(searchValue) {\n            return this.findKey(function(value) {\n                return is(value, searchValue);\n            });\n        },\n        lastKeyOf: function(searchValue) {\n            return this.findLastKey(function(value) {\n                return is(value, searchValue);\n            });\n        },\n        mapEntries: function(mapper, context) {\n            var this$0 = this;\n            var iterations = 0;\n            return reify(this, this.toSeq().map(function(v, k) {\n                return mapper.call(context, [\n                    k,\n                    v\n                ], iterations++, this$0);\n            }).fromEntrySeq());\n        },\n        mapKeys: function(mapper, context) {\n            var this$0 = this;\n            return reify(this, this.toSeq().flip().map(function(k, v) {\n                return mapper.call(context, k, v, this$0);\n            }).flip());\n        }\n    });\n    var KeyedIterablePrototype = KeyedIterable.prototype;\n    KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n    KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n    KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n    KeyedIterablePrototype.__toStringMapper = function(v, k) {\n        return JSON.stringify(k) + \": \" + quoteString(v);\n    };\n    mixin(IndexedIterable, {\n        // ### Conversion to other types\n        toKeyedSeq: function() {\n            return new ToKeyedSequence(this, false);\n        },\n        // ### ES6 Collection methods (ES6 Array and Map)\n        filter: function(predicate, context) {\n            return reify(this, filterFactory(this, predicate, context, false));\n        },\n        findIndex: function(predicate, context) {\n            var entry = this.findEntry(predicate, context);\n            return entry ? entry[0] : -1;\n        },\n        indexOf: function(searchValue) {\n            var key = this.toKeyedSeq().keyOf(searchValue);\n            return key === undefined ? -1 : key;\n        },\n        lastIndexOf: function(searchValue) {\n            var key = this.toKeyedSeq().reverse().keyOf(searchValue);\n            return key === undefined ? -1 : key;\n        // var index =\n        // return this.toSeq().reverse().indexOf(searchValue);\n        },\n        reverse: function() {\n            return reify(this, reverseFactory(this, false));\n        },\n        slice: function(begin, end) {\n            return reify(this, sliceFactory(this, begin, end, false));\n        },\n        splice: function(index, removeNum /*, ...values*/ ) {\n            var numArgs = arguments.length;\n            removeNum = Math.max(removeNum | 0, 0);\n            if (numArgs === 0 || numArgs === 2 && !removeNum) {\n                return this;\n            }\n            // If index is negative, it should resolve relative to the size of the\n            // collection. However size may be expensive to compute if not cached, so\n            // only call count() if the number is in fact negative.\n            index = resolveBegin(index, index < 0 ? this.count() : this.size);\n            var spliced = this.slice(0, index);\n            return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n        },\n        // ### More collection methods\n        findLastIndex: function(predicate, context) {\n            var key = this.toKeyedSeq().findLastKey(predicate, context);\n            return key === undefined ? -1 : key;\n        },\n        first: function() {\n            return this.get(0);\n        },\n        flatten: function(depth) {\n            return reify(this, flattenFactory(this, depth, false));\n        },\n        get: function(index, notSetValue) {\n            index = wrapIndex(this, index);\n            return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function(_, key) {\n                return key === index;\n            }, undefined, notSetValue);\n        },\n        has: function(index) {\n            index = wrapIndex(this, index);\n            return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n        },\n        interpose: function(separator) {\n            return reify(this, interposeFactory(this, separator));\n        },\n        interleave: function() {\n            var iterables = [\n                this\n            ].concat(arrCopy(arguments));\n            var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n            var interleaved = zipped.flatten(true);\n            if (zipped.size) {\n                interleaved.size = zipped.size * iterables.length;\n            }\n            return reify(this, interleaved);\n        },\n        last: function() {\n            return this.get(-1);\n        },\n        skipWhile: function(predicate, context) {\n            return reify(this, skipWhileFactory(this, predicate, context, false));\n        },\n        zip: function() {\n            var iterables = [\n                this\n            ].concat(arrCopy(arguments));\n            return reify(this, zipWithFactory(this, defaultZipper, iterables));\n        },\n        zipWith: function(zipper /*, ...iterables */ ) {\n            var iterables = arrCopy(arguments);\n            iterables[0] = this;\n            return reify(this, zipWithFactory(this, zipper, iterables));\n        }\n    });\n    IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n    IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n    mixin(SetIterable, {\n        // ### ES6 Collection methods (ES6 Array and Map)\n        get: function(value, notSetValue) {\n            return this.has(value) ? value : notSetValue;\n        },\n        includes: function(value) {\n            return this.has(value);\n        },\n        // ### More sequential methods\n        keySeq: function() {\n            return this.valueSeq();\n        }\n    });\n    SetIterable.prototype.has = IterablePrototype.includes;\n    // Mixin subclasses\n    mixin(KeyedSeq, KeyedIterable.prototype);\n    mixin(IndexedSeq, IndexedIterable.prototype);\n    mixin(SetSeq, SetIterable.prototype);\n    mixin(KeyedCollection, KeyedIterable.prototype);\n    mixin(IndexedCollection, IndexedIterable.prototype);\n    mixin(SetCollection, SetIterable.prototype);\n    // #pragma Helper functions\n    function keyMapper(v, k) {\n        return k;\n    }\n    function entryMapper(v, k) {\n        return [\n            k,\n            v\n        ];\n    }\n    function not(predicate) {\n        return function() {\n            return !predicate.apply(this, arguments);\n        };\n    }\n    function neg(predicate) {\n        return function() {\n            return -predicate.apply(this, arguments);\n        };\n    }\n    function quoteString(value) {\n        return typeof value === \"string\" ? JSON.stringify(value) : value;\n    }\n    function defaultZipper() {\n        return arrCopy(arguments);\n    }\n    function defaultNegComparator(a, b) {\n        return a < b ? 1 : a > b ? -1 : 0;\n    }\n    function hashIterable(iterable) {\n        if (iterable.size === Infinity) {\n            return 0;\n        }\n        var ordered = isOrdered(iterable);\n        var keyed = isKeyed(iterable);\n        var h = ordered ? 1 : 0;\n        var size = iterable.__iterate(keyed ? ordered ? function(v, k) {\n            h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n        } : function(v, k) {\n            h = h + hashMerge(hash(v), hash(k)) | 0;\n        } : ordered ? function(v) {\n            h = 31 * h + hash(v) | 0;\n        } : function(v) {\n            h = h + hash(v) | 0;\n        });\n        return murmurHashOfSize(size, h);\n    }\n    function murmurHashOfSize(size, h) {\n        h = imul(h, 0xCC9E2D51);\n        h = imul(h << 15 | h >>> -15, 0x1B873593);\n        h = imul(h << 13 | h >>> -13, 5);\n        h = (h + 0xE6546B64 | 0) ^ size;\n        h = imul(h ^ h >>> 16, 0x85EBCA6B);\n        h = imul(h ^ h >>> 13, 0xC2B2AE35);\n        h = smi(h ^ h >>> 16);\n        return h;\n    }\n    function hashMerge(a, b) {\n        return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n    }\n    var Immutable = {\n        Iterable: Iterable,\n        Seq: Seq,\n        Collection: Collection,\n        Map: Map,\n        OrderedMap: OrderedMap,\n        List: List,\n        Stack: Stack,\n        Set: Set,\n        OrderedSet: OrderedSet,\n        Record: Record,\n        Range: Range,\n        Repeat: Repeat,\n        is: is,\n        fromJS: fromJS\n    };\n    return Immutable;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/node_modules/immutable/dist/immutable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draftjs-to-html/lib/draftjs-to-html.js":
/*!*************************************************************!*\
  !*** ./node_modules/draftjs-to-html/lib/draftjs-to-html.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n(function(global, factory) {\n     true ? module.exports = factory() : 0;\n})(void 0, function() {\n    \"use strict\";\n    /**\n  * Utility function to execute callback for eack key->value pair.\n  */ function forEach(obj, callback) {\n        if (obj) {\n            for(var key in obj){\n                // eslint-disable-line no-restricted-syntax\n                if (({}).hasOwnProperty.call(obj, key)) {\n                    callback(key, obj[key]);\n                }\n            }\n        }\n    }\n    /**\n  * The function returns true if the string passed to it has no content.\n  */ function isEmptyString(str) {\n        if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n            return true;\n        }\n        return false;\n    }\n    /**\n  * Mapping block-type to corresponding html tag.\n  */ var blockTypesMapping = {\n        unstyled: \"p\",\n        \"header-one\": \"h1\",\n        \"header-two\": \"h2\",\n        \"header-three\": \"h3\",\n        \"header-four\": \"h4\",\n        \"header-five\": \"h5\",\n        \"header-six\": \"h6\",\n        \"unordered-list-item\": \"ul\",\n        \"ordered-list-item\": \"ol\",\n        blockquote: \"blockquote\",\n        code: \"pre\"\n    };\n    /**\n  * Function will return HTML tag for a block.\n  */ function getBlockTag(type) {\n        return type && blockTypesMapping[type];\n    }\n    /**\n  * Function will return style string for a block.\n  */ function getBlockStyle(data) {\n        var styles = \"\";\n        forEach(data, function(key, value) {\n            if (value) {\n                styles += \"\".concat(key, \":\").concat(value, \";\");\n            }\n        });\n        return styles;\n    }\n    /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */ function getHashtagRanges(blockText, hashtagConfig) {\n        var sections = [];\n        if (hashtagConfig) {\n            var counter = 0;\n            var startIndex = 0;\n            var text = blockText;\n            var trigger = hashtagConfig.trigger || \"#\";\n            var separator = hashtagConfig.separator || \" \";\n            for(; text.length > 0 && startIndex >= 0;){\n                if (text[0] === trigger) {\n                    startIndex = 0;\n                    counter = 0;\n                    text = text.substr(trigger.length);\n                } else {\n                    startIndex = text.indexOf(separator + trigger);\n                    if (startIndex >= 0) {\n                        text = text.substr(startIndex + (separator + trigger).length);\n                        counter += startIndex + separator.length;\n                    }\n                }\n                if (startIndex >= 0) {\n                    var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n                    var hashtag = text.substr(0, endIndex);\n                    if (hashtag && hashtag.length > 0) {\n                        sections.push({\n                            offset: counter,\n                            length: hashtag.length + trigger.length,\n                            type: \"HASHTAG\"\n                        });\n                    }\n                    counter += trigger.length;\n                }\n            }\n        }\n        return sections;\n    }\n    /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */ function getSections(block, hashtagConfig) {\n        var sections = [];\n        var lastOffset = 0;\n        var sectionRanges = block.entityRanges.map(function(range) {\n            var offset = range.offset, length = range.length, key = range.key;\n            return {\n                offset: offset,\n                length: length,\n                key: key,\n                type: \"ENTITY\"\n            };\n        });\n        sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n        sectionRanges = sectionRanges.sort(function(s1, s2) {\n            return s1.offset - s2.offset;\n        });\n        sectionRanges.forEach(function(r) {\n            if (r.offset > lastOffset) {\n                sections.push({\n                    start: lastOffset,\n                    end: r.offset\n                });\n            }\n            sections.push({\n                start: r.offset,\n                end: r.offset + r.length,\n                entityKey: r.key,\n                type: r.type\n            });\n            lastOffset = r.offset + r.length;\n        });\n        if (lastOffset < block.text.length) {\n            sections.push({\n                start: lastOffset,\n                end: block.text.length\n            });\n        }\n        return sections;\n    }\n    /**\n  * Function to check if the block is an atomic entity block.\n  */ function isAtomicEntityBlock(block) {\n        if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === \"atomic\")) {\n            return true;\n        }\n        return false;\n    }\n    /**\n  * The function will return array of inline styles applicable to the block.\n  */ function getStyleArrayForBlock(block) {\n        var text = block.text, inlineStyleRanges = block.inlineStyleRanges;\n        var inlineStyles = {\n            BOLD: new Array(text.length),\n            ITALIC: new Array(text.length),\n            UNDERLINE: new Array(text.length),\n            STRIKETHROUGH: new Array(text.length),\n            CODE: new Array(text.length),\n            SUPERSCRIPT: new Array(text.length),\n            SUBSCRIPT: new Array(text.length),\n            COLOR: new Array(text.length),\n            BGCOLOR: new Array(text.length),\n            FONTSIZE: new Array(text.length),\n            FONTFAMILY: new Array(text.length),\n            length: text.length\n        };\n        if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n            inlineStyleRanges.forEach(function(range) {\n                var offset = range.offset;\n                var length = offset + range.length;\n                for(var i = offset; i < length; i += 1){\n                    if (range.style.indexOf(\"color-\") === 0) {\n                        inlineStyles.COLOR[i] = range.style.substring(6);\n                    } else if (range.style.indexOf(\"bgcolor-\") === 0) {\n                        inlineStyles.BGCOLOR[i] = range.style.substring(8);\n                    } else if (range.style.indexOf(\"fontsize-\") === 0) {\n                        inlineStyles.FONTSIZE[i] = range.style.substring(9);\n                    } else if (range.style.indexOf(\"fontfamily-\") === 0) {\n                        inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n                    } else if (inlineStyles[range.style]) {\n                        inlineStyles[range.style][i] = true;\n                    }\n                }\n            });\n        }\n        return inlineStyles;\n    }\n    /**\n  * The function will return inline style applicable at some offset within a block.\n  */ function getStylesAtOffset(inlineStyles, offset) {\n        var styles = {};\n        if (inlineStyles.COLOR[offset]) {\n            styles.COLOR = inlineStyles.COLOR[offset];\n        }\n        if (inlineStyles.BGCOLOR[offset]) {\n            styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n        }\n        if (inlineStyles.FONTSIZE[offset]) {\n            styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n        }\n        if (inlineStyles.FONTFAMILY[offset]) {\n            styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n        }\n        if (inlineStyles.UNDERLINE[offset]) {\n            styles.UNDERLINE = true;\n        }\n        if (inlineStyles.ITALIC[offset]) {\n            styles.ITALIC = true;\n        }\n        if (inlineStyles.BOLD[offset]) {\n            styles.BOLD = true;\n        }\n        if (inlineStyles.STRIKETHROUGH[offset]) {\n            styles.STRIKETHROUGH = true;\n        }\n        if (inlineStyles.CODE[offset]) {\n            styles.CODE = true;\n        }\n        if (inlineStyles.SUBSCRIPT[offset]) {\n            styles.SUBSCRIPT = true;\n        }\n        if (inlineStyles.SUPERSCRIPT[offset]) {\n            styles.SUPERSCRIPT = true;\n        }\n        return styles;\n    }\n    /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */ function sameStyleAsPrevious(inlineStyles, styles, index) {\n        var sameStyled = true;\n        if (index > 0 && index < inlineStyles.length) {\n            styles.forEach(function(style) {\n                sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n            });\n        } else {\n            sameStyled = false;\n        }\n        return sameStyled;\n    }\n    /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */ function addInlineStyleMarkup(style, content) {\n        if (style === \"BOLD\") {\n            return \"<strong>\".concat(content, \"</strong>\");\n        }\n        if (style === \"ITALIC\") {\n            return \"<em>\".concat(content, \"</em>\");\n        }\n        if (style === \"UNDERLINE\") {\n            return \"<ins>\".concat(content, \"</ins>\");\n        }\n        if (style === \"STRIKETHROUGH\") {\n            return \"<del>\".concat(content, \"</del>\");\n        }\n        if (style === \"CODE\") {\n            return \"<code>\".concat(content, \"</code>\");\n        }\n        if (style === \"SUPERSCRIPT\") {\n            return \"<sup>\".concat(content, \"</sup>\");\n        }\n        if (style === \"SUBSCRIPT\") {\n            return \"<sub>\".concat(content, \"</sub>\");\n        }\n        return content;\n    }\n    /**\n  * The function returns text for given section of block after doing required character replacements.\n  */ function getSectionText(text) {\n        if (text && text.length > 0) {\n            var chars = text.map(function(ch) {\n                switch(ch){\n                    case \"\\n\":\n                        return \"<br>\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    default:\n                        return ch;\n                }\n            });\n            return chars.join(\"\");\n        }\n        return \"\";\n    }\n    /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */ function addStylePropertyMarkup(styles, text) {\n        if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n            var styleString = 'style=\"';\n            if (styles.COLOR) {\n                styleString += \"color: \".concat(styles.COLOR, \";\");\n            }\n            if (styles.BGCOLOR) {\n                styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n            }\n            if (styles.FONTSIZE) {\n                styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? \"px\" : \"\", \";\");\n            }\n            if (styles.FONTFAMILY) {\n                styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n            }\n            styleString += '\"';\n            return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n        }\n        return text;\n    }\n    /**\n  * Function will return markup for Entity.\n  */ function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n        var entity = entityMap[entityKey];\n        if (typeof customEntityTransform === \"function\") {\n            var html = customEntityTransform(entity, text);\n            if (html) {\n                return html;\n            }\n        }\n        if (entity.type === \"MENTION\") {\n            return '<a href=\"'.concat(entity.data.url, '\" class=\"wysiwyg-mention\" data-mention data-value=\"').concat(entity.data.value, '\">').concat(text, \"</a>\");\n        }\n        if (entity.type === \"LINK\") {\n            var targetOption = entity.data.targetOption || \"_self\";\n            return '<a href=\"'.concat(entity.data.url, '\" target=\"').concat(targetOption, '\">').concat(text, \"</a>\");\n        }\n        if (entity.type === \"IMAGE\") {\n            var alignment = entity.data.alignment;\n            if (alignment && alignment.length) {\n                return '<div style=\"text-align:'.concat(alignment, ';\"><img src=\"').concat(entity.data.src, '\" alt=\"').concat(entity.data.alt, '\" style=\"height: ').concat(entity.data.height, \";width: \").concat(entity.data.width, '\"/></div>');\n            }\n            return '<img src=\"'.concat(entity.data.src, '\" alt=\"').concat(entity.data.alt, '\" style=\"height: ').concat(entity.data.height, \";width: \").concat(entity.data.width, '\"/>');\n        }\n        if (entity.type === \"EMBEDDED_LINK\") {\n            return '<iframe width=\"'.concat(entity.data.width, '\" height=\"').concat(entity.data.height, '\" src=\"').concat(entity.data.src, '\" frameBorder=\"0\"></iframe>');\n        }\n        return text;\n    }\n    /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */ function getInlineStyleSections(block, styles, start, end) {\n        var styleSections = [];\n        var text = Array.from(block.text);\n        if (text.length > 0) {\n            var inlineStyles = getStyleArrayForBlock(block);\n            var section;\n            for(var i = start; i < end; i += 1){\n                if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n                    section.text.push(text[i]);\n                    section.end = i + 1;\n                } else {\n                    section = {\n                        styles: getStylesAtOffset(inlineStyles, i),\n                        text: [\n                            text[i]\n                        ],\n                        start: i,\n                        end: i + 1\n                    };\n                    styleSections.push(section);\n                }\n            }\n        }\n        return styleSections;\n    }\n    /**\n  * Replace leading blank spaces by &nbsp;\n  */ function trimLeadingZeros(sectionText) {\n        if (sectionText) {\n            var replacedText = sectionText;\n            for(var i = 0; i < replacedText.length; i += 1){\n                if (sectionText[i] === \" \") {\n                    replacedText = replacedText.replace(\" \", \"&nbsp;\");\n                } else {\n                    break;\n                }\n            }\n            return replacedText;\n        }\n        return sectionText;\n    }\n    /**\n  * Replace trailing blank spaces by &nbsp;\n  */ function trimTrailingZeros(sectionText) {\n        if (sectionText) {\n            var replacedText = sectionText;\n            for(var i = replacedText.length - 1; i >= 0; i -= 1){\n                if (replacedText[i] === \" \") {\n                    replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n                } else {\n                    break;\n                }\n            }\n            return replacedText;\n        }\n        return sectionText;\n    }\n    /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */ function getStyleTagSectionMarkup(styleSection) {\n        var styles = styleSection.styles, text = styleSection.text;\n        var content = getSectionText(text);\n        forEach(styles, function(style, value) {\n            content = addInlineStyleMarkup(style, content);\n        });\n        return content;\n    }\n    /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */ function getInlineStyleSectionMarkup(block, styleSection) {\n        var styleTagSections = getInlineStyleSections(block, [\n            \"BOLD\",\n            \"ITALIC\",\n            \"UNDERLINE\",\n            \"STRIKETHROUGH\",\n            \"CODE\",\n            \"SUPERSCRIPT\",\n            \"SUBSCRIPT\"\n        ], styleSection.start, styleSection.end);\n        var styleSectionText = \"\";\n        styleTagSections.forEach(function(stylePropertySection) {\n            styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n        });\n        styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n        return styleSectionText;\n    }\n    /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */ function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n        var entityInlineMarkup = [];\n        var inlineStyleSections = getInlineStyleSections(block, [\n            \"COLOR\",\n            \"BGCOLOR\",\n            \"FONTSIZE\",\n            \"FONTFAMILY\"\n        ], section.start, section.end);\n        inlineStyleSections.forEach(function(styleSection) {\n            entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n        });\n        var sectionText = entityInlineMarkup.join(\"\");\n        if (section.type === \"ENTITY\") {\n            if (section.entityKey !== undefined && section.entityKey !== null) {\n                sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n            }\n        } else if (section.type === \"HASHTAG\") {\n            sectionText = '<a href=\"'.concat(sectionText, '\" class=\"wysiwyg-hashtag\">').concat(sectionText, \"</a>\");\n        }\n        return sectionText;\n    }\n    /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */ function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n        var blockMarkup = [];\n        var sections = getSections(block, hashtagConfig);\n        sections.forEach(function(section, index) {\n            var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n            if (index === 0) {\n                sectionText = trimLeadingZeros(sectionText);\n            }\n            if (index === sections.length - 1) {\n                sectionText = trimTrailingZeros(sectionText);\n            }\n            blockMarkup.push(sectionText);\n        });\n        return blockMarkup.join(\"\");\n    }\n    /**\n  * Function will return html for the block.\n  */ function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n        var blockHtml = [];\n        if (isAtomicEntityBlock(block)) {\n            blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n        } else {\n            var blockTag = getBlockTag(block.type);\n            if (blockTag) {\n                blockHtml.push(\"<\".concat(blockTag));\n                var blockStyle = getBlockStyle(block.data);\n                if (blockStyle) {\n                    blockHtml.push(' style=\"'.concat(blockStyle, '\"'));\n                }\n                if (directional) {\n                    blockHtml.push(' dir = \"auto\"');\n                }\n                blockHtml.push(\">\");\n                blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n                blockHtml.push(\"</\".concat(blockTag, \">\"));\n            }\n        }\n        blockHtml.push(\"\\n\");\n        return blockHtml.join(\"\");\n    }\n    /**\n  * Function to check if a block is of type list.\n  */ function isList(blockType) {\n        return blockType === \"unordered-list-item\" || blockType === \"ordered-list-item\";\n    }\n    /**\n  * Function will return html markup for a list block.\n  */ function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n        var listHtml = [];\n        var nestedListBlock = [];\n        var previousBlock;\n        listBlocks.forEach(function(block) {\n            var nestedBlock = false;\n            if (!previousBlock) {\n                listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n            } else if (previousBlock.type !== block.type) {\n                listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n                listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n            } else if (previousBlock.depth === block.depth) {\n                if (nestedListBlock && nestedListBlock.length > 0) {\n                    listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n                    nestedListBlock = [];\n                }\n            } else {\n                nestedBlock = true;\n                nestedListBlock.push(block);\n            }\n            if (!nestedBlock) {\n                listHtml.push(\"<li\");\n                var blockStyle = getBlockStyle(block.data);\n                if (blockStyle) {\n                    listHtml.push(' style=\"'.concat(blockStyle, '\"'));\n                }\n                if (directional) {\n                    listHtml.push(' dir = \"auto\"');\n                }\n                listHtml.push(\">\");\n                listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n                listHtml.push(\"</li>\\n\");\n                previousBlock = block;\n            }\n        });\n        if (nestedListBlock && nestedListBlock.length > 0) {\n            listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n        }\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        return listHtml.join(\"\");\n    }\n    /**\n  * The function will generate html markup for given draftjs editorContent.\n  */ function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n        var html = [];\n        if (editorContent) {\n            var blocks = editorContent.blocks, entityMap = editorContent.entityMap;\n            if (blocks && blocks.length > 0) {\n                var listBlocks = [];\n                blocks.forEach(function(block) {\n                    if (isList(block.type)) {\n                        listBlocks.push(block);\n                    } else {\n                        if (listBlocks.length > 0) {\n                            var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n                            html.push(listHtml);\n                            listBlocks = [];\n                        }\n                        var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n                        html.push(blockHtml);\n                    }\n                });\n                if (listBlocks.length > 0) {\n                    var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n                    html.push(listHtml);\n                    listBlocks = [];\n                }\n            }\n        }\n        return html.join(\"\");\n    }\n    return draftToHtml;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draftjs-to-html/lib/draftjs-to-html.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/DataTransfer.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/DataTransfer.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var PhotosMimeType = __webpack_require__(/*! ./PhotosMimeType */ \"(app-pages-browser)/./node_modules/fbjs/lib/PhotosMimeType.js\");\nvar createArrayFromMixed = __webpack_require__(/*! ./createArrayFromMixed */ \"(app-pages-browser)/./node_modules/fbjs/lib/createArrayFromMixed.js\");\nvar emptyFunction = __webpack_require__(/*! ./emptyFunction */ \"(app-pages-browser)/./node_modules/fbjs/lib/emptyFunction.js\");\nvar CR_LF_REGEX = new RegExp(\"\\r\\n\", \"g\");\nvar LF_ONLY = \"\\n\";\nvar RICH_TEXT_TYPES = {\n    \"text/rtf\": 1,\n    \"text/html\": 1\n};\n/**\n * If DataTransferItem is a file then return the Blob of data.\n *\n * @param {object} item\n * @return {?blob}\n */ function getFileFromDataTransfer(item) {\n    if (item.kind == \"file\") {\n        return item.getAsFile();\n    }\n}\nvar DataTransfer = /*#__PURE__*/ function() {\n    /**\n   * @param {object} data\n   */ function DataTransfer(data) {\n        this.data = data; // Types could be DOMStringList or array\n        this.types = data.types ? createArrayFromMixed(data.types) : [];\n    }\n    /**\n   * Is this likely to be a rich text data transfer?\n   *\n   * @return {boolean}\n   */ var _proto = DataTransfer.prototype;\n    _proto.isRichText = function isRichText() {\n        // If HTML is available, treat this data as rich text. This way, we avoid\n        // using a pasted image if it is packaged with HTML -- this may occur with\n        // pastes from MS Word, for example.  However this is only rich text if\n        // there's accompanying text.\n        if (this.getHTML() && this.getText()) {\n            return true;\n        } // When an image is copied from a preview window, you end up with two\n        // DataTransferItems one of which is a file's metadata as text.  Skip those.\n        if (this.isImage()) {\n            return false;\n        }\n        return this.types.some(function(type) {\n            return RICH_TEXT_TYPES[type];\n        });\n    };\n    /**\n   * Get raw text.\n   *\n   * @return {?string}\n   */ _proto.getText = function getText() {\n        var text;\n        if (this.data.getData) {\n            if (!this.types.length) {\n                text = this.data.getData(\"Text\");\n            } else if (this.types.indexOf(\"text/plain\") != -1) {\n                text = this.data.getData(\"text/plain\");\n            }\n        }\n        return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n    };\n    /**\n   * Get HTML paste data\n   *\n   * @return {?string}\n   */ _proto.getHTML = function getHTML() {\n        if (this.data.getData) {\n            if (!this.types.length) {\n                return this.data.getData(\"Text\");\n            } else if (this.types.indexOf(\"text/html\") != -1) {\n                return this.data.getData(\"text/html\");\n            }\n        }\n    };\n    /**\n   * Is this a link data transfer?\n   *\n   * @return {boolean}\n   */ _proto.isLink = function isLink() {\n        return this.types.some(function(type) {\n            return type.indexOf(\"Url\") != -1 || type.indexOf(\"text/uri-list\") != -1 || type.indexOf(\"text/x-moz-url\");\n        });\n    };\n    /**\n   * Get a link url.\n   *\n   * @return {?string}\n   */ _proto.getLink = function getLink() {\n        if (this.data.getData) {\n            if (this.types.indexOf(\"text/x-moz-url\") != -1) {\n                var url = this.data.getData(\"text/x-moz-url\").split(\"\\n\");\n                return url[0];\n            }\n            return this.types.indexOf(\"text/uri-list\") != -1 ? this.data.getData(\"text/uri-list\") : this.data.getData(\"url\");\n        }\n        return null;\n    };\n    /**\n   * Is this an image data transfer?\n   *\n   * @return {boolean}\n   */ _proto.isImage = function isImage() {\n        var isImage = this.types.some(function(type) {\n            // Firefox will have a type of application/x-moz-file for images during\n            // dragging\n            return type.indexOf(\"application/x-moz-file\") != -1;\n        });\n        if (isImage) {\n            return true;\n        }\n        var items = this.getFiles();\n        for(var i = 0; i < items.length; i++){\n            var type = items[i].type;\n            if (!PhotosMimeType.isImage(type)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    _proto.getCount = function getCount() {\n        if (this.data.hasOwnProperty(\"items\")) {\n            return this.data.items.length;\n        } else if (this.data.hasOwnProperty(\"mozItemCount\")) {\n            return this.data.mozItemCount;\n        } else if (this.data.files) {\n            return this.data.files.length;\n        }\n        return null;\n    };\n    /**\n   * Get files.\n   *\n   * @return {array}\n   */ _proto.getFiles = function getFiles() {\n        if (this.data.items) {\n            // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n            return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n        } else if (this.data.files) {\n            return Array.prototype.slice.call(this.data.files);\n        } else {\n            return [];\n        }\n    };\n    /**\n   * Are there any files to fetch?\n   *\n   * @return {boolean}\n   */ _proto.hasFiles = function hasFiles() {\n        return this.getFiles().length > 0;\n    };\n    return DataTransfer;\n}();\nmodule.exports = DataTransfer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/DataTransfer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/Keys.js":
/*!***************************************!*\
  !*** ./node_modules/fbjs/lib/Keys.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ module.exports = {\n    BACKSPACE: 8,\n    TAB: 9,\n    RETURN: 13,\n    ALT: 18,\n    ESC: 27,\n    SPACE: 32,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    END: 35,\n    HOME: 36,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    DELETE: 46,\n    COMMA: 188,\n    PERIOD: 190,\n    A: 65,\n    Z: 90,\n    ZERO: 48,\n    NUMPAD_0: 96,\n    NUMPAD_9: 105\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9LZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7OztDQU1DLEdBQ0RBLE9BQU9DLE9BQU8sR0FBRztJQUNmQyxXQUFXO0lBQ1hDLEtBQUs7SUFDTEMsUUFBUTtJQUNSQyxLQUFLO0lBQ0xDLEtBQUs7SUFDTEMsT0FBTztJQUNQQyxTQUFTO0lBQ1RDLFdBQVc7SUFDWEMsS0FBSztJQUNMQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsSUFBSTtJQUNKQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsR0FBRztJQUNIQyxHQUFHO0lBQ0hDLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxVQUFVO0FBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0tleXMuanM/MzY2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBCQUNLU1BBQ0U6IDgsXG4gIFRBQjogOSxcbiAgUkVUVVJOOiAxMyxcbiAgQUxUOiAxOCxcbiAgRVNDOiAyNyxcbiAgU1BBQ0U6IDMyLFxuICBQQUdFX1VQOiAzMyxcbiAgUEFHRV9ET1dOOiAzNCxcbiAgRU5EOiAzNSxcbiAgSE9NRTogMzYsXG4gIExFRlQ6IDM3LFxuICBVUDogMzgsXG4gIFJJR0hUOiAzOSxcbiAgRE9XTjogNDAsXG4gIERFTEVURTogNDYsXG4gIENPTU1BOiAxODgsXG4gIFBFUklPRDogMTkwLFxuICBBOiA2NSxcbiAgWjogOTAsXG4gIFpFUk86IDQ4LFxuICBOVU1QQURfMDogOTYsXG4gIE5VTVBBRF85OiAxMDVcbn07Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJCQUNLU1BBQ0UiLCJUQUIiLCJSRVRVUk4iLCJBTFQiLCJFU0MiLCJTUEFDRSIsIlBBR0VfVVAiLCJQQUdFX0RPV04iLCJFTkQiLCJIT01FIiwiTEVGVCIsIlVQIiwiUklHSFQiLCJET1dOIiwiREVMRVRFIiwiQ09NTUEiLCJQRVJJT0QiLCJBIiwiWiIsIlpFUk8iLCJOVU1QQURfMCIsIk5VTVBBRF85Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/Keys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/PhotosMimeType.js":
/*!*************************************************!*\
  !*** ./node_modules/fbjs/lib/PhotosMimeType.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ var PhotosMimeType = {\n    isImage: function isImage(mimeString) {\n        return getParts(mimeString)[0] === \"image\";\n    },\n    isJpeg: function isJpeg(mimeString) {\n        var parts = getParts(mimeString);\n        return PhotosMimeType.isImage(mimeString) && (parts[1] === \"jpeg\" || parts[1] === \"pjpeg\");\n    }\n};\nfunction getParts(mimeString) {\n    return mimeString.split(\"/\");\n}\nmodule.exports = PhotosMimeType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9QaG90b3NNaW1lVHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7Q0FNQyxHQUNELElBQUlBLGlCQUFpQjtJQUNuQkMsU0FBUyxTQUFTQSxRQUFRQyxVQUFVO1FBQ2xDLE9BQU9DLFNBQVNELFdBQVcsQ0FBQyxFQUFFLEtBQUs7SUFDckM7SUFDQUUsUUFBUSxTQUFTQSxPQUFPRixVQUFVO1FBQ2hDLElBQUlHLFFBQVFGLFNBQVNEO1FBQ3JCLE9BQU9GLGVBQWVDLE9BQU8sQ0FBQ0MsZUFDOUJHLENBQUFBLEtBQUssQ0FBQyxFQUFFLEtBQUssVUFBVUEsS0FBSyxDQUFDLEVBQUUsS0FBSyxPQUFNO0lBQzVDO0FBQ0Y7QUFFQSxTQUFTRixTQUFTRCxVQUFVO0lBQzFCLE9BQU9BLFdBQVdJLEtBQUssQ0FBQztBQUMxQjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9QaG90b3NNaW1lVHlwZS5qcz8zNTE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xudmFyIFBob3Rvc01pbWVUeXBlID0ge1xuICBpc0ltYWdlOiBmdW5jdGlvbiBpc0ltYWdlKG1pbWVTdHJpbmcpIHtcbiAgICByZXR1cm4gZ2V0UGFydHMobWltZVN0cmluZylbMF0gPT09ICdpbWFnZSc7XG4gIH0sXG4gIGlzSnBlZzogZnVuY3Rpb24gaXNKcGVnKG1pbWVTdHJpbmcpIHtcbiAgICB2YXIgcGFydHMgPSBnZXRQYXJ0cyhtaW1lU3RyaW5nKTtcbiAgICByZXR1cm4gUGhvdG9zTWltZVR5cGUuaXNJbWFnZShtaW1lU3RyaW5nKSAmJiAoIC8vIHNlZSBodHRwOi8vZmJ1cmwuY29tLzEwOTcyMTk0XG4gICAgcGFydHNbMV0gPT09ICdqcGVnJyB8fCBwYXJ0c1sxXSA9PT0gJ3BqcGVnJyk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldFBhcnRzKG1pbWVTdHJpbmcpIHtcbiAgcmV0dXJuIG1pbWVTdHJpbmcuc3BsaXQoJy8nKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQaG90b3NNaW1lVHlwZTsiXSwibmFtZXMiOlsiUGhvdG9zTWltZVR5cGUiLCJpc0ltYWdlIiwibWltZVN0cmluZyIsImdldFBhcnRzIiwiaXNKcGVnIiwicGFydHMiLCJzcGxpdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/PhotosMimeType.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/Scroll.js":
/*!*****************************************!*\
  !*** ./node_modules/fbjs/lib/Scroll.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ /**\n * @param {DOMElement} element\n * @param {DOMDocument} doc\n * @return {boolean}\n */ function _isViewportScrollElement(element, doc) {\n    return !!doc && (element === doc.documentElement || element === doc.body);\n}\n/**\n * Scroll Module. This class contains 4 simple static functions\n * to be used to access Element.scrollTop/scrollLeft properties.\n * To solve the inconsistencies between browsers when either\n * document.body or document.documentElement is supplied,\n * below logic will be used to alleviate the issue:\n *\n * 1. If 'element' is either 'document.body' or 'document.documentElement,\n *    get whichever element's 'scroll{Top,Left}' is larger.\n * 2. If 'element' is either 'document.body' or 'document.documentElement',\n *    set the 'scroll{Top,Left}' on both elements.\n */ var Scroll = {\n    /**\n   * @param {DOMElement} element\n   * @return {number}\n   */ getTop: function getTop(element) {\n        var doc = element.ownerDocument;\n        return _isViewportScrollElement(element, doc) ? // or one will be zero and the other will be the scroll position\n        // of the viewport. So we can use `X || Y` instead of `Math.max(X, Y)`\n        doc.body.scrollTop || doc.documentElement.scrollTop : element.scrollTop;\n    },\n    /**\n   * @param {DOMElement} element\n   * @param {number} newTop\n   */ setTop: function setTop(element, newTop) {\n        var doc = element.ownerDocument;\n        if (_isViewportScrollElement(element, doc)) {\n            doc.body.scrollTop = doc.documentElement.scrollTop = newTop;\n        } else {\n            element.scrollTop = newTop;\n        }\n    },\n    /**\n   * @param {DOMElement} element\n   * @return {number}\n   */ getLeft: function getLeft(element) {\n        var doc = element.ownerDocument;\n        return _isViewportScrollElement(element, doc) ? doc.body.scrollLeft || doc.documentElement.scrollLeft : element.scrollLeft;\n    },\n    /**\n   * @param {DOMElement} element\n   * @param {number} newLeft\n   */ setLeft: function setLeft(element, newLeft) {\n        var doc = element.ownerDocument;\n        if (_isViewportScrollElement(element, doc)) {\n            doc.body.scrollLeft = doc.documentElement.scrollLeft = newLeft;\n        } else {\n            element.scrollLeft = newLeft;\n        }\n    }\n};\nmodule.exports = Scroll;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9TY3JvbGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7O0NBTUMsR0FFRDs7OztDQUlDLEdBQ0QsU0FBU0EseUJBQXlCQyxPQUFPLEVBQUVDLEdBQUc7SUFDNUMsT0FBTyxDQUFDLENBQUNBLE9BQVFELENBQUFBLFlBQVlDLElBQUlDLGVBQWUsSUFBSUYsWUFBWUMsSUFBSUUsSUFBSTtBQUMxRTtBQUNBOzs7Ozs7Ozs7OztDQVdDLEdBR0QsSUFBSUMsU0FBUztJQUNYOzs7R0FHQyxHQUNEQyxRQUFRLFNBQVNBLE9BQU9MLE9BQU87UUFDN0IsSUFBSUMsTUFBTUQsUUFBUU0sYUFBYTtRQUMvQixPQUFPUCx5QkFBeUJDLFNBQVNDLE9BQ3pDLGdFQUFnRTtRQUNoRSxzRUFBc0U7UUFDdEVBLElBQUlFLElBQUksQ0FBQ0ksU0FBUyxJQUFJTixJQUFJQyxlQUFlLENBQUNLLFNBQVMsR0FBR1AsUUFBUU8sU0FBUztJQUN6RTtJQUVBOzs7R0FHQyxHQUNEQyxRQUFRLFNBQVNBLE9BQU9SLE9BQU8sRUFBRVMsTUFBTTtRQUNyQyxJQUFJUixNQUFNRCxRQUFRTSxhQUFhO1FBRS9CLElBQUlQLHlCQUF5QkMsU0FBU0MsTUFBTTtZQUMxQ0EsSUFBSUUsSUFBSSxDQUFDSSxTQUFTLEdBQUdOLElBQUlDLGVBQWUsQ0FBQ0ssU0FBUyxHQUFHRTtRQUN2RCxPQUFPO1lBQ0xULFFBQVFPLFNBQVMsR0FBR0U7UUFDdEI7SUFDRjtJQUVBOzs7R0FHQyxHQUNEQyxTQUFTLFNBQVNBLFFBQVFWLE9BQU87UUFDL0IsSUFBSUMsTUFBTUQsUUFBUU0sYUFBYTtRQUMvQixPQUFPUCx5QkFBeUJDLFNBQVNDLE9BQU9BLElBQUlFLElBQUksQ0FBQ1EsVUFBVSxJQUFJVixJQUFJQyxlQUFlLENBQUNTLFVBQVUsR0FBR1gsUUFBUVcsVUFBVTtJQUM1SDtJQUVBOzs7R0FHQyxHQUNEQyxTQUFTLFNBQVNBLFFBQVFaLE9BQU8sRUFBRWEsT0FBTztRQUN4QyxJQUFJWixNQUFNRCxRQUFRTSxhQUFhO1FBRS9CLElBQUlQLHlCQUF5QkMsU0FBU0MsTUFBTTtZQUMxQ0EsSUFBSUUsSUFBSSxDQUFDUSxVQUFVLEdBQUdWLElBQUlDLGVBQWUsQ0FBQ1MsVUFBVSxHQUFHRTtRQUN6RCxPQUFPO1lBQ0xiLFFBQVFXLFVBQVUsR0FBR0U7UUFDdkI7SUFDRjtBQUNGO0FBQ0FDLE9BQU9DLE9BQU8sR0FBR1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL1Njcm9sbC5qcz9lYzMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtET01Eb2N1bWVudH0gZG9jXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBfaXNWaWV3cG9ydFNjcm9sbEVsZW1lbnQoZWxlbWVudCwgZG9jKSB7XG4gIHJldHVybiAhIWRvYyAmJiAoZWxlbWVudCA9PT0gZG9jLmRvY3VtZW50RWxlbWVudCB8fCBlbGVtZW50ID09PSBkb2MuYm9keSk7XG59XG4vKipcbiAqIFNjcm9sbCBNb2R1bGUuIFRoaXMgY2xhc3MgY29udGFpbnMgNCBzaW1wbGUgc3RhdGljIGZ1bmN0aW9uc1xuICogdG8gYmUgdXNlZCB0byBhY2Nlc3MgRWxlbWVudC5zY3JvbGxUb3Avc2Nyb2xsTGVmdCBwcm9wZXJ0aWVzLlxuICogVG8gc29sdmUgdGhlIGluY29uc2lzdGVuY2llcyBiZXR3ZWVuIGJyb3dzZXJzIHdoZW4gZWl0aGVyXG4gKiBkb2N1bWVudC5ib2R5IG9yIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCBpcyBzdXBwbGllZCxcbiAqIGJlbG93IGxvZ2ljIHdpbGwgYmUgdXNlZCB0byBhbGxldmlhdGUgdGhlIGlzc3VlOlxuICpcbiAqIDEuIElmICdlbGVtZW50JyBpcyBlaXRoZXIgJ2RvY3VtZW50LmJvZHknIG9yICdkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG4gKiAgICBnZXQgd2hpY2hldmVyIGVsZW1lbnQncyAnc2Nyb2xse1RvcCxMZWZ0fScgaXMgbGFyZ2VyLlxuICogMi4gSWYgJ2VsZW1lbnQnIGlzIGVpdGhlciAnZG9jdW1lbnQuYm9keScgb3IgJ2RvY3VtZW50LmRvY3VtZW50RWxlbWVudCcsXG4gKiAgICBzZXQgdGhlICdzY3JvbGx7VG9wLExlZnR9JyBvbiBib3RoIGVsZW1lbnRzLlxuICovXG5cblxudmFyIFNjcm9sbCA9IHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7RE9NRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqL1xuICBnZXRUb3A6IGZ1bmN0aW9uIGdldFRvcChlbGVtZW50KSB7XG4gICAgdmFyIGRvYyA9IGVsZW1lbnQub3duZXJEb2N1bWVudDtcbiAgICByZXR1cm4gX2lzVmlld3BvcnRTY3JvbGxFbGVtZW50KGVsZW1lbnQsIGRvYykgPyAvLyBJbiBwcmFjdGljZSwgdGhleSB3aWxsIGVpdGhlciBib3RoIGhhdmUgdGhlIHNhbWUgdmFsdWUsXG4gICAgLy8gb3Igb25lIHdpbGwgYmUgemVybyBhbmQgdGhlIG90aGVyIHdpbGwgYmUgdGhlIHNjcm9sbCBwb3NpdGlvblxuICAgIC8vIG9mIHRoZSB2aWV3cG9ydC4gU28gd2UgY2FuIHVzZSBgWCB8fCBZYCBpbnN0ZWFkIG9mIGBNYXRoLm1heChYLCBZKWBcbiAgICBkb2MuYm9keS5zY3JvbGxUb3AgfHwgZG9jLmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgOiBlbGVtZW50LnNjcm9sbFRvcDtcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHtET01FbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBuZXdUb3BcbiAgICovXG4gIHNldFRvcDogZnVuY3Rpb24gc2V0VG9wKGVsZW1lbnQsIG5ld1RvcCkge1xuICAgIHZhciBkb2MgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQ7XG5cbiAgICBpZiAoX2lzVmlld3BvcnRTY3JvbGxFbGVtZW50KGVsZW1lbnQsIGRvYykpIHtcbiAgICAgIGRvYy5ib2R5LnNjcm9sbFRvcCA9IGRvYy5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wID0gbmV3VG9wO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50LnNjcm9sbFRvcCA9IG5ld1RvcDtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RE9NRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XG4gICAqL1xuICBnZXRMZWZ0OiBmdW5jdGlvbiBnZXRMZWZ0KGVsZW1lbnQpIHtcbiAgICB2YXIgZG9jID0gZWxlbWVudC5vd25lckRvY3VtZW50O1xuICAgIHJldHVybiBfaXNWaWV3cG9ydFNjcm9sbEVsZW1lbnQoZWxlbWVudCwgZG9jKSA/IGRvYy5ib2R5LnNjcm9sbExlZnQgfHwgZG9jLmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0IDogZWxlbWVudC5zY3JvbGxMZWZ0O1xuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0RPTUVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtudW1iZXJ9IG5ld0xlZnRcbiAgICovXG4gIHNldExlZnQ6IGZ1bmN0aW9uIHNldExlZnQoZWxlbWVudCwgbmV3TGVmdCkge1xuICAgIHZhciBkb2MgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQ7XG5cbiAgICBpZiAoX2lzVmlld3BvcnRTY3JvbGxFbGVtZW50KGVsZW1lbnQsIGRvYykpIHtcbiAgICAgIGRvYy5ib2R5LnNjcm9sbExlZnQgPSBkb2MuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgPSBuZXdMZWZ0O1xuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50LnNjcm9sbExlZnQgPSBuZXdMZWZ0O1xuICAgIH1cbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gU2Nyb2xsOyJdLCJuYW1lcyI6WyJfaXNWaWV3cG9ydFNjcm9sbEVsZW1lbnQiLCJlbGVtZW50IiwiZG9jIiwiZG9jdW1lbnRFbGVtZW50IiwiYm9keSIsIlNjcm9sbCIsImdldFRvcCIsIm93bmVyRG9jdW1lbnQiLCJzY3JvbGxUb3AiLCJzZXRUb3AiLCJuZXdUb3AiLCJnZXRMZWZ0Iiwic2Nyb2xsTGVmdCIsInNldExlZnQiLCJuZXdMZWZ0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/Scroll.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/Style.js":
/*!****************************************!*\
  !*** ./node_modules/fbjs/lib/Style.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var getStyleProperty = __webpack_require__(/*! ./getStyleProperty */ \"(app-pages-browser)/./node_modules/fbjs/lib/getStyleProperty.js\");\n/**\n * @param {DOMNode} element [description]\n * @param {string} name Overflow style property name.\n * @return {boolean} True if the supplied ndoe is scrollable.\n */ function _isNodeScrollable(element, name) {\n    var overflow = Style.get(element, name);\n    return overflow === \"auto\" || overflow === \"scroll\";\n}\n/**\n * Utilities for querying and mutating style properties.\n */ var Style = {\n    /**\n   * Gets the style property for the supplied node. This will return either the\n   * computed style, if available, or the declared style.\n   *\n   * @param {DOMNode} node\n   * @param {string} name Style property name.\n   * @return {?string} Style property value.\n   */ get: getStyleProperty,\n    /**\n   * Determines the nearest ancestor of a node that is scrollable.\n   *\n   * NOTE: This can be expensive if used repeatedly or on a node nested deeply.\n   *\n   * @param {?DOMNode} node Node from which to start searching.\n   * @return {?DOMWindow|DOMElement} Scroll parent of the supplied node.\n   */ getScrollParent: function getScrollParent(node) {\n        if (!node) {\n            return null;\n        }\n        var ownerDocument = node.ownerDocument;\n        while(node && node !== ownerDocument.body){\n            if (_isNodeScrollable(node, \"overflow\") || _isNodeScrollable(node, \"overflowY\") || _isNodeScrollable(node, \"overflowX\")) {\n                return node;\n            }\n            node = node.parentNode;\n        }\n        return ownerDocument.defaultView || ownerDocument.parentWindow;\n    }\n};\nmodule.exports = Style;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9TdHlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7O0NBT0MsR0FDRCxJQUFJQSxtQkFBbUJDLG1CQUFPQSxDQUFDLDJGQUFvQjtBQUNuRDs7OztDQUlDLEdBR0QsU0FBU0Msa0JBQWtCQyxPQUFPLEVBQUVDLElBQUk7SUFDdEMsSUFBSUMsV0FBV0MsTUFBTUMsR0FBRyxDQUFDSixTQUFTQztJQUNsQyxPQUFPQyxhQUFhLFVBQVVBLGFBQWE7QUFDN0M7QUFDQTs7Q0FFQyxHQUdELElBQUlDLFFBQVE7SUFDVjs7Ozs7OztHQU9DLEdBQ0RDLEtBQUtQO0lBRUw7Ozs7Ozs7R0FPQyxHQUNEUSxpQkFBaUIsU0FBU0EsZ0JBQWdCQyxJQUFJO1FBQzVDLElBQUksQ0FBQ0EsTUFBTTtZQUNULE9BQU87UUFDVDtRQUVBLElBQUlDLGdCQUFnQkQsS0FBS0MsYUFBYTtRQUV0QyxNQUFPRCxRQUFRQSxTQUFTQyxjQUFjQyxJQUFJLENBQUU7WUFDMUMsSUFBSVQsa0JBQWtCTyxNQUFNLGVBQWVQLGtCQUFrQk8sTUFBTSxnQkFBZ0JQLGtCQUFrQk8sTUFBTSxjQUFjO2dCQUN2SCxPQUFPQTtZQUNUO1lBRUFBLE9BQU9BLEtBQUtHLFVBQVU7UUFDeEI7UUFFQSxPQUFPRixjQUFjRyxXQUFXLElBQUlILGNBQWNJLFlBQVk7SUFDaEU7QUFDRjtBQUNBQyxPQUFPQyxPQUFPLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9TdHlsZS5qcz85YjljIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cbnZhciBnZXRTdHlsZVByb3BlcnR5ID0gcmVxdWlyZShcIi4vZ2V0U3R5bGVQcm9wZXJ0eVwiKTtcbi8qKlxuICogQHBhcmFtIHtET01Ob2RlfSBlbGVtZW50IFtkZXNjcmlwdGlvbl1cbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIE92ZXJmbG93IHN0eWxlIHByb3BlcnR5IG5hbWUuXG4gKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBzdXBwbGllZCBuZG9lIGlzIHNjcm9sbGFibGUuXG4gKi9cblxuXG5mdW5jdGlvbiBfaXNOb2RlU2Nyb2xsYWJsZShlbGVtZW50LCBuYW1lKSB7XG4gIHZhciBvdmVyZmxvdyA9IFN0eWxlLmdldChlbGVtZW50LCBuYW1lKTtcbiAgcmV0dXJuIG92ZXJmbG93ID09PSAnYXV0bycgfHwgb3ZlcmZsb3cgPT09ICdzY3JvbGwnO1xufVxuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIHF1ZXJ5aW5nIGFuZCBtdXRhdGluZyBzdHlsZSBwcm9wZXJ0aWVzLlxuICovXG5cblxudmFyIFN0eWxlID0ge1xuICAvKipcbiAgICogR2V0cyB0aGUgc3R5bGUgcHJvcGVydHkgZm9yIHRoZSBzdXBwbGllZCBub2RlLiBUaGlzIHdpbGwgcmV0dXJuIGVpdGhlciB0aGVcbiAgICogY29tcHV0ZWQgc3R5bGUsIGlmIGF2YWlsYWJsZSwgb3IgdGhlIGRlY2xhcmVkIHN0eWxlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTU5vZGV9IG5vZGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgU3R5bGUgcHJvcGVydHkgbmFtZS5cbiAgICogQHJldHVybiB7P3N0cmluZ30gU3R5bGUgcHJvcGVydHkgdmFsdWUuXG4gICAqL1xuICBnZXQ6IGdldFN0eWxlUHJvcGVydHksXG5cbiAgLyoqXG4gICAqIERldGVybWluZXMgdGhlIG5lYXJlc3QgYW5jZXN0b3Igb2YgYSBub2RlIHRoYXQgaXMgc2Nyb2xsYWJsZS5cbiAgICpcbiAgICogTk9URTogVGhpcyBjYW4gYmUgZXhwZW5zaXZlIGlmIHVzZWQgcmVwZWF0ZWRseSBvciBvbiBhIG5vZGUgbmVzdGVkIGRlZXBseS5cbiAgICpcbiAgICogQHBhcmFtIHs/RE9NTm9kZX0gbm9kZSBOb2RlIGZyb20gd2hpY2ggdG8gc3RhcnQgc2VhcmNoaW5nLlxuICAgKiBAcmV0dXJuIHs/RE9NV2luZG93fERPTUVsZW1lbnR9IFNjcm9sbCBwYXJlbnQgb2YgdGhlIHN1cHBsaWVkIG5vZGUuXG4gICAqL1xuICBnZXRTY3JvbGxQYXJlbnQ6IGZ1bmN0aW9uIGdldFNjcm9sbFBhcmVudChub2RlKSB7XG4gICAgaWYgKCFub2RlKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgb3duZXJEb2N1bWVudCA9IG5vZGUub3duZXJEb2N1bWVudDtcblxuICAgIHdoaWxlIChub2RlICYmIG5vZGUgIT09IG93bmVyRG9jdW1lbnQuYm9keSkge1xuICAgICAgaWYgKF9pc05vZGVTY3JvbGxhYmxlKG5vZGUsICdvdmVyZmxvdycpIHx8IF9pc05vZGVTY3JvbGxhYmxlKG5vZGUsICdvdmVyZmxvd1knKSB8fCBfaXNOb2RlU2Nyb2xsYWJsZShub2RlLCAnb3ZlcmZsb3dYJykpIHtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICB9XG5cbiAgICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIG93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgb3duZXJEb2N1bWVudC5wYXJlbnRXaW5kb3c7XG4gIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IFN0eWxlOyJdLCJuYW1lcyI6WyJnZXRTdHlsZVByb3BlcnR5IiwicmVxdWlyZSIsIl9pc05vZGVTY3JvbGxhYmxlIiwiZWxlbWVudCIsIm5hbWUiLCJvdmVyZmxvdyIsIlN0eWxlIiwiZ2V0IiwiZ2V0U2Nyb2xsUGFyZW50Iiwibm9kZSIsIm93bmVyRG9jdW1lbnQiLCJib2R5IiwicGFyZW50Tm9kZSIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/Style.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/TokenizeUtil.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/TokenizeUtil.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * @stub\n * \n */  // \\u00a1-\\u00b1\\u00b4-\\u00b8\\u00ba\\u00bb\\u00bf\n//             is latin supplement punctuation except fractions and superscript\n//             numbers\n// \\u2010-\\u2027\\u2030-\\u205e\n//             is punctuation from the general punctuation block:\n//             weird quotes, commas, bullets, dashes, etc.\n// \\u30fb\\u3001\\u3002\\u3008-\\u3011\\u3014-\\u301f\n//             is CJK punctuation\n// \\uff1a-\\uff1f\\uff01-\\uff0f\\uff3b-\\uff40\\uff5b-\\uff65\n//             is some full-width/half-width punctuation\n// \\u2E2E\\u061f\\u066a-\\u066c\\u061b\\u060c\\u060d\\uFD3e\\uFD3F\n//             is some Arabic punctuation marks\n// \\u1801\\u0964\\u104a\\u104b\n//             is misc. other language punctuation marks\nvar PUNCTUATION = \"[.,+*?$|#{}()'\\\\^\\\\-\\\\[\\\\]\\\\\\\\\\\\/!@%\\\"~=<>_:;\" + \"・、。〈-】〔-〟：-？！-／\" + \"［-｀｛-･⸮؟٪-٬؛،؍\" + \"﴾﴿᠁।၊။‐-‧‰-⁞\" + \"\\xa1-\\xb1\\xb4-\\xb8\\xba\\xbb\\xbf]\";\nmodule.exports = {\n    getPunctuation: function getPunctuation() {\n        return PUNCTUATION;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9Ub2tlbml6ZVV0aWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDLEdBQ0QsQ0FBYywrQ0FBK0M7QUFDN0QsK0VBQStFO0FBQy9FLHNCQUFzQjtBQUN0Qiw2QkFBNkI7QUFDN0IsaUVBQWlFO0FBQ2pFLDBEQUEwRDtBQUMxRCwrQ0FBK0M7QUFDL0MsaUNBQWlDO0FBQ2pDLHVEQUF1RDtBQUN2RCx3REFBd0Q7QUFDeEQsMERBQTBEO0FBQzFELCtDQUErQztBQUMvQywyQkFBMkI7QUFDM0Isd0RBQXdEO0FBRXhELElBQUlBLGNBQWMsa0RBQWtELG9CQUEyRSxtQkFBMEUsaUJBQW1FO0FBQzVSQyxPQUFPQyxPQUFPLEdBQUc7SUFDZkMsZ0JBQWdCLFNBQVNBO1FBQ3ZCLE9BQU9IO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvVG9rZW5pemVVdGlsLmpzP2JhZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICogQHN0dWJcbiAqIFxuICovXG4ndXNlIHN0cmljdCc7IC8vIFxcdTAwYTEtXFx1MDBiMVxcdTAwYjQtXFx1MDBiOFxcdTAwYmFcXHUwMGJiXFx1MDBiZlxuLy8gICAgICAgICAgICAgaXMgbGF0aW4gc3VwcGxlbWVudCBwdW5jdHVhdGlvbiBleGNlcHQgZnJhY3Rpb25zIGFuZCBzdXBlcnNjcmlwdFxuLy8gICAgICAgICAgICAgbnVtYmVyc1xuLy8gXFx1MjAxMC1cXHUyMDI3XFx1MjAzMC1cXHUyMDVlXG4vLyAgICAgICAgICAgICBpcyBwdW5jdHVhdGlvbiBmcm9tIHRoZSBnZW5lcmFsIHB1bmN0dWF0aW9uIGJsb2NrOlxuLy8gICAgICAgICAgICAgd2VpcmQgcXVvdGVzLCBjb21tYXMsIGJ1bGxldHMsIGRhc2hlcywgZXRjLlxuLy8gXFx1MzBmYlxcdTMwMDFcXHUzMDAyXFx1MzAwOC1cXHUzMDExXFx1MzAxNC1cXHUzMDFmXG4vLyAgICAgICAgICAgICBpcyBDSksgcHVuY3R1YXRpb25cbi8vIFxcdWZmMWEtXFx1ZmYxZlxcdWZmMDEtXFx1ZmYwZlxcdWZmM2ItXFx1ZmY0MFxcdWZmNWItXFx1ZmY2NVxuLy8gICAgICAgICAgICAgaXMgc29tZSBmdWxsLXdpZHRoL2hhbGYtd2lkdGggcHVuY3R1YXRpb25cbi8vIFxcdTJFMkVcXHUwNjFmXFx1MDY2YS1cXHUwNjZjXFx1MDYxYlxcdTA2MGNcXHUwNjBkXFx1RkQzZVxcdUZEM0Zcbi8vICAgICAgICAgICAgIGlzIHNvbWUgQXJhYmljIHB1bmN0dWF0aW9uIG1hcmtzXG4vLyBcXHUxODAxXFx1MDk2NFxcdTEwNGFcXHUxMDRiXG4vLyAgICAgICAgICAgICBpcyBtaXNjLiBvdGhlciBsYW5ndWFnZSBwdW5jdHVhdGlvbiBtYXJrc1xuXG52YXIgUFVOQ1RVQVRJT04gPSAnWy4sKyo/JHwje30oKVxcJ1xcXFxeXFxcXC1cXFxcW1xcXFxdXFxcXFxcXFxcXFxcLyFAJVwifj08Pl86OycgKyBcIlxcdTMwRkJcXHUzMDAxXFx1MzAwMlxcdTMwMDgtXFx1MzAxMVxcdTMwMTQtXFx1MzAxRlxcdUZGMUEtXFx1RkYxRlxcdUZGMDEtXFx1RkYwRlwiICsgXCJcXHVGRjNCLVxcdUZGNDBcXHVGRjVCLVxcdUZGNjVcXHUyRTJFXFx1MDYxRlxcdTA2NkEtXFx1MDY2Q1xcdTA2MUJcXHUwNjBDXFx1MDYwRFwiICsgXCJcXHVGRDNFXFx1RkQzRlxcdTE4MDFcXHUwOTY0XFx1MTA0QVxcdTEwNEJcXHUyMDEwLVxcdTIwMjdcXHUyMDMwLVxcdTIwNUVcIiArIFwiXFx4QTEtXFx4QjFcXHhCNC1cXHhCOFxceEJBXFx4QkJcXHhCRl1cIjtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRQdW5jdHVhdGlvbjogZnVuY3Rpb24gZ2V0UHVuY3R1YXRpb24oKSB7XG4gICAgcmV0dXJuIFBVTkNUVUFUSU9OO1xuICB9XG59OyJdLCJuYW1lcyI6WyJQVU5DVFVBVElPTiIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRQdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/TokenizeUtil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/URI.js":
/*!**************************************!*\
  !*** ./node_modules/fbjs/lib/URI.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */ \nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar URI = /*#__PURE__*/ function() {\n    function URI(uri) {\n        _defineProperty(this, \"_uri\", void 0);\n        this._uri = uri;\n    }\n    var _proto = URI.prototype;\n    _proto.toString = function toString() {\n        return this._uri;\n    };\n    return URI;\n}();\nmodule.exports = URI;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9VUkkuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Q0FPQyxHQUNEO0FBRUEsU0FBU0EsZ0JBQWdCQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsS0FBSztJQUFJLElBQUlELE9BQU9ELEtBQUs7UUFBRUcsT0FBT0MsY0FBYyxDQUFDSixLQUFLQyxLQUFLO1lBQUVDLE9BQU9BO1lBQU9HLFlBQVk7WUFBTUMsY0FBYztZQUFNQyxVQUFVO1FBQUs7SUFBSSxPQUFPO1FBQUVQLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHQztJQUFPO0lBQUUsT0FBT0Y7QUFBSztBQUVoTixJQUFJUSxNQUNKLFdBQVcsR0FDWDtJQUNFLFNBQVNBLElBQUlDLEdBQUc7UUFDZFYsZ0JBQWdCLElBQUksRUFBRSxRQUFRLEtBQUs7UUFFbkMsSUFBSSxDQUFDVyxJQUFJLEdBQUdEO0lBQ2Q7SUFFQSxJQUFJRSxTQUFTSCxJQUFJSSxTQUFTO0lBRTFCRCxPQUFPRSxRQUFRLEdBQUcsU0FBU0E7UUFDekIsT0FBTyxJQUFJLENBQUNILElBQUk7SUFDbEI7SUFFQSxPQUFPRjtBQUNUO0FBRUFNLE9BQU9DLE9BQU8sR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL1VSSS5qcz9iMDllIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIFVSSSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFVSSSh1cmkpIHtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfdXJpXCIsIHZvaWQgMCk7XG5cbiAgICB0aGlzLl91cmkgPSB1cmk7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gVVJJLnByb3RvdHlwZTtcblxuICBfcHJvdG8udG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5fdXJpO1xuICB9O1xuXG4gIHJldHVybiBVUkk7XG59KCk7XG5cbm1vZHVsZS5leHBvcnRzID0gVVJJOyJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiVVJJIiwidXJpIiwiX3VyaSIsIl9wcm90byIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/URI.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidi.js":
/*!**********************************************!*\
  !*** ./node_modules/fbjs/lib/UnicodeBidi.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */ /**\n * Basic (stateless) API for text direction detection\n *\n * Part of our implementation of Unicode Bidirectional Algorithm (UBA)\n * Unicode Standard Annex #9 (UAX9)\n * http://www.unicode.org/reports/tr9/\n */ \nvar UnicodeBidiDirection = __webpack_require__(/*! ./UnicodeBidiDirection */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiDirection.js\");\nvar invariant = __webpack_require__(/*! ./invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\n/**\n * RegExp ranges of characters with a *Strong* Bidi_Class value.\n *\n * Data is based on DerivedBidiClass.txt in UCD version 7.0.0.\n *\n * NOTE: For performance reasons, we only support Unicode's\n *       Basic Multilingual Plane (BMP) for now.\n */ var RANGE_BY_BIDI_TYPE = {\n    L: \"A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-ƺƻ\" + \"Ƽ-ƿǀ-ǃǄ-ʓʔʕ-ʯʰ-ʸ\" + \"ʻ-ˁː-ˑˠ-ˤˮͰ-ͳͶ-ͷ\" + \"ͺͻ-ͽͿΆΈ-ΊΌΎ-Ρ\" + \"Σ-ϵϷ-ҁ҂Ҋ-ԯԱ-Ֆՙ\" + \"՚-՟ա-և։ःऄ-हऻऽ\" + \"ा-ीॉ-ौॎ-ॏॐक़-ॡ।-॥\" + \"०-९॰ॱॲ-ঀং-ঃঅ-ঌ\" + \"এ-ঐও-নপ-রলশ-হঽ\" + \"া-ীে-ৈো-ৌৎৗড়-ঢ়\" + \"য়-ৡ০-৯ৰ-ৱ৴-৹৺ਃ\" + \"ਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼\" + \"ਵ-ਸ਼ਸ-ਹਾ-ੀਖ਼-ੜਫ਼੦-੯\" + \"ੲ-ੴઃઅ-ઍએ-ઑઓ-નપ-ર\" + \"લ-ળવ-હઽા-ીૉો-ૌૐ\" + \"ૠ-ૡ૦-૯૰ଂ-ଃଅ-ଌଏ-ଐ\" + \"ଓ-ନପ-ରଲ-ଳଵ-ହଽାୀ\" + \"େ-ୈୋ-ୌୗଡ଼-ଢ଼ୟ-ୡ୦-୯\" + \"୰ୱ୲-୷ஃஅ-ஊஎ-ஐஒ-க\" + \"ங-சஜஞ-டண-தந-பம-ஹ\" + \"ா-ிு-ூெ-ைொ-ௌௐௗ\" + \"௦-௯௰-௲ఁ-ఃఅ-ఌఎ-ఐ\" + \"ఒ-నప-హఽు-ౄౘ-ౙౠ-ౡ\" + \"౦-౯౿ಂ-ಃಅ-ಌಎ-ಐಒ-ನ\" + \"ಪ-ಳವ-ಹಽಾಿೀ-ೄೆ\" + \"ೇ-ೈೊ-ೋೕ-ೖೞೠ-ೡ೦-೯\" + \"ೱ-ೲം-ഃഅ-ഌഎ-ഐഒ-ഺഽ\" + \"ാ-ീെ-ൈൊ-ൌൎൗൠ-ൡ\" + \"൦-൯൰-൵൹ൺ-ൿං-ඃඅ-ඖ\" + \"ක-නඳ-රලව-ෆා-ෑෘ-ෟ\" + \"෦-෯ෲ-ෳ෴ก-ะา-ำเ-ๅ\" + \"ๆ๏๐-๙๚-๛ກ-ຂຄງ-ຈ\" + \"ຊຍດ-ທນ-ຟມ-ຣລວ\" + \"ສ-ຫອ-ະາ-ຳຽເ-ໄໆ\" + \"໐-໙ໜ-ໟༀ༁-༃༄-༒༓༔\" + \"༕-༗༚-༟༠-༩༪-༳༴༶༸\" + \"༾-༿ཀ-ཇཉ-ཬཿ྅ྈ-ྌ\" + \"྾-࿅࿇-࿌࿎-࿏࿐-࿔࿕-࿘\" + \"࿙-࿚က-ဪါ-ာေးျ-ြဿ\" + \"၀-၉၊-၏ၐ-ၕၖ-ၗၚ-ၝၡ\" + \"ၢ-ၤၥ-ၦၧ-ၭၮ-ၰၵ-ႁ\" + \"ႃ-ႄႇ-ႌႎႏ႐-႙ႚ-ႜ\" + \"႞-႟Ⴀ-ჅჇჍა-ჺ჻ჼ\" + \"ჽ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈ\" + \"ኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅ\" + \"ወ-ዖዘ-ጐጒ-ጕጘ-ፚ፠-፨\" + \"፩-፼ᎀ-ᎏᎠ-Ᏼᐁ-ᙬ᙭-᙮\" + \"ᙯ-ᙿᚁ-ᚚᚠ-ᛪ᛫-᛭ᛮ-ᛰ\" + \"ᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱ᜵-᜶\" + \"ᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳាើ-ៅ\" + \"ះ-ៈ។-៖ៗ៘-៚ៜ០-៩\" + \"᠐-᠙ᠠ-ᡂᡃᡄ-ᡷᢀ-ᢨᢪ\" + \"ᢰ-ᣵᤀ-ᤞᤣ-ᤦᤩ-ᤫᤰ-ᤱ\" + \"ᤳ-ᤸ᥆-᥏ᥐ-ᥭᥰ-ᥴᦀ-ᦫ\" + \"ᦰ-ᧀᧁ-ᧇᧈ-ᧉ᧐-᧙᧚ᨀ-ᨖ\" + \"ᨙ-ᨚ᨞-᨟ᨠ-ᩔᩕᩗᩡᩣ-ᩤ\" + \"ᩭ-ᩲ᪀-᪉᪐-᪙᪠-᪦ᪧ᪨-᪭\" + \"ᬄᬅ-ᬳᬵᬻᬽ-ᭁᭃ-᭄ᭅ-ᭋ\" + \"᭐-᭙᭚-᭠᭡-᭪᭴-᭼ᮂᮃ-ᮠ\" + \"ᮡᮦ-ᮧ᮪ᮮ-ᮯ᮰-᮹ᮺ-ᯥᯧ\" + \"ᯪ-ᯬᯮ᯲-᯳᯼-᯿ᰀ-ᰣᰤ-ᰫ\" + \"ᰴ-ᰵ᰻-᰿᱀-᱉ᱍ-ᱏ᱐-᱙\" + \"ᱚ-ᱷᱸ-ᱽ᱾-᱿᳀-᳇᳓᳡\" + \"ᳩ-ᳬᳮ-ᳱᳲ-ᳳᳵ-ᳶᴀ-ᴫ\" + \"ᴬ-ᵪᵫ-ᵷᵸᵹ-ᶚᶛ-ᶿḀ-ἕ\" + \"Ἐ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝ\" + \"Ὗ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌ\" + \"ῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‎\" + \"ⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝ\" + \"ℤΩℨK-ℭℯ-ℴℵ-ℸℹ\" + \"ℼ-ℿⅅ-ⅉⅎ⅏Ⅰ-ↂↃ-ↄ\" + \"ↅ-ↈ⌶-⍺⎕⒜-ⓩ⚬⠀-⣿\" + \"Ⰰ-Ⱞⰰ-ⱞⱠ-ⱻⱼ-ⱽⱾ-ⳤ\" + \"Ⳬ-ⳮⳲ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ\" + \"⵰ⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾ\" + \"ⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々〆〇\" + \"〡-〩〮-〯〱-〵〸-〺〻〼\" + \"ぁ-ゖゝ-ゞゟァ-ヺー-ヾヿ\" + \"ㄅ-ㄭㄱ-ㆎ㆐-㆑㆒-㆕㆖-㆟\" + \"ㆠ-ㆺㇰ-ㇿ㈀-㈜㈠-㈩㈪-㉇\" + \"㉈-㉏㉠-㉻㉿㊀-㊉㊊-㊰㋀-㋋\" + \"㋐-㋾㌀-㍶㍻-㏝㏠-㏾㐀-䶵\" + \"一-鿌ꀀ-ꀔꀕꀖ-ꒌꓐ-ꓷꓸ-ꓽ\" + \"꓾-꓿ꔀ-ꘋꘌꘐ-ꘟ꘠-꘩ꘪ-ꘫ\" + \"Ꙁ-ꙭꙮꚀ-ꚛꚜ-ꚝꚠ-ꛥꛦ-ꛯ\" + \"꛲-꛷Ꜣ-ꝯꝰꝱ-ꞇ꞉-꞊Ꞌ-ꞎ\" + \"Ꞑ-ꞭꞰ-Ʇꟷꟸ-ꟹꟺꟻ-ꠁ\" + \"ꠃ-ꠅꠇ-ꠊꠌ-ꠢꠣ-ꠤꠧ꠰-꠵\" + \"꠶-꠷ꡀ-ꡳꢀ-ꢁꢂ-ꢳꢴ-ꣃ\" + \"꣎-꣏꣐-꣙ꣲ-ꣷ꣸-꣺ꣻ꤀-꤉\" + \"ꤊ-ꤥ꤮-꤯ꤰ-ꥆꥒ-꥓꥟ꥠ-ꥼ\" + \"ꦃꦄ-ꦲꦴ-ꦵꦺ-ꦻꦽ-꧀꧁-꧍\" + \"ꧏ꧐-꧙꧞-꧟ꧠ-ꧤꧦꧧ-ꧯ\" + \"꧰-꧹ꧺ-ꧾꨀ-ꨨꨯ-ꨰꨳ-ꨴ\" + \"ꩀ-ꩂꩄ-ꩋꩍ꩐-꩙꩜-꩟ꩠ-ꩯ\" + \"ꩰꩱ-ꩶ꩷-꩹ꩺꩻꩽꩾ-ꪯꪱ\" + \"ꪵ-ꪶꪹ-ꪽꫀꫂꫛ-ꫜꫝ꫞-꫟\" + \"ꫠ-ꫪꫫꫮ-ꫯ꫰-꫱ꫲꫳ-ꫴꫵ\" + \"ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮ\" + \"ꬰ-ꭚ꭛ꭜ-ꭟꭤ-ꭥꯀ-ꯢꯣ-ꯤ\" + \"ꯦ-ꯧꯩ-ꯪ꯫꯬꯰-꯹가-힣\" + \"ힰ-ퟆퟋ-ퟻ-豈-舘並-龎\" + \"ﬀ-ﬆﬓ-ﬗＡ-Ｚａ-ｚｦ-ｯｰ\" + \"ｱ-ﾝﾞ-ﾟﾠ-ﾾￂ-ￇￊ-ￏ\" + \"ￒ-ￗￚ-ￜ\",\n    R: \"֐־׀׃׆׈-׏א-ת׫-ׯ\" + \"װ-ײ׳-״׵-׿߀-߉ߊ-ߪ\" + \"ߴ-ߵߺ߻-߿ࠀ-ࠕࠚࠤࠨ\" + \"࠮-࠯࠰-࠾࠿ࡀ-ࡘ࡜-࡝࡞\" + \"࡟-࢟‏יִײַ-ﬨשׁ-זּ﬷טּ-לּ\" + \"﬽מּ﬿נּ-סּ﭂ףּ-פּ﭅צּ-ﭏ\",\n    AL: \"؈؋؍؛؜؝؞-؟ؠ-ؿـ\" + \"ف-ي٭ٮ-ٯٱ-ۓ۔ەۥ-ۦ\" + \"ۮ-ۯۺ-ۼ۽-۾ۿ܀-܍܎܏\" + \"ܐܒ-ܯ݋-݌ݍ-ޥޱ޲-޿\" + \"ࢠ-ࢲࢳ-ࣣﭐ-ﮱ﮲-﯁﯂-﯒\" + \"ﯓ-ﴽ﵀-﵏ﵐ-ﶏ﶐-﶑ﶒ-ﷇ\" + \"﷈-﷏ﷰ-ﷻ﷼﷾-﷿ﹰ-ﹴ﹵\" + \"ﹶ-ﻼ﻽-﻾\"\n};\nvar REGEX_STRONG = new RegExp(\"[\" + RANGE_BY_BIDI_TYPE.L + RANGE_BY_BIDI_TYPE.R + RANGE_BY_BIDI_TYPE.AL + \"]\");\nvar REGEX_RTL = new RegExp(\"[\" + RANGE_BY_BIDI_TYPE.R + RANGE_BY_BIDI_TYPE.AL + \"]\");\n/**\n * Returns the first strong character (has Bidi_Class value of L, R, or AL).\n *\n * @param str  A text block; e.g. paragraph, table cell, tag\n * @return     A character with strong bidi direction, or null if not found\n */ function firstStrongChar(str) {\n    var match = REGEX_STRONG.exec(str);\n    return match == null ? null : match[0];\n}\n/**\n * Returns the direction of a block of text, based on the direction of its\n * first strong character (has Bidi_Class value of L, R, or AL).\n *\n * @param str  A text block; e.g. paragraph, table cell, tag\n * @return     The resolved direction\n */ function firstStrongCharDir(str) {\n    var strongChar = firstStrongChar(str);\n    if (strongChar == null) {\n        return UnicodeBidiDirection.NEUTRAL;\n    }\n    return REGEX_RTL.exec(strongChar) ? UnicodeBidiDirection.RTL : UnicodeBidiDirection.LTR;\n}\n/**\n * Returns the direction of a block of text, based on the direction of its\n * first strong character (has Bidi_Class value of L, R, or AL), or a fallback\n * direction, if no strong character is found.\n *\n * This function is supposed to be used in respect to Higher-Level Protocol\n * rule HL1. (http://www.unicode.org/reports/tr9/#HL1)\n *\n * @param str       A text block; e.g. paragraph, table cell, tag\n * @param fallback  Fallback direction, used if no strong direction detected\n *                  for the block (default = NEUTRAL)\n * @return          The resolved direction\n */ function resolveBlockDir(str, fallback) {\n    fallback = fallback || UnicodeBidiDirection.NEUTRAL;\n    if (!str.length) {\n        return fallback;\n    }\n    var blockDir = firstStrongCharDir(str);\n    return blockDir === UnicodeBidiDirection.NEUTRAL ? fallback : blockDir;\n}\n/**\n * Returns the direction of a block of text, based on the direction of its\n * first strong character (has Bidi_Class value of L, R, or AL), or a fallback\n * direction, if no strong character is found.\n *\n * NOTE: This function is similar to resolveBlockDir(), but uses the global\n * direction as the fallback, so it *always* returns a Strong direction,\n * making it useful for integration in places that you need to make the final\n * decision, like setting some CSS class.\n *\n * This function is supposed to be used in respect to Higher-Level Protocol\n * rule HL1. (http://www.unicode.org/reports/tr9/#HL1)\n *\n * @param str             A text block; e.g. paragraph, table cell\n * @param strongFallback  Fallback direction, used if no strong direction\n *                        detected for the block (default = global direction)\n * @return                The resolved Strong direction\n */ function getDirection(str, strongFallback) {\n    if (!strongFallback) {\n        strongFallback = UnicodeBidiDirection.getGlobalDir();\n    }\n    !UnicodeBidiDirection.isStrong(strongFallback) ?  true ? invariant(false, \"Fallback direction must be a strong direction\") : 0 : void 0;\n    return resolveBlockDir(str, strongFallback);\n}\n/**\n * Returns true if getDirection(arguments...) returns LTR.\n *\n * @param str             A text block; e.g. paragraph, table cell\n * @param strongFallback  Fallback direction, used if no strong direction\n *                        detected for the block (default = global direction)\n * @return                True if the resolved direction is LTR\n */ function isDirectionLTR(str, strongFallback) {\n    return getDirection(str, strongFallback) === UnicodeBidiDirection.LTR;\n}\n/**\n * Returns true if getDirection(arguments...) returns RTL.\n *\n * @param str             A text block; e.g. paragraph, table cell\n * @param strongFallback  Fallback direction, used if no strong direction\n *                        detected for the block (default = global direction)\n * @return                True if the resolved direction is RTL\n */ function isDirectionRTL(str, strongFallback) {\n    return getDirection(str, strongFallback) === UnicodeBidiDirection.RTL;\n}\nvar UnicodeBidi = {\n    firstStrongChar: firstStrongChar,\n    firstStrongCharDir: firstStrongCharDir,\n    resolveBlockDir: resolveBlockDir,\n    getDirection: getDirection,\n    isDirectionLTR: isDirectionLTR,\n    isDirectionRTL: isDirectionRTL\n};\nmodule.exports = UnicodeBidi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiDirection.js":
/*!*******************************************************!*\
  !*** ./node_modules/fbjs/lib/UnicodeBidiDirection.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */ /**\n * Constants to represent text directionality\n *\n * Also defines a *global* direciton, to be used in bidi algorithms as a\n * default fallback direciton, when no better direction is found or provided.\n *\n * NOTE: Use `setGlobalDir()`, or update `initGlobalDir()`, to set the initial\n *       global direction value based on the application.\n *\n * Part of the implementation of Unicode Bidirectional Algorithm (UBA)\n * Unicode Standard Annex #9 (UAX9)\n * http://www.unicode.org/reports/tr9/\n */ \nvar invariant = __webpack_require__(/*! ./invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar NEUTRAL = \"NEUTRAL\"; // No strong direction\nvar LTR = \"LTR\"; // Left-to-Right direction\nvar RTL = \"RTL\"; // Right-to-Left direction\nvar globalDir = null; // == Helpers ==\n/**\n * Check if a directionality value is a Strong one\n */ function isStrong(dir) {\n    return dir === LTR || dir === RTL;\n}\n/**\n * Get string value to be used for `dir` HTML attribute or `direction` CSS\n * property.\n */ function getHTMLDir(dir) {\n    !isStrong(dir) ?  true ? invariant(false, \"`dir` must be a strong direction to be converted to HTML Direction\") : 0 : void 0;\n    return dir === LTR ? \"ltr\" : \"rtl\";\n}\n/**\n * Get string value to be used for `dir` HTML attribute or `direction` CSS\n * property, but returns null if `dir` has same value as `otherDir`.\n * `null`.\n */ function getHTMLDirIfDifferent(dir, otherDir) {\n    !isStrong(dir) ?  true ? invariant(false, \"`dir` must be a strong direction to be converted to HTML Direction\") : 0 : void 0;\n    !isStrong(otherDir) ?  true ? invariant(false, \"`otherDir` must be a strong direction to be converted to HTML Direction\") : 0 : void 0;\n    return dir === otherDir ? null : getHTMLDir(dir);\n} // == Global Direction ==\n/**\n * Set the global direction.\n */ function setGlobalDir(dir) {\n    globalDir = dir;\n}\n/**\n * Initialize the global direction\n */ function initGlobalDir() {\n    setGlobalDir(LTR);\n}\n/**\n * Get the global direction\n */ function getGlobalDir() {\n    if (!globalDir) {\n        this.initGlobalDir();\n    }\n    !globalDir ?  true ? invariant(false, \"Global direction not set.\") : 0 : void 0;\n    return globalDir;\n}\nvar UnicodeBidiDirection = {\n    // Values\n    NEUTRAL: NEUTRAL,\n    LTR: LTR,\n    RTL: RTL,\n    // Helpers\n    isStrong: isStrong,\n    getHTMLDir: getHTMLDir,\n    getHTMLDirIfDifferent: getHTMLDirIfDifferent,\n    // Global Direction\n    setGlobalDir: setGlobalDir,\n    initGlobalDir: initGlobalDir,\n    getGlobalDir: getGlobalDir\n};\nmodule.exports = UnicodeBidiDirection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9Vbmljb2RlQmlkaURpcmVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Q0FRQyxHQUVEOzs7Ozs7Ozs7Ozs7Q0FZQyxHQUNEO0FBRUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsNkVBQWE7QUFFckMsSUFBSUMsVUFBVSxXQUFXLHNCQUFzQjtBQUUvQyxJQUFJQyxNQUFNLE9BQU8sMEJBQTBCO0FBRTNDLElBQUlDLE1BQU0sT0FBTywwQkFBMEI7QUFFM0MsSUFBSUMsWUFBWSxNQUFNLGdCQUFnQjtBQUV0Qzs7Q0FFQyxHQUVELFNBQVNDLFNBQVNDLEdBQUc7SUFDbkIsT0FBT0EsUUFBUUosT0FBT0ksUUFBUUg7QUFDaEM7QUFDQTs7O0NBR0MsR0FHRCxTQUFTSSxXQUFXRCxHQUFHO0lBQ3JCLENBQUNELFNBQVNDLE9BQU9FLEtBQXFDLEdBQUdULFVBQVUsT0FBTyx3RUFBd0VBLENBQWdCLEdBQUcsS0FBSztJQUMxSyxPQUFPTyxRQUFRSixNQUFNLFFBQVE7QUFDL0I7QUFDQTs7OztDQUlDLEdBR0QsU0FBU08sc0JBQXNCSCxHQUFHLEVBQUVJLFFBQVE7SUFDMUMsQ0FBQ0wsU0FBU0MsT0FBT0UsS0FBcUMsR0FBR1QsVUFBVSxPQUFPLHdFQUF3RUEsQ0FBZ0IsR0FBRyxLQUFLO0lBQzFLLENBQUNNLFNBQVNLLFlBQVlGLEtBQXFDLEdBQUdULFVBQVUsT0FBTyw2RUFBNkVBLENBQWdCLEdBQUcsS0FBSztJQUNwTCxPQUFPTyxRQUFRSSxXQUFXLE9BQU9ILFdBQVdEO0FBQzlDLEVBQUUseUJBQXlCO0FBRTNCOztDQUVDLEdBR0QsU0FBU0ssYUFBYUwsR0FBRztJQUN2QkYsWUFBWUU7QUFDZDtBQUNBOztDQUVDLEdBR0QsU0FBU007SUFDUEQsYUFBYVQ7QUFDZjtBQUNBOztDQUVDLEdBR0QsU0FBU1c7SUFDUCxJQUFJLENBQUNULFdBQVc7UUFDZCxJQUFJLENBQUNRLGFBQWE7SUFDcEI7SUFFQSxDQUFDUixZQUFZSSxLQUFxQyxHQUFHVCxVQUFVLE9BQU8sK0JBQStCQSxDQUFnQixHQUFHLEtBQUs7SUFDN0gsT0FBT0s7QUFDVDtBQUVBLElBQUlVLHVCQUF1QjtJQUN6QixTQUFTO0lBQ1RiLFNBQVNBO0lBQ1RDLEtBQUtBO0lBQ0xDLEtBQUtBO0lBQ0wsVUFBVTtJQUNWRSxVQUFVQTtJQUNWRSxZQUFZQTtJQUNaRSx1QkFBdUJBO0lBQ3ZCLG1CQUFtQjtJQUNuQkUsY0FBY0E7SUFDZEMsZUFBZUE7SUFDZkMsY0FBY0E7QUFDaEI7QUFDQUUsT0FBT0MsT0FBTyxHQUFHRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvVW5pY29kZUJpZGlEaXJlY3Rpb24uanM/NTEzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKipcbiAqIENvbnN0YW50cyB0byByZXByZXNlbnQgdGV4dCBkaXJlY3Rpb25hbGl0eVxuICpcbiAqIEFsc28gZGVmaW5lcyBhICpnbG9iYWwqIGRpcmVjaXRvbiwgdG8gYmUgdXNlZCBpbiBiaWRpIGFsZ29yaXRobXMgYXMgYVxuICogZGVmYXVsdCBmYWxsYmFjayBkaXJlY2l0b24sIHdoZW4gbm8gYmV0dGVyIGRpcmVjdGlvbiBpcyBmb3VuZCBvciBwcm92aWRlZC5cbiAqXG4gKiBOT1RFOiBVc2UgYHNldEdsb2JhbERpcigpYCwgb3IgdXBkYXRlIGBpbml0R2xvYmFsRGlyKClgLCB0byBzZXQgdGhlIGluaXRpYWxcbiAqICAgICAgIGdsb2JhbCBkaXJlY3Rpb24gdmFsdWUgYmFzZWQgb24gdGhlIGFwcGxpY2F0aW9uLlxuICpcbiAqIFBhcnQgb2YgdGhlIGltcGxlbWVudGF0aW9uIG9mIFVuaWNvZGUgQmlkaXJlY3Rpb25hbCBBbGdvcml0aG0gKFVCQSlcbiAqIFVuaWNvZGUgU3RhbmRhcmQgQW5uZXggIzkgKFVBWDkpXG4gKiBodHRwOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHI5L1xuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG5cbnZhciBORVVUUkFMID0gJ05FVVRSQUwnOyAvLyBObyBzdHJvbmcgZGlyZWN0aW9uXG5cbnZhciBMVFIgPSAnTFRSJzsgLy8gTGVmdC10by1SaWdodCBkaXJlY3Rpb25cblxudmFyIFJUTCA9ICdSVEwnOyAvLyBSaWdodC10by1MZWZ0IGRpcmVjdGlvblxuXG52YXIgZ2xvYmFsRGlyID0gbnVsbDsgLy8gPT0gSGVscGVycyA9PVxuXG4vKipcbiAqIENoZWNrIGlmIGEgZGlyZWN0aW9uYWxpdHkgdmFsdWUgaXMgYSBTdHJvbmcgb25lXG4gKi9cblxuZnVuY3Rpb24gaXNTdHJvbmcoZGlyKSB7XG4gIHJldHVybiBkaXIgPT09IExUUiB8fCBkaXIgPT09IFJUTDtcbn1cbi8qKlxuICogR2V0IHN0cmluZyB2YWx1ZSB0byBiZSB1c2VkIGZvciBgZGlyYCBIVE1MIGF0dHJpYnV0ZSBvciBgZGlyZWN0aW9uYCBDU1NcbiAqIHByb3BlcnR5LlxuICovXG5cblxuZnVuY3Rpb24gZ2V0SFRNTERpcihkaXIpIHtcbiAgIWlzU3Ryb25nKGRpcikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdgZGlyYCBtdXN0IGJlIGEgc3Ryb25nIGRpcmVjdGlvbiB0byBiZSBjb252ZXJ0ZWQgdG8gSFRNTCBEaXJlY3Rpb24nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHJldHVybiBkaXIgPT09IExUUiA/ICdsdHInIDogJ3J0bCc7XG59XG4vKipcbiAqIEdldCBzdHJpbmcgdmFsdWUgdG8gYmUgdXNlZCBmb3IgYGRpcmAgSFRNTCBhdHRyaWJ1dGUgb3IgYGRpcmVjdGlvbmAgQ1NTXG4gKiBwcm9wZXJ0eSwgYnV0IHJldHVybnMgbnVsbCBpZiBgZGlyYCBoYXMgc2FtZSB2YWx1ZSBhcyBgb3RoZXJEaXJgLlxuICogYG51bGxgLlxuICovXG5cblxuZnVuY3Rpb24gZ2V0SFRNTERpcklmRGlmZmVyZW50KGRpciwgb3RoZXJEaXIpIHtcbiAgIWlzU3Ryb25nKGRpcikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdgZGlyYCBtdXN0IGJlIGEgc3Ryb25nIGRpcmVjdGlvbiB0byBiZSBjb252ZXJ0ZWQgdG8gSFRNTCBEaXJlY3Rpb24nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICFpc1N0cm9uZyhvdGhlckRpcikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdgb3RoZXJEaXJgIG11c3QgYmUgYSBzdHJvbmcgZGlyZWN0aW9uIHRvIGJlIGNvbnZlcnRlZCB0byBIVE1MIERpcmVjdGlvbicpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgcmV0dXJuIGRpciA9PT0gb3RoZXJEaXIgPyBudWxsIDogZ2V0SFRNTERpcihkaXIpO1xufSAvLyA9PSBHbG9iYWwgRGlyZWN0aW9uID09XG5cbi8qKlxuICogU2V0IHRoZSBnbG9iYWwgZGlyZWN0aW9uLlxuICovXG5cblxuZnVuY3Rpb24gc2V0R2xvYmFsRGlyKGRpcikge1xuICBnbG9iYWxEaXIgPSBkaXI7XG59XG4vKipcbiAqIEluaXRpYWxpemUgdGhlIGdsb2JhbCBkaXJlY3Rpb25cbiAqL1xuXG5cbmZ1bmN0aW9uIGluaXRHbG9iYWxEaXIoKSB7XG4gIHNldEdsb2JhbERpcihMVFIpO1xufVxuLyoqXG4gKiBHZXQgdGhlIGdsb2JhbCBkaXJlY3Rpb25cbiAqL1xuXG5cbmZ1bmN0aW9uIGdldEdsb2JhbERpcigpIHtcbiAgaWYgKCFnbG9iYWxEaXIpIHtcbiAgICB0aGlzLmluaXRHbG9iYWxEaXIoKTtcbiAgfVxuXG4gICFnbG9iYWxEaXIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdHbG9iYWwgZGlyZWN0aW9uIG5vdCBzZXQuJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICByZXR1cm4gZ2xvYmFsRGlyO1xufVxuXG52YXIgVW5pY29kZUJpZGlEaXJlY3Rpb24gPSB7XG4gIC8vIFZhbHVlc1xuICBORVVUUkFMOiBORVVUUkFMLFxuICBMVFI6IExUUixcbiAgUlRMOiBSVEwsXG4gIC8vIEhlbHBlcnNcbiAgaXNTdHJvbmc6IGlzU3Ryb25nLFxuICBnZXRIVE1MRGlyOiBnZXRIVE1MRGlyLFxuICBnZXRIVE1MRGlySWZEaWZmZXJlbnQ6IGdldEhUTUxEaXJJZkRpZmZlcmVudCxcbiAgLy8gR2xvYmFsIERpcmVjdGlvblxuICBzZXRHbG9iYWxEaXI6IHNldEdsb2JhbERpcixcbiAgaW5pdEdsb2JhbERpcjogaW5pdEdsb2JhbERpcixcbiAgZ2V0R2xvYmFsRGlyOiBnZXRHbG9iYWxEaXJcbn07XG5tb2R1bGUuZXhwb3J0cyA9IFVuaWNvZGVCaWRpRGlyZWN0aW9uOyJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJyZXF1aXJlIiwiTkVVVFJBTCIsIkxUUiIsIlJUTCIsImdsb2JhbERpciIsImlzU3Ryb25nIiwiZGlyIiwiZ2V0SFRNTERpciIsInByb2Nlc3MiLCJnZXRIVE1MRGlySWZEaWZmZXJlbnQiLCJvdGhlckRpciIsInNldEdsb2JhbERpciIsImluaXRHbG9iYWxEaXIiLCJnZXRHbG9iYWxEaXIiLCJVbmljb2RlQmlkaURpcmVjdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiDirection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiService.js":
/*!*****************************************************!*\
  !*** ./node_modules/fbjs/lib/UnicodeBidiService.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */ /**\n * Stateful API for text direction detection\n *\n * This class can be used in applications where you need to detect the\n * direction of a sequence of text blocks, where each direction shall be used\n * as the fallback direction for the next one.\n *\n * NOTE: A default direction, if not provided, is set based on the global\n *       direction, as defined by `UnicodeBidiDirection`.\n *\n * == Example ==\n * ```\n * var UnicodeBidiService = require('UnicodeBidiService');\n *\n * var bidiService = new UnicodeBidiService();\n *\n * ...\n *\n * bidiService.reset();\n * for (var para in paragraphs) {\n *   var dir = bidiService.getDirection(para);\n *   ...\n * }\n * ```\n *\n * Part of our implementation of Unicode Bidirectional Algorithm (UBA)\n * Unicode Standard Annex #9 (UAX9)\n * http://www.unicode.org/reports/tr9/\n */ \nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nvar UnicodeBidi = __webpack_require__(/*! ./UnicodeBidi */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidi.js\");\nvar UnicodeBidiDirection = __webpack_require__(/*! ./UnicodeBidiDirection */ \"(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiDirection.js\");\nvar invariant = __webpack_require__(/*! ./invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar UnicodeBidiService = /*#__PURE__*/ function() {\n    /**\n   * Stateful class for paragraph direction detection\n   *\n   * @param defaultDir  Default direction of the service\n   */ function UnicodeBidiService(defaultDir) {\n        _defineProperty(this, \"_defaultDir\", void 0);\n        _defineProperty(this, \"_lastDir\", void 0);\n        if (!defaultDir) {\n            defaultDir = UnicodeBidiDirection.getGlobalDir();\n        } else {\n            !UnicodeBidiDirection.isStrong(defaultDir) ?  true ? invariant(false, \"Default direction must be a strong direction (LTR or RTL)\") : 0 : void 0;\n        }\n        this._defaultDir = defaultDir;\n        this.reset();\n    }\n    /**\n   * Reset the internal state\n   *\n   * Instead of creating a new instance, you can just reset() your instance\n   * everytime you start a new loop.\n   */ var _proto = UnicodeBidiService.prototype;\n    _proto.reset = function reset() {\n        this._lastDir = this._defaultDir;\n    };\n    /**\n   * Returns the direction of a block of text, and remembers it as the\n   * fall-back direction for the next paragraph.\n   *\n   * @param str  A text block, e.g. paragraph, table cell, tag\n   * @return     The resolved direction\n   */ _proto.getDirection = function getDirection(str) {\n        this._lastDir = UnicodeBidi.getDirection(str, this._lastDir);\n        return this._lastDir;\n    };\n    return UnicodeBidiService;\n}();\nmodule.exports = UnicodeBidiService;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9Vbmljb2RlQmlkaVNlcnZpY2UuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0NBUUMsR0FFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQTRCQyxHQUNEO0FBRUEsU0FBU0EsZ0JBQWdCQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsS0FBSztJQUFJLElBQUlELE9BQU9ELEtBQUs7UUFBRUcsT0FBT0MsY0FBYyxDQUFDSixLQUFLQyxLQUFLO1lBQUVDLE9BQU9BO1lBQU9HLFlBQVk7WUFBTUMsY0FBYztZQUFNQyxVQUFVO1FBQUs7SUFBSSxPQUFPO1FBQUVQLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHQztJQUFPO0lBQUUsT0FBT0Y7QUFBSztBQUVoTixJQUFJUSxjQUFjQyxtQkFBT0EsQ0FBQyxpRkFBZTtBQUV6QyxJQUFJQyx1QkFBdUJELG1CQUFPQSxDQUFDLG1HQUF3QjtBQUUzRCxJQUFJRSxZQUFZRixtQkFBT0EsQ0FBQyw2RUFBYTtBQUVyQyxJQUFJRyxxQkFDSixXQUFXLEdBQ1g7SUFDRTs7OztHQUlDLEdBQ0QsU0FBU0EsbUJBQW1CQyxVQUFVO1FBQ3BDZCxnQkFBZ0IsSUFBSSxFQUFFLGVBQWUsS0FBSztRQUUxQ0EsZ0JBQWdCLElBQUksRUFBRSxZQUFZLEtBQUs7UUFFdkMsSUFBSSxDQUFDYyxZQUFZO1lBQ2ZBLGFBQWFILHFCQUFxQkksWUFBWTtRQUNoRCxPQUFPO1lBQ0wsQ0FBQ0oscUJBQXFCSyxRQUFRLENBQUNGLGNBQWNHLEtBQXFDLEdBQUdMLFVBQVUsT0FBTywrREFBK0RBLENBQWdCLEdBQUcsS0FBSztRQUMvTDtRQUVBLElBQUksQ0FBQ00sV0FBVyxHQUFHSjtRQUNuQixJQUFJLENBQUNLLEtBQUs7SUFDWjtJQUNBOzs7OztHQUtDLEdBR0QsSUFBSUMsU0FBU1AsbUJBQW1CUSxTQUFTO0lBRXpDRCxPQUFPRCxLQUFLLEdBQUcsU0FBU0E7UUFDdEIsSUFBSSxDQUFDRyxRQUFRLEdBQUcsSUFBSSxDQUFDSixXQUFXO0lBQ2xDO0lBQ0E7Ozs7OztHQU1DLEdBR0RFLE9BQU9HLFlBQVksR0FBRyxTQUFTQSxhQUFhQyxHQUFHO1FBQzdDLElBQUksQ0FBQ0YsUUFBUSxHQUFHYixZQUFZYyxZQUFZLENBQUNDLEtBQUssSUFBSSxDQUFDRixRQUFRO1FBQzNELE9BQU8sSUFBSSxDQUFDQSxRQUFRO0lBQ3RCO0lBRUEsT0FBT1Q7QUFDVDtBQUVBWSxPQUFPQyxPQUFPLEdBQUdiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9Vbmljb2RlQmlkaVNlcnZpY2UuanM/YzJlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKipcbiAqIFN0YXRlZnVsIEFQSSBmb3IgdGV4dCBkaXJlY3Rpb24gZGV0ZWN0aW9uXG4gKlxuICogVGhpcyBjbGFzcyBjYW4gYmUgdXNlZCBpbiBhcHBsaWNhdGlvbnMgd2hlcmUgeW91IG5lZWQgdG8gZGV0ZWN0IHRoZVxuICogZGlyZWN0aW9uIG9mIGEgc2VxdWVuY2Ugb2YgdGV4dCBibG9ja3MsIHdoZXJlIGVhY2ggZGlyZWN0aW9uIHNoYWxsIGJlIHVzZWRcbiAqIGFzIHRoZSBmYWxsYmFjayBkaXJlY3Rpb24gZm9yIHRoZSBuZXh0IG9uZS5cbiAqXG4gKiBOT1RFOiBBIGRlZmF1bHQgZGlyZWN0aW9uLCBpZiBub3QgcHJvdmlkZWQsIGlzIHNldCBiYXNlZCBvbiB0aGUgZ2xvYmFsXG4gKiAgICAgICBkaXJlY3Rpb24sIGFzIGRlZmluZWQgYnkgYFVuaWNvZGVCaWRpRGlyZWN0aW9uYC5cbiAqXG4gKiA9PSBFeGFtcGxlID09XG4gKiBgYGBcbiAqIHZhciBVbmljb2RlQmlkaVNlcnZpY2UgPSByZXF1aXJlKCdVbmljb2RlQmlkaVNlcnZpY2UnKTtcbiAqXG4gKiB2YXIgYmlkaVNlcnZpY2UgPSBuZXcgVW5pY29kZUJpZGlTZXJ2aWNlKCk7XG4gKlxuICogLi4uXG4gKlxuICogYmlkaVNlcnZpY2UucmVzZXQoKTtcbiAqIGZvciAodmFyIHBhcmEgaW4gcGFyYWdyYXBocykge1xuICogICB2YXIgZGlyID0gYmlkaVNlcnZpY2UuZ2V0RGlyZWN0aW9uKHBhcmEpO1xuICogICAuLi5cbiAqIH1cbiAqIGBgYFxuICpcbiAqIFBhcnQgb2Ygb3VyIGltcGxlbWVudGF0aW9uIG9mIFVuaWNvZGUgQmlkaXJlY3Rpb25hbCBBbGdvcml0aG0gKFVCQSlcbiAqIFVuaWNvZGUgU3RhbmRhcmQgQW5uZXggIzkgKFVBWDkpXG4gKiBodHRwOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHI5L1xuICovXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBVbmljb2RlQmlkaSA9IHJlcXVpcmUoXCIuL1VuaWNvZGVCaWRpXCIpO1xuXG52YXIgVW5pY29kZUJpZGlEaXJlY3Rpb24gPSByZXF1aXJlKFwiLi9Vbmljb2RlQmlkaURpcmVjdGlvblwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcblxudmFyIFVuaWNvZGVCaWRpU2VydmljZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBTdGF0ZWZ1bCBjbGFzcyBmb3IgcGFyYWdyYXBoIGRpcmVjdGlvbiBkZXRlY3Rpb25cbiAgICpcbiAgICogQHBhcmFtIGRlZmF1bHREaXIgIERlZmF1bHQgZGlyZWN0aW9uIG9mIHRoZSBzZXJ2aWNlXG4gICAqL1xuICBmdW5jdGlvbiBVbmljb2RlQmlkaVNlcnZpY2UoZGVmYXVsdERpcikge1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9kZWZhdWx0RGlyXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfbGFzdERpclwiLCB2b2lkIDApO1xuXG4gICAgaWYgKCFkZWZhdWx0RGlyKSB7XG4gICAgICBkZWZhdWx0RGlyID0gVW5pY29kZUJpZGlEaXJlY3Rpb24uZ2V0R2xvYmFsRGlyKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICFVbmljb2RlQmlkaURpcmVjdGlvbi5pc1N0cm9uZyhkZWZhdWx0RGlyKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0RlZmF1bHQgZGlyZWN0aW9uIG11c3QgYmUgYSBzdHJvbmcgZGlyZWN0aW9uIChMVFIgb3IgUlRMKScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB9XG5cbiAgICB0aGlzLl9kZWZhdWx0RGlyID0gZGVmYXVsdERpcjtcbiAgICB0aGlzLnJlc2V0KCk7XG4gIH1cbiAgLyoqXG4gICAqIFJlc2V0IHRoZSBpbnRlcm5hbCBzdGF0ZVxuICAgKlxuICAgKiBJbnN0ZWFkIG9mIGNyZWF0aW5nIGEgbmV3IGluc3RhbmNlLCB5b3UgY2FuIGp1c3QgcmVzZXQoKSB5b3VyIGluc3RhbmNlXG4gICAqIGV2ZXJ5dGltZSB5b3Ugc3RhcnQgYSBuZXcgbG9vcC5cbiAgICovXG5cblxuICB2YXIgX3Byb3RvID0gVW5pY29kZUJpZGlTZXJ2aWNlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgICB0aGlzLl9sYXN0RGlyID0gdGhpcy5fZGVmYXVsdERpcjtcbiAgfTtcbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGRpcmVjdGlvbiBvZiBhIGJsb2NrIG9mIHRleHQsIGFuZCByZW1lbWJlcnMgaXQgYXMgdGhlXG4gICAqIGZhbGwtYmFjayBkaXJlY3Rpb24gZm9yIHRoZSBuZXh0IHBhcmFncmFwaC5cbiAgICpcbiAgICogQHBhcmFtIHN0ciAgQSB0ZXh0IGJsb2NrLCBlLmcuIHBhcmFncmFwaCwgdGFibGUgY2VsbCwgdGFnXG4gICAqIEByZXR1cm4gICAgIFRoZSByZXNvbHZlZCBkaXJlY3Rpb25cbiAgICovXG5cblxuICBfcHJvdG8uZ2V0RGlyZWN0aW9uID0gZnVuY3Rpb24gZ2V0RGlyZWN0aW9uKHN0cikge1xuICAgIHRoaXMuX2xhc3REaXIgPSBVbmljb2RlQmlkaS5nZXREaXJlY3Rpb24oc3RyLCB0aGlzLl9sYXN0RGlyKTtcbiAgICByZXR1cm4gdGhpcy5fbGFzdERpcjtcbiAgfTtcblxuICByZXR1cm4gVW5pY29kZUJpZGlTZXJ2aWNlO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVuaWNvZGVCaWRpU2VydmljZTsiXSwibmFtZXMiOlsiX2RlZmluZVByb3BlcnR5Iiwib2JqIiwia2V5IiwidmFsdWUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIlVuaWNvZGVCaWRpIiwicmVxdWlyZSIsIlVuaWNvZGVCaWRpRGlyZWN0aW9uIiwiaW52YXJpYW50IiwiVW5pY29kZUJpZGlTZXJ2aWNlIiwiZGVmYXVsdERpciIsImdldEdsb2JhbERpciIsImlzU3Ryb25nIiwicHJvY2VzcyIsIl9kZWZhdWx0RGlyIiwicmVzZXQiLCJfcHJvdG8iLCJwcm90b3R5cGUiLCJfbGFzdERpciIsImdldERpcmVjdGlvbiIsInN0ciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/UnicodeBidiService.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/UnicodeUtils.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ /**\n * Unicode-enabled replacesments for basic String functions.\n *\n * All the functions in this module assume that the input string is a valid\n * UTF-16 encoding of a Unicode sequence. If it's not the case, the behavior\n * will be undefined.\n *\n * WARNING: Since this module is typechecks-enforced, you may find new bugs\n * when replacing normal String functions with ones provided here.\n */ \nvar invariant = __webpack_require__(/*! ./invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\"); // These two ranges are consecutive so anything in [HIGH_START, LOW_END] is a\n// surrogate code unit.\nvar SURROGATE_HIGH_START = 0xD800;\nvar SURROGATE_HIGH_END = 0xDBFF;\nvar SURROGATE_LOW_START = 0xDC00;\nvar SURROGATE_LOW_END = 0xDFFF;\nvar SURROGATE_UNITS_REGEX = /[\\uD800-\\uDFFF]/;\n/**\n * @param {number} codeUnit   A Unicode code-unit, in range [0, 0x10FFFF]\n * @return {boolean}          Whether code-unit is in a surrogate (hi/low) range\n */ function isCodeUnitInSurrogateRange(codeUnit) {\n    return SURROGATE_HIGH_START <= codeUnit && codeUnit <= SURROGATE_LOW_END;\n}\n/**\n * Returns whether the two characters starting at `index` form a surrogate pair.\n * For example, given the string s = \"\\uD83D\\uDE0A\", (s, 0) returns true and\n * (s, 1) returns false.\n *\n * @param {string} str\n * @param {number} index\n * @return {boolean}\n */ function isSurrogatePair(str, index) {\n    !(0 <= index && index < str.length) ?  true ? invariant(false, \"isSurrogatePair: Invalid index %s for string length %s.\", index, str.length) : 0 : void 0;\n    if (index + 1 === str.length) {\n        return false;\n    }\n    var first = str.charCodeAt(index);\n    var second = str.charCodeAt(index + 1);\n    return SURROGATE_HIGH_START <= first && first <= SURROGATE_HIGH_END && SURROGATE_LOW_START <= second && second <= SURROGATE_LOW_END;\n}\n/**\n * @param {string} str  Non-empty string\n * @return {boolean}    True if the input includes any surrogate code units\n */ function hasSurrogateUnit(str) {\n    return SURROGATE_UNITS_REGEX.test(str);\n}\n/**\n * Return the length of the original Unicode character at given position in the\n * String by looking into the UTF-16 code unit; that is equal to 1 for any\n * non-surrogate characters in BMP ([U+0000..U+D7FF] and [U+E000, U+FFFF]); and\n * returns 2 for the hi/low surrogates ([U+D800..U+DFFF]), which are in fact\n * representing non-BMP characters ([U+10000..U+10FFFF]).\n *\n * Examples:\n * - '\\u0020' => 1\n * - '\\u3020' => 1\n * - '\\uD835' => 2\n * - '\\uD835\\uDDEF' => 2\n * - '\\uDDEF' => 2\n *\n * @param {string} str  Non-empty string\n * @param {number} pos  Position in the string to look for one code unit\n * @return {number}      Number 1 or 2\n */ function getUTF16Length(str, pos) {\n    return 1 + isCodeUnitInSurrogateRange(str.charCodeAt(pos));\n}\n/**\n * Fully Unicode-enabled replacement for String#length\n *\n * @param {string} str  Valid Unicode string\n * @return {number}     The number of Unicode characters in the string\n */ function strlen(str) {\n    // Call the native functions if there's no surrogate char\n    if (!hasSurrogateUnit(str)) {\n        return str.length;\n    }\n    var len = 0;\n    for(var pos = 0; pos < str.length; pos += getUTF16Length(str, pos)){\n        len++;\n    }\n    return len;\n}\n/**\n * Fully Unicode-enabled replacement for String#substr()\n *\n * @param {string} str      Valid Unicode string\n * @param {number} start    Location in Unicode sequence to begin extracting\n * @param {?number} length  The number of Unicode characters to extract\n *                          (default: to the end of the string)\n * @return {string}         Extracted sub-string\n */ function substr(str, start, length) {\n    start = start || 0;\n    length = length === undefined ? Infinity : length || 0; // Call the native functions if there's no surrogate char\n    if (!hasSurrogateUnit(str)) {\n        return str.substr(start, length);\n    } // Obvious cases\n    var size = str.length;\n    if (size <= 0 || start > size || length <= 0) {\n        return \"\";\n    } // Find the actual starting position\n    var posA = 0;\n    if (start > 0) {\n        for(; start > 0 && posA < size; start--){\n            posA += getUTF16Length(str, posA);\n        }\n        if (posA >= size) {\n            return \"\";\n        }\n    } else if (start < 0) {\n        for(posA = size; start < 0 && 0 < posA; start++){\n            posA -= getUTF16Length(str, posA - 1);\n        }\n        if (posA < 0) {\n            posA = 0;\n        }\n    } // Find the actual ending position\n    var posB = size;\n    if (length < size) {\n        for(posB = posA; length > 0 && posB < size; length--){\n            posB += getUTF16Length(str, posB);\n        }\n    }\n    return str.substring(posA, posB);\n}\n/**\n * Fully Unicode-enabled replacement for String#substring()\n *\n * @param {string} str    Valid Unicode string\n * @param {number} start  Location in Unicode sequence to begin extracting\n * @param {?number} end   Location in Unicode sequence to end extracting\n *                        (default: end of the string)\n * @return {string}       Extracted sub-string\n */ function substring(str, start, end) {\n    start = start || 0;\n    end = end === undefined ? Infinity : end || 0;\n    if (start < 0) {\n        start = 0;\n    }\n    if (end < 0) {\n        end = 0;\n    }\n    var length = Math.abs(end - start);\n    start = start < end ? start : end;\n    return substr(str, start, length);\n}\n/**\n * Get a list of Unicode code-points from a String\n *\n * @param {string} str        Valid Unicode string\n * @return {array<number>}    A list of code-points in [0..0x10FFFF]\n */ function getCodePoints(str) {\n    var codePoints = [];\n    for(var pos = 0; pos < str.length; pos += getUTF16Length(str, pos)){\n        codePoints.push(str.codePointAt(pos));\n    }\n    return codePoints;\n}\nvar UnicodeUtils = {\n    getCodePoints: getCodePoints,\n    getUTF16Length: getUTF16Length,\n    hasSurrogateUnit: hasSurrogateUnit,\n    isCodeUnitInSurrogateRange: isCodeUnitInSurrogateRange,\n    isSurrogatePair: isSurrogatePair,\n    strlen: strlen,\n    substring: substring,\n    substr: substr\n};\nmodule.exports = UnicodeUtils;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/UnicodeUtils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/UserAgent.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ \nvar UserAgentData = __webpack_require__(/*! ./UserAgentData */ \"(app-pages-browser)/./node_modules/fbjs/lib/UserAgentData.js\");\nvar VersionRange = __webpack_require__(/*! ./VersionRange */ \"(app-pages-browser)/./node_modules/fbjs/lib/VersionRange.js\");\nvar mapObject = __webpack_require__(/*! ./mapObject */ \"(app-pages-browser)/./node_modules/fbjs/lib/mapObject.js\");\nvar memoizeStringOnly = __webpack_require__(/*! ./memoizeStringOnly */ \"(app-pages-browser)/./node_modules/fbjs/lib/memoizeStringOnly.js\");\n/**\n * Checks to see whether `name` and `version` satisfy `query`.\n *\n * @param {string} name Name of the browser, device, engine or platform\n * @param {?string} version Version of the browser, engine or platform\n * @param {string} query Query of form \"Name [range expression]\"\n * @param {?function} normalizer Optional pre-processor for range expression\n * @return {boolean}\n */ function compare(name, version, query, normalizer) {\n    // check for exact match with no version\n    if (name === query) {\n        return true;\n    } // check for non-matching names\n    if (!query.startsWith(name)) {\n        return false;\n    } // full comparison with version\n    var range = query.slice(name.length);\n    if (version) {\n        range = normalizer ? normalizer(range) : range;\n        return VersionRange.contains(range, version);\n    }\n    return false;\n}\n/**\n * Normalizes `version` by stripping any \"NT\" prefix, but only on the Windows\n * platform.\n *\n * Mimics the stripping performed by the `UserAgentWindowsPlatform` PHP class.\n *\n * @param {string} version\n * @return {string}\n */ function normalizePlatformVersion(version) {\n    if (UserAgentData.platformName === \"Windows\") {\n        return version.replace(/^\\s*NT/, \"\");\n    }\n    return version;\n}\n/**\n * Provides client-side access to the authoritative PHP-generated User Agent\n * information supplied by the server.\n */ var UserAgent = {\n    /**\n   * Check if the User Agent browser matches `query`.\n   *\n   * `query` should be a string like \"Chrome\" or \"Chrome > 33\".\n   *\n   * Valid browser names include:\n   *\n   * - ACCESS NetFront\n   * - AOL\n   * - Amazon Silk\n   * - Android\n   * - BlackBerry\n   * - BlackBerry PlayBook\n   * - Chrome\n   * - Chrome for iOS\n   * - Chrome frame\n   * - Facebook PHP SDK\n   * - Facebook for iOS\n   * - Firefox\n   * - IE\n   * - IE Mobile\n   * - Mobile Safari\n   * - Motorola Internet Browser\n   * - Nokia\n   * - Openwave Mobile Browser\n   * - Opera\n   * - Opera Mini\n   * - Opera Mobile\n   * - Safari\n   * - UIWebView\n   * - Unknown\n   * - webOS\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `BrowserDetector` class and\n   * related classes in the same file (see calls to `new UserAgentBrowser` here:\n   * https://fburl.com/50728104).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name [range expression]\"\n   * @return {boolean}\n   */ isBrowser: function isBrowser(query) {\n        return compare(UserAgentData.browserName, UserAgentData.browserFullVersion, query);\n    },\n    /**\n   * Check if the User Agent browser uses a 32 or 64 bit architecture.\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"32\" or \"64\".\n   * @return {boolean}\n   */ isBrowserArchitecture: function isBrowserArchitecture(query) {\n        return compare(UserAgentData.browserArchitecture, null, query);\n    },\n    /**\n   * Check if the User Agent device matches `query`.\n   *\n   * `query` should be a string like \"iPhone\" or \"iPad\".\n   *\n   * Valid device names include:\n   *\n   * - Kindle\n   * - Kindle Fire\n   * - Unknown\n   * - iPad\n   * - iPhone\n   * - iPod\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `DeviceDetector` class and\n   * related classes in the same file (see calls to `new UserAgentDevice` here:\n   * https://fburl.com/50728332).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name\"\n   * @return {boolean}\n   */ isDevice: function isDevice(query) {\n        return compare(UserAgentData.deviceName, null, query);\n    },\n    /**\n   * Check if the User Agent rendering engine matches `query`.\n   *\n   * `query` should be a string like \"WebKit\" or \"WebKit >= 537\".\n   *\n   * Valid engine names include:\n   *\n   * - Gecko\n   * - Presto\n   * - Trident\n   * - WebKit\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `RenderingEngineDetector`\n   * class related classes in the same file (see calls to `new\n   * UserAgentRenderingEngine` here: https://fburl.com/50728617).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name [range expression]\"\n   * @return {boolean}\n   */ isEngine: function isEngine(query) {\n        return compare(UserAgentData.engineName, UserAgentData.engineVersion, query);\n    },\n    /**\n   * Check if the User Agent platform matches `query`.\n   *\n   * `query` should be a string like \"Windows\" or \"iOS 5 - 6\".\n   *\n   * Valid platform names include:\n   *\n   * - Android\n   * - BlackBerry OS\n   * - Java ME\n   * - Linux\n   * - Mac OS X\n   * - Mac OS X Calendar\n   * - Mac OS X Internet Account\n   * - Symbian\n   * - SymbianOS\n   * - Windows\n   * - Windows Mobile\n   * - Windows Phone\n   * - iOS\n   * - iOS Facebook Integration Account\n   * - iOS Facebook Social Sharing UI\n   * - webOS\n   * - Chrome OS\n   * - etc...\n   *\n   * An authoritative list can be found in the PHP `PlatformDetector` class and\n   * related classes in the same file (see calls to `new UserAgentPlatform`\n   * here: https://fburl.com/50729226).\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"Name [range expression]\"\n   * @return {boolean}\n   */ isPlatform: function isPlatform(query) {\n        return compare(UserAgentData.platformName, UserAgentData.platformFullVersion, query, normalizePlatformVersion);\n    },\n    /**\n   * Check if the User Agent platform is a 32 or 64 bit architecture.\n   *\n   * @note Function results are memoized\n   *\n   * @param {string} query Query of the form \"32\" or \"64\".\n   * @return {boolean}\n   */ isPlatformArchitecture: function isPlatformArchitecture(query) {\n        return compare(UserAgentData.platformArchitecture, null, query);\n    }\n};\nmodule.exports = mapObject(UserAgent, memoizeStringOnly);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/UserAgent.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/UserAgentData.js":
/*!************************************************!*\
  !*** ./node_modules/fbjs/lib/UserAgentData.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ /**\n * Usage note:\n * This module makes a best effort to export the same data we would internally.\n * At Facebook we use a server-generated module that does the parsing and\n * exports the data for the client to use. We can't rely on a server-side\n * implementation in open source so instead we make use of an open source\n * library to do the heavy lifting and then make some adjustments as necessary.\n * It's likely there will be some differences. Some we can smooth over.\n * Others are going to be harder.\n */ \nvar UAParser = __webpack_require__(/*! ua-parser-js */ \"(app-pages-browser)/./node_modules/ua-parser-js/src/ua-parser.js\");\nvar UNKNOWN = \"Unknown\";\nvar PLATFORM_MAP = {\n    \"Mac OS\": \"Mac OS X\"\n};\n/**\n * Convert from UAParser platform name to what we expect.\n */ function convertPlatformName(name) {\n    return PLATFORM_MAP[name] || name;\n}\n/**\n * Get the version number in parts. This is very naive. We actually get major\n * version as a part of UAParser already, which is generally good enough, but\n * let's get the minor just in case.\n */ function getBrowserVersion(version) {\n    if (!version) {\n        return {\n            major: \"\",\n            minor: \"\"\n        };\n    }\n    var parts = version.split(\".\");\n    return {\n        major: parts[0],\n        minor: parts[1]\n    };\n}\n/**\n * Get the UA data fom UAParser and then convert it to the format we're\n * expecting for our APIS.\n */ var parser = new UAParser();\nvar results = parser.getResult(); // Do some conversion first.\nvar browserVersionData = getBrowserVersion(results.browser.version);\nvar uaData = {\n    browserArchitecture: results.cpu.architecture || UNKNOWN,\n    browserFullVersion: results.browser.version || UNKNOWN,\n    browserMinorVersion: browserVersionData.minor || UNKNOWN,\n    browserName: results.browser.name || UNKNOWN,\n    browserVersion: results.browser.major || UNKNOWN,\n    deviceName: results.device.model || UNKNOWN,\n    engineName: results.engine.name || UNKNOWN,\n    engineVersion: results.engine.version || UNKNOWN,\n    platformArchitecture: results.cpu.architecture || UNKNOWN,\n    platformName: convertPlatformName(results.os.name) || UNKNOWN,\n    platformVersion: results.os.version || UNKNOWN,\n    platformFullVersion: results.os.version || UNKNOWN\n};\nmodule.exports = uaData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9Vc2VyQWdlbnREYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Q0FNQyxHQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNEO0FBRUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUMsc0ZBQWM7QUFFckMsSUFBSUMsVUFBVTtBQUNkLElBQUlDLGVBQWU7SUFDakIsVUFBVTtBQUNaO0FBQ0E7O0NBRUMsR0FFRCxTQUFTQyxvQkFBb0JDLElBQUk7SUFDL0IsT0FBT0YsWUFBWSxDQUFDRSxLQUFLLElBQUlBO0FBQy9CO0FBQ0E7Ozs7Q0FJQyxHQUdELFNBQVNDLGtCQUFrQkMsT0FBTztJQUNoQyxJQUFJLENBQUNBLFNBQVM7UUFDWixPQUFPO1lBQ0xDLE9BQU87WUFDUEMsT0FBTztRQUNUO0lBQ0Y7SUFFQSxJQUFJQyxRQUFRSCxRQUFRSSxLQUFLLENBQUM7SUFDMUIsT0FBTztRQUNMSCxPQUFPRSxLQUFLLENBQUMsRUFBRTtRQUNmRCxPQUFPQyxLQUFLLENBQUMsRUFBRTtJQUNqQjtBQUNGO0FBQ0E7OztDQUdDLEdBR0QsSUFBSUUsU0FBUyxJQUFJWjtBQUNqQixJQUFJYSxVQUFVRCxPQUFPRSxTQUFTLElBQUksNEJBQTRCO0FBRTlELElBQUlDLHFCQUFxQlQsa0JBQWtCTyxRQUFRRyxPQUFPLENBQUNULE9BQU87QUFDbEUsSUFBSVUsU0FBUztJQUNYQyxxQkFBcUJMLFFBQVFNLEdBQUcsQ0FBQ0MsWUFBWSxJQUFJbEI7SUFDakRtQixvQkFBb0JSLFFBQVFHLE9BQU8sQ0FBQ1QsT0FBTyxJQUFJTDtJQUMvQ29CLHFCQUFxQlAsbUJBQW1CTixLQUFLLElBQUlQO0lBQ2pEcUIsYUFBYVYsUUFBUUcsT0FBTyxDQUFDWCxJQUFJLElBQUlIO0lBQ3JDc0IsZ0JBQWdCWCxRQUFRRyxPQUFPLENBQUNSLEtBQUssSUFBSU47SUFDekN1QixZQUFZWixRQUFRYSxNQUFNLENBQUNDLEtBQUssSUFBSXpCO0lBQ3BDMEIsWUFBWWYsUUFBUWdCLE1BQU0sQ0FBQ3hCLElBQUksSUFBSUg7SUFDbkM0QixlQUFlakIsUUFBUWdCLE1BQU0sQ0FBQ3RCLE9BQU8sSUFBSUw7SUFDekM2QixzQkFBc0JsQixRQUFRTSxHQUFHLENBQUNDLFlBQVksSUFBSWxCO0lBQ2xEOEIsY0FBYzVCLG9CQUFvQlMsUUFBUW9CLEVBQUUsQ0FBQzVCLElBQUksS0FBS0g7SUFDdERnQyxpQkFBaUJyQixRQUFRb0IsRUFBRSxDQUFDMUIsT0FBTyxJQUFJTDtJQUN2Q2lDLHFCQUFxQnRCLFFBQVFvQixFQUFFLENBQUMxQixPQUFPLElBQUlMO0FBQzdDO0FBQ0FrQyxPQUFPQyxPQUFPLEdBQUdwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvVXNlckFnZW50RGF0YS5qcz9iMzZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbi8qKlxuICogVXNhZ2Ugbm90ZTpcbiAqIFRoaXMgbW9kdWxlIG1ha2VzIGEgYmVzdCBlZmZvcnQgdG8gZXhwb3J0IHRoZSBzYW1lIGRhdGEgd2Ugd291bGQgaW50ZXJuYWxseS5cbiAqIEF0IEZhY2Vib29rIHdlIHVzZSBhIHNlcnZlci1nZW5lcmF0ZWQgbW9kdWxlIHRoYXQgZG9lcyB0aGUgcGFyc2luZyBhbmRcbiAqIGV4cG9ydHMgdGhlIGRhdGEgZm9yIHRoZSBjbGllbnQgdG8gdXNlLiBXZSBjYW4ndCByZWx5IG9uIGEgc2VydmVyLXNpZGVcbiAqIGltcGxlbWVudGF0aW9uIGluIG9wZW4gc291cmNlIHNvIGluc3RlYWQgd2UgbWFrZSB1c2Ugb2YgYW4gb3BlbiBzb3VyY2VcbiAqIGxpYnJhcnkgdG8gZG8gdGhlIGhlYXZ5IGxpZnRpbmcgYW5kIHRoZW4gbWFrZSBzb21lIGFkanVzdG1lbnRzIGFzIG5lY2Vzc2FyeS5cbiAqIEl0J3MgbGlrZWx5IHRoZXJlIHdpbGwgYmUgc29tZSBkaWZmZXJlbmNlcy4gU29tZSB3ZSBjYW4gc21vb3RoIG92ZXIuXG4gKiBPdGhlcnMgYXJlIGdvaW5nIHRvIGJlIGhhcmRlci5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVUFQYXJzZXIgPSByZXF1aXJlKFwidWEtcGFyc2VyLWpzXCIpO1xuXG52YXIgVU5LTk9XTiA9ICdVbmtub3duJztcbnZhciBQTEFURk9STV9NQVAgPSB7XG4gICdNYWMgT1MnOiAnTWFjIE9TIFgnXG59O1xuLyoqXG4gKiBDb252ZXJ0IGZyb20gVUFQYXJzZXIgcGxhdGZvcm0gbmFtZSB0byB3aGF0IHdlIGV4cGVjdC5cbiAqL1xuXG5mdW5jdGlvbiBjb252ZXJ0UGxhdGZvcm1OYW1lKG5hbWUpIHtcbiAgcmV0dXJuIFBMQVRGT1JNX01BUFtuYW1lXSB8fCBuYW1lO1xufVxuLyoqXG4gKiBHZXQgdGhlIHZlcnNpb24gbnVtYmVyIGluIHBhcnRzLiBUaGlzIGlzIHZlcnkgbmFpdmUuIFdlIGFjdHVhbGx5IGdldCBtYWpvclxuICogdmVyc2lvbiBhcyBhIHBhcnQgb2YgVUFQYXJzZXIgYWxyZWFkeSwgd2hpY2ggaXMgZ2VuZXJhbGx5IGdvb2QgZW5vdWdoLCBidXRcbiAqIGxldCdzIGdldCB0aGUgbWlub3IganVzdCBpbiBjYXNlLlxuICovXG5cblxuZnVuY3Rpb24gZ2V0QnJvd3NlclZlcnNpb24odmVyc2lvbikge1xuICBpZiAoIXZlcnNpb24pIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWFqb3I6ICcnLFxuICAgICAgbWlub3I6ICcnXG4gICAgfTtcbiAgfVxuXG4gIHZhciBwYXJ0cyA9IHZlcnNpb24uc3BsaXQoJy4nKTtcbiAgcmV0dXJuIHtcbiAgICBtYWpvcjogcGFydHNbMF0sXG4gICAgbWlub3I6IHBhcnRzWzFdXG4gIH07XG59XG4vKipcbiAqIEdldCB0aGUgVUEgZGF0YSBmb20gVUFQYXJzZXIgYW5kIHRoZW4gY29udmVydCBpdCB0byB0aGUgZm9ybWF0IHdlJ3JlXG4gKiBleHBlY3RpbmcgZm9yIG91ciBBUElTLlxuICovXG5cblxudmFyIHBhcnNlciA9IG5ldyBVQVBhcnNlcigpO1xudmFyIHJlc3VsdHMgPSBwYXJzZXIuZ2V0UmVzdWx0KCk7IC8vIERvIHNvbWUgY29udmVyc2lvbiBmaXJzdC5cblxudmFyIGJyb3dzZXJWZXJzaW9uRGF0YSA9IGdldEJyb3dzZXJWZXJzaW9uKHJlc3VsdHMuYnJvd3Nlci52ZXJzaW9uKTtcbnZhciB1YURhdGEgPSB7XG4gIGJyb3dzZXJBcmNoaXRlY3R1cmU6IHJlc3VsdHMuY3B1LmFyY2hpdGVjdHVyZSB8fCBVTktOT1dOLFxuICBicm93c2VyRnVsbFZlcnNpb246IHJlc3VsdHMuYnJvd3Nlci52ZXJzaW9uIHx8IFVOS05PV04sXG4gIGJyb3dzZXJNaW5vclZlcnNpb246IGJyb3dzZXJWZXJzaW9uRGF0YS5taW5vciB8fCBVTktOT1dOLFxuICBicm93c2VyTmFtZTogcmVzdWx0cy5icm93c2VyLm5hbWUgfHwgVU5LTk9XTixcbiAgYnJvd3NlclZlcnNpb246IHJlc3VsdHMuYnJvd3Nlci5tYWpvciB8fCBVTktOT1dOLFxuICBkZXZpY2VOYW1lOiByZXN1bHRzLmRldmljZS5tb2RlbCB8fCBVTktOT1dOLFxuICBlbmdpbmVOYW1lOiByZXN1bHRzLmVuZ2luZS5uYW1lIHx8IFVOS05PV04sXG4gIGVuZ2luZVZlcnNpb246IHJlc3VsdHMuZW5naW5lLnZlcnNpb24gfHwgVU5LTk9XTixcbiAgcGxhdGZvcm1BcmNoaXRlY3R1cmU6IHJlc3VsdHMuY3B1LmFyY2hpdGVjdHVyZSB8fCBVTktOT1dOLFxuICBwbGF0Zm9ybU5hbWU6IGNvbnZlcnRQbGF0Zm9ybU5hbWUocmVzdWx0cy5vcy5uYW1lKSB8fCBVTktOT1dOLFxuICBwbGF0Zm9ybVZlcnNpb246IHJlc3VsdHMub3MudmVyc2lvbiB8fCBVTktOT1dOLFxuICBwbGF0Zm9ybUZ1bGxWZXJzaW9uOiByZXN1bHRzLm9zLnZlcnNpb24gfHwgVU5LTk9XTlxufTtcbm1vZHVsZS5leHBvcnRzID0gdWFEYXRhOyJdLCJuYW1lcyI6WyJVQVBhcnNlciIsInJlcXVpcmUiLCJVTktOT1dOIiwiUExBVEZPUk1fTUFQIiwiY29udmVydFBsYXRmb3JtTmFtZSIsIm5hbWUiLCJnZXRCcm93c2VyVmVyc2lvbiIsInZlcnNpb24iLCJtYWpvciIsIm1pbm9yIiwicGFydHMiLCJzcGxpdCIsInBhcnNlciIsInJlc3VsdHMiLCJnZXRSZXN1bHQiLCJicm93c2VyVmVyc2lvbkRhdGEiLCJicm93c2VyIiwidWFEYXRhIiwiYnJvd3NlckFyY2hpdGVjdHVyZSIsImNwdSIsImFyY2hpdGVjdHVyZSIsImJyb3dzZXJGdWxsVmVyc2lvbiIsImJyb3dzZXJNaW5vclZlcnNpb24iLCJicm93c2VyTmFtZSIsImJyb3dzZXJWZXJzaW9uIiwiZGV2aWNlTmFtZSIsImRldmljZSIsIm1vZGVsIiwiZW5naW5lTmFtZSIsImVuZ2luZSIsImVuZ2luZVZlcnNpb24iLCJwbGF0Zm9ybUFyY2hpdGVjdHVyZSIsInBsYXRmb3JtTmFtZSIsIm9zIiwicGxhdGZvcm1WZXJzaW9uIiwicGxhdGZvcm1GdWxsVmVyc2lvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/UserAgentData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/VersionRange.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/VersionRange.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ \nvar invariant = __webpack_require__(/*! ./invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\nvar componentRegex = /\\./;\nvar orRegex = /\\|\\|/;\nvar rangeRegex = /\\s+\\-\\s+/;\nvar modifierRegex = /^(<=|<|=|>=|~>|~|>|)?\\s*(.+)/;\nvar numericRegex = /^(\\d*)(.*)/;\n/**\n * Splits input `range` on \"||\" and returns true if any subrange matches\n * `version`.\n *\n * @param {string} range\n * @param {string} version\n * @returns {boolean}\n */ function checkOrExpression(range, version) {\n    var expressions = range.split(orRegex);\n    if (expressions.length > 1) {\n        return expressions.some(function(range) {\n            return VersionRange.contains(range, version);\n        });\n    } else {\n        range = expressions[0].trim();\n        return checkRangeExpression(range, version);\n    }\n}\n/**\n * Splits input `range` on \" - \" (the surrounding whitespace is required) and\n * returns true if version falls between the two operands.\n *\n * @param {string} range\n * @param {string} version\n * @returns {boolean}\n */ function checkRangeExpression(range, version) {\n    var expressions = range.split(rangeRegex);\n    !(expressions.length > 0 && expressions.length <= 2) ?  true ? invariant(false, 'the \"-\" operator expects exactly 2 operands') : 0 : void 0;\n    if (expressions.length === 1) {\n        return checkSimpleExpression(expressions[0], version);\n    } else {\n        var startVersion = expressions[0], endVersion = expressions[1];\n        !(isSimpleVersion(startVersion) && isSimpleVersion(endVersion)) ?  true ? invariant(false, 'operands to the \"-\" operator must be simple (no modifiers)') : 0 : void 0;\n        return checkSimpleExpression(\">=\" + startVersion, version) && checkSimpleExpression(\"<=\" + endVersion, version);\n    }\n}\n/**\n * Checks if `range` matches `version`. `range` should be a \"simple\" range (ie.\n * not a compound range using the \" - \" or \"||\" operators).\n *\n * @param {string} range\n * @param {string} version\n * @returns {boolean}\n */ function checkSimpleExpression(range, version) {\n    range = range.trim();\n    if (range === \"\") {\n        return true;\n    }\n    var versionComponents = version.split(componentRegex);\n    var _getModifierAndCompon = getModifierAndComponents(range), modifier = _getModifierAndCompon.modifier, rangeComponents = _getModifierAndCompon.rangeComponents;\n    switch(modifier){\n        case \"<\":\n            return checkLessThan(versionComponents, rangeComponents);\n        case \"<=\":\n            return checkLessThanOrEqual(versionComponents, rangeComponents);\n        case \">=\":\n            return checkGreaterThanOrEqual(versionComponents, rangeComponents);\n        case \">\":\n            return checkGreaterThan(versionComponents, rangeComponents);\n        case \"~\":\n        case \"~>\":\n            return checkApproximateVersion(versionComponents, rangeComponents);\n        default:\n            return checkEqual(versionComponents, rangeComponents);\n    }\n}\n/**\n * Checks whether `a` is less than `b`.\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {boolean}\n */ function checkLessThan(a, b) {\n    return compareComponents(a, b) === -1;\n}\n/**\n * Checks whether `a` is less than or equal to `b`.\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {boolean}\n */ function checkLessThanOrEqual(a, b) {\n    var result = compareComponents(a, b);\n    return result === -1 || result === 0;\n}\n/**\n * Checks whether `a` is equal to `b`.\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {boolean}\n */ function checkEqual(a, b) {\n    return compareComponents(a, b) === 0;\n}\n/**\n * Checks whether `a` is greater than or equal to `b`.\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {boolean}\n */ function checkGreaterThanOrEqual(a, b) {\n    var result = compareComponents(a, b);\n    return result === 1 || result === 0;\n}\n/**\n * Checks whether `a` is greater than `b`.\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {boolean}\n */ function checkGreaterThan(a, b) {\n    return compareComponents(a, b) === 1;\n}\n/**\n * Checks whether `a` is \"reasonably close\" to `b` (as described in\n * https://www.npmjs.org/doc/misc/semver.html). For example, if `b` is \"1.3.1\"\n * then \"reasonably close\" is defined as \">= 1.3.1 and < 1.4\".\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {boolean}\n */ function checkApproximateVersion(a, b) {\n    var lowerBound = b.slice();\n    var upperBound = b.slice();\n    if (upperBound.length > 1) {\n        upperBound.pop();\n    }\n    var lastIndex = upperBound.length - 1;\n    var numeric = parseInt(upperBound[lastIndex], 10);\n    if (isNumber(numeric)) {\n        upperBound[lastIndex] = numeric + 1 + \"\";\n    }\n    return checkGreaterThanOrEqual(a, lowerBound) && checkLessThan(a, upperBound);\n}\n/**\n * Extracts the optional modifier (<, <=, =, >=, >, ~, ~>) and version\n * components from `range`.\n *\n * For example, given `range` \">= 1.2.3\" returns an object with a `modifier` of\n * `\">=\"` and `components` of `[1, 2, 3]`.\n *\n * @param {string} range\n * @returns {object}\n */ function getModifierAndComponents(range) {\n    var rangeComponents = range.split(componentRegex);\n    var matches = rangeComponents[0].match(modifierRegex);\n    !matches ?  true ? invariant(false, \"expected regex to match but it did not\") : 0 : void 0;\n    return {\n        modifier: matches[1],\n        rangeComponents: [\n            matches[2]\n        ].concat(rangeComponents.slice(1))\n    };\n}\n/**\n * Determines if `number` is a number.\n *\n * @param {mixed} number\n * @returns {boolean}\n */ function isNumber(number) {\n    return !isNaN(number) && isFinite(number);\n}\n/**\n * Tests whether `range` is a \"simple\" version number without any modifiers\n * (\">\", \"~\" etc).\n *\n * @param {string} range\n * @returns {boolean}\n */ function isSimpleVersion(range) {\n    return !getModifierAndComponents(range).modifier;\n}\n/**\n * Zero-pads array `array` until it is at least `length` long.\n *\n * @param {array} array\n * @param {number} length\n */ function zeroPad(array, length) {\n    for(var i = array.length; i < length; i++){\n        array[i] = \"0\";\n    }\n}\n/**\n * Normalizes `a` and `b` in preparation for comparison by doing the following:\n *\n * - zero-pads `a` and `b`\n * - marks any \"x\", \"X\" or \"*\" component in `b` as equivalent by zero-ing it out\n *   in both `a` and `b`\n * - marks any final \"*\" component in `b` as a greedy wildcard by zero-ing it\n *   and all of its successors in `a`\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {array<array<string>>}\n */ function normalizeVersions(a, b) {\n    a = a.slice();\n    b = b.slice();\n    zeroPad(a, b.length); // mark \"x\" and \"*\" components as equal\n    for(var i = 0; i < b.length; i++){\n        var matches = b[i].match(/^[x*]$/i);\n        if (matches) {\n            b[i] = a[i] = \"0\"; // final \"*\" greedily zeros all remaining components\n            if (matches[0] === \"*\" && i === b.length - 1) {\n                for(var j = i; j < a.length; j++){\n                    a[j] = \"0\";\n                }\n            }\n        }\n    }\n    zeroPad(b, a.length);\n    return [\n        a,\n        b\n    ];\n}\n/**\n * Returns the numerical -- not the lexicographical -- ordering of `a` and `b`.\n *\n * For example, `10-alpha` is greater than `2-beta`.\n *\n * @param {string} a\n * @param {string} b\n * @returns {number} -1, 0 or 1 to indicate whether `a` is less than, equal to,\n * or greater than `b`, respectively\n */ function compareNumeric(a, b) {\n    var aPrefix = a.match(numericRegex)[1];\n    var bPrefix = b.match(numericRegex)[1];\n    var aNumeric = parseInt(aPrefix, 10);\n    var bNumeric = parseInt(bPrefix, 10);\n    if (isNumber(aNumeric) && isNumber(bNumeric) && aNumeric !== bNumeric) {\n        return compare(aNumeric, bNumeric);\n    } else {\n        return compare(a, b);\n    }\n}\n/**\n * Returns the ordering of `a` and `b`.\n *\n * @param {string|number} a\n * @param {string|number} b\n * @returns {number} -1, 0 or 1 to indicate whether `a` is less than, equal to,\n * or greater than `b`, respectively\n */ function compare(a, b) {\n    !(typeof a === typeof b) ?  true ? invariant(false, '\"a\" and \"b\" must be of the same type') : 0 : void 0;\n    if (a > b) {\n        return 1;\n    } else if (a < b) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n/**\n * Compares arrays of version components.\n *\n * @param {array<string>} a\n * @param {array<string>} b\n * @returns {number} -1, 0 or 1 to indicate whether `a` is less than, equal to,\n * or greater than `b`, respectively\n */ function compareComponents(a, b) {\n    var _normalizeVersions = normalizeVersions(a, b), aNormalized = _normalizeVersions[0], bNormalized = _normalizeVersions[1];\n    for(var i = 0; i < bNormalized.length; i++){\n        var result = compareNumeric(aNormalized[i], bNormalized[i]);\n        if (result) {\n            return result;\n        }\n    }\n    return 0;\n}\nvar VersionRange = {\n    /**\n   * Checks whether `version` satisfies the `range` specification.\n   *\n   * We support a subset of the expressions defined in\n   * https://www.npmjs.org/doc/misc/semver.html:\n   *\n   *    version   Must match version exactly\n   *    =version  Same as just version\n   *    >version  Must be greater than version\n   *    >=version Must be greater than or equal to version\n   *    <version  Must be less than version\n   *    <=version Must be less than or equal to version\n   *    ~version  Must be at least version, but less than the next significant\n   *              revision above version:\n   *              \"~1.2.3\" is equivalent to \">= 1.2.3 and < 1.3\"\n   *    ~>version Equivalent to ~version\n   *    1.2.x     Must match \"1.2.x\", where \"x\" is a wildcard that matches\n   *              anything\n   *    1.2.*     Similar to \"1.2.x\", but \"*\" in the trailing position is a\n   *              \"greedy\" wildcard, so will match any number of additional\n   *              components:\n   *              \"1.2.*\" will match \"1.2.1\", \"1.2.1.1\", \"1.2.1.1.1\" etc\n   *    *         Any version\n   *    \"\"        (Empty string) Same as *\n   *    v1 - v2   Equivalent to \">= v1 and <= v2\"\n   *    r1 || r2  Passes if either r1 or r2 are satisfied\n   *\n   * @param {string} range\n   * @param {string} version\n   * @returns {boolean}\n   */ contains: function contains(range, version) {\n        return checkOrExpression(range.trim(), version.trim());\n    }\n};\nmodule.exports = VersionRange;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/VersionRange.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/camelize.js":
/*!*******************************************!*\
  !*** ./node_modules/fbjs/lib/camelize.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var _hyphenPattern = /-(.)/g;\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */ function camelize(string) {\n    return string.replace(_hyphenPattern, function(_, character) {\n        return character.toUpperCase();\n    });\n}\nmodule.exports = camelize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jYW1lbGl6ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7O0NBT0MsR0FDRCxJQUFJQSxpQkFBaUI7QUFDckI7Ozs7Ozs7O0NBUUMsR0FFRCxTQUFTQyxTQUFTQyxNQUFNO0lBQ3RCLE9BQU9BLE9BQU9DLE9BQU8sQ0FBQ0gsZ0JBQWdCLFNBQVVJLENBQUMsRUFBRUMsU0FBUztRQUMxRCxPQUFPQSxVQUFVQyxXQUFXO0lBQzlCO0FBQ0Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvY2FtZWxpemUuanM/NzE4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG52YXIgX2h5cGhlblBhdHRlcm4gPSAvLSguKS9nO1xuLyoqXG4gKiBDYW1lbGNhc2VzIGEgaHlwaGVuYXRlZCBzdHJpbmcsIGZvciBleGFtcGxlOlxuICpcbiAqICAgPiBjYW1lbGl6ZSgnYmFja2dyb3VuZC1jb2xvcicpXG4gKiAgIDwgXCJiYWNrZ3JvdW5kQ29sb3JcIlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBjYW1lbGl6ZShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKF9oeXBoZW5QYXR0ZXJuLCBmdW5jdGlvbiAoXywgY2hhcmFjdGVyKSB7XG4gICAgcmV0dXJuIGNoYXJhY3Rlci50b1VwcGVyQ2FzZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjYW1lbGl6ZTsiXSwibmFtZXMiOlsiX2h5cGhlblBhdHRlcm4iLCJjYW1lbGl6ZSIsInN0cmluZyIsInJlcGxhY2UiLCJfIiwiY2hhcmFjdGVyIiwidG9VcHBlckNhc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/camelize.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/containsNode.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/containsNode.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */ var isTextNode = __webpack_require__(/*! ./isTextNode */ \"(app-pages-browser)/./node_modules/fbjs/lib/isTextNode.js\");\n/*eslint-disable no-bitwise */ /**\n * Checks if a given DOM node contains or is another DOM node.\n */ function containsNode(outerNode, innerNode) {\n    if (!outerNode || !innerNode) {\n        return false;\n    } else if (outerNode === innerNode) {\n        return true;\n    } else if (isTextNode(outerNode)) {\n        return false;\n    } else if (isTextNode(innerNode)) {\n        return containsNode(outerNode, innerNode.parentNode);\n    } else if (\"contains\" in outerNode) {\n        return outerNode.contains(innerNode);\n    } else if (outerNode.compareDocumentPosition) {\n        return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n    } else {\n        return false;\n    }\n}\nmodule.exports = containsNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jb250YWluc05vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7OztDQU9DLEdBQ0QsSUFBSUEsYUFBYUMsbUJBQU9BLENBQUMsK0VBQWM7QUFDdkMsNEJBQTRCLEdBRTVCOztDQUVDLEdBR0QsU0FBU0MsYUFBYUMsU0FBUyxFQUFFQyxTQUFTO0lBQ3hDLElBQUksQ0FBQ0QsYUFBYSxDQUFDQyxXQUFXO1FBQzVCLE9BQU87SUFDVCxPQUFPLElBQUlELGNBQWNDLFdBQVc7UUFDbEMsT0FBTztJQUNULE9BQU8sSUFBSUosV0FBV0csWUFBWTtRQUNoQyxPQUFPO0lBQ1QsT0FBTyxJQUFJSCxXQUFXSSxZQUFZO1FBQ2hDLE9BQU9GLGFBQWFDLFdBQVdDLFVBQVVDLFVBQVU7SUFDckQsT0FBTyxJQUFJLGNBQWNGLFdBQVc7UUFDbEMsT0FBT0EsVUFBVUcsUUFBUSxDQUFDRjtJQUM1QixPQUFPLElBQUlELFVBQVVJLHVCQUF1QixFQUFFO1FBQzVDLE9BQU8sQ0FBQyxDQUFFSixDQUFBQSxVQUFVSSx1QkFBdUIsQ0FBQ0gsYUFBYSxFQUFDO0lBQzVELE9BQU87UUFDTCxPQUFPO0lBQ1Q7QUFDRjtBQUVBSSxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jb250YWluc05vZGUuanM/ZTdjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xudmFyIGlzVGV4dE5vZGUgPSByZXF1aXJlKFwiLi9pc1RleHROb2RlXCIpO1xuLyplc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gRE9NIG5vZGUgY29udGFpbnMgb3IgaXMgYW5vdGhlciBET00gbm9kZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZSkge1xuICBpZiAoIW91dGVyTm9kZSB8fCAhaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZSA9PT0gaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShvdXRlck5vZGUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUoaW5uZXJOb2RlKSkge1xuICAgIHJldHVybiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUucGFyZW50Tm9kZSk7XG4gIH0gZWxzZSBpZiAoJ2NvbnRhaW5zJyBpbiBvdXRlck5vZGUpIHtcbiAgICByZXR1cm4gb3V0ZXJOb2RlLmNvbnRhaW5zKGlubmVyTm9kZSk7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKSB7XG4gICAgcmV0dXJuICEhKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihpbm5lck5vZGUpICYgMTYpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5zTm9kZTsiXSwibmFtZXMiOlsiaXNUZXh0Tm9kZSIsInJlcXVpcmUiLCJjb250YWluc05vZGUiLCJvdXRlck5vZGUiLCJpbm5lck5vZGUiLCJwYXJlbnROb2RlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/containsNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/createArrayFromMixed.js":
/*!*******************************************************!*\
  !*** ./node_modules/fbjs/lib/createArrayFromMixed.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var invariant = __webpack_require__(/*! ./invariant */ \"(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\");\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */ function toArray(obj) {\n    var length = obj.length; // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n    // in old versions of Safari).\n    !(!Array.isArray(obj) && (typeof obj === \"object\" || typeof obj === \"function\")) ?  true ? invariant(false, \"toArray: Array-like object expected\") : 0 : void 0;\n    !(typeof length === \"number\") ?  true ? invariant(false, \"toArray: Object needs a length property\") : 0 : void 0;\n    !(length === 0 || length - 1 in obj) ?  true ? invariant(false, \"toArray: Object should have keys for indices\") : 0 : void 0;\n    !(typeof obj.callee !== \"function\") ?  true ? invariant(false, \"toArray: Object can't be `arguments`. Use rest params \" + \"(function(...args) {}) or Array.from() instead.\") : 0 : void 0; // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n    // without method will throw during the slice call and skip straight to the\n    // fallback.\n    if (obj.hasOwnProperty) {\n        try {\n            return Array.prototype.slice.call(obj);\n        } catch (e) {}\n    } // Fall back to copying key by key. This assumes all keys have a value,\n    // so will not preserve sparsely populated inputs.\n    var ret = Array(length);\n    for(var ii = 0; ii < length; ii++){\n        ret[ii] = obj[ii];\n    }\n    return ret;\n}\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */ function hasArrayNature(obj) {\n    return !!obj && (typeof obj == \"object\" || typeof obj == \"function\") && // quacks like an array\n    \"length\" in obj && // not window\n    !(\"setInterval\" in obj) && // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != \"number\" && (Array.isArray(obj) || // arguments\n    \"callee\" in obj || // HTMLCollection/NodeList\n    \"item\" in obj);\n}\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */ function createArrayFromMixed(obj) {\n    if (!hasArrayNature(obj)) {\n        return [\n            obj\n        ];\n    } else if (Array.isArray(obj)) {\n        return obj.slice();\n    } else {\n        return toArray(obj);\n    }\n}\nmodule.exports = createArrayFromMixed;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jcmVhdGVBcnJheUZyb21NaXhlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7O0NBT0MsR0FDRCxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyw2RUFBYTtBQUNyQzs7Ozs7Ozs7Q0FRQyxHQUdELFNBQVNDLFFBQVFDLEdBQUc7SUFDbEIsSUFBSUMsU0FBU0QsSUFBSUMsTUFBTSxFQUFFLDRFQUE0RTtJQUNyRyw4QkFBOEI7SUFFOUIsQ0FBRSxFQUFDQyxNQUFNQyxPQUFPLENBQUNILFFBQVMsUUFBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsVUFBUyxDQUFDLElBQUtJLEtBQXFDLEdBQUdQLFVBQVUsT0FBTyx5Q0FBeUNBLENBQWdCLEdBQUcsS0FBSztJQUM3TSxDQUFFLFFBQU9JLFdBQVcsUUFBTyxJQUFLRyxLQUFxQyxHQUFHUCxVQUFVLE9BQU8sNkNBQTZDQSxDQUFnQixHQUFHLEtBQUs7SUFDOUosQ0FBRUksQ0FBQUEsV0FBVyxLQUFLQSxTQUFTLEtBQUtELEdBQUUsSUFBS0ksS0FBcUMsR0FBR1AsVUFBVSxPQUFPLGtEQUFrREEsQ0FBZ0IsR0FBRyxLQUFLO0lBQzFLLENBQUUsUUFBT0csSUFBSUssTUFBTSxLQUFLLFVBQVMsSUFBS0QsS0FBcUMsR0FBR1AsVUFBVSxPQUFPLDJEQUE0RCxxREFBcURBLENBQWdCLEdBQUcsS0FBSyxHQUFHLDBFQUEwRTtJQUNyVCwyRUFBMkU7SUFDM0UsWUFBWTtJQUVaLElBQUlHLElBQUlNLGNBQWMsRUFBRTtRQUN0QixJQUFJO1lBQ0YsT0FBT0osTUFBTUssU0FBUyxDQUFDQyxLQUFLLENBQUNDLElBQUksQ0FBQ1Q7UUFDcEMsRUFBRSxPQUFPVSxHQUFHLENBQ1o7SUFDRixFQUFFLHVFQUF1RTtJQUN6RSxrREFBa0Q7SUFHbEQsSUFBSUMsTUFBTVQsTUFBTUQ7SUFFaEIsSUFBSyxJQUFJVyxLQUFLLEdBQUdBLEtBQUtYLFFBQVFXLEtBQU07UUFDbENELEdBQUcsQ0FBQ0MsR0FBRyxHQUFHWixHQUFHLENBQUNZLEdBQUc7SUFDbkI7SUFFQSxPQUFPRDtBQUNUO0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FHRCxTQUFTRSxlQUFlYixHQUFHO0lBQ3pCLE9BQ0UsQ0FBQyxDQUFDQSxPQUNGLFFBQU9BLE9BQU8sWUFBWSxPQUFPQSxPQUFPLFVBQVMsS0FBTSx1QkFBdUI7SUFDOUUsWUFBWUEsT0FBTyxhQUFhO0lBQ2hDLENBQUUsa0JBQWlCQSxHQUFFLEtBQU0saURBQWlEO0lBQzVFLCtEQUErRDtJQUMvRCxPQUFPQSxJQUFJYyxRQUFRLElBQUksWUFDdkJaLENBQUFBLE1BQU1DLE9BQU8sQ0FBQ0gsUUFBUSxZQUFZO0lBQ2xDLFlBQVlBLE9BQU8sMEJBQTBCO0lBQzdDLFVBQVVBLEdBQUU7QUFFaEI7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQkMsR0FHRCxTQUFTZSxxQkFBcUJmLEdBQUc7SUFDL0IsSUFBSSxDQUFDYSxlQUFlYixNQUFNO1FBQ3hCLE9BQU87WUFBQ0E7U0FBSTtJQUNkLE9BQU8sSUFBSUUsTUFBTUMsT0FBTyxDQUFDSCxNQUFNO1FBQzdCLE9BQU9BLElBQUlRLEtBQUs7SUFDbEIsT0FBTztRQUNMLE9BQU9ULFFBQVFDO0lBQ2pCO0FBQ0Y7QUFFQWdCLE9BQU9DLE9BQU8sR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2NyZWF0ZUFycmF5RnJvbU1peGVkLmpzPzU2NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcbi8qKlxuICogQ29udmVydCBhcnJheS1saWtlIG9iamVjdHMgdG8gYXJyYXlzLlxuICpcbiAqIFRoaXMgQVBJIGFzc3VtZXMgdGhlIGNhbGxlciBrbm93cyB0aGUgY29udGVudHMgb2YgdGhlIGRhdGEgdHlwZS4gRm9yIGxlc3NcbiAqIHdlbGwgZGVmaW5lZCBpbnB1dHMgdXNlIGNyZWF0ZUFycmF5RnJvbU1peGVkLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fGZ1bmN0aW9ufGZpbGVsaXN0fSBvYmpcbiAqIEByZXR1cm4ge2FycmF5fVxuICovXG5cblxuZnVuY3Rpb24gdG9BcnJheShvYmopIHtcbiAgdmFyIGxlbmd0aCA9IG9iai5sZW5ndGg7IC8vIFNvbWUgYnJvd3NlcnMgYnVpbHRpbiBvYmplY3RzIGNhbiByZXBvcnQgdHlwZW9mICdmdW5jdGlvbicgKGUuZy4gTm9kZUxpc3RcbiAgLy8gaW4gb2xkIHZlcnNpb25zIG9mIFNhZmFyaSkuXG5cbiAgISghQXJyYXkuaXNBcnJheShvYmopICYmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyB8fCB0eXBlb2Ygb2JqID09PSAnZnVuY3Rpb24nKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICd0b0FycmF5OiBBcnJheS1saWtlIG9iamVjdCBleHBlY3RlZCcpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgISh0eXBlb2YgbGVuZ3RoID09PSAnbnVtYmVyJykgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICd0b0FycmF5OiBPYmplY3QgbmVlZHMgYSBsZW5ndGggcHJvcGVydHknKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICEobGVuZ3RoID09PSAwIHx8IGxlbmd0aCAtIDEgaW4gb2JqKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ3RvQXJyYXk6IE9iamVjdCBzaG91bGQgaGF2ZSBrZXlzIGZvciBpbmRpY2VzJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAhKHR5cGVvZiBvYmouY2FsbGVlICE9PSAnZnVuY3Rpb24nKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ3RvQXJyYXk6IE9iamVjdCBjYW5cXCd0IGJlIGBhcmd1bWVudHNgLiBVc2UgcmVzdCBwYXJhbXMgJyArICcoZnVuY3Rpb24oLi4uYXJncykge30pIG9yIEFycmF5LmZyb20oKSBpbnN0ZWFkLicpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDsgLy8gT2xkIElFIGRvZXNuJ3QgZ2l2ZSBjb2xsZWN0aW9ucyBhY2Nlc3MgdG8gaGFzT3duUHJvcGVydHkuIEFzc3VtZSBpbnB1dHNcbiAgLy8gd2l0aG91dCBtZXRob2Qgd2lsbCB0aHJvdyBkdXJpbmcgdGhlIHNsaWNlIGNhbGwgYW5kIHNraXAgc3RyYWlnaHQgdG8gdGhlXG4gIC8vIGZhbGxiYWNrLlxuXG4gIGlmIChvYmouaGFzT3duUHJvcGVydHkpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG9iaik7XG4gICAgfSBjYXRjaCAoZSkgey8vIElFIDwgOSBkb2VzIG5vdCBzdXBwb3J0IEFycmF5I3NsaWNlIG9uIGNvbGxlY3Rpb25zIG9iamVjdHNcbiAgICB9XG4gIH0gLy8gRmFsbCBiYWNrIHRvIGNvcHlpbmcga2V5IGJ5IGtleS4gVGhpcyBhc3N1bWVzIGFsbCBrZXlzIGhhdmUgYSB2YWx1ZSxcbiAgLy8gc28gd2lsbCBub3QgcHJlc2VydmUgc3BhcnNlbHkgcG9wdWxhdGVkIGlucHV0cy5cblxuXG4gIHZhciByZXQgPSBBcnJheShsZW5ndGgpO1xuXG4gIGZvciAodmFyIGlpID0gMDsgaWkgPCBsZW5ndGg7IGlpKyspIHtcbiAgICByZXRbaWldID0gb2JqW2lpXTtcbiAgfVxuXG4gIHJldHVybiByZXQ7XG59XG4vKipcbiAqIFBlcmZvcm0gYSBoZXVyaXN0aWMgdGVzdCB0byBkZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIFwiYXJyYXktbGlrZVwiLlxuICpcbiAqICAgQSBtb25rIGFza2VkIEpvc2h1LCBhIFplbiBtYXN0ZXIsIFwiSGFzIGEgZG9nIEJ1ZGRoYSBuYXR1cmU/XCJcbiAqICAgSm9zaHUgcmVwbGllZDogXCJNdS5cIlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gZGV0ZXJtaW5lcyBpZiBpdHMgYXJndW1lbnQgaGFzIFwiYXJyYXkgbmF0dXJlXCI6IGl0IHJldHVybnNcbiAqIHRydWUgaWYgdGhlIGFyZ3VtZW50IGlzIGFuIGFjdHVhbCBhcnJheSwgYW4gYGFyZ3VtZW50cycgb2JqZWN0LCBvciBhblxuICogSFRNTENvbGxlY3Rpb24gKGUuZy4gbm9kZS5jaGlsZE5vZGVzIG9yIG5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoKSkuXG4gKlxuICogSXQgd2lsbCByZXR1cm4gZmFsc2UgZm9yIG90aGVyIGFycmF5LWxpa2Ugb2JqZWN0cyBsaWtlIEZpbGVsaXN0LlxuICpcbiAqIEBwYXJhbSB7Kn0gb2JqXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5cblxuZnVuY3Rpb24gaGFzQXJyYXlOYXR1cmUob2JqKSB7XG4gIHJldHVybiAoLy8gbm90IG51bGwvZmFsc2VcbiAgICAhIW9iaiAmJiAoIC8vIGFycmF5cyBhcmUgb2JqZWN0cywgTm9kZUxpc3RzIGFyZSBmdW5jdGlvbnMgaW4gU2FmYXJpXG4gICAgdHlwZW9mIG9iaiA9PSAnb2JqZWN0JyB8fCB0eXBlb2Ygb2JqID09ICdmdW5jdGlvbicpICYmIC8vIHF1YWNrcyBsaWtlIGFuIGFycmF5XG4gICAgJ2xlbmd0aCcgaW4gb2JqICYmIC8vIG5vdCB3aW5kb3dcbiAgICAhKCdzZXRJbnRlcnZhbCcgaW4gb2JqKSAmJiAvLyBubyBET00gbm9kZSBzaG91bGQgYmUgY29uc2lkZXJlZCBhbiBhcnJheS1saWtlXG4gICAgLy8gYSAnc2VsZWN0JyBlbGVtZW50IGhhcyAnbGVuZ3RoJyBhbmQgJ2l0ZW0nIHByb3BlcnRpZXMgb24gSUU4XG4gICAgdHlwZW9mIG9iai5ub2RlVHlwZSAhPSAnbnVtYmVyJyAmJiAoIC8vIGEgcmVhbCBhcnJheVxuICAgIEFycmF5LmlzQXJyYXkob2JqKSB8fCAvLyBhcmd1bWVudHNcbiAgICAnY2FsbGVlJyBpbiBvYmogfHwgLy8gSFRNTENvbGxlY3Rpb24vTm9kZUxpc3RcbiAgICAnaXRlbScgaW4gb2JqKVxuICApO1xufVxuLyoqXG4gKiBFbnN1cmUgdGhhdCB0aGUgYXJndW1lbnQgaXMgYW4gYXJyYXkgYnkgd3JhcHBpbmcgaXQgaW4gYW4gYXJyYXkgaWYgaXQgaXMgbm90LlxuICogQ3JlYXRlcyBhIGNvcHkgb2YgdGhlIGFyZ3VtZW50IGlmIGl0IGlzIGFscmVhZHkgYW4gYXJyYXkuXG4gKlxuICogVGhpcyBpcyBtb3N0bHkgdXNlZnVsIGlkaW9tYXRpY2FsbHk6XG4gKlxuICogICB2YXIgY3JlYXRlQXJyYXlGcm9tTWl4ZWQgPSByZXF1aXJlKCdjcmVhdGVBcnJheUZyb21NaXhlZCcpO1xuICpcbiAqICAgZnVuY3Rpb24gdGFrZXNPbmVPck1vcmVUaGluZ3ModGhpbmdzKSB7XG4gKiAgICAgdGhpbmdzID0gY3JlYXRlQXJyYXlGcm9tTWl4ZWQodGhpbmdzKTtcbiAqICAgICAuLi5cbiAqICAgfVxuICpcbiAqIFRoaXMgYWxsb3dzIHlvdSB0byB0cmVhdCBgdGhpbmdzJyBhcyBhbiBhcnJheSwgYnV0IGFjY2VwdCBzY2FsYXJzIGluIHRoZSBBUEkuXG4gKlxuICogSWYgeW91IG5lZWQgdG8gY29udmVydCBhbiBhcnJheS1saWtlIG9iamVjdCwgbGlrZSBgYXJndW1lbnRzYCwgaW50byBhbiBhcnJheVxuICogdXNlIHRvQXJyYXkgaW5zdGVhZC5cbiAqXG4gKiBAcGFyYW0geyp9IG9ialxuICogQHJldHVybiB7YXJyYXl9XG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVBcnJheUZyb21NaXhlZChvYmopIHtcbiAgaWYgKCFoYXNBcnJheU5hdHVyZShvYmopKSB7XG4gICAgcmV0dXJuIFtvYmpdO1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiBvYmouc2xpY2UoKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdG9BcnJheShvYmopO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQXJyYXlGcm9tTWl4ZWQ7Il0sIm5hbWVzIjpbImludmFyaWFudCIsInJlcXVpcmUiLCJ0b0FycmF5Iiwib2JqIiwibGVuZ3RoIiwiQXJyYXkiLCJpc0FycmF5IiwicHJvY2VzcyIsImNhbGxlZSIsImhhc093blByb3BlcnR5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiZSIsInJldCIsImlpIiwiaGFzQXJyYXlOYXR1cmUiLCJub2RlVHlwZSIsImNyZWF0ZUFycmF5RnJvbU1peGVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/createArrayFromMixed.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/cx.js":
/*!*************************************!*\
  !*** ./node_modules/fbjs/lib/cx.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ /**\n * This function is used to mark string literals representing CSS class names\n * so that they can be transformed statically. This allows for modularization\n * and minification of CSS class names.\n *\n * In static_upstream, this function is actually implemented, but it should\n * eventually be replaced with something more descriptive, and the transform\n * that is used in the main stack should be ported for use elsewhere.\n *\n * @param string|object className to modularize, or an object of key/values.\n *                      In the object case, the values are conditions that\n *                      determine if the className keys should be included.\n * @param [string ...]  Variable list of classNames in the string case.\n * @return string       Renderable space-separated CSS className.\n */ function cx(classNames) {\n    if (typeof classNames == \"object\") {\n        return Object.keys(classNames).filter(function(className) {\n            return classNames[className];\n        }).map(replace).join(\" \");\n    }\n    return Array.prototype.map.call(arguments, replace).join(\" \");\n}\nfunction replace(str) {\n    return str.replace(/\\//g, \"-\");\n}\nmodule.exports = cx;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7Q0FNQyxHQUVEOzs7Ozs7Ozs7Ozs7OztDQWNDLEdBQ0QsU0FBU0EsR0FBR0MsVUFBVTtJQUNwQixJQUFJLE9BQU9BLGNBQWMsVUFBVTtRQUNqQyxPQUFPQyxPQUFPQyxJQUFJLENBQUNGLFlBQVlHLE1BQU0sQ0FBQyxTQUFVQyxTQUFTO1lBQ3ZELE9BQU9KLFVBQVUsQ0FBQ0ksVUFBVTtRQUM5QixHQUFHQyxHQUFHLENBQUNDLFNBQVNDLElBQUksQ0FBQztJQUN2QjtJQUVBLE9BQU9DLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRyxDQUFDSyxJQUFJLENBQUNDLFdBQVdMLFNBQVNDLElBQUksQ0FBQztBQUMzRDtBQUVBLFNBQVNELFFBQVFNLEdBQUc7SUFDbEIsT0FBT0EsSUFBSU4sT0FBTyxDQUFDLE9BQU87QUFDNUI7QUFFQU8sT0FBT0MsT0FBTyxHQUFHZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvY3guanM/MGZlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gbWFyayBzdHJpbmcgbGl0ZXJhbHMgcmVwcmVzZW50aW5nIENTUyBjbGFzcyBuYW1lc1xuICogc28gdGhhdCB0aGV5IGNhbiBiZSB0cmFuc2Zvcm1lZCBzdGF0aWNhbGx5LiBUaGlzIGFsbG93cyBmb3IgbW9kdWxhcml6YXRpb25cbiAqIGFuZCBtaW5pZmljYXRpb24gb2YgQ1NTIGNsYXNzIG5hbWVzLlxuICpcbiAqIEluIHN0YXRpY191cHN0cmVhbSwgdGhpcyBmdW5jdGlvbiBpcyBhY3R1YWxseSBpbXBsZW1lbnRlZCwgYnV0IGl0IHNob3VsZFxuICogZXZlbnR1YWxseSBiZSByZXBsYWNlZCB3aXRoIHNvbWV0aGluZyBtb3JlIGRlc2NyaXB0aXZlLCBhbmQgdGhlIHRyYW5zZm9ybVxuICogdGhhdCBpcyB1c2VkIGluIHRoZSBtYWluIHN0YWNrIHNob3VsZCBiZSBwb3J0ZWQgZm9yIHVzZSBlbHNld2hlcmUuXG4gKlxuICogQHBhcmFtIHN0cmluZ3xvYmplY3QgY2xhc3NOYW1lIHRvIG1vZHVsYXJpemUsIG9yIGFuIG9iamVjdCBvZiBrZXkvdmFsdWVzLlxuICogICAgICAgICAgICAgICAgICAgICAgSW4gdGhlIG9iamVjdCBjYXNlLCB0aGUgdmFsdWVzIGFyZSBjb25kaXRpb25zIHRoYXRcbiAqICAgICAgICAgICAgICAgICAgICAgIGRldGVybWluZSBpZiB0aGUgY2xhc3NOYW1lIGtleXMgc2hvdWxkIGJlIGluY2x1ZGVkLlxuICogQHBhcmFtIFtzdHJpbmcgLi4uXSAgVmFyaWFibGUgbGlzdCBvZiBjbGFzc05hbWVzIGluIHRoZSBzdHJpbmcgY2FzZS5cbiAqIEByZXR1cm4gc3RyaW5nICAgICAgIFJlbmRlcmFibGUgc3BhY2Utc2VwYXJhdGVkIENTUyBjbGFzc05hbWUuXG4gKi9cbmZ1bmN0aW9uIGN4KGNsYXNzTmFtZXMpIHtcbiAgaWYgKHR5cGVvZiBjbGFzc05hbWVzID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGNsYXNzTmFtZXMpLmZpbHRlcihmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgICByZXR1cm4gY2xhc3NOYW1lc1tjbGFzc05hbWVdO1xuICAgIH0pLm1hcChyZXBsYWNlKS5qb2luKCcgJyk7XG4gIH1cblxuICByZXR1cm4gQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKGFyZ3VtZW50cywgcmVwbGFjZSkuam9pbignICcpO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1xcLy9nLCAnLScpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGN4OyJdLCJuYW1lcyI6WyJjeCIsImNsYXNzTmFtZXMiLCJPYmplY3QiLCJrZXlzIiwiZmlsdGVyIiwiY2xhc3NOYW1lIiwibWFwIiwicmVwbGFjZSIsImpvaW4iLCJBcnJheSIsInByb3RvdHlwZSIsImNhbGwiLCJhcmd1bWVudHMiLCJzdHIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/cx.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/emptyFunction.js":
/*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */ function makeEmptyFunction(arg) {\n    return function() {\n        return arg;\n    };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */ var emptyFunction = function emptyFunction() {};\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() {\n    return this;\n};\nemptyFunction.thatReturnsArgument = function(arg) {\n    return arg;\n};\nmodule.exports = emptyFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNBLGtCQUFrQkMsR0FBRztJQUM1QixPQUFPO1FBQ0wsT0FBT0E7SUFDVDtBQUNGO0FBQ0E7Ozs7Q0FJQyxHQUdELElBQUlDLGdCQUFnQixTQUFTQSxpQkFBaUI7QUFFOUNBLGNBQWNDLFdBQVcsR0FBR0g7QUFDNUJFLGNBQWNFLGdCQUFnQixHQUFHSixrQkFBa0I7QUFDbkRFLGNBQWNHLGVBQWUsR0FBR0wsa0JBQWtCO0FBQ2xERSxjQUFjSSxlQUFlLEdBQUdOLGtCQUFrQjtBQUVsREUsY0FBY0ssZUFBZSxHQUFHO0lBQzlCLE9BQU8sSUFBSTtBQUNiO0FBRUFMLGNBQWNNLG1CQUFtQixHQUFHLFNBQVVQLEdBQUc7SUFDL0MsT0FBT0E7QUFDVDtBQUVBUSxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzPzhkOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cbmZ1bmN0aW9uIG1ha2VFbXB0eUZ1bmN0aW9uKGFyZykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBhcmc7XG4gIH07XG59XG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xuXG5cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9O1xuXG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zID0gbWFrZUVtcHR5RnVuY3Rpb247XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zRmFsc2UgPSBtYWtlRW1wdHlGdW5jdGlvbihmYWxzZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVHJ1ZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKHRydWUpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwgPSBtYWtlRW1wdHlGdW5jdGlvbihudWxsKTtcblxuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcblxuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc0FyZ3VtZW50ID0gZnVuY3Rpb24gKGFyZykge1xuICByZXR1cm4gYXJnO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eUZ1bmN0aW9uOyJdLCJuYW1lcyI6WyJtYWtlRW1wdHlGdW5jdGlvbiIsImFyZyIsImVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc051bGwiLCJ0aGF0UmV0dXJuc1RoaXMiLCJ0aGF0UmV0dXJuc0FyZ3VtZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/emptyFunction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getActiveElement.js":
/*!***************************************************!*\
  !*** ./node_modules/fbjs/lib/getActiveElement.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ /* eslint-disable fb-www/typeof-undefined */ /**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */ function getActiveElement(doc) /*?DOMElement*/ {\n    doc = doc || (typeof document !== \"undefined\" ? document : undefined);\n    if (typeof doc === \"undefined\") {\n        return null;\n    }\n    try {\n        return doc.activeElement || doc.body;\n    } catch (e) {\n        return doc.body;\n    }\n}\nmodule.exports = getActiveElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7Q0FPQyxHQUVELDBDQUEwQyxHQUUxQzs7Ozs7Ozs7O0NBU0MsR0FDRCxTQUFTQSxpQkFBaUJDLEdBQUcsRUFDN0IsYUFBYTtJQUVYQSxNQUFNQSxPQUFRLFFBQU9DLGFBQWEsY0FBY0EsV0FBV0MsU0FBUTtJQUVuRSxJQUFJLE9BQU9GLFFBQVEsYUFBYTtRQUM5QixPQUFPO0lBQ1Q7SUFFQSxJQUFJO1FBQ0YsT0FBT0EsSUFBSUcsYUFBYSxJQUFJSCxJQUFJSSxJQUFJO0lBQ3RDLEVBQUUsT0FBT0MsR0FBRztRQUNWLE9BQU9MLElBQUlJLElBQUk7SUFDakI7QUFDRjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzPzllMjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBmYi13d3cvdHlwZW9mLXVuZGVmaW5lZCAqL1xuXG4vKipcbiAqIFNhbWUgYXMgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBidXQgd3JhcHMgaW4gYSB0cnktY2F0Y2ggYmxvY2suIEluIElFIGl0IGlzXG4gKiBub3Qgc2FmZSB0byBjYWxsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgaWYgdGhlcmUgaXMgbm90aGluZyBmb2N1c2VkLlxuICpcbiAqIFRoZSBhY3RpdmVFbGVtZW50IHdpbGwgYmUgbnVsbCBvbmx5IGlmIHRoZSBkb2N1bWVudCBvciBkb2N1bWVudCBib2R5IGlzIG5vdFxuICogeWV0IGRlZmluZWQuXG4gKlxuICogQHBhcmFtIHs/RE9NRG9jdW1lbnR9IGRvYyBEZWZhdWx0cyB0byBjdXJyZW50IGRvY3VtZW50LlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9XG4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQoZG9jKVxuLyo/RE9NRWxlbWVudCovXG57XG4gIGRvYyA9IGRvYyB8fCAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogdW5kZWZpbmVkKTtcblxuICBpZiAodHlwZW9mIGRvYyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvYy5hY3RpdmVFbGVtZW50IHx8IGRvYy5ib2R5O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRvYy5ib2R5O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWN0aXZlRWxlbWVudDsiXSwibmFtZXMiOlsiZ2V0QWN0aXZlRWxlbWVudCIsImRvYyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getActiveElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getDocumentScrollElement.js":
/*!***********************************************************!*\
  !*** ./node_modules/fbjs/lib/getDocumentScrollElement.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ \nvar isWebkit = typeof navigator !== \"undefined\" && navigator.userAgent.indexOf(\"AppleWebKit\") > -1;\n/**\n * Gets the element with the document scroll properties such as `scrollLeft` and\n * `scrollHeight`. This may differ across different browsers.\n *\n * NOTE: The return value can be null if the DOM is not yet ready.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */ function getDocumentScrollElement(doc) {\n    doc = doc || document;\n    if (doc.scrollingElement) {\n        return doc.scrollingElement;\n    }\n    return !isWebkit && doc.compatMode === \"CSS1Compat\" ? doc.documentElement : doc.body;\n}\nmodule.exports = getDocumentScrollElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXREb2N1bWVudFNjcm9sbEVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Q0FPQyxHQUNEO0FBRUEsSUFBSUEsV0FBVyxPQUFPQyxjQUFjLGVBQWVBLFVBQVVDLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0FBQ2pHOzs7Ozs7OztDQVFDLEdBRUQsU0FBU0MseUJBQXlCQyxHQUFHO0lBQ25DQSxNQUFNQSxPQUFPQztJQUViLElBQUlELElBQUlFLGdCQUFnQixFQUFFO1FBQ3hCLE9BQU9GLElBQUlFLGdCQUFnQjtJQUM3QjtJQUVBLE9BQU8sQ0FBQ1AsWUFBWUssSUFBSUcsVUFBVSxLQUFLLGVBQWVILElBQUlJLGVBQWUsR0FBR0osSUFBSUssSUFBSTtBQUN0RjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXREb2N1bWVudFNjcm9sbEVsZW1lbnQuanM/ZmE0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGlzV2Via2l0ID0gdHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdBcHBsZVdlYktpdCcpID4gLTE7XG4vKipcbiAqIEdldHMgdGhlIGVsZW1lbnQgd2l0aCB0aGUgZG9jdW1lbnQgc2Nyb2xsIHByb3BlcnRpZXMgc3VjaCBhcyBgc2Nyb2xsTGVmdGAgYW5kXG4gKiBgc2Nyb2xsSGVpZ2h0YC4gVGhpcyBtYXkgZGlmZmVyIGFjcm9zcyBkaWZmZXJlbnQgYnJvd3NlcnMuXG4gKlxuICogTk9URTogVGhlIHJldHVybiB2YWx1ZSBjYW4gYmUgbnVsbCBpZiB0aGUgRE9NIGlzIG5vdCB5ZXQgcmVhZHkuXG4gKlxuICogQHBhcmFtIHs/RE9NRG9jdW1lbnR9IGRvYyBEZWZhdWx0cyB0byBjdXJyZW50IGRvY3VtZW50LlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9XG4gKi9cblxuZnVuY3Rpb24gZ2V0RG9jdW1lbnRTY3JvbGxFbGVtZW50KGRvYykge1xuICBkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG5cbiAgaWYgKGRvYy5zY3JvbGxpbmdFbGVtZW50KSB7XG4gICAgcmV0dXJuIGRvYy5zY3JvbGxpbmdFbGVtZW50O1xuICB9XG5cbiAgcmV0dXJuICFpc1dlYmtpdCAmJiBkb2MuY29tcGF0TW9kZSA9PT0gJ0NTUzFDb21wYXQnID8gZG9jLmRvY3VtZW50RWxlbWVudCA6IGRvYy5ib2R5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldERvY3VtZW50U2Nyb2xsRWxlbWVudDsiXSwibmFtZXMiOlsiaXNXZWJraXQiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpbmRleE9mIiwiZ2V0RG9jdW1lbnRTY3JvbGxFbGVtZW50IiwiZG9jIiwiZG9jdW1lbnQiLCJzY3JvbGxpbmdFbGVtZW50IiwiY29tcGF0TW9kZSIsImRvY3VtZW50RWxlbWVudCIsImJvZHkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getDocumentScrollElement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getElementPosition.js":
/*!*****************************************************!*\
  !*** ./node_modules/fbjs/lib/getElementPosition.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var getElementRect = __webpack_require__(/*! ./getElementRect */ \"(app-pages-browser)/./node_modules/fbjs/lib/getElementRect.js\");\n/**\n * Gets an element's position in pixels relative to the viewport. The returned\n * object represents the position of the element's top left corner.\n *\n * @param {DOMElement} element\n * @return {object}\n */ function getElementPosition(element) {\n    var rect = getElementRect(element);\n    return {\n        x: rect.left,\n        y: rect.top,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n    };\n}\nmodule.exports = getElementPosition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRFbGVtZW50UG9zaXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7OztDQU9DLEdBQ0QsSUFBSUEsaUJBQWlCQyxtQkFBT0EsQ0FBQyx1RkFBa0I7QUFDL0M7Ozs7OztDQU1DLEdBR0QsU0FBU0MsbUJBQW1CQyxPQUFPO0lBQ2pDLElBQUlDLE9BQU9KLGVBQWVHO0lBQzFCLE9BQU87UUFDTEUsR0FBR0QsS0FBS0UsSUFBSTtRQUNaQyxHQUFHSCxLQUFLSSxHQUFHO1FBQ1hDLE9BQU9MLEtBQUtNLEtBQUssR0FBR04sS0FBS0UsSUFBSTtRQUM3QkssUUFBUVAsS0FBS1EsTUFBTSxHQUFHUixLQUFLSSxHQUFHO0lBQ2hDO0FBQ0Y7QUFFQUssT0FBT0MsT0FBTyxHQUFHWiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZ2V0RWxlbWVudFBvc2l0aW9uLmpzPzc2NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xudmFyIGdldEVsZW1lbnRSZWN0ID0gcmVxdWlyZShcIi4vZ2V0RWxlbWVudFJlY3RcIik7XG4vKipcbiAqIEdldHMgYW4gZWxlbWVudCdzIHBvc2l0aW9uIGluIHBpeGVscyByZWxhdGl2ZSB0byB0aGUgdmlld3BvcnQuIFRoZSByZXR1cm5lZFxuICogb2JqZWN0IHJlcHJlc2VudHMgdGhlIHBvc2l0aW9uIG9mIHRoZSBlbGVtZW50J3MgdG9wIGxlZnQgY29ybmVyLlxuICpcbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybiB7b2JqZWN0fVxuICovXG5cblxuZnVuY3Rpb24gZ2V0RWxlbWVudFBvc2l0aW9uKGVsZW1lbnQpIHtcbiAgdmFyIHJlY3QgPSBnZXRFbGVtZW50UmVjdChlbGVtZW50KTtcbiAgcmV0dXJuIHtcbiAgICB4OiByZWN0LmxlZnQsXG4gICAgeTogcmVjdC50b3AsXG4gICAgd2lkdGg6IHJlY3QucmlnaHQgLSByZWN0LmxlZnQsXG4gICAgaGVpZ2h0OiByZWN0LmJvdHRvbSAtIHJlY3QudG9wXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0RWxlbWVudFBvc2l0aW9uOyJdLCJuYW1lcyI6WyJnZXRFbGVtZW50UmVjdCIsInJlcXVpcmUiLCJnZXRFbGVtZW50UG9zaXRpb24iLCJlbGVtZW50IiwicmVjdCIsIngiLCJsZWZ0IiwieSIsInRvcCIsIndpZHRoIiwicmlnaHQiLCJoZWlnaHQiLCJib3R0b20iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getElementPosition.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getElementRect.js":
/*!*************************************************!*\
  !*** ./node_modules/fbjs/lib/getElementRect.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var containsNode = __webpack_require__(/*! ./containsNode */ \"(app-pages-browser)/./node_modules/fbjs/lib/containsNode.js\");\n/**\n * Gets an element's bounding rect in pixels relative to the viewport.\n *\n * @param {DOMElement} elem\n * @return {object}\n */ function getElementRect(elem) {\n    var docElem = elem.ownerDocument.documentElement; // FF 2, Safari 3 and Opera 9.5- do not support getBoundingClientRect().\n    // IE9- will throw if the element is not in the document.\n    if (!(\"getBoundingClientRect\" in elem) || !containsNode(docElem, elem)) {\n        return {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n    } // Subtracts clientTop/Left because IE8- added a 2px border to the\n    // <html> element (see http://fburl.com/1493213). IE 7 in\n    // Quicksmode does not report clientLeft/clientTop so there\n    // will be an unaccounted offset of 2px when in quirksmode\n    var rect = elem.getBoundingClientRect();\n    return {\n        left: Math.round(rect.left) - docElem.clientLeft,\n        right: Math.round(rect.right) - docElem.clientLeft,\n        top: Math.round(rect.top) - docElem.clientTop,\n        bottom: Math.round(rect.bottom) - docElem.clientTop\n    };\n}\nmodule.exports = getElementRect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRFbGVtZW50UmVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViOzs7Ozs7O0NBT0MsR0FDRCxJQUFJQSxlQUFlQyxtQkFBT0EsQ0FBQyxtRkFBZ0I7QUFDM0M7Ozs7O0NBS0MsR0FHRCxTQUFTQyxlQUFlQyxJQUFJO0lBQzFCLElBQUlDLFVBQVVELEtBQUtFLGFBQWEsQ0FBQ0MsZUFBZSxFQUFFLHdFQUF3RTtJQUMxSCx5REFBeUQ7SUFFekQsSUFBSSxDQUFFLDRCQUEyQkgsSUFBRyxLQUFNLENBQUNILGFBQWFJLFNBQVNELE9BQU87UUFDdEUsT0FBTztZQUNMSSxNQUFNO1lBQ05DLE9BQU87WUFDUEMsS0FBSztZQUNMQyxRQUFRO1FBQ1Y7SUFDRixFQUFFLGtFQUFrRTtJQUNwRSx5REFBeUQ7SUFDekQsMkRBQTJEO0lBQzNELDBEQUEwRDtJQUcxRCxJQUFJQyxPQUFPUixLQUFLUyxxQkFBcUI7SUFDckMsT0FBTztRQUNMTCxNQUFNTSxLQUFLQyxLQUFLLENBQUNILEtBQUtKLElBQUksSUFBSUgsUUFBUVcsVUFBVTtRQUNoRFAsT0FBT0ssS0FBS0MsS0FBSyxDQUFDSCxLQUFLSCxLQUFLLElBQUlKLFFBQVFXLFVBQVU7UUFDbEROLEtBQUtJLEtBQUtDLEtBQUssQ0FBQ0gsS0FBS0YsR0FBRyxJQUFJTCxRQUFRWSxTQUFTO1FBQzdDTixRQUFRRyxLQUFLQyxLQUFLLENBQUNILEtBQUtELE1BQU0sSUFBSU4sUUFBUVksU0FBUztJQUNyRDtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBR2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRFbGVtZW50UmVjdC5qcz9hODhhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cbnZhciBjb250YWluc05vZGUgPSByZXF1aXJlKFwiLi9jb250YWluc05vZGVcIik7XG4vKipcbiAqIEdldHMgYW4gZWxlbWVudCdzIGJvdW5kaW5nIHJlY3QgaW4gcGl4ZWxzIHJlbGF0aXZlIHRvIHRoZSB2aWV3cG9ydC5cbiAqXG4gKiBAcGFyYW0ge0RPTUVsZW1lbnR9IGVsZW1cbiAqIEByZXR1cm4ge29iamVjdH1cbiAqL1xuXG5cbmZ1bmN0aW9uIGdldEVsZW1lbnRSZWN0KGVsZW0pIHtcbiAgdmFyIGRvY0VsZW0gPSBlbGVtLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OyAvLyBGRiAyLCBTYWZhcmkgMyBhbmQgT3BlcmEgOS41LSBkbyBub3Qgc3VwcG9ydCBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5cbiAgLy8gSUU5LSB3aWxsIHRocm93IGlmIHRoZSBlbGVtZW50IGlzIG5vdCBpbiB0aGUgZG9jdW1lbnQuXG5cbiAgaWYgKCEoJ2dldEJvdW5kaW5nQ2xpZW50UmVjdCcgaW4gZWxlbSkgfHwgIWNvbnRhaW5zTm9kZShkb2NFbGVtLCBlbGVtKSkge1xuICAgIHJldHVybiB7XG4gICAgICBsZWZ0OiAwLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICB0b3A6IDAsXG4gICAgICBib3R0b206IDBcbiAgICB9O1xuICB9IC8vIFN1YnRyYWN0cyBjbGllbnRUb3AvTGVmdCBiZWNhdXNlIElFOC0gYWRkZWQgYSAycHggYm9yZGVyIHRvIHRoZVxuICAvLyA8aHRtbD4gZWxlbWVudCAoc2VlIGh0dHA6Ly9mYnVybC5jb20vMTQ5MzIxMykuIElFIDcgaW5cbiAgLy8gUXVpY2tzbW9kZSBkb2VzIG5vdCByZXBvcnQgY2xpZW50TGVmdC9jbGllbnRUb3Agc28gdGhlcmVcbiAgLy8gd2lsbCBiZSBhbiB1bmFjY291bnRlZCBvZmZzZXQgb2YgMnB4IHdoZW4gaW4gcXVpcmtzbW9kZVxuXG5cbiAgdmFyIHJlY3QgPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4ge1xuICAgIGxlZnQ6IE1hdGgucm91bmQocmVjdC5sZWZ0KSAtIGRvY0VsZW0uY2xpZW50TGVmdCxcbiAgICByaWdodDogTWF0aC5yb3VuZChyZWN0LnJpZ2h0KSAtIGRvY0VsZW0uY2xpZW50TGVmdCxcbiAgICB0b3A6IE1hdGgucm91bmQocmVjdC50b3ApIC0gZG9jRWxlbS5jbGllbnRUb3AsXG4gICAgYm90dG9tOiBNYXRoLnJvdW5kKHJlY3QuYm90dG9tKSAtIGRvY0VsZW0uY2xpZW50VG9wXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0RWxlbWVudFJlY3Q7Il0sIm5hbWVzIjpbImNvbnRhaW5zTm9kZSIsInJlcXVpcmUiLCJnZXRFbGVtZW50UmVjdCIsImVsZW0iLCJkb2NFbGVtIiwib3duZXJEb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJNYXRoIiwicm91bmQiLCJjbGllbnRMZWZ0IiwiY2xpZW50VG9wIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getElementRect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getScrollPosition.js":
/*!****************************************************!*\
  !*** ./node_modules/fbjs/lib/getScrollPosition.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ \nvar getDocumentScrollElement = __webpack_require__(/*! ./getDocumentScrollElement */ \"(app-pages-browser)/./node_modules/fbjs/lib/getDocumentScrollElement.js\");\nvar getUnboundedScrollPosition = __webpack_require__(/*! ./getUnboundedScrollPosition */ \"(app-pages-browser)/./node_modules/fbjs/lib/getUnboundedScrollPosition.js\");\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are bounded. This means that if the scroll position is\n * negative or exceeds the element boundaries (which is possible using inertial\n * scrolling), you will get zero or the maximum scroll position, respectively.\n *\n * If you need the unbound scroll position, use `getUnboundedScrollPosition`.\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */ function getScrollPosition(scrollable) {\n    var documentScrollElement = getDocumentScrollElement(scrollable.ownerDocument || scrollable.document);\n    if (scrollable.Window && scrollable instanceof scrollable.Window) {\n        scrollable = documentScrollElement;\n    }\n    var scrollPosition = getUnboundedScrollPosition(scrollable);\n    var viewport = scrollable === documentScrollElement ? scrollable.ownerDocument.documentElement : scrollable;\n    var xMax = scrollable.scrollWidth - viewport.clientWidth;\n    var yMax = scrollable.scrollHeight - viewport.clientHeight;\n    scrollPosition.x = Math.max(0, Math.min(scrollPosition.x, xMax));\n    scrollPosition.y = Math.max(0, Math.min(scrollPosition.y, yMax));\n    return scrollPosition;\n}\nmodule.exports = getScrollPosition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRTY3JvbGxQb3NpdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztDQU9DLEdBQ0Q7QUFFQSxJQUFJQSwyQkFBMkJDLG1CQUFPQSxDQUFDLDJHQUE0QjtBQUVuRSxJQUFJQyw2QkFBNkJELG1CQUFPQSxDQUFDLCtHQUE4QjtBQUN2RTs7Ozs7Ozs7Ozs7Q0FXQyxHQUdELFNBQVNFLGtCQUFrQkMsVUFBVTtJQUNuQyxJQUFJQyx3QkFBd0JMLHlCQUF5QkksV0FBV0UsYUFBYSxJQUFJRixXQUFXRyxRQUFRO0lBRXBHLElBQUlILFdBQVdJLE1BQU0sSUFBSUosc0JBQXNCQSxXQUFXSSxNQUFNLEVBQUU7UUFDaEVKLGFBQWFDO0lBQ2Y7SUFFQSxJQUFJSSxpQkFBaUJQLDJCQUEyQkU7SUFDaEQsSUFBSU0sV0FBV04sZUFBZUMsd0JBQXdCRCxXQUFXRSxhQUFhLENBQUNLLGVBQWUsR0FBR1A7SUFDakcsSUFBSVEsT0FBT1IsV0FBV1MsV0FBVyxHQUFHSCxTQUFTSSxXQUFXO0lBQ3hELElBQUlDLE9BQU9YLFdBQVdZLFlBQVksR0FBR04sU0FBU08sWUFBWTtJQUMxRFIsZUFBZVMsQ0FBQyxHQUFHQyxLQUFLQyxHQUFHLENBQUMsR0FBR0QsS0FBS0UsR0FBRyxDQUFDWixlQUFlUyxDQUFDLEVBQUVOO0lBQzFESCxlQUFlYSxDQUFDLEdBQUdILEtBQUtDLEdBQUcsQ0FBQyxHQUFHRCxLQUFLRSxHQUFHLENBQUNaLGVBQWVhLENBQUMsRUFBRVA7SUFDMUQsT0FBT047QUFDVDtBQUVBYyxPQUFPQyxPQUFPLEdBQUdyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZ2V0U2Nyb2xsUG9zaXRpb24uanM/Y2IzYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGdldERvY3VtZW50U2Nyb2xsRWxlbWVudCA9IHJlcXVpcmUoXCIuL2dldERvY3VtZW50U2Nyb2xsRWxlbWVudFwiKTtcblxudmFyIGdldFVuYm91bmRlZFNjcm9sbFBvc2l0aW9uID0gcmVxdWlyZShcIi4vZ2V0VW5ib3VuZGVkU2Nyb2xsUG9zaXRpb25cIik7XG4vKipcbiAqIEdldHMgdGhlIHNjcm9sbCBwb3NpdGlvbiBvZiB0aGUgc3VwcGxpZWQgZWxlbWVudCBvciB3aW5kb3cuXG4gKlxuICogVGhlIHJldHVybiB2YWx1ZXMgYXJlIGJvdW5kZWQuIFRoaXMgbWVhbnMgdGhhdCBpZiB0aGUgc2Nyb2xsIHBvc2l0aW9uIGlzXG4gKiBuZWdhdGl2ZSBvciBleGNlZWRzIHRoZSBlbGVtZW50IGJvdW5kYXJpZXMgKHdoaWNoIGlzIHBvc3NpYmxlIHVzaW5nIGluZXJ0aWFsXG4gKiBzY3JvbGxpbmcpLCB5b3Ugd2lsbCBnZXQgemVybyBvciB0aGUgbWF4aW11bSBzY3JvbGwgcG9zaXRpb24sIHJlc3BlY3RpdmVseS5cbiAqXG4gKiBJZiB5b3UgbmVlZCB0aGUgdW5ib3VuZCBzY3JvbGwgcG9zaXRpb24sIHVzZSBgZ2V0VW5ib3VuZGVkU2Nyb2xsUG9zaXRpb25gLlxuICpcbiAqIEBwYXJhbSB7RE9NV2luZG93fERPTUVsZW1lbnR9IHNjcm9sbGFibGVcbiAqIEByZXR1cm4ge29iamVjdH0gTWFwIHdpdGggYHhgIGFuZCBgeWAga2V5cy5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdldFNjcm9sbFBvc2l0aW9uKHNjcm9sbGFibGUpIHtcbiAgdmFyIGRvY3VtZW50U2Nyb2xsRWxlbWVudCA9IGdldERvY3VtZW50U2Nyb2xsRWxlbWVudChzY3JvbGxhYmxlLm93bmVyRG9jdW1lbnQgfHwgc2Nyb2xsYWJsZS5kb2N1bWVudCk7XG5cbiAgaWYgKHNjcm9sbGFibGUuV2luZG93ICYmIHNjcm9sbGFibGUgaW5zdGFuY2VvZiBzY3JvbGxhYmxlLldpbmRvdykge1xuICAgIHNjcm9sbGFibGUgPSBkb2N1bWVudFNjcm9sbEVsZW1lbnQ7XG4gIH1cblxuICB2YXIgc2Nyb2xsUG9zaXRpb24gPSBnZXRVbmJvdW5kZWRTY3JvbGxQb3NpdGlvbihzY3JvbGxhYmxlKTtcbiAgdmFyIHZpZXdwb3J0ID0gc2Nyb2xsYWJsZSA9PT0gZG9jdW1lbnRTY3JvbGxFbGVtZW50ID8gc2Nyb2xsYWJsZS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCA6IHNjcm9sbGFibGU7XG4gIHZhciB4TWF4ID0gc2Nyb2xsYWJsZS5zY3JvbGxXaWR0aCAtIHZpZXdwb3J0LmNsaWVudFdpZHRoO1xuICB2YXIgeU1heCA9IHNjcm9sbGFibGUuc2Nyb2xsSGVpZ2h0IC0gdmlld3BvcnQuY2xpZW50SGVpZ2h0O1xuICBzY3JvbGxQb3NpdGlvbi54ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oc2Nyb2xsUG9zaXRpb24ueCwgeE1heCkpO1xuICBzY3JvbGxQb3NpdGlvbi55ID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oc2Nyb2xsUG9zaXRpb24ueSwgeU1heCkpO1xuICByZXR1cm4gc2Nyb2xsUG9zaXRpb247XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0U2Nyb2xsUG9zaXRpb247Il0sIm5hbWVzIjpbImdldERvY3VtZW50U2Nyb2xsRWxlbWVudCIsInJlcXVpcmUiLCJnZXRVbmJvdW5kZWRTY3JvbGxQb3NpdGlvbiIsImdldFNjcm9sbFBvc2l0aW9uIiwic2Nyb2xsYWJsZSIsImRvY3VtZW50U2Nyb2xsRWxlbWVudCIsIm93bmVyRG9jdW1lbnQiLCJkb2N1bWVudCIsIldpbmRvdyIsInNjcm9sbFBvc2l0aW9uIiwidmlld3BvcnQiLCJkb2N1bWVudEVsZW1lbnQiLCJ4TWF4Iiwic2Nyb2xsV2lkdGgiLCJjbGllbnRXaWR0aCIsInlNYXgiLCJzY3JvbGxIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJ4IiwiTWF0aCIsIm1heCIsIm1pbiIsInkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getScrollPosition.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getStyleProperty.js":
/*!***************************************************!*\
  !*** ./node_modules/fbjs/lib/getStyleProperty.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var camelize = __webpack_require__(/*! ./camelize */ \"(app-pages-browser)/./node_modules/fbjs/lib/camelize.js\");\nvar hyphenate = __webpack_require__(/*! ./hyphenate */ \"(app-pages-browser)/./node_modules/fbjs/lib/hyphenate.js\");\nfunction asString(value) /*?string*/ {\n    return value == null ? value : String(value);\n}\nfunction getStyleProperty(/*DOMNode*/ node, /*string*/ name) /*?string*/ {\n    var computedStyle; // W3C Standard\n    if (window.getComputedStyle) {\n        // In certain cases such as within an iframe in FF3, this returns null.\n        computedStyle = window.getComputedStyle(node, null);\n        if (computedStyle) {\n            return asString(computedStyle.getPropertyValue(hyphenate(name)));\n        }\n    } // Safari\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n        computedStyle = document.defaultView.getComputedStyle(node, null); // A Safari bug causes this to return null for `display: none` elements.\n        if (computedStyle) {\n            return asString(computedStyle.getPropertyValue(hyphenate(name)));\n        }\n        if (name === \"display\") {\n            return \"none\";\n        }\n    } // Internet Explorer\n    if (node.currentStyle) {\n        if (name === \"float\") {\n            return asString(node.currentStyle.cssFloat || node.currentStyle.styleFloat);\n        }\n        return asString(node.currentStyle[camelize(name)]);\n    }\n    return asString(node.style && node.style[camelize(name)]);\n}\nmodule.exports = getStyleProperty;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRTdHlsZVByb3BlcnR5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7Q0FPQyxHQUNELElBQUlBLFdBQVdDLG1CQUFPQSxDQUFDLDJFQUFZO0FBRW5DLElBQUlDLFlBQVlELG1CQUFPQSxDQUFDLDZFQUFhO0FBRXJDLFNBQVNFLFNBQVNDLEtBQUssRUFDdkIsU0FBUztJQUVQLE9BQU9BLFNBQVMsT0FBT0EsUUFBUUMsT0FBT0Q7QUFDeEM7QUFFQSxTQUFTRSxpQkFDVCxTQUFTLEdBQ1RDLElBQUksRUFDSixRQUFRLEdBQ1JDLElBQUksRUFDSixTQUFTO0lBRVAsSUFBSUMsZUFBZSxlQUFlO0lBRWxDLElBQUlDLE9BQU9DLGdCQUFnQixFQUFFO1FBQzNCLHVFQUF1RTtRQUN2RUYsZ0JBQWdCQyxPQUFPQyxnQkFBZ0IsQ0FBQ0osTUFBTTtRQUU5QyxJQUFJRSxlQUFlO1lBQ2pCLE9BQU9OLFNBQVNNLGNBQWNHLGdCQUFnQixDQUFDVixVQUFVTTtRQUMzRDtJQUNGLEVBQUUsU0FBUztJQUdYLElBQUlLLFNBQVNDLFdBQVcsSUFBSUQsU0FBU0MsV0FBVyxDQUFDSCxnQkFBZ0IsRUFBRTtRQUNqRUYsZ0JBQWdCSSxTQUFTQyxXQUFXLENBQUNILGdCQUFnQixDQUFDSixNQUFNLE9BQU8sd0VBQXdFO1FBRTNJLElBQUlFLGVBQWU7WUFDakIsT0FBT04sU0FBU00sY0FBY0csZ0JBQWdCLENBQUNWLFVBQVVNO1FBQzNEO1FBRUEsSUFBSUEsU0FBUyxXQUFXO1lBQ3RCLE9BQU87UUFDVDtJQUNGLEVBQUUsb0JBQW9CO0lBR3RCLElBQUlELEtBQUtRLFlBQVksRUFBRTtRQUNyQixJQUFJUCxTQUFTLFNBQVM7WUFDcEIsT0FBT0wsU0FBU0ksS0FBS1EsWUFBWSxDQUFDQyxRQUFRLElBQUlULEtBQUtRLFlBQVksQ0FBQ0UsVUFBVTtRQUM1RTtRQUVBLE9BQU9kLFNBQVNJLEtBQUtRLFlBQVksQ0FBQ2YsU0FBU1EsTUFBTTtJQUNuRDtJQUVBLE9BQU9MLFNBQVNJLEtBQUtXLEtBQUssSUFBSVgsS0FBS1csS0FBSyxDQUFDbEIsU0FBU1EsTUFBTTtBQUMxRDtBQUVBVyxPQUFPQyxPQUFPLEdBQUdkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRTdHlsZVByb3BlcnR5LmpzPzE5MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xudmFyIGNhbWVsaXplID0gcmVxdWlyZShcIi4vY2FtZWxpemVcIik7XG5cbnZhciBoeXBoZW5hdGUgPSByZXF1aXJlKFwiLi9oeXBoZW5hdGVcIik7XG5cbmZ1bmN0aW9uIGFzU3RyaW5nKHZhbHVlKVxuLyo/c3RyaW5nKi9cbntcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyB2YWx1ZSA6IFN0cmluZyh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIGdldFN0eWxlUHJvcGVydHkoXG4vKkRPTU5vZGUqL1xubm9kZSxcbi8qc3RyaW5nKi9cbm5hbWUpXG4vKj9zdHJpbmcqL1xue1xuICB2YXIgY29tcHV0ZWRTdHlsZTsgLy8gVzNDIFN0YW5kYXJkXG5cbiAgaWYgKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKSB7XG4gICAgLy8gSW4gY2VydGFpbiBjYXNlcyBzdWNoIGFzIHdpdGhpbiBhbiBpZnJhbWUgaW4gRkYzLCB0aGlzIHJldHVybnMgbnVsbC5cbiAgICBjb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUobm9kZSwgbnVsbCk7XG5cbiAgICBpZiAoY29tcHV0ZWRTdHlsZSkge1xuICAgICAgcmV0dXJuIGFzU3RyaW5nKGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShoeXBoZW5hdGUobmFtZSkpKTtcbiAgICB9XG4gIH0gLy8gU2FmYXJpXG5cblxuICBpZiAoZG9jdW1lbnQuZGVmYXVsdFZpZXcgJiYgZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSkge1xuICAgIGNvbXB1dGVkU3R5bGUgPSBkb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIG51bGwpOyAvLyBBIFNhZmFyaSBidWcgY2F1c2VzIHRoaXMgdG8gcmV0dXJuIG51bGwgZm9yIGBkaXNwbGF5OiBub25lYCBlbGVtZW50cy5cblxuICAgIGlmIChjb21wdXRlZFN0eWxlKSB7XG4gICAgICByZXR1cm4gYXNTdHJpbmcoY29tcHV0ZWRTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKGh5cGhlbmF0ZShuYW1lKSkpO1xuICAgIH1cblxuICAgIGlmIChuYW1lID09PSAnZGlzcGxheScpIHtcbiAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgfVxuICB9IC8vIEludGVybmV0IEV4cGxvcmVyXG5cblxuICBpZiAobm9kZS5jdXJyZW50U3R5bGUpIHtcbiAgICBpZiAobmFtZSA9PT0gJ2Zsb2F0Jykge1xuICAgICAgcmV0dXJuIGFzU3RyaW5nKG5vZGUuY3VycmVudFN0eWxlLmNzc0Zsb2F0IHx8IG5vZGUuY3VycmVudFN0eWxlLnN0eWxlRmxvYXQpO1xuICAgIH1cblxuICAgIHJldHVybiBhc1N0cmluZyhub2RlLmN1cnJlbnRTdHlsZVtjYW1lbGl6ZShuYW1lKV0pO1xuICB9XG5cbiAgcmV0dXJuIGFzU3RyaW5nKG5vZGUuc3R5bGUgJiYgbm9kZS5zdHlsZVtjYW1lbGl6ZShuYW1lKV0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFN0eWxlUHJvcGVydHk7Il0sIm5hbWVzIjpbImNhbWVsaXplIiwicmVxdWlyZSIsImh5cGhlbmF0ZSIsImFzU3RyaW5nIiwidmFsdWUiLCJTdHJpbmciLCJnZXRTdHlsZVByb3BlcnR5Iiwibm9kZSIsIm5hbWUiLCJjb21wdXRlZFN0eWxlIiwid2luZG93IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJkb2N1bWVudCIsImRlZmF1bHRWaWV3IiwiY3VycmVudFN0eWxlIiwiY3NzRmxvYXQiLCJzdHlsZUZsb2F0Iiwic3R5bGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getStyleProperty.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getUnboundedScrollPosition.js":
/*!*************************************************************!*\
  !*** ./node_modules/fbjs/lib/getUnboundedScrollPosition.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ \n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */ function getUnboundedScrollPosition(scrollable) {\n    if (scrollable.Window && scrollable instanceof scrollable.Window) {\n        return {\n            x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n            y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n        };\n    }\n    return {\n        x: scrollable.scrollLeft,\n        y: scrollable.scrollTop\n    };\n}\nmodule.exports = getUnboundedScrollPosition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRVbmJvdW5kZWRTY3JvbGxQb3NpdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztDQU9DLEdBQ0Q7QUFDQTs7Ozs7Ozs7O0NBU0MsR0FFRCxTQUFTQSwyQkFBMkJDLFVBQVU7SUFDNUMsSUFBSUEsV0FBV0MsTUFBTSxJQUFJRCxzQkFBc0JBLFdBQVdDLE1BQU0sRUFBRTtRQUNoRSxPQUFPO1lBQ0xDLEdBQUdGLFdBQVdHLFdBQVcsSUFBSUgsV0FBV0ksUUFBUSxDQUFDQyxlQUFlLENBQUNDLFVBQVU7WUFDM0VDLEdBQUdQLFdBQVdRLFdBQVcsSUFBSVIsV0FBV0ksUUFBUSxDQUFDQyxlQUFlLENBQUNJLFNBQVM7UUFDNUU7SUFDRjtJQUVBLE9BQU87UUFDTFAsR0FBR0YsV0FBV00sVUFBVTtRQUN4QkMsR0FBR1AsV0FBV1MsU0FBUztJQUN6QjtBQUNGO0FBRUFDLE9BQU9DLE9BQU8sR0FBR1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2dldFVuYm91bmRlZFNjcm9sbFBvc2l0aW9uLmpzPzhiZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG4ndXNlIHN0cmljdCc7XG4vKipcbiAqIEdldHMgdGhlIHNjcm9sbCBwb3NpdGlvbiBvZiB0aGUgc3VwcGxpZWQgZWxlbWVudCBvciB3aW5kb3cuXG4gKlxuICogVGhlIHJldHVybiB2YWx1ZXMgYXJlIHVuYm91bmRlZCwgdW5saWtlIGBnZXRTY3JvbGxQb3NpdGlvbmAuIFRoaXMgbWVhbnMgdGhleVxuICogbWF5IGJlIG5lZ2F0aXZlIG9yIGV4Y2VlZCB0aGUgZWxlbWVudCBib3VuZGFyaWVzICh3aGljaCBpcyBwb3NzaWJsZSB1c2luZ1xuICogaW5lcnRpYWwgc2Nyb2xsaW5nKS5cbiAqXG4gKiBAcGFyYW0ge0RPTVdpbmRvd3xET01FbGVtZW50fSBzY3JvbGxhYmxlXG4gKiBAcmV0dXJuIHtvYmplY3R9IE1hcCB3aXRoIGB4YCBhbmQgYHlgIGtleXMuXG4gKi9cblxuZnVuY3Rpb24gZ2V0VW5ib3VuZGVkU2Nyb2xsUG9zaXRpb24oc2Nyb2xsYWJsZSkge1xuICBpZiAoc2Nyb2xsYWJsZS5XaW5kb3cgJiYgc2Nyb2xsYWJsZSBpbnN0YW5jZW9mIHNjcm9sbGFibGUuV2luZG93KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IHNjcm9sbGFibGUucGFnZVhPZmZzZXQgfHwgc2Nyb2xsYWJsZS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCxcbiAgICAgIHk6IHNjcm9sbGFibGUucGFnZVlPZmZzZXQgfHwgc2Nyb2xsYWJsZS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgeDogc2Nyb2xsYWJsZS5zY3JvbGxMZWZ0LFxuICAgIHk6IHNjcm9sbGFibGUuc2Nyb2xsVG9wXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0VW5ib3VuZGVkU2Nyb2xsUG9zaXRpb247Il0sIm5hbWVzIjpbImdldFVuYm91bmRlZFNjcm9sbFBvc2l0aW9uIiwic2Nyb2xsYWJsZSIsIldpbmRvdyIsIngiLCJwYWdlWE9mZnNldCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsTGVmdCIsInkiLCJwYWdlWU9mZnNldCIsInNjcm9sbFRvcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getUnboundedScrollPosition.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/getViewportDimensions.js":
/*!********************************************************!*\
  !*** ./node_modules/fbjs/lib/getViewportDimensions.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks\n */ function getViewportWidth() {\n    var width;\n    if (document.documentElement) {\n        width = document.documentElement.clientWidth;\n    }\n    if (!width && document.body) {\n        width = document.body.clientWidth;\n    }\n    return width || 0;\n}\nfunction getViewportHeight() {\n    var height;\n    if (document.documentElement) {\n        height = document.documentElement.clientHeight;\n    }\n    if (!height && document.body) {\n        height = document.body.clientHeight;\n    }\n    return height || 0;\n}\n/**\n * Gets the viewport dimensions including any scrollbars.\n */ function getViewportDimensions() {\n    return {\n        width: window.innerWidth || getViewportWidth(),\n        height: window.innerHeight || getViewportHeight()\n    };\n}\n/**\n * Gets the viewport dimensions excluding any scrollbars.\n */ getViewportDimensions.withoutScrollbars = function() {\n    return {\n        width: getViewportWidth(),\n        height: getViewportHeight()\n    };\n};\nmodule.exports = getViewportDimensions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRWaWV3cG9ydERpbWVuc2lvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNBO0lBQ1AsSUFBSUM7SUFFSixJQUFJQyxTQUFTQyxlQUFlLEVBQUU7UUFDNUJGLFFBQVFDLFNBQVNDLGVBQWUsQ0FBQ0MsV0FBVztJQUM5QztJQUVBLElBQUksQ0FBQ0gsU0FBU0MsU0FBU0csSUFBSSxFQUFFO1FBQzNCSixRQUFRQyxTQUFTRyxJQUFJLENBQUNELFdBQVc7SUFDbkM7SUFFQSxPQUFPSCxTQUFTO0FBQ2xCO0FBRUEsU0FBU0s7SUFDUCxJQUFJQztJQUVKLElBQUlMLFNBQVNDLGVBQWUsRUFBRTtRQUM1QkksU0FBU0wsU0FBU0MsZUFBZSxDQUFDSyxZQUFZO0lBQ2hEO0lBRUEsSUFBSSxDQUFDRCxVQUFVTCxTQUFTRyxJQUFJLEVBQUU7UUFDNUJFLFNBQVNMLFNBQVNHLElBQUksQ0FBQ0csWUFBWTtJQUNyQztJQUVBLE9BQU9ELFVBQVU7QUFDbkI7QUFDQTs7Q0FFQyxHQUdELFNBQVNFO0lBQ1AsT0FBTztRQUNMUixPQUFPUyxPQUFPQyxVQUFVLElBQUlYO1FBQzVCTyxRQUFRRyxPQUFPRSxXQUFXLElBQUlOO0lBQ2hDO0FBQ0Y7QUFDQTs7Q0FFQyxHQUdERyxzQkFBc0JJLGlCQUFpQixHQUFHO0lBQ3hDLE9BQU87UUFDTFosT0FBT0Q7UUFDUE8sUUFBUUQ7SUFDVjtBQUNGO0FBRUFRLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2dldFZpZXdwb3J0RGltZW5zaW9ucy5qcz8xNzVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICogQHR5cGVjaGVja3NcbiAqL1xuZnVuY3Rpb24gZ2V0Vmlld3BvcnRXaWR0aCgpIHtcbiAgdmFyIHdpZHRoO1xuXG4gIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcbiAgICB3aWR0aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtcbiAgfVxuXG4gIGlmICghd2lkdGggJiYgZG9jdW1lbnQuYm9keSkge1xuICAgIHdpZHRoID0gZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDtcbiAgfVxuXG4gIHJldHVybiB3aWR0aCB8fCAwO1xufVxuXG5mdW5jdGlvbiBnZXRWaWV3cG9ydEhlaWdodCgpIHtcbiAgdmFyIGhlaWdodDtcblxuICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgaGVpZ2h0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDtcbiAgfVxuXG4gIGlmICghaGVpZ2h0ICYmIGRvY3VtZW50LmJvZHkpIHtcbiAgICBoZWlnaHQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDtcbiAgfVxuXG4gIHJldHVybiBoZWlnaHQgfHwgMDtcbn1cbi8qKlxuICogR2V0cyB0aGUgdmlld3BvcnQgZGltZW5zaW9ucyBpbmNsdWRpbmcgYW55IHNjcm9sbGJhcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZXRWaWV3cG9ydERpbWVuc2lvbnMoKSB7XG4gIHJldHVybiB7XG4gICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoIHx8IGdldFZpZXdwb3J0V2lkdGgoKSxcbiAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCB8fCBnZXRWaWV3cG9ydEhlaWdodCgpXG4gIH07XG59XG4vKipcbiAqIEdldHMgdGhlIHZpZXdwb3J0IGRpbWVuc2lvbnMgZXhjbHVkaW5nIGFueSBzY3JvbGxiYXJzLlxuICovXG5cblxuZ2V0Vmlld3BvcnREaW1lbnNpb25zLndpdGhvdXRTY3JvbGxiYXJzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBnZXRWaWV3cG9ydFdpZHRoKCksXG4gICAgaGVpZ2h0OiBnZXRWaWV3cG9ydEhlaWdodCgpXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFZpZXdwb3J0RGltZW5zaW9uczsiXSwibmFtZXMiOlsiZ2V0Vmlld3BvcnRXaWR0aCIsIndpZHRoIiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImJvZHkiLCJnZXRWaWV3cG9ydEhlaWdodCIsImhlaWdodCIsImNsaWVudEhlaWdodCIsImdldFZpZXdwb3J0RGltZW5zaW9ucyIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsIndpdGhvdXRTY3JvbGxiYXJzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/getViewportDimensions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/hyphenate.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenate.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var _uppercasePattern = /([A-Z])/g;\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */ function hyphenate(string) {\n    return string.replace(_uppercasePattern, \"-$1\").toLowerCase();\n}\nmodule.exports = hyphenate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9oeXBoZW5hdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7OztDQU9DLEdBQ0QsSUFBSUEsb0JBQW9CO0FBQ3hCOzs7Ozs7Ozs7OztDQVdDLEdBRUQsU0FBU0MsVUFBVUMsTUFBTTtJQUN2QixPQUFPQSxPQUFPQyxPQUFPLENBQUNILG1CQUFtQixPQUFPSSxXQUFXO0FBQzdEO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2h5cGhlbmF0ZS5qcz9jMGE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cbnZhciBfdXBwZXJjYXNlUGF0dGVybiA9IC8oW0EtWl0pL2c7XG4vKipcbiAqIEh5cGhlbmF0ZXMgYSBjYW1lbGNhc2VkIHN0cmluZywgZm9yIGV4YW1wbGU6XG4gKlxuICogICA+IGh5cGhlbmF0ZSgnYmFja2dyb3VuZENvbG9yJylcbiAqICAgPCBcImJhY2tncm91bmQtY29sb3JcIlxuICpcbiAqIEZvciBDU1Mgc3R5bGUgbmFtZXMsIHVzZSBgaHlwaGVuYXRlU3R5bGVOYW1lYCBpbnN0ZWFkIHdoaWNoIHdvcmtzIHByb3Blcmx5XG4gKiB3aXRoIGFsbCB2ZW5kb3IgcHJlZml4ZXMsIGluY2x1ZGluZyBgbXNgLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBoeXBoZW5hdGUoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZShfdXBwZXJjYXNlUGF0dGVybiwgJy0kMScpLnRvTG93ZXJDYXNlKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaHlwaGVuYXRlOyJdLCJuYW1lcyI6WyJfdXBwZXJjYXNlUGF0dGVybiIsImh5cGhlbmF0ZSIsInN0cmluZyIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/hyphenate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/invariant.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/invariant.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */ \nvar validateFormat =  true ? function(format) {\n    if (format === undefined) {\n        throw new Error(\"invariant(...): Second argument must be a string.\");\n    }\n} : 0;\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments to provide\n * information about what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant will\n * remain to ensure logic does not differ in production.\n */ function invariant(condition, format) {\n    for(var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++){\n        args[_key - 2] = arguments[_key];\n    }\n    validateFormat(format);\n    if (!condition) {\n        var error;\n        if (format === undefined) {\n            error = new Error(\"Minified exception occurred; use the non-minified dev environment \" + \"for the full error message and additional helpful warnings.\");\n        } else {\n            var argIndex = 0;\n            error = new Error(format.replace(/%s/g, function() {\n                return String(args[argIndex++]);\n            }));\n            error.name = \"Invariant Violation\";\n        }\n        error.framesToPop = 1; // Skip invariant's own stack frame.\n        throw error;\n    }\n}\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Q0FPQyxHQUNEO0FBRUEsSUFBSUEsaUJBQWlCQyxLQUFxQyxHQUFHLFNBQVVDLE1BQU07SUFDM0UsSUFBSUEsV0FBV0MsV0FBVztRQUN4QixNQUFNLElBQUlDLE1BQU07SUFDbEI7QUFDRixJQUFJLENBQW9CO0FBQ3hCOzs7Ozs7OztDQVFDLEdBRUQsU0FBU0MsVUFBVUMsU0FBUyxFQUFFSixNQUFNO0lBQ2xDLElBQUssSUFBSUssT0FBT0MsVUFBVUMsTUFBTSxFQUFFQyxPQUFPLElBQUlDLE1BQU1KLE9BQU8sSUFBSUEsT0FBTyxJQUFJLElBQUlLLE9BQU8sR0FBR0EsT0FBT0wsTUFBTUssT0FBUTtRQUMxR0YsSUFBSSxDQUFDRSxPQUFPLEVBQUUsR0FBR0osU0FBUyxDQUFDSSxLQUFLO0lBQ2xDO0lBRUFaLGVBQWVFO0lBRWYsSUFBSSxDQUFDSSxXQUFXO1FBQ2QsSUFBSU87UUFFSixJQUFJWCxXQUFXQyxXQUFXO1lBQ3hCVSxRQUFRLElBQUlULE1BQU0sdUVBQXVFO1FBQzNGLE9BQU87WUFDTCxJQUFJVSxXQUFXO1lBQ2ZELFFBQVEsSUFBSVQsTUFBTUYsT0FBT2EsT0FBTyxDQUFDLE9BQU87Z0JBQ3RDLE9BQU9DLE9BQU9OLElBQUksQ0FBQ0ksV0FBVztZQUNoQztZQUNBRCxNQUFNSSxJQUFJLEdBQUc7UUFDZjtRQUVBSixNQUFNSyxXQUFXLEdBQUcsR0FBRyxvQ0FBb0M7UUFFM0QsTUFBTUw7SUFDUjtBQUNGO0FBRUFNLE9BQU9DLE9BQU8sR0FBR2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcz9jZTllIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZnVuY3Rpb24gKGZvcm1hdCkge1xuICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCguLi4pOiBTZWNvbmQgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZy4nKTtcbiAgfVxufSA6IGZ1bmN0aW9uIChmb3JtYXQpIHt9O1xuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHMgdG8gcHJvdmlkZVxuICogaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZSBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnQgd2lsbFxuICogcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBmb3JtYXQpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDIgPyBfbGVuIC0gMiA6IDApLCBfa2V5ID0gMjsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleSAtIDJdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFsaWRhdGVGb3JtYXQoZm9ybWF0KTtcblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcblxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBTdHJpbmcoYXJnc1thcmdJbmRleCsrXSk7XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gU2tpcCBpbnZhcmlhbnQncyBvd24gc3RhY2sgZnJhbWUuXG5cbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDsiXSwibmFtZXMiOlsidmFsaWRhdGVGb3JtYXQiLCJwcm9jZXNzIiwiZm9ybWF0IiwidW5kZWZpbmVkIiwiRXJyb3IiLCJpbnZhcmlhbnQiLCJjb25kaXRpb24iLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImVycm9yIiwiYXJnSW5kZXgiLCJyZXBsYWNlIiwiU3RyaW5nIiwibmFtZSIsImZyYW1lc1RvUG9wIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/invariant.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/isNode.js":
/*!*****************************************!*\
  !*** ./node_modules/fbjs/lib/isNode.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ /**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */ function isNode(object) {\n    var doc = object ? object.ownerDocument || object : document;\n    var defaultView = doc.defaultView || window;\n    return !!(object && (typeof defaultView.Node === \"function\" ? object instanceof defaultView.Node : typeof object === \"object\" && typeof object.nodeType === \"number\" && typeof object.nodeName === \"string\"));\n}\nmodule.exports = isNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc05vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Ozs7OztDQU9DLEdBRUQ7OztDQUdDLEdBQ0QsU0FBU0EsT0FBT0MsTUFBTTtJQUNwQixJQUFJQyxNQUFNRCxTQUFTQSxPQUFPRSxhQUFhLElBQUlGLFNBQVNHO0lBQ3BELElBQUlDLGNBQWNILElBQUlHLFdBQVcsSUFBSUM7SUFDckMsT0FBTyxDQUFDLENBQUVMLENBQUFBLFVBQVcsUUFBT0ksWUFBWUUsSUFBSSxLQUFLLGFBQWFOLGtCQUFrQkksWUFBWUUsSUFBSSxHQUFHLE9BQU9OLFdBQVcsWUFBWSxPQUFPQSxPQUFPTyxRQUFRLEtBQUssWUFBWSxPQUFPUCxPQUFPUSxRQUFRLEtBQUssUUFBTyxDQUFDO0FBQzdNO0FBRUFDLE9BQU9DLE9BQU8sR0FBR1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzTm9kZS5qcz8zYjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBpc05vZGUob2JqZWN0KSB7XG4gIHZhciBkb2MgPSBvYmplY3QgPyBvYmplY3Qub3duZXJEb2N1bWVudCB8fCBvYmplY3QgOiBkb2N1bWVudDtcbiAgdmFyIGRlZmF1bHRWaWV3ID0gZG9jLmRlZmF1bHRWaWV3IHx8IHdpbmRvdztcbiAgcmV0dXJuICEhKG9iamVjdCAmJiAodHlwZW9mIGRlZmF1bHRWaWV3Lk5vZGUgPT09ICdmdW5jdGlvbicgPyBvYmplY3QgaW5zdGFuY2VvZiBkZWZhdWx0Vmlldy5Ob2RlIDogdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG9iamVjdC5ub2RlVHlwZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG9iamVjdC5ub2RlTmFtZSA9PT0gJ3N0cmluZycpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc05vZGU7Il0sIm5hbWVzIjpbImlzTm9kZSIsIm9iamVjdCIsImRvYyIsIm93bmVyRG9jdW1lbnQiLCJkb2N1bWVudCIsImRlZmF1bHRWaWV3Iiwid2luZG93IiwiTm9kZSIsIm5vZGVUeXBlIiwibm9kZU5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/isNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/isTextNode.js":
/*!*********************************************!*\
  !*** ./node_modules/fbjs/lib/isTextNode.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */ var isNode = __webpack_require__(/*! ./isNode */ \"(app-pages-browser)/./node_modules/fbjs/lib/isNode.js\");\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */ function isTextNode(object) {\n    return isNode(object) && object.nodeType == 3;\n}\nmodule.exports = isTextNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc1RleHROb2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7Q0FPQyxHQUNELElBQUlBLFNBQVNDLG1CQUFPQSxDQUFDLHVFQUFVO0FBQy9COzs7Q0FHQyxHQUdELFNBQVNDLFdBQVdDLE1BQU07SUFDeEIsT0FBT0gsT0FBT0csV0FBV0EsT0FBT0MsUUFBUSxJQUFJO0FBQzlDO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzVGV4dE5vZGUuanM/YzA4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG52YXIgaXNOb2RlID0gcmVxdWlyZShcIi4vaXNOb2RlXCIpO1xuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSB0ZXh0IG5vZGUuXG4gKi9cblxuXG5mdW5jdGlvbiBpc1RleHROb2RlKG9iamVjdCkge1xuICByZXR1cm4gaXNOb2RlKG9iamVjdCkgJiYgb2JqZWN0Lm5vZGVUeXBlID09IDM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNUZXh0Tm9kZTsiXSwibmFtZXMiOlsiaXNOb2RlIiwicmVxdWlyZSIsImlzVGV4dE5vZGUiLCJvYmplY3QiLCJub2RlVHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/isTextNode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/joinClasses.js":
/*!**********************************************!*\
  !*** ./node_modules/fbjs/lib/joinClasses.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */ \n/**\n * Combines multiple className strings into one.\n */ function joinClasses(className) {\n    var newClassName = className || \"\";\n    var argLength = arguments.length;\n    if (argLength > 1) {\n        for(var index = 1; index < argLength; index++){\n            var nextClass = arguments[index];\n            if (nextClass) {\n                newClassName = (newClassName ? newClassName + \" \" : \"\") + nextClass;\n            }\n        }\n    }\n    return newClassName;\n}\nmodule.exports = joinClasses;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9qb2luQ2xhc3Nlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Q0FRQyxHQUNEO0FBQ0E7O0NBRUMsR0FFRCxTQUFTQSxZQUFZQyxTQUFTO0lBQzVCLElBQUlDLGVBQWVELGFBQWE7SUFDaEMsSUFBSUUsWUFBWUMsVUFBVUMsTUFBTTtJQUVoQyxJQUFJRixZQUFZLEdBQUc7UUFDakIsSUFBSyxJQUFJRyxRQUFRLEdBQUdBLFFBQVFILFdBQVdHLFFBQVM7WUFDOUMsSUFBSUMsWUFBWUgsU0FBUyxDQUFDRSxNQUFNO1lBRWhDLElBQUlDLFdBQVc7Z0JBQ2JMLGVBQWUsQ0FBQ0EsZUFBZUEsZUFBZSxNQUFNLEVBQUMsSUFBS0s7WUFDNUQ7UUFDRjtJQUNGO0lBRUEsT0FBT0w7QUFDVDtBQUVBTSxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9qb2luQ2xhc3Nlcy5qcz81ODZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKiBAdHlwZWNoZWNrcyBzdGF0aWMtb25seVxuICovXG4ndXNlIHN0cmljdCc7XG4vKipcbiAqIENvbWJpbmVzIG11bHRpcGxlIGNsYXNzTmFtZSBzdHJpbmdzIGludG8gb25lLlxuICovXG5cbmZ1bmN0aW9uIGpvaW5DbGFzc2VzKGNsYXNzTmFtZSkge1xuICB2YXIgbmV3Q2xhc3NOYW1lID0gY2xhc3NOYW1lIHx8ICcnO1xuICB2YXIgYXJnTGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcblxuICBpZiAoYXJnTGVuZ3RoID4gMSkge1xuICAgIGZvciAodmFyIGluZGV4ID0gMTsgaW5kZXggPCBhcmdMZW5ndGg7IGluZGV4KyspIHtcbiAgICAgIHZhciBuZXh0Q2xhc3MgPSBhcmd1bWVudHNbaW5kZXhdO1xuXG4gICAgICBpZiAobmV4dENsYXNzKSB7XG4gICAgICAgIG5ld0NsYXNzTmFtZSA9IChuZXdDbGFzc05hbWUgPyBuZXdDbGFzc05hbWUgKyAnICcgOiAnJykgKyBuZXh0Q2xhc3M7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld0NsYXNzTmFtZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBqb2luQ2xhc3NlczsiXSwibmFtZXMiOlsiam9pbkNsYXNzZXMiLCJjbGFzc05hbWUiLCJuZXdDbGFzc05hbWUiLCJhcmdMZW5ndGgiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJpbmRleCIsIm5leHRDbGFzcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/joinClasses.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/mapObject.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/mapObject.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ \nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */ function mapObject(object, callback, context) {\n    if (!object) {\n        return null;\n    }\n    var result = {};\n    for(var name in object){\n        if (hasOwnProperty.call(object, name)) {\n            result[name] = callback.call(context, object[name], name, object);\n        }\n    }\n    return result;\n}\nmodule.exports = mapObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9tYXBPYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztDQU1DLEdBQ0Q7QUFFQSxJQUFJQSxpQkFBaUJDLE9BQU9DLFNBQVMsQ0FBQ0YsY0FBYztBQUNwRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBcUJDLEdBRUQsU0FBU0csVUFBVUMsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLE9BQU87SUFDMUMsSUFBSSxDQUFDRixRQUFRO1FBQ1gsT0FBTztJQUNUO0lBRUEsSUFBSUcsU0FBUyxDQUFDO0lBRWQsSUFBSyxJQUFJQyxRQUFRSixPQUFRO1FBQ3ZCLElBQUlKLGVBQWVTLElBQUksQ0FBQ0wsUUFBUUksT0FBTztZQUNyQ0QsTUFBTSxDQUFDQyxLQUFLLEdBQUdILFNBQVNJLElBQUksQ0FBQ0gsU0FBU0YsTUFBTSxDQUFDSSxLQUFLLEVBQUVBLE1BQU1KO1FBQzVEO0lBQ0Y7SUFFQSxPQUFPRztBQUNUO0FBRUFHLE9BQU9DLE9BQU8sR0FBR1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL21hcE9iamVjdC5qcz82Zjk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG4vKipcbiAqIEV4ZWN1dGVzIHRoZSBwcm92aWRlZCBgY2FsbGJhY2tgIG9uY2UgZm9yIGVhY2ggZW51bWVyYWJsZSBvd24gcHJvcGVydHkgaW4gdGhlXG4gKiBvYmplY3QgYW5kIGNvbnN0cnVjdHMgYSBuZXcgb2JqZWN0IGZyb20gdGhlIHJlc3VsdHMuIFRoZSBgY2FsbGJhY2tgIGlzXG4gKiBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzOlxuICpcbiAqICAtIHRoZSBwcm9wZXJ0eSB2YWx1ZVxuICogIC0gdGhlIHByb3BlcnR5IG5hbWVcbiAqICAtIHRoZSBvYmplY3QgYmVpbmcgdHJhdmVyc2VkXG4gKlxuICogUHJvcGVydGllcyB0aGF0IGFyZSBhZGRlZCBhZnRlciB0aGUgY2FsbCB0byBgbWFwT2JqZWN0YCB3aWxsIG5vdCBiZSB2aXNpdGVkXG4gKiBieSBgY2FsbGJhY2tgLiBJZiB0aGUgdmFsdWVzIG9mIGV4aXN0aW5nIHByb3BlcnRpZXMgYXJlIGNoYW5nZWQsIHRoZSB2YWx1ZVxuICogcGFzc2VkIHRvIGBjYWxsYmFja2Agd2lsbCBiZSB0aGUgdmFsdWUgYXQgdGhlIHRpbWUgYG1hcE9iamVjdGAgdmlzaXRzIHRoZW0uXG4gKiBQcm9wZXJ0aWVzIHRoYXQgYXJlIGRlbGV0ZWQgYmVmb3JlIGJlaW5nIHZpc2l0ZWQgYXJlIG5vdCB2aXNpdGVkLlxuICpcbiAqIEBncmVwIGZ1bmN0aW9uIG9iamVjdE1hcCgpXG4gKiBAZ3JlcCBmdW5jdGlvbiBvYmpNYXAoKVxuICpcbiAqIEBwYXJhbSB7P29iamVjdH0gb2JqZWN0XG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHBhcmFtIHsqfSBjb250ZXh0XG4gKiBAcmV0dXJuIHs/b2JqZWN0fVxuICovXG5cbmZ1bmN0aW9uIG1hcE9iamVjdChvYmplY3QsIGNhbGxiYWNrLCBjb250ZXh0KSB7XG4gIGlmICghb2JqZWN0KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgcmVzdWx0ID0ge307XG5cbiAgZm9yICh2YXIgbmFtZSBpbiBvYmplY3QpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIG5hbWUpKSB7XG4gICAgICByZXN1bHRbbmFtZV0gPSBjYWxsYmFjay5jYWxsKGNvbnRleHQsIG9iamVjdFtuYW1lXSwgbmFtZSwgb2JqZWN0KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcE9iamVjdDsiXSwibmFtZXMiOlsiaGFzT3duUHJvcGVydHkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJtYXBPYmplY3QiLCJvYmplY3QiLCJjYWxsYmFjayIsImNvbnRleHQiLCJyZXN1bHQiLCJuYW1lIiwiY2FsbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/mapObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/memoizeStringOnly.js":
/*!****************************************************!*\
  !*** ./node_modules/fbjs/lib/memoizeStringOnly.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */ \n/**\n * Memoizes the return value of a function that accepts one string argument.\n */ function memoizeStringOnly(callback) {\n    var cache = {};\n    return function(string) {\n        if (!cache.hasOwnProperty(string)) {\n            cache[string] = callback.call(this, string);\n        }\n        return cache[string];\n    };\n}\nmodule.exports = memoizeStringOnly;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9tZW1vaXplU3RyaW5nT25seS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Q0FRQyxHQUNEO0FBQ0E7O0NBRUMsR0FFRCxTQUFTQSxrQkFBa0JDLFFBQVE7SUFDakMsSUFBSUMsUUFBUSxDQUFDO0lBQ2IsT0FBTyxTQUFVQyxNQUFNO1FBQ3JCLElBQUksQ0FBQ0QsTUFBTUUsY0FBYyxDQUFDRCxTQUFTO1lBQ2pDRCxLQUFLLENBQUNDLE9BQU8sR0FBR0YsU0FBU0ksSUFBSSxDQUFDLElBQUksRUFBRUY7UUFDdEM7UUFFQSxPQUFPRCxLQUFLLENBQUNDLE9BQU87SUFDdEI7QUFDRjtBQUVBRyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9tZW1vaXplU3RyaW5nT25seS5qcz9iMjhmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKiBAdHlwZWNoZWNrcyBzdGF0aWMtb25seVxuICovXG4ndXNlIHN0cmljdCc7XG4vKipcbiAqIE1lbW9pemVzIHRoZSByZXR1cm4gdmFsdWUgb2YgYSBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgb25lIHN0cmluZyBhcmd1bWVudC5cbiAqL1xuXG5mdW5jdGlvbiBtZW1vaXplU3RyaW5nT25seShjYWxsYmFjaykge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgICBpZiAoIWNhY2hlLmhhc093blByb3BlcnR5KHN0cmluZykpIHtcbiAgICAgIGNhY2hlW3N0cmluZ10gPSBjYWxsYmFjay5jYWxsKHRoaXMsIHN0cmluZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNhY2hlW3N0cmluZ107XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWVtb2l6ZVN0cmluZ09ubHk7Il0sIm5hbWVzIjpbIm1lbW9pemVTdHJpbmdPbmx5IiwiY2FsbGJhY2siLCJjYWNoZSIsInN0cmluZyIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/memoizeStringOnly.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js":
/*!*********************************************!*\
  !*** ./node_modules/fbjs/lib/nullthrows.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */ var nullthrows = function nullthrows(x) {\n    if (x != null) {\n        return x;\n    }\n    throw new Error(\"Got unexpected null or undefined\");\n};\nmodule.exports = nullthrows;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9udWxsdGhyb3dzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWI7Ozs7Ozs7Q0FPQyxHQUNELElBQUlBLGFBQWEsU0FBU0EsV0FBV0MsQ0FBQztJQUNwQyxJQUFJQSxLQUFLLE1BQU07UUFDYixPQUFPQTtJQUNUO0lBRUEsTUFBTSxJQUFJQyxNQUFNO0FBQ2xCO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL251bGx0aHJvd3MuanM/ZTRkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xudmFyIG51bGx0aHJvd3MgPSBmdW5jdGlvbiBudWxsdGhyb3dzKHgpIHtcbiAgaWYgKHggIT0gbnVsbCkge1xuICAgIHJldHVybiB4O1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKFwiR290IHVuZXhwZWN0ZWQgbnVsbCBvciB1bmRlZmluZWRcIik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IG51bGx0aHJvd3M7Il0sIm5hbWVzIjpbIm51bGx0aHJvd3MiLCJ4IiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/nullthrows.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/setImmediate.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/setImmediate.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */  // setimmediate adds setImmediate to the global. We want to make sure we export\n// the actual function.\n__webpack_require__(/*! setimmediate */ \"(app-pages-browser)/./node_modules/next/dist/compiled/setimmediate/setImmediate.js\");\nmodule.exports = __webpack_require__.g.setImmediate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9zZXRJbW1lZGlhdGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztDQU1DLEdBQ0QsQ0FBYywrRUFBK0U7QUFDN0YsdUJBQXVCO0FBRXZCQSxtQkFBT0EsQ0FBQyx3R0FBYztBQUV0QkMsT0FBT0MsT0FBTyxHQUFHQyxxQkFBTUEsQ0FBQ0MsWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvc2V0SW1tZWRpYXRlLmpzPzg2NTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cbid1c2Ugc3RyaWN0JzsgLy8gc2V0aW1tZWRpYXRlIGFkZHMgc2V0SW1tZWRpYXRlIHRvIHRoZSBnbG9iYWwuIFdlIHdhbnQgdG8gbWFrZSBzdXJlIHdlIGV4cG9ydFxuLy8gdGhlIGFjdHVhbCBmdW5jdGlvbi5cblxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuc2V0SW1tZWRpYXRlOyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImdsb2JhbCIsInNldEltbWVkaWF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/setImmediate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fbjs/lib/warning.js":
/*!******************************************!*\
  !*** ./node_modules/fbjs/lib/warning.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */ \nvar emptyFunction = __webpack_require__(/*! ./emptyFunction */ \"(app-pages-browser)/./node_modules/fbjs/lib/emptyFunction.js\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */ function printWarning(format) {\n    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        args[_key - 1] = arguments[_key];\n    }\n    var argIndex = 0;\n    var message = \"Warning: \" + format.replace(/%s/g, function() {\n        return args[argIndex++];\n    });\n    if (typeof console !== \"undefined\") {\n        console.error(message);\n    }\n    try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n    } catch (x) {}\n}\nvar warning =  true ? function(condition, format) {\n    if (format === undefined) {\n        throw new Error(\"`warning(condition, format, ...args)` requires a warning \" + \"message argument\");\n    }\n    if (!condition) {\n        for(var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++){\n            args[_key2 - 2] = arguments[_key2];\n        }\n        printWarning.apply(void 0, [\n            format\n        ].concat(args));\n    }\n} : 0;\nmodule.exports = warning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi93YXJuaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Q0FNQyxHQUNEO0FBRUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyxxRkFBaUI7QUFDN0M7Ozs7O0NBS0MsR0FHRCxTQUFTQyxhQUFhQyxNQUFNO0lBQzFCLElBQUssSUFBSUMsT0FBT0MsVUFBVUMsTUFBTSxFQUFFQyxPQUFPLElBQUlDLE1BQU1KLE9BQU8sSUFBSUEsT0FBTyxJQUFJLElBQUlLLE9BQU8sR0FBR0EsT0FBT0wsTUFBTUssT0FBUTtRQUMxR0YsSUFBSSxDQUFDRSxPQUFPLEVBQUUsR0FBR0osU0FBUyxDQUFDSSxLQUFLO0lBQ2xDO0lBRUEsSUFBSUMsV0FBVztJQUNmLElBQUlDLFVBQVUsY0FBY1IsT0FBT1MsT0FBTyxDQUFDLE9BQU87UUFDaEQsT0FBT0wsSUFBSSxDQUFDRyxXQUFXO0lBQ3pCO0lBRUEsSUFBSSxPQUFPRyxZQUFZLGFBQWE7UUFDbENBLFFBQVFDLEtBQUssQ0FBQ0g7SUFDaEI7SUFFQSxJQUFJO1FBQ0YscUNBQXFDO1FBQ3JDLHdFQUF3RTtRQUN4RSx5REFBeUQ7UUFDekQsTUFBTSxJQUFJSSxNQUFNSjtJQUNsQixFQUFFLE9BQU9LLEdBQUcsQ0FBQztBQUNmO0FBRUEsSUFBSUMsVUFBVUMsS0FBcUMsR0FBRyxTQUFVQyxTQUFTLEVBQUVoQixNQUFNO0lBQy9FLElBQUlBLFdBQVdpQixXQUFXO1FBQ3hCLE1BQU0sSUFBSUwsTUFBTSw4REFBOEQ7SUFDaEY7SUFFQSxJQUFJLENBQUNJLFdBQVc7UUFDZCxJQUFLLElBQUlFLFFBQVFoQixVQUFVQyxNQUFNLEVBQUVDLE9BQU8sSUFBSUMsTUFBTWEsUUFBUSxJQUFJQSxRQUFRLElBQUksSUFBSUMsUUFBUSxHQUFHQSxRQUFRRCxPQUFPQyxRQUFTO1lBQ2pIZixJQUFJLENBQUNlLFFBQVEsRUFBRSxHQUFHakIsU0FBUyxDQUFDaUIsTUFBTTtRQUNwQztRQUVBcEIsYUFBYXFCLEtBQUssQ0FBQyxLQUFLLEdBQUc7WUFBQ3BCO1NBQU8sQ0FBQ3FCLE1BQU0sQ0FBQ2pCO0lBQzdDO0FBQ0YsSUFBSVAsQ0FBYUE7QUFDakJ5QixPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi93YXJuaW5nLmpzPzA3OGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKFwiLi9lbXB0eUZ1bmN0aW9uXCIpO1xuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxuXG5mdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0KSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHZhciBhcmdJbmRleCA9IDA7XG4gIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICB9KTtcblxuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfSBjYXRjaCAoeCkge31cbn1cblxudmFyIHdhcm5pbmcgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBmdW5jdGlvbiAoY29uZGl0aW9uLCBmb3JtYXQpIHtcbiAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICsgJ21lc3NhZ2UgYXJndW1lbnQnKTtcbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yID4gMiA/IF9sZW4yIC0gMiA6IDApLCBfa2V5MiA9IDI7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgIGFyZ3NbX2tleTIgLSAyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgfVxuXG4gICAgcHJpbnRXYXJuaW5nLmFwcGx5KHZvaWQgMCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgfVxufSA6IGVtcHR5RnVuY3Rpb247XG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7Il0sIm5hbWVzIjpbImVtcHR5RnVuY3Rpb24iLCJyZXF1aXJlIiwicHJpbnRXYXJuaW5nIiwiZm9ybWF0IiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJhcmdJbmRleCIsIm1lc3NhZ2UiLCJyZXBsYWNlIiwiY29uc29sZSIsImVycm9yIiwiRXJyb3IiLCJ4Iiwid2FybmluZyIsInByb2Nlc3MiLCJjb25kaXRpb24iLCJ1bmRlZmluZWQiLCJfbGVuMiIsIl9rZXkyIiwiYXBwbHkiLCJjb25jYXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fbjs/lib/warning.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar reactIs = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */ var REACT_STATICS = {\n    childContextTypes: true,\n    contextType: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromError: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\nvar FORWARD_REF_STATICS = {\n    \"$$typeof\": true,\n    render: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true\n};\nvar MEMO_STATICS = {\n    \"$$typeof\": true,\n    compare: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true,\n    type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\nfunction getStatics(component) {\n    // React v16.11 and below\n    if (reactIs.isMemo(component)) {\n        return MEMO_STATICS;\n    } // React v16.12 and above\n    return TYPE_STATICS[component[\"$$typeof\"]] || REACT_STATICS;\n}\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== \"string\") {\n        // don't hoist over string (html) components\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n        var keys = getOwnPropertyNames(sourceComponent);\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n        var targetStatics = getStatics(targetComponent);\n        var sourceStatics = getStatics(sourceComponent);\n        for(var i = 0; i < keys.length; ++i){\n            var key = keys[i];\n            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try {\n                    // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n    }\n    return targetComponent;\n}\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLFVBQVVDLG1CQUFPQSxDQUFDO0FBRXRCOzs7Q0FHQyxHQUNELElBQUlDLGdCQUFnQjtJQUNsQkMsbUJBQW1CO0lBQ25CQyxhQUFhO0lBQ2JDLGNBQWM7SUFDZEMsY0FBYztJQUNkQyxhQUFhO0lBQ2JDLGlCQUFpQjtJQUNqQkMsMEJBQTBCO0lBQzFCQywwQkFBMEI7SUFDMUJDLFFBQVE7SUFDUkMsV0FBVztJQUNYQyxNQUFNO0FBQ1I7QUFDQSxJQUFJQyxnQkFBZ0I7SUFDbEJDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLE9BQU87QUFDVDtBQUNBLElBQUlDLHNCQUFzQjtJQUN4QixZQUFZO0lBQ1pDLFFBQVE7SUFDUmpCLGNBQWM7SUFDZEMsYUFBYTtJQUNiSyxXQUFXO0FBQ2I7QUFDQSxJQUFJWSxlQUFlO0lBQ2pCLFlBQVk7SUFDWkMsU0FBUztJQUNUbkIsY0FBYztJQUNkQyxhQUFhO0lBQ2JLLFdBQVc7SUFDWEMsTUFBTTtBQUNSO0FBQ0EsSUFBSWEsZUFBZSxDQUFDO0FBQ3BCQSxZQUFZLENBQUMxQixRQUFRMkIsVUFBVSxDQUFDLEdBQUdMO0FBQ25DSSxZQUFZLENBQUMxQixRQUFRNEIsSUFBSSxDQUFDLEdBQUdKO0FBRTdCLFNBQVNLLFdBQVdDLFNBQVM7SUFDM0IseUJBQXlCO0lBQ3pCLElBQUk5QixRQUFRK0IsTUFBTSxDQUFDRCxZQUFZO1FBQzdCLE9BQU9OO0lBQ1QsRUFBRSx5QkFBeUI7SUFHM0IsT0FBT0UsWUFBWSxDQUFDSSxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUk1QjtBQUNoRDtBQUVBLElBQUk4QixpQkFBaUJDLE9BQU9ELGNBQWM7QUFDMUMsSUFBSUUsc0JBQXNCRCxPQUFPQyxtQkFBbUI7QUFDcEQsSUFBSUMsd0JBQXdCRixPQUFPRSxxQkFBcUI7QUFDeEQsSUFBSUMsMkJBQTJCSCxPQUFPRyx3QkFBd0I7QUFDOUQsSUFBSUMsaUJBQWlCSixPQUFPSSxjQUFjO0FBQzFDLElBQUlDLGtCQUFrQkwsT0FBT2hCLFNBQVM7QUFDdEMsU0FBU3NCLHFCQUFxQkMsZUFBZSxFQUFFQyxlQUFlLEVBQUVDLFNBQVM7SUFDdkUsSUFBSSxPQUFPRCxvQkFBb0IsVUFBVTtRQUN2Qyw0Q0FBNEM7UUFDNUMsSUFBSUgsaUJBQWlCO1lBQ25CLElBQUlLLHFCQUFxQk4sZUFBZUk7WUFFeEMsSUFBSUUsc0JBQXNCQSx1QkFBdUJMLGlCQUFpQjtnQkFDaEVDLHFCQUFxQkMsaUJBQWlCRyxvQkFBb0JEO1lBQzVEO1FBQ0Y7UUFFQSxJQUFJRSxPQUFPVixvQkFBb0JPO1FBRS9CLElBQUlOLHVCQUF1QjtZQUN6QlMsT0FBT0EsS0FBS0MsTUFBTSxDQUFDVixzQkFBc0JNO1FBQzNDO1FBRUEsSUFBSUssZ0JBQWdCakIsV0FBV1c7UUFDL0IsSUFBSU8sZ0JBQWdCbEIsV0FBV1k7UUFFL0IsSUFBSyxJQUFJTyxJQUFJLEdBQUdBLElBQUlKLEtBQUs1QixNQUFNLEVBQUUsRUFBRWdDLEVBQUc7WUFDcEMsSUFBSUMsTUFBTUwsSUFBSSxDQUFDSSxFQUFFO1lBRWpCLElBQUksQ0FBQ2xDLGFBQWEsQ0FBQ21DLElBQUksSUFBSSxDQUFFUCxDQUFBQSxhQUFhQSxTQUFTLENBQUNPLElBQUksS0FBSyxDQUFFRixDQUFBQSxpQkFBaUJBLGFBQWEsQ0FBQ0UsSUFBSSxLQUFLLENBQUVILENBQUFBLGlCQUFpQkEsYUFBYSxDQUFDRyxJQUFJLEdBQUc7Z0JBQzdJLElBQUlDLGFBQWFkLHlCQUF5QkssaUJBQWlCUTtnQkFFM0QsSUFBSTtvQkFDRiwyQ0FBMkM7b0JBQzNDakIsZUFBZVEsaUJBQWlCUyxLQUFLQztnQkFDdkMsRUFBRSxPQUFPQyxHQUFHLENBQUM7WUFDZjtRQUNGO0lBQ0Y7SUFFQSxPQUFPWDtBQUNUO0FBRUFZLE9BQU9DLE9BQU8sR0FBR2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkxZGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOlsicmVhY3RJcyIsInJlcXVpcmUiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJuYW1lIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJndW1lbnRzIiwiYXJpdHkiLCJGT1JXQVJEX1JFRl9TVEFUSUNTIiwicmVuZGVyIiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsIkZvcndhcmRSZWYiLCJNZW1vIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwiY29uY2F0IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJpIiwia2V5IiwiZGVzY3JpcHRvciIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/api/app-dynamic.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default from dynamic */ _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/lib/app-dynamic */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-dynamic.js\");\n/* harmony import */ var _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _shared_lib_app_dynamic__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n //# sourceMappingURL=app-dynamic.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2FwcC1keW5hbWljLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQztBQUNVLENBRXBELHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9hcHAtZHluYW1pYy5qcz9jYmMzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuLi9zaGFyZWQvbGliL2FwcC1keW5hbWljXCI7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4uL3NoYXJlZC9saWIvYXBwLWR5bmFtaWNcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLWR5bmFtaWMuanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdELENBRWhELHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzPzFkMjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar assign = Object.assign.bind(Object);\nmodule.exports = assign;\nmodule.exports[\"default\"] = module.exports; //# sourceMappingURL=object-assign.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL29iamVjdC1hc3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxTQUFTQyxPQUFPRCxNQUFNLENBQUNFLElBQUksQ0FBQ0Q7QUFDaENFLE9BQU9DLE9BQU8sR0FBR0o7QUFDakJHLHlCQUFzQixHQUFHQSxPQUFPQyxPQUFPLEVBRXZDLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzP2U3ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgYXNzaWduID0gT2JqZWN0LmFzc2lnbi5iaW5kKE9iamVjdCk7XG5tb2R1bGUuZXhwb3J0cyA9IGFzc2lnbjtcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBtb2R1bGUuZXhwb3J0cztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LWFzc2lnbi5qcy5tYXAiXSwibmFtZXMiOlsiYXNzaWduIiwiT2JqZWN0IiwiYmluZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\"); //# sourceMappingURL=process.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxpQkFBaUJDO0FBQ3JCQyxPQUFPQyxPQUFPLEdBQUcsQ0FBQyxDQUFDSCxrQkFBa0JJLHFCQUFNQSxDQUFDQyxPQUFPLEtBQUssT0FBTyxLQUFLLElBQUlMLGdCQUFnQk0sR0FBRyxLQUFLLE9BQVEsRUFBQ0wsbUJBQW1CRyxxQkFBTUEsQ0FBQ0MsT0FBTyxLQUFLLE9BQU8sS0FBSyxJQUFJSixpQkFBaUJLLEdBQUcsTUFBTSxXQUFXRixxQkFBTUEsQ0FBQ0MsT0FBTyxHQUFHRSxtQkFBT0EsQ0FBQyw0R0FBNEIsR0FFelAsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/Y2E2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOlsiX2dsb2JhbF9wcm9jZXNzIiwiX2dsb2JhbF9wcm9jZXNzMSIsIm1vZHVsZSIsImV4cG9ydHMiLCJnbG9iYWwiLCJwcm9jZXNzIiwiZW52IiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n\n(function() {\n    var e = {\n        229: function(e) {\n            var t = e.exports = {};\n            var r;\n            var n;\n            function defaultSetTimout() {\n                throw new Error(\"setTimeout has not been defined\");\n            }\n            function defaultClearTimeout() {\n                throw new Error(\"clearTimeout has not been defined\");\n            }\n            (function() {\n                try {\n                    if (typeof setTimeout === \"function\") {\n                        r = setTimeout;\n                    } else {\n                        r = defaultSetTimout;\n                    }\n                } catch (e) {\n                    r = defaultSetTimout;\n                }\n                try {\n                    if (typeof clearTimeout === \"function\") {\n                        n = clearTimeout;\n                    } else {\n                        n = defaultClearTimeout;\n                    }\n                } catch (e) {\n                    n = defaultClearTimeout;\n                }\n            })();\n            function runTimeout(e) {\n                if (r === setTimeout) {\n                    return setTimeout(e, 0);\n                }\n                if ((r === defaultSetTimout || !r) && setTimeout) {\n                    r = setTimeout;\n                    return setTimeout(e, 0);\n                }\n                try {\n                    return r(e, 0);\n                } catch (t) {\n                    try {\n                        return r.call(null, e, 0);\n                    } catch (t) {\n                        return r.call(this, e, 0);\n                    }\n                }\n            }\n            function runClearTimeout(e) {\n                if (n === clearTimeout) {\n                    return clearTimeout(e);\n                }\n                if ((n === defaultClearTimeout || !n) && clearTimeout) {\n                    n = clearTimeout;\n                    return clearTimeout(e);\n                }\n                try {\n                    return n(e);\n                } catch (t) {\n                    try {\n                        return n.call(null, e);\n                    } catch (t) {\n                        return n.call(this, e);\n                    }\n                }\n            }\n            var i = [];\n            var o = false;\n            var u;\n            var a = -1;\n            function cleanUpNextTick() {\n                if (!o || !u) {\n                    return;\n                }\n                o = false;\n                if (u.length) {\n                    i = u.concat(i);\n                } else {\n                    a = -1;\n                }\n                if (i.length) {\n                    drainQueue();\n                }\n            }\n            function drainQueue() {\n                if (o) {\n                    return;\n                }\n                var e = runTimeout(cleanUpNextTick);\n                o = true;\n                var t = i.length;\n                while(t){\n                    u = i;\n                    i = [];\n                    while(++a < t){\n                        if (u) {\n                            u[a].run();\n                        }\n                    }\n                    a = -1;\n                    t = i.length;\n                }\n                u = null;\n                o = false;\n                runClearTimeout(e);\n            }\n            t.nextTick = function(e) {\n                var t = new Array(arguments.length - 1);\n                if (arguments.length > 1) {\n                    for(var r = 1; r < arguments.length; r++){\n                        t[r - 1] = arguments[r];\n                    }\n                }\n                i.push(new Item(e, t));\n                if (i.length === 1 && !o) {\n                    runTimeout(drainQueue);\n                }\n            };\n            function Item(e, t) {\n                this.fun = e;\n                this.array = t;\n            }\n            Item.prototype.run = function() {\n                this.fun.apply(null, this.array);\n            };\n            t.title = \"browser\";\n            t.browser = true;\n            t.env = {};\n            t.argv = [];\n            t.version = \"\";\n            t.versions = {};\n            function noop() {}\n            t.on = noop;\n            t.addListener = noop;\n            t.once = noop;\n            t.off = noop;\n            t.removeListener = noop;\n            t.removeAllListeners = noop;\n            t.emit = noop;\n            t.prependListener = noop;\n            t.prependOnceListener = noop;\n            t.listeners = function(e) {\n                return [];\n            };\n            t.binding = function(e) {\n                throw new Error(\"process.binding is not supported\");\n            };\n            t.cwd = function() {\n                return \"/\";\n            };\n            t.chdir = function(e) {\n                throw new Error(\"process.chdir is not supported\");\n            };\n            t.umask = function() {\n                return 0;\n            };\n        }\n    };\n    var t = {};\n    function __nccwpck_require__(r) {\n        var n = t[r];\n        if (n !== undefined) {\n            return n.exports;\n        }\n        var i = t[r] = {\n            exports: {}\n        };\n        var o = true;\n        try {\n            e[r](i, i.exports, __nccwpck_require__);\n            o = false;\n        } finally{\n            if (o) delete t[r];\n        }\n        return i.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var r = __nccwpck_require__(229);\n    module.exports = r;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/setimmediate/setImmediate.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/setimmediate/setImmediate.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n(function() {\n    var e = {\n        189: function() {\n            (function(e, t) {\n                \"use strict\";\n                if (e.setImmediate) {\n                    return;\n                }\n                var n = 1;\n                var a = {};\n                var s = false;\n                var i = e.document;\n                var r;\n                function setImmediate(e) {\n                    if (typeof e !== \"function\") {\n                        e = new Function(\"\" + e);\n                    }\n                    var t = new Array(arguments.length - 1);\n                    for(var s = 0; s < t.length; s++){\n                        t[s] = arguments[s + 1];\n                    }\n                    var i = {\n                        callback: e,\n                        args: t\n                    };\n                    a[n] = i;\n                    r(n);\n                    return n++;\n                }\n                function clearImmediate(e) {\n                    delete a[e];\n                }\n                function run(e) {\n                    var n = e.callback;\n                    var a = e.args;\n                    switch(a.length){\n                        case 0:\n                            n();\n                            break;\n                        case 1:\n                            n(a[0]);\n                            break;\n                        case 2:\n                            n(a[0], a[1]);\n                            break;\n                        case 3:\n                            n(a[0], a[1], a[2]);\n                            break;\n                        default:\n                            n.apply(t, a);\n                            break;\n                    }\n                }\n                function runIfPresent(e) {\n                    if (s) {\n                        setTimeout(runIfPresent, 0, e);\n                    } else {\n                        var t = a[e];\n                        if (t) {\n                            s = true;\n                            try {\n                                run(t);\n                            } finally{\n                                clearImmediate(e);\n                                s = false;\n                            }\n                        }\n                    }\n                }\n                function installNextTickImplementation() {\n                    r = function(e) {\n                        process.nextTick(function() {\n                            runIfPresent(e);\n                        });\n                    };\n                }\n                function canUsePostMessage() {\n                    if (e.postMessage && !e.importScripts) {\n                        var t = true;\n                        var n = e.onmessage;\n                        e.onmessage = function() {\n                            t = false;\n                        };\n                        e.postMessage(\"\", \"*\");\n                        e.onmessage = n;\n                        return t;\n                    }\n                }\n                function installPostMessageImplementation() {\n                    var t = \"setImmediate$\" + Math.random() + \"$\";\n                    var onGlobalMessage = function(n) {\n                        if (n.source === e && typeof n.data === \"string\" && n.data.indexOf(t) === 0) {\n                            runIfPresent(+n.data.slice(t.length));\n                        }\n                    };\n                    if (e.addEventListener) {\n                        e.addEventListener(\"message\", onGlobalMessage, false);\n                    } else {\n                        e.attachEvent(\"onmessage\", onGlobalMessage);\n                    }\n                    r = function(n) {\n                        e.postMessage(t + n, \"*\");\n                    };\n                }\n                function installMessageChannelImplementation() {\n                    var e = new MessageChannel;\n                    e.port1.onmessage = function(e) {\n                        var t = e.data;\n                        runIfPresent(t);\n                    };\n                    r = function(t) {\n                        e.port2.postMessage(t);\n                    };\n                }\n                function installReadyStateChangeImplementation() {\n                    var e = i.documentElement;\n                    r = function(t) {\n                        var n = i.createElement(\"script\");\n                        n.onreadystatechange = function() {\n                            runIfPresent(t);\n                            n.onreadystatechange = null;\n                            e.removeChild(n);\n                            n = null;\n                        };\n                        e.appendChild(n);\n                    };\n                }\n                function installSetTimeoutImplementation() {\n                    r = function(e) {\n                        setTimeout(runIfPresent, 0, e);\n                    };\n                }\n                var o = Object.getPrototypeOf && Object.getPrototypeOf(e);\n                o = o && o.setTimeout ? o : e;\n                if (({}).toString.call(e.process) === \"[object process]\") {\n                    installNextTickImplementation();\n                } else if (canUsePostMessage()) {\n                    installPostMessageImplementation();\n                } else if (e.MessageChannel) {\n                    installMessageChannelImplementation();\n                } else if (i && \"onreadystatechange\" in i.createElement(\"script\")) {\n                    installReadyStateChangeImplementation();\n                } else {\n                    installSetTimeoutImplementation();\n                }\n                o.setImmediate = setImmediate;\n                o.clearImmediate = clearImmediate;\n            })(typeof self === \"undefined\" ? typeof __webpack_require__.g === \"undefined\" ? this : __webpack_require__.g : self);\n        }\n    };\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var t = {};\n    e[189]();\n    module.exports = t;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/setimmediate/setImmediate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n        var hasSymbol = typeof Symbol === \"function\" && Symbol.for;\n        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for(\"react.element\") : 0xeac7;\n        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for(\"react.portal\") : 0xeaca;\n        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for(\"react.fragment\") : 0xeacb;\n        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for(\"react.strict_mode\") : 0xeacc;\n        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for(\"react.profiler\") : 0xead2;\n        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for(\"react.provider\") : 0xeacd;\n        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for(\"react.context\") : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n        // (unstable) APIs that have been removed. Can we remove the symbols?\n        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for(\"react.async_mode\") : 0xeacf;\n        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for(\"react.concurrent_mode\") : 0xeacf;\n        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for(\"react.forward_ref\") : 0xead0;\n        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for(\"react.suspense\") : 0xead1;\n        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for(\"react.suspense_list\") : 0xead8;\n        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for(\"react.memo\") : 0xead3;\n        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for(\"react.lazy\") : 0xead4;\n        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for(\"react.block\") : 0xead9;\n        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for(\"react.fundamental\") : 0xead5;\n        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for(\"react.responder\") : 0xead6;\n        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for(\"react.scope\") : 0xead7;\n        function isValidElementType(type) {\n            return typeof type === \"string\" || typeof type === \"function\" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n            type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === \"object\" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n        }\n        function typeOf(object) {\n            if (typeof object === \"object\" && object !== null) {\n                var $$typeof = object.$$typeof;\n                switch($$typeof){\n                    case REACT_ELEMENT_TYPE:\n                        var type = object.type;\n                        switch(type){\n                            case REACT_ASYNC_MODE_TYPE:\n                            case REACT_CONCURRENT_MODE_TYPE:\n                            case REACT_FRAGMENT_TYPE:\n                            case REACT_PROFILER_TYPE:\n                            case REACT_STRICT_MODE_TYPE:\n                            case REACT_SUSPENSE_TYPE:\n                                return type;\n                            default:\n                                var $$typeofType = type && type.$$typeof;\n                                switch($$typeofType){\n                                    case REACT_CONTEXT_TYPE:\n                                    case REACT_FORWARD_REF_TYPE:\n                                    case REACT_LAZY_TYPE:\n                                    case REACT_MEMO_TYPE:\n                                    case REACT_PROVIDER_TYPE:\n                                        return $$typeofType;\n                                    default:\n                                        return $$typeof;\n                                }\n                        }\n                    case REACT_PORTAL_TYPE:\n                        return $$typeof;\n                }\n            }\n            return undefined;\n        } // AsyncMode is deprecated along with isAsyncMode\n        var AsyncMode = REACT_ASYNC_MODE_TYPE;\n        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n        function isAsyncMode(object) {\n            {\n                if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n                    hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n                    console[\"warn\"](\"The ReactIs.isAsyncMode() alias has been deprecated, \" + \"and will be removed in React 17+. Update your code to use \" + \"ReactIs.isConcurrentMode() instead. It has the exact same API.\");\n                }\n            }\n            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n        }\n        function isConcurrentMode(object) {\n            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n        }\n        function isContextConsumer(object) {\n            return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n        function isContextProvider(object) {\n            return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n        function isElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        function isForwardRef(object) {\n            return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n        function isFragment(object) {\n            return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n        function isLazy(object) {\n            return typeOf(object) === REACT_LAZY_TYPE;\n        }\n        function isMemo(object) {\n            return typeOf(object) === REACT_MEMO_TYPE;\n        }\n        function isPortal(object) {\n            return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n        function isProfiler(object) {\n            return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n        function isStrictMode(object) {\n            return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n        function isSuspense(object) {\n            return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n        exports.AsyncMode = AsyncMode;\n        exports.ConcurrentMode = ConcurrentMode;\n        exports.ContextConsumer = ContextConsumer;\n        exports.ContextProvider = ContextProvider;\n        exports.Element = Element;\n        exports.ForwardRef = ForwardRef;\n        exports.Fragment = Fragment;\n        exports.Lazy = Lazy;\n        exports.Memo = Memo;\n        exports.Portal = Portal;\n        exports.Profiler = Profiler;\n        exports.StrictMode = StrictMode;\n        exports.Suspense = Suspense;\n        exports.isAsyncMode = isAsyncMode;\n        exports.isConcurrentMode = isConcurrentMode;\n        exports.isContextConsumer = isContextConsumer;\n        exports.isContextProvider = isContextProvider;\n        exports.isElement = isElement;\n        exports.isForwardRef = isForwardRef;\n        exports.isFragment = isFragment;\n        exports.isLazy = isLazy;\n        exports.isMemo = isMemo;\n        exports.isPortal = isPortal;\n        exports.isProfiler = isProfiler;\n        exports.isStrictMode = isStrictMode;\n        exports.isSuspense = isSuspense;\n        exports.isValidElementType = isValidElementType;\n        exports.typeOf = typeOf;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLEtBQXlCLEVBQWMsRUFFMUMsTUFBTTtJQUNMQyxvSkFBeUI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzP2IzMTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/ua-parser-js/src/ua-parser.js":
/*!****************************************************!*\
  !*** ./node_modules/ua-parser-js/src/ua-parser.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_RESULT__;\n/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v0.7.37\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License */ /*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */ /////////////////////////////////////////////////////////////////////////////////\n(function(window1, undefined) {\n    \"use strict\";\n    //////////////\n    // Constants\n    /////////////\n    var LIBVERSION = \"0.7.37\", EMPTY = \"\", UNKNOWN = \"?\", FUNC_TYPE = \"function\", UNDEF_TYPE = \"undefined\", OBJ_TYPE = \"object\", STR_TYPE = \"string\", MAJOR = \"major\", MODEL = \"model\", NAME = \"name\", TYPE = \"type\", VENDOR = \"vendor\", VERSION = \"version\", ARCHITECTURE = \"architecture\", CONSOLE = \"console\", MOBILE = \"mobile\", TABLET = \"tablet\", SMARTTV = \"smarttv\", WEARABLE = \"wearable\", EMBEDDED = \"embedded\", UA_MAX_LENGTH = 500;\n    var AMAZON = \"Amazon\", APPLE = \"Apple\", ASUS = \"ASUS\", BLACKBERRY = \"BlackBerry\", BROWSER = \"Browser\", CHROME = \"Chrome\", EDGE = \"Edge\", FIREFOX = \"Firefox\", GOOGLE = \"Google\", HUAWEI = \"Huawei\", LG = \"LG\", MICROSOFT = \"Microsoft\", MOTOROLA = \"Motorola\", OPERA = \"Opera\", SAMSUNG = \"Samsung\", SHARP = \"Sharp\", SONY = \"Sony\", XIAOMI = \"Xiaomi\", ZEBRA = \"Zebra\", FACEBOOK = \"Facebook\", CHROMIUM_OS = \"Chromium OS\", MAC_OS = \"Mac OS\";\n    ///////////\n    // Helper\n    //////////\n    var extend = function(regexes, extensions) {\n        var mergedRegexes = {};\n        for(var i in regexes){\n            if (extensions[i] && extensions[i].length % 2 === 0) {\n                mergedRegexes[i] = extensions[i].concat(regexes[i]);\n            } else {\n                mergedRegexes[i] = regexes[i];\n            }\n        }\n        return mergedRegexes;\n    }, enumerize = function(arr) {\n        var enums = {};\n        for(var i = 0; i < arr.length; i++){\n            enums[arr[i].toUpperCase()] = arr[i];\n        }\n        return enums;\n    }, has = function(str1, str2) {\n        return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n    }, lowerize = function(str) {\n        return str.toLowerCase();\n    }, majorize = function(version) {\n        return typeof version === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split(\".\")[0] : undefined;\n    }, trim = function(str, len) {\n        if (typeof str === STR_TYPE) {\n            str = str.replace(/^\\s\\s*/, EMPTY);\n            return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n        }\n    };\n    ///////////////\n    // Map helper\n    //////////////\n    var rgxMapper = function(ua, arrays) {\n        var i = 0, j, k, p, q, matches, match;\n        // loop through all regexes maps\n        while(i < arrays.length && !matches){\n            var regex = arrays[i], props = arrays[i + 1]; // odd sequence (1,3,5,..)\n            j = k = 0;\n            // try matching uastring with regexes\n            while(j < regex.length && !matches){\n                if (!regex[j]) {\n                    break;\n                }\n                matches = regex[j++].exec(ua);\n                if (!!matches) {\n                    for(p = 0; p < props.length; p++){\n                        match = matches[++k];\n                        q = props[p];\n                        // check if given property is actually array\n                        if (typeof q === OBJ_TYPE && q.length > 0) {\n                            if (q.length === 2) {\n                                if (typeof q[1] == FUNC_TYPE) {\n                                    // assign modified match\n                                    this[q[0]] = q[1].call(this, match);\n                                } else {\n                                    // assign given value, ignore regex match\n                                    this[q[0]] = q[1];\n                                }\n                            } else if (q.length === 3) {\n                                // check whether function or regex\n                                if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                    // call function (usually string mapper)\n                                    this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                } else {\n                                    // sanitize match using given regex\n                                    this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                }\n                            } else if (q.length === 4) {\n                                this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                            }\n                        } else {\n                            this[q] = match ? match : undefined;\n                        }\n                    }\n                }\n            }\n            i += 2;\n        }\n    }, strMapper = function(str, map) {\n        for(var i in map){\n            // check if current value is array\n            if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                for(var j = 0; j < map[i].length; j++){\n                    if (has(map[i][j], str)) {\n                        return i === UNKNOWN ? undefined : i;\n                    }\n                }\n            } else if (has(map[i], str)) {\n                return i === UNKNOWN ? undefined : i;\n            }\n        }\n        return str;\n    };\n    ///////////////\n    // String map\n    //////////////\n    // Safari < 3.0\n    var oldSafariMap = {\n        \"1.0\": \"/8\",\n        \"1.2\": \"/1\",\n        \"1.3\": \"/3\",\n        \"2.0\": \"/412\",\n        \"2.0.2\": \"/416\",\n        \"2.0.3\": \"/417\",\n        \"2.0.4\": \"/419\",\n        \"?\": \"/\"\n    }, windowsVersionMap = {\n        \"ME\": \"4.90\",\n        \"NT 3.11\": \"NT3.51\",\n        \"NT 4.0\": \"NT4.0\",\n        \"2000\": \"NT 5.0\",\n        \"XP\": [\n            \"NT 5.1\",\n            \"NT 5.2\"\n        ],\n        \"Vista\": \"NT 6.0\",\n        \"7\": \"NT 6.1\",\n        \"8\": \"NT 6.2\",\n        \"8.1\": \"NT 6.3\",\n        \"10\": [\n            \"NT 6.4\",\n            \"NT 10.0\"\n        ],\n        \"RT\": \"ARM\"\n    };\n    //////////////\n    // Regex map\n    /////////////\n    var regexes = {\n        browser: [\n            [\n                /\\b(?:crmo|crios)\\/([\\w\\.]+)/i // Chrome for Android/iOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Chrome\"\n                ]\n            ],\n            [\n                /edg(?:e|ios|a)?\\/([\\w\\.]+)/i // Microsoft Edge\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Edge\"\n                ]\n            ],\n            [\n                // Presto based\n                /(opera mini)\\/([-\\w\\.]+)/i,\n                /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,\n                /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i // Opera\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /opios[\\/ ]+([\\w\\.]+)/i // Opera mini on iphone >= 8.0\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA + \" Mini\"\n                ]\n            ],\n            [\n                /\\bopr\\/([\\w\\.]+)/i // Opera Webkit\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA\n                ]\n            ],\n            [\n                // Mixed\n                /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i // Baidu\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Baidu\"\n                ]\n            ],\n            [\n                /(kindle)\\/([\\w\\.]+)/i,\n                /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,\n                // Trident based\n                /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,\n                /(?:ms|\\()(ie) ([\\w\\.]+)/i,\n                // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n                /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n                /(heytap|ovi)browser\\/([\\d\\.]+)/i,\n                /(weibo)__([\\d\\.]+)/i // Weibo\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i // UCBrowser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"UC\" + BROWSER\n                ]\n            ],\n            [\n                /microm.+\\bqbcore\\/([\\w\\.]+)/i,\n                /\\bqbcore\\/([\\w\\.]+).+microm/i,\n                /micromessenger\\/([\\w\\.]+)/i // WeChat\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"WeChat\"\n                ]\n            ],\n            [\n                /konqueror\\/([\\w\\.]+)/i // Konqueror\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Konqueror\"\n                ]\n            ],\n            [\n                /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i // IE11\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"IE\"\n                ]\n            ],\n            [\n                /ya(?:search)?browser\\/([\\w\\.]+)/i // Yandex\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Yandex\"\n                ]\n            ],\n            [\n                /slbrowser\\/([\\w\\.]+)/i // Smart Lenovo Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Smart Lenovo \" + BROWSER\n                ]\n            ],\n            [\n                /(avast|avg)\\/([\\w\\.]+)/i // Avast/AVG Secure Browser\n            ],\n            [\n                [\n                    NAME,\n                    /(.+)/,\n                    \"$1 Secure \" + BROWSER\n                ],\n                VERSION\n            ],\n            [\n                /\\bfocus\\/([\\w\\.]+)/i // Firefox Focus\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX + \" Focus\"\n                ]\n            ],\n            [\n                /\\bopt\\/([\\w\\.]+)/i // Opera Touch\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA + \" Touch\"\n                ]\n            ],\n            [\n                /coc_coc\\w+\\/([\\w\\.]+)/i // Coc Coc Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Coc Coc\"\n                ]\n            ],\n            [\n                /dolfin\\/([\\w\\.]+)/i // Dolphin\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Dolphin\"\n                ]\n            ],\n            [\n                /coast\\/([\\w\\.]+)/i // Opera Coast\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA + \" Coast\"\n                ]\n            ],\n            [\n                /miuibrowser\\/([\\w\\.]+)/i // MIUI Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"MIUI \" + BROWSER\n                ]\n            ],\n            [\n                /fxios\\/([-\\w\\.]+)/i // Firefox for iOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX\n                ]\n            ],\n            [\n                /\\bqihu|(qi?ho?o?|360)browser/i // 360\n            ],\n            [\n                [\n                    NAME,\n                    \"360 \" + BROWSER\n                ]\n            ],\n            [\n                /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ],\n            [\n                [\n                    NAME,\n                    /(.+)/,\n                    \"$1 \" + BROWSER\n                ],\n                VERSION\n            ],\n            [\n                /samsungbrowser\\/([\\w\\.]+)/i // Samsung Internet\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    SAMSUNG + \" Internet\"\n                ]\n            ],\n            [\n                /(comodo_dragon)\\/([\\w\\.]+)/i // Comodo Dragon\n            ],\n            [\n                [\n                    NAME,\n                    /_/g,\n                    \" \"\n                ],\n                VERSION\n            ],\n            [\n                /metasr[\\/ ]?([\\d\\.]+)/i // Sogou Explorer\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Sogou Explorer\"\n                ]\n            ],\n            [\n                /(sogou)mo\\w+\\/([\\d\\.]+)/i // Sogou Mobile\n            ],\n            [\n                [\n                    NAME,\n                    \"Sogou Mobile\"\n                ],\n                VERSION\n            ],\n            [\n                /(electron)\\/([\\w\\.]+) safari/i,\n                /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,\n                /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i // QQBrowser/2345 Browser\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(lbbrowser)/i,\n                /\\[(linkedin)app\\]/i // LinkedIn App for iOS & Android\n            ],\n            [\n                NAME\n            ],\n            [\n                // WebView\n                /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i // Facebook App for iOS & Android\n            ],\n            [\n                [\n                    NAME,\n                    FACEBOOK\n                ],\n                VERSION\n            ],\n            [\n                /(Klarna)\\/([\\w\\.]+)/i,\n                /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,\n                /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,\n                /safari (line)\\/([\\w\\.]+)/i,\n                /\\b(line)\\/([\\w\\.]+)\\/iab/i,\n                /(alipay)client\\/([\\w\\.]+)/i,\n                /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i // Chromium/Instagram/Snapchat\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /\\bgsa\\/([\\w\\.]+) .*safari\\//i // Google Search Appliance on iOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"GSA\"\n                ]\n            ],\n            [\n                /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i // TikTok\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"TikTok\"\n                ]\n            ],\n            [\n                /headlesschrome(?:\\/([\\w\\.]+)| )/i // Chrome Headless\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    CHROME + \" Headless\"\n                ]\n            ],\n            [\n                / wv\\).+(chrome)\\/([\\w\\.]+)/i // Chrome WebView\n            ],\n            [\n                [\n                    NAME,\n                    CHROME + \" WebView\"\n                ],\n                VERSION\n            ],\n            [\n                /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i // Android Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Android \" + BROWSER\n                ]\n            ],\n            [\n                /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i // Mobile Safari\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Mobile Safari\"\n                ]\n            ],\n            [\n                /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i // Safari & Safari Mobile\n            ],\n            [\n                VERSION,\n                NAME\n            ],\n            [\n                /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i // Safari < 3.0\n            ],\n            [\n                NAME,\n                [\n                    VERSION,\n                    strMapper,\n                    oldSafariMap\n                ]\n            ],\n            [\n                /(webkit|khtml)\\/([\\w\\.]+)/i\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                // Gecko based\n                /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i // Netscape\n            ],\n            [\n                [\n                    NAME,\n                    \"Netscape\"\n                ],\n                VERSION\n            ],\n            [\n                /mobile vr; rv:([\\w\\.]+)\\).+firefox/i // Firefox Reality\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX + \" Reality\"\n                ]\n            ],\n            [\n                /ekiohf.+(flow)\\/([\\w\\.]+)/i,\n                /(swiftfox)/i,\n                /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n                /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n                /(firefox)\\/([\\w\\.]+)/i,\n                /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,\n                // Other\n                /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n                /(links) \\(([\\w\\.]+)/i,\n                /panasonic;(viera)/i // Panasonic Viera\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(cobalt)\\/([\\w\\.]+)/i // Cobalt\n            ],\n            [\n                NAME,\n                [\n                    VERSION,\n                    /master.|lts./,\n                    \"\"\n                ]\n            ]\n        ],\n        cpu: [\n            [\n                /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i // AMD64 (x64)\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"amd64\"\n                ]\n            ],\n            [\n                /(ia32(?=;))/i // IA32 (quicktime)\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    lowerize\n                ]\n            ],\n            [\n                /((?:i[346]|x)86)[;\\)]/i // IA32 (x86)\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"ia32\"\n                ]\n            ],\n            [\n                /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i // ARM64\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"arm64\"\n                ]\n            ],\n            [\n                /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i // ARMHF\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"armhf\"\n                ]\n            ],\n            [\n                // PocketPC mistakenly identified as PowerPC\n                /windows (ce|mobile); ppc;/i\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"arm\"\n                ]\n            ],\n            [\n                /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i // PowerPC\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    /ower/,\n                    EMPTY,\n                    lowerize\n                ]\n            ],\n            [\n                /(sun4\\w)[;\\)]/i // SPARC\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"sparc\"\n                ]\n            ],\n            [\n                /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    lowerize\n                ]\n            ]\n        ],\n        device: [\n            [\n                //////////////////////////\n                // MOBILES & TABLETS\n                /////////////////////////\n                // Samsung\n                /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SAMSUNG\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n                /samsung[- ]([-\\w]+)/i,\n                /sec-(sgh\\w+)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SAMSUNG\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Apple\n                /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i // iPod/iPhone\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\((ipad);[-\\w\\),; ]+apple/i,\n                /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n                /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(macintosh);/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ]\n            ],\n            [\n                // Sharp\n                /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SHARP\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Huawei\n                /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    HUAWEI\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n                /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    HUAWEI\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Xiaomi\n                /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,\n                /\\b; (\\w+) build\\/hm\\1/i,\n                /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,\n                /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,\n                /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,\n                /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ],\n            [\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    XIAOMI\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,\n                /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i // Mi Pad tablets\n            ],\n            [\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    XIAOMI\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // OPPO\n                /; (\\w+) bui.+ oppo/i,\n                /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"OPPO\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Vivo\n                /vivo (\\w+)(?: bui|\\))/i,\n                /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Vivo\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Realme\n                /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Realme\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Motorola\n                /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n                /\\bmot(?:orola)?[- ](\\w*)/i,\n                /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MOTOROLA\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MOTOROLA\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // LG\n                /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    LG\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n                /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n                /\\blg-?([\\d\\w]+) bui/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    LG\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Lenovo\n                /(ideatab[-\\w ]+)/i,\n                /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Lenovo\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // Nokia\n                /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n                /nokia[-_ ]?([-\\w\\.]*)/i\n            ],\n            [\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    \"Nokia\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Google\n                /(pixel c)\\b/i // Google Pixel C\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i // Google Pixel\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Sony\n                /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /sony tablet [ps]/i,\n                /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ],\n            [\n                [\n                    MODEL,\n                    \"Xperia Tablet\"\n                ],\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // OnePlus\n                / (kb2005|in20[12]5|be20[12][59])\\b/i,\n                /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"OnePlus\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Amazon\n                /(alexa)webm/i,\n                /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,\n                /(kf[a-z]+)( bui|\\)).+silk\\//i // Kindle Fire HD\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i // Fire Phone\n            ],\n            [\n                [\n                    MODEL,\n                    /(.+)/g,\n                    \"Fire Phone $1\"\n                ],\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // BlackBerry\n                /(playbook);[-\\w\\),; ]+(rim)/i // BlackBerry PlayBook\n            ],\n            [\n                MODEL,\n                VENDOR,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n                /\\(bb10; (\\w+)/i // BlackBerry 10\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    BLACKBERRY\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Asus\n                /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ASUS\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ASUS\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // HTC\n                /(nexus 9)/i // HTC Nexus 9\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"HTC\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,\n                // ZTE\n                /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n                /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ],\n            [\n                VENDOR,\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Acer\n                /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Acer\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // Meizu\n                /droid.+; (m[1-5] note) bui/i,\n                /\\bmz-([-\\w]{2,})/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Meizu\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Ulefone\n                /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Ulefone\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // MIXED\n                /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n                /(hp) ([\\w ]+\\w)/i,\n                /(asus)-?(\\w+)/i,\n                /(microsoft); (lumia[\\w ]+)/i,\n                /(lenovo)[-_ ]?([-\\w]+)/i,\n                /(jolla)/i,\n                /(oppo) ?([\\w ]+) bui/i // OPPO\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(kobo)\\s(ereader|touch)/i,\n                /(archos) (gamepad2?)/i,\n                /(hp).+(touchpad(?!.+tablet)|tablet)/i,\n                /(kindle)\\/([\\w\\.]+)/i,\n                /(nook)[\\w ]+build\\/(\\w+)/i,\n                /(dell) (strea[kpr\\d ]*[\\dko])/i,\n                /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,\n                /(trinity)[- ]*(t\\d{3}) bui/i,\n                /(gigaset)[- ]+(q\\w{1,9}) bui/i,\n                /(vodafone) ([\\w ]+)(?:\\)| bui)/i // Vodafone\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(surface duo)/i // Surface Duo\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MICROSOFT\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i // Fairphone\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Fairphone\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(u304aa)/i // AT&T\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"AT&T\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\bsie-(\\w*)/i // Siemens\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Siemens\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(rct\\w+) b/i // RCA Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"RCA\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(venue[\\d ]{2,7}) b/i // Dell Venue Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Dell\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(q(?:mv|ta)\\w+) b/i // Verizon Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Verizon\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i // Barnes & Noble Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Barnes & Noble\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(tm\\d{3}\\w+) b/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"NuVision\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(k88) b/i // ZTE K Series Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"ZTE\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(nx\\d{3}j) b/i // ZTE Nubia\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"ZTE\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(gen\\d{3}) b.+49h/i // Swiss GEN Mobile\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Swiss\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(zur\\d{3}) b/i // Swiss ZUR Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Swiss\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((zeki)?tb.*\\b) b/i // Zeki Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Zeki\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b([yr]\\d{2}) b/i,\n                /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i // Dragon Touch Tablet\n            ],\n            [\n                [\n                    VENDOR,\n                    \"Dragon Touch\"\n                ],\n                MODEL,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(ns-?\\w{0,9}) b/i // Insignia Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Insignia\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((nxa|next)-?\\w{0,9}) b/i // NextBook Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"NextBook\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i // Voice Xtreme Phones\n            ],\n            [\n                [\n                    VENDOR,\n                    \"Voice\"\n                ],\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(lvtel\\-)?(v1[12]) b/i // LvTel Phones\n            ],\n            [\n                [\n                    VENDOR,\n                    \"LvTel\"\n                ],\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(ph-1) /i // Essential PH-1\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Essential\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(v(100md|700na|7011|917g).*\\b) b/i // Envizen Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Envizen\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(trio[-\\w\\. ]+) b/i // MachSpeed Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"MachSpeed\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\btu_(1491) b/i // Rotor Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Rotor\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(shield[\\w ]+) b/i // Nvidia Shield Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Nvidia\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(sprint) (\\w+)/i // Sprint Phones\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(kin\\.[onetw]{3})/i // Microsoft Kin\n            ],\n            [\n                [\n                    MODEL,\n                    /\\./g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    MICROSOFT\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i // Zebra\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ZEBRA\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ZEBRA\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                ///////////////////\n                // SMARTTVS\n                ///////////////////\n                /smart-tv.+(samsung)/i // Samsung\n            ],\n            [\n                VENDOR,\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /hbbtv.+maple;(\\d+)/i\n            ],\n            [\n                [\n                    MODEL,\n                    /^/,\n                    \"SmartTV\"\n                ],\n                [\n                    VENDOR,\n                    SAMSUNG\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i // LG SmartTV\n            ],\n            [\n                [\n                    VENDOR,\n                    LG\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(apple) ?tv/i // Apple TV\n            ],\n            [\n                VENDOR,\n                [\n                    MODEL,\n                    APPLE + \" TV\"\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /crkey/i // Google Chromecast\n            ],\n            [\n                [\n                    MODEL,\n                    CHROME + \"cast\"\n                ],\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /droid.+aft(\\w+)( bui|\\))/i // Fire TV\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /\\(dtv[\\);].+(aquos)/i,\n                /(aquos-tv[\\w ]+)\\)/i // Sharp\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SHARP\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(bravia[\\w ]+)( bui|\\))/i // Sony\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(mitv-\\w{5}) bui/i // Xiaomi\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    XIAOMI\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /Hbbtv.*(technisat) (.*);/i // TechniSAT\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,\n                /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i // HbbTV devices\n            ],\n            [\n                [\n                    VENDOR,\n                    trim\n                ],\n                [\n                    MODEL,\n                    trim\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i // SmartTV from Unidentified Vendors\n            ],\n            [\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                ///////////////////\n                // CONSOLES\n                ///////////////////\n                /(ouya)/i,\n                /(nintendo) ([wids3utch]+)/i // Nintendo\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                /droid.+; (shield) bui/i // Nvidia\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Nvidia\"\n                ],\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                /(playstation [345portablevi]+)/i // Playstation\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i // Microsoft Xbox\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MICROSOFT\n                ],\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                ///////////////////\n                // WEARABLES\n                ///////////////////\n                /((pebble))app/i // Pebble\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i // Apple Watch\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /droid.+; (glass) \\d/i // Google Glass\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /droid.+; (wt63?0{2,3})\\)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ZEBRA\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /(quest( 2| pro)?)/i // Oculus Quest\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    FACEBOOK\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                ///////////////////\n                // EMBEDDED\n                ///////////////////\n                /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i // Tesla\n            ],\n            [\n                VENDOR,\n                [\n                    TYPE,\n                    EMBEDDED\n                ]\n            ],\n            [\n                /(aeobc)\\b/i // Echo Dot\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    EMBEDDED\n                ]\n            ],\n            [\n                ////////////////////\n                // MIXED (GENERIC)\n                ///////////////////\n                /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i // Android Phones from Unidentified Vendors\n            ],\n            [\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i // Android Tablets from Unidentified Vendors\n            ],\n            [\n                MODEL,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i // Unidentifiable Tablet\n            ],\n            [\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i // Unidentifiable Mobile\n            ],\n            [\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(android[-\\w\\. ]{0,9});.+buil/i // Generic Android Device\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Generic\"\n                ]\n            ]\n        ],\n        engine: [\n            [\n                /windows.+ edge\\/([\\w\\.]+)/i // EdgeHTML\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    EDGE + \"HTML\"\n                ]\n            ],\n            [\n                /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i // Blink\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Blink\"\n                ]\n            ],\n            [\n                /(presto)\\/([\\w\\.]+)/i,\n                /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,\n                /ekioh(flow)\\/([\\w\\.]+)/i,\n                /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,\n                /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,\n                /\\b(libweb)/i\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i // Gecko\n            ],\n            [\n                VERSION,\n                NAME\n            ]\n        ],\n        os: [\n            [\n                // Windows\n                /microsoft (windows) (vista|xp)/i // Windows (iTunes)\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i // Windows Phone\n            ],\n            [\n                NAME,\n                [\n                    VERSION,\n                    strMapper,\n                    windowsVersionMap\n                ]\n            ],\n            [\n                /windows nt 6\\.2; (arm)/i,\n                /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n                /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ],\n            [\n                [\n                    VERSION,\n                    strMapper,\n                    windowsVersionMap\n                ],\n                [\n                    NAME,\n                    \"Windows\"\n                ]\n            ],\n            [\n                // iOS/macOS\n                /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,\n                /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n                /cfnetwork\\/.+darwin/i\n            ],\n            [\n                [\n                    VERSION,\n                    /_/g,\n                    \".\"\n                ],\n                [\n                    NAME,\n                    \"iOS\"\n                ]\n            ],\n            [\n                /(mac os x) ?([\\w\\. ]*)/i,\n                /(macintosh|mac_powerpc\\b)(?!.+haiku)/i // Mac OS\n            ],\n            [\n                [\n                    NAME,\n                    MAC_OS\n                ],\n                [\n                    VERSION,\n                    /_/g,\n                    \".\"\n                ]\n            ],\n            [\n                // Mobile OSes\n                /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i // Android-x86/HarmonyOS\n            ],\n            [\n                VERSION,\n                NAME\n            ],\n            [\n                /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n                /(blackberry)\\w*\\/([\\w\\.]*)/i,\n                /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,\n                /\\((series40);/i // Series 40\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /\\(bb(10);/i // BlackBerry 10\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    BLACKBERRY\n                ]\n            ],\n            [\n                /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i // Symbian\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Symbian\"\n                ]\n            ],\n            [\n                /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX + \" OS\"\n                ]\n            ],\n            [\n                /web0s;.+rt(tv)/i,\n                /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i // WebOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"webOS\"\n                ]\n            ],\n            [\n                /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i // watchOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"watchOS\"\n                ]\n            ],\n            [\n                // Google Chromecast\n                /crkey\\/([\\d\\.]+)/i // Google Chromecast\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    CHROME + \"cast\"\n                ]\n            ],\n            [\n                /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i // Chromium OS\n            ],\n            [\n                [\n                    NAME,\n                    CHROMIUM_OS\n                ],\n                VERSION\n            ],\n            [\n                // Smart TVs\n                /panasonic;(viera)/i,\n                /(netrange)mmh/i,\n                /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,\n                // Console\n                /(nintendo|playstation) ([wids345portablevuch]+)/i,\n                /(xbox); +xbox ([^\\);]+)/i,\n                // Other\n                /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,\n                /(mint)[\\/\\(\\) ]?(\\w*)/i,\n                /(mageia|vectorlinux)[; ]/i,\n                /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n                /(hurd|linux) ?([\\w\\.]*)/i,\n                /(gnu) ?([\\w\\.]*)/i,\n                /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,\n                /(haiku) (\\w+)/i // Haiku\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(sunos) ?([\\w\\.\\d]*)/i // Solaris\n            ],\n            [\n                [\n                    NAME,\n                    \"Solaris\"\n                ],\n                VERSION\n            ],\n            [\n                /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,\n                /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,\n                /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,\n                /(unix) ?([\\w\\.]*)/i // UNIX\n            ],\n            [\n                NAME,\n                VERSION\n            ]\n        ]\n    };\n    /////////////////\n    // Constructor\n    ////////////////\n    var UAParser = function(ua, extensions) {\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n        var _navigator = typeof window1 !== UNDEF_TYPE && window1.navigator ? window1.navigator : undefined;\n        var _ua = ua || (_navigator && _navigator.userAgent ? _navigator.userAgent : EMPTY);\n        var _uach = _navigator && _navigator.userAgentData ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n        this.getBrowser = function() {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = \"Brave\";\n            }\n            return _browser;\n        };\n        this.getCPU = function() {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function() {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == \"Macintosh\" && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = \"iPad\";\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function() {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function() {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform != \"Unknown\") {\n                _os[NAME] = _uach.platform.replace(/chrome os/i, CHROMIUM_OS).replace(/macos/i, MAC_OS); // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function() {\n            return {\n                ua: this.getUA(),\n                browser: this.getBrowser(),\n                engine: this.getEngine(),\n                os: this.getOS(),\n                device: this.getDevice(),\n                cpu: this.getCPU()\n            };\n        };\n        this.getUA = function() {\n            return _ua;\n        };\n        this.setUA = function(ua) {\n            _ua = typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER = enumerize([\n        NAME,\n        VERSION,\n        MAJOR\n    ]);\n    UAParser.CPU = enumerize([\n        ARCHITECTURE\n    ]);\n    UAParser.DEVICE = enumerize([\n        MODEL,\n        VENDOR,\n        TYPE,\n        CONSOLE,\n        MOBILE,\n        SMARTTV,\n        TABLET,\n        WEARABLE,\n        EMBEDDED\n    ]);\n    UAParser.ENGINE = UAParser.OS = enumerize([\n        NAME,\n        VERSION\n    ]);\n    ///////////\n    // Export\n    //////////\n    // check js environment\n    if (typeof exports !== UNDEF_TYPE) {\n        // nodejs env\n        if (\"object\" !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (\"function\" === FUNC_TYPE && __webpack_require__.amdO) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n                return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else if (typeof window1 !== UNDEF_TYPE) {\n            // browser env\n            window1.UAParser = UAParser;\n        }\n    }\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window1 !== UNDEF_TYPE && (window1.jQuery || window1.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function() {\n            return parser.getUA();\n        };\n        $.ua.set = function(ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for(var prop in result){\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n})( true ? window : 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/ua-parser-js/src/ua-parser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/draft-js/dist/Draft.css":
/*!**********************************************!*\
  !*** ./node_modules/draft-js/dist/Draft.css ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"650aa68ec53c\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9kcmFmdC1qcy9kaXN0L0RyYWZ0LmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2RyYWZ0LWpzL2Rpc3QvRHJhZnQuY3NzPzY1MjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI2NTBhYTY4ZWM1M2NcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/draft-js/dist/Draft.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css":
/*!***********************************************************************!*\
  !*** ./node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css ***!
  \***********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"366aeb29db48\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kcmFmdC13eXNpd3lnL2Rpc3QvcmVhY3QtZHJhZnQtd3lzaXd5Zy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kcmFmdC13eXNpd3lnL2Rpc3QvcmVhY3QtZHJhZnQtd3lzaXd5Zy5jc3M/OWU3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjM2NmFlYjI5ZGI0OFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/editor.scss":
/*!********************************!*\
  !*** ./components/editor.scss ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"41108c113e2d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvZWRpdG9yLnNjc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvZWRpdG9yLnNjc3M/ZmNiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjQxMTA4YzExM2UyZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/editor.scss\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/wr/page.jsx":
/*!*******************************!*\
  !*** ./app/admin/wr/page.jsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-cookie */ \"(app-pages-browser)/./node_modules/react-cookie/esm/index.mjs\");\n/* harmony import */ var _components_editor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../components/editor */ \"(app-pages-browser)/./components/editor.jsx\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction Article() {\n    _s();\n    const [cookies] = (0,react_cookie__WEBPACK_IMPORTED_MODULE_3__.useCookies)([\n        \"token\"\n    ]);\n    const token = cookies.token;\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    return(/*   <div>\r\n      {token ? (\r\n        <MyEditor />\r\n      ) : (\r\n        setTimeout(() => {\r\n          router.push(\"/error\");\r\n        })\r\n      )}\r\n    </div>*/ /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_editor__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n            fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\app\\\\admin\\\\wr\\\\page.jsx\",\n            lineNumber: 22,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\app\\\\admin\\\\wr\\\\page.jsx\",\n        lineNumber: 21,\n        columnNumber: 5\n    }, this));\n}\n_s(Article, \"n7/AUuND60Xh8nwd65Po1zUxcq4=\", false, function() {\n    return [\n        react_cookie__WEBPACK_IMPORTED_MODULE_3__.useCookies,\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = Article;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Article);\nvar _c;\n$RefreshReg$(_c, \"Article\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9hZG1pbi93ci9wYWdlLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQzBDO0FBQ1E7QUFDTjtBQUU1QyxTQUFTRzs7SUFDUCxNQUFNLENBQUNDLFFBQVEsR0FBR0osd0RBQVVBLENBQUM7UUFBQztLQUFRO0lBQ3RDLE1BQU1LLFFBQVFELFFBQVFDLEtBQUs7SUFDM0IsTUFBTUMsU0FBU0osMERBQVNBO0lBRXhCLE9BQ0U7Ozs7Ozs7O1VBUU0saUJBQ04sOERBQUNLO2tCQUNDLDRFQUFDTiwwREFBUUE7Ozs7Ozs7Ozs7QUFHZjtHQW5CU0U7O1FBQ1dILG9EQUFVQTtRQUViRSxzREFBU0E7OztLQUhqQkM7QUFxQlQsK0RBQWVBLE9BQU9BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2FkbWluL3dyL3BhZ2UuanN4PzJhNzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcbmltcG9ydCB7IHVzZUNvb2tpZXMgfSBmcm9tIFwicmVhY3QtY29va2llXCI7XHJcbmltcG9ydCBNeUVkaXRvciBmcm9tIFwiLi4vLi4vLi4vY29tcG9uZW50cy9lZGl0b3JcIjtcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xyXG5cclxuZnVuY3Rpb24gQXJ0aWNsZSgpIHtcclxuICBjb25zdCBbY29va2llc10gPSB1c2VDb29raWVzKFtcInRva2VuXCJdKTtcclxuICBjb25zdCB0b2tlbiA9IGNvb2tpZXMudG9rZW47XHJcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICAvKiAgIDxkaXY+XHJcbiAgICAgIHt0b2tlbiA/IChcclxuICAgICAgICA8TXlFZGl0b3IgLz5cclxuICAgICAgKSA6IChcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgIHJvdXRlci5wdXNoKFwiL2Vycm9yXCIpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICl9XHJcbiAgICA8L2Rpdj4qL1xyXG4gICAgPGRpdj5cclxuICAgICAgPE15RWRpdG9yIC8+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcnRpY2xlO1xyXG4iXSwibmFtZXMiOlsidXNlQ29va2llcyIsIk15RWRpdG9yIiwidXNlUm91dGVyIiwiQXJ0aWNsZSIsImNvb2tpZXMiLCJ0b2tlbiIsInJvdXRlciIsImRpdiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/wr/page.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/editor.jsx":
/*!*******************************!*\
  !*** ./components/editor.jsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ \"(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! draft-js */ \"(app-pages-browser)/./node_modules/draft-js/lib/Draft.js\");\n/* harmony import */ var draft_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(draft_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var draft_js_dist_Draft_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! draft-js/dist/Draft.css */ \"(app-pages-browser)/./node_modules/draft-js/dist/Draft.css\");\n/* harmony import */ var react_draft_wysiwyg_dist_react_draft_wysiwyg_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-draft-wysiwyg/dist/react-draft-wysiwyg.css */ \"(app-pages-browser)/./node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\");\n/* harmony import */ var _editor_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./editor.scss */ \"(app-pages-browser)/./components/editor.scss\");\n/* harmony import */ var draftjs_to_html__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! draftjs-to-html */ \"(app-pages-browser)/./node_modules/draftjs-to-html/lib/draftjs-to-html.js\");\n/* harmony import */ var draftjs_to_html__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(draftjs_to_html__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var react_cookie__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-cookie */ \"(app-pages-browser)/./node_modules/react-cookie/esm/index.mjs\");\n/* harmony import */ var _utils_baseUrl__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/baseUrl */ \"(app-pages-browser)/./utils/baseUrl.jsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nconst Editor = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_react-draft-wysiwyg_dist_react-draft-wysiwyg_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! react-draft-wysiwyg */ \"(app-pages-browser)/./node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.js\", 23)).then((mod)=>mod.Editor), {\n    loadableGenerated: {\n        modules: [\n            \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx -> \" + \"react-draft-wysiwyg\"\n        ]\n    },\n    ssr: false\n});\n_c = Editor;\nconst MyEditor = ()=>{\n    _s();\n    const [cookies] = (0,react_cookie__WEBPACK_IMPORTED_MODULE_9__.useCookies)([\n        \"token\"\n    ]);\n    const token = cookies.token;\n    const [editorState, setEditorState] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(draft_js__WEBPACK_IMPORTED_MODULE_3__.EditorState.createEmpty());\n    const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [tag, setTag] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [file, setFile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [confirmationMessage, setConfirmationMessage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const onEditorStateChange = (state)=>{\n        setEditorState(state);\n    };\n    const handleTitleChange = (e)=>{\n        setTitle(e.target.value);\n    };\n    const handleTagChange = (e)=>{\n        setTag(e.target.value);\n    };\n    const handleFileChange = (e)=>{\n        setFile(e.target.files[0]); // Stockez le fichier sélectionné\n    };\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if (!title || !file || editorState.getCurrentContent().getPlainText(\"\\x01\") === \"\") {\n            setError(\"Veuillez remplir tous les champs.\");\n            return;\n        }\n        const formData = new FormData();\n        formData.append(\"title\", title);\n        formData.append(\"content\", draftjs_to_html__WEBPACK_IMPORTED_MODULE_7___default()((0,draft_js__WEBPACK_IMPORTED_MODULE_3__.convertToRaw)(editorState.getCurrentContent())));\n        formData.append(\"image\", file);\n        formData.append(\"tag\", tag);\n        fetch(\"\".concat(_utils_baseUrl__WEBPACK_IMPORTED_MODULE_8__.baseUrl, \"/articles\"), {\n            headers: {\n                Authorization: \"Bearer \".concat(token)\n            },\n            method: \"POST\",\n            body: formData\n        }).then((response)=>{\n            if (!response.ok) {\n                // Si la réponse indique une erreur (statut non 2xx), lancez une exception\n                throw new Error(\"Une erreur s'est produite lors de l'enregistrement de l'article.\");\n            }\n            return response.json();\n        })// eslint-disable-next-line no-unused-vars\n        .then(()=>{\n            setConfirmationMessage(\"L'article a \\xe9t\\xe9 enregistr\\xe9 avec succ\\xe8s !\");\n            setError(\"\"); // Réinitialisez les erreurs\n        }).catch((error)=>{\n            console.error(\"Erreur lors de l'enregistrement des donn\\xe9es : \", error);\n            setConfirmationMessage(\"\");\n            setError(\"Une erreur s'est produite lors de l'enregistrement de l'article.\");\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"form-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                encType: \"multipart/form-data\",\n                onSubmit: handleSubmit,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"form-flex\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        children: \"Titre:\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 98,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        name: \"title\",\n                                        value: title,\n                                        onChange: handleTitleChange\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 99,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                lineNumber: 97,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        children: \"Image:\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 107,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"file\",\n                                        name: \"image\",\n                                        onChange: handleFileChange\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 108,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                lineNumber: 106,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        children: \"Guidelines :\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 111,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"Photo du titre \\xe0 upload en 16:9\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 112,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"Commencer les titres par h3\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 113,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                lineNumber: 110,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        children: \"Contenu:\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 116,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Editor, {\n                                        editorState: editorState,\n                                        placeholder: \"L'article commence ici...\",\n                                        wrapperClassName: \"wrapper-class\",\n                                        editorClassName: \"editor-class\",\n                                        toolbarClassName: \"toolbar-class\",\n                                        toolbar: {\n                                            inline: {\n                                                inDropdown: true\n                                            },\n                                            list: {\n                                                inDropdown: true\n                                            },\n                                            textAlign: {\n                                                inDropdown: true\n                                            },\n                                            link: {\n                                                inDropdown: true\n                                            },\n                                            history: {\n                                                inDropdown: true\n                                            }\n                                        },\n                                        localization: {\n                                            locale: \"fr\"\n                                        },\n                                        onEditorStateChange: onEditorStateChange\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 117,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                lineNumber: 115,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        children: \"Tag:\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 137,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        name: \"tag\",\n                                        value: tag,\n                                        onChange: handleTagChange\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                        lineNumber: 138,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                                lineNumber: 136,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                        lineNumber: 96,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"submit\",\n                        children: \"Valider\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                        lineNumber: 146,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                lineNumber: 95,\n                columnNumber: 7\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"error\",\n                children: error\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                lineNumber: 148,\n                columnNumber: 17\n            }, undefined),\n            confirmationMessage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"success\",\n                children: confirmationMessage\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n                lineNumber: 149,\n                columnNumber: 31\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\sirba\\\\OneDrive\\\\Documents\\\\equip-velo-for-nextjs\\\\components\\\\editor.jsx\",\n        lineNumber: 94,\n        columnNumber: 5\n    }, undefined);\n};\n_s(MyEditor, \"QtoM2EY/KOSlziBKJEU72qKjXXU=\", false, function() {\n    return [\n        react_cookie__WEBPACK_IMPORTED_MODULE_9__.useCookies\n    ];\n});\n_c1 = MyEditor;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyEditor);\nvar _c, _c1;\n$RefreshReg$(_c, \"Editor\");\n$RefreshReg$(_c1, \"MyEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/editor.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/app-dynamic.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/app-dynamic.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return dynamic;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _loadable = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./lazy-dynamic/loadable */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js\"));\nfunction dynamic(dynamicOptions, options) {\n    const loadableOptions = {\n        // A loading component is not required, so we default it\n        loading: (param)=>{\n            let { error, isLoading, pastDelay } = param;\n            if (!pastDelay) return null;\n            if (true) {\n                if (isLoading) {\n                    return null;\n                }\n                if (error) {\n                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"p\", {\n                        children: [\n                            error.message,\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"br\", {}),\n                            error.stack\n                        ]\n                    });\n                }\n            }\n            return null;\n        }\n    };\n    if (typeof dynamicOptions === \"function\") {\n        loadableOptions.loader = dynamicOptions;\n    }\n    return (0, _loadable.default)({\n        ...loadableOptions,\n        ...options\n    });\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=app-dynamic.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9hcHAtZHluYW1pYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsMkNBQTBDO0lBQ3RDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyxnSUFBeUM7QUFDbEYsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUMscUdBQW1CO0FBQy9DLE1BQU1FLFNBQVMsV0FBVyxHQUFHSCx5QkFBeUJJLENBQUMsQ0FBQ0gsbUJBQU9BLENBQUMsbUZBQU87QUFDdkUsTUFBTUksWUFBWSxXQUFXLEdBQUdMLHlCQUF5QkksQ0FBQyxDQUFDSCxtQkFBT0EsQ0FBQyxpSEFBeUI7QUFDNUYsU0FBU0YsUUFBUU8sY0FBYyxFQUFFQyxPQUFPO0lBQ3BDLE1BQU1DLGtCQUFrQjtRQUNwQix3REFBd0Q7UUFDeERDLFNBQVMsQ0FBQ0M7WUFDTixJQUFJLEVBQUVDLEtBQUssRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUUsR0FBR0g7WUFDdEMsSUFBSSxDQUFDRyxXQUFXLE9BQU87WUFDdkIsSUFBSUMsSUFBcUMsRUFBRTtnQkFDdkMsSUFBSUYsV0FBVztvQkFDWCxPQUFPO2dCQUNYO2dCQUNBLElBQUlELE9BQU87b0JBQ1AsT0FBcUIsV0FBSCxHQUFJLElBQUdULFlBQVlhLElBQUksRUFBRSxLQUFLO3dCQUM1Q0MsVUFBVTs0QkFDTkwsTUFBTU0sT0FBTzs0QkFDYixXQUFXLEdBQUksSUFBR2YsWUFBWWdCLEdBQUcsRUFBRSxNQUFNLENBQUM7NEJBQzFDUCxNQUFNUSxLQUFLO3lCQUNkO29CQUNMO2dCQUNKO1lBQ0o7WUFDQSxPQUFPO1FBQ1g7SUFDSjtJQUNBLElBQUksT0FBT2IsbUJBQW1CLFlBQVk7UUFDdENFLGdCQUFnQlksTUFBTSxHQUFHZDtJQUM3QjtJQUNBLE9BQU8sQ0FBQyxHQUFHRCxVQUFVZ0IsT0FBTyxFQUFFO1FBQzFCLEdBQUdiLGVBQWU7UUFDbEIsR0FBR0QsT0FBTztJQUNkO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBT1osUUFBUTBCLE9BQU8sS0FBSyxjQUFlLE9BQU8xQixRQUFRMEIsT0FBTyxLQUFLLFlBQVkxQixRQUFRMEIsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPMUIsUUFBUTBCLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcks3QixPQUFPQyxjQUFjLENBQUNDLFFBQVEwQixPQUFPLEVBQUUsY0FBYztRQUFFekIsT0FBTztJQUFLO0lBQ25FSCxPQUFPOEIsTUFBTSxDQUFDNUIsUUFBUTBCLE9BQU8sRUFBRTFCO0lBQy9CNkIsT0FBTzdCLE9BQU8sR0FBR0EsUUFBUTBCLE9BQU87QUFDbEMsRUFFQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2FwcC1keW5hbWljLmpzPzg4NjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBkeW5hbWljO1xuICAgIH1cbn0pO1xuY29uc3QgX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0ID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9fL19pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdFwiKTtcbmNvbnN0IF9qc3hydW50aW1lID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuY29uc3QgX3JlYWN0ID0gLyojX19QVVJFX18qLyBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuXyhyZXF1aXJlKFwicmVhY3RcIikpO1xuY29uc3QgX2xvYWRhYmxlID0gLyojX19QVVJFX18qLyBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuXyhyZXF1aXJlKFwiLi9sYXp5LWR5bmFtaWMvbG9hZGFibGVcIikpO1xuZnVuY3Rpb24gZHluYW1pYyhkeW5hbWljT3B0aW9ucywgb3B0aW9ucykge1xuICAgIGNvbnN0IGxvYWRhYmxlT3B0aW9ucyA9IHtcbiAgICAgICAgLy8gQSBsb2FkaW5nIGNvbXBvbmVudCBpcyBub3QgcmVxdWlyZWQsIHNvIHdlIGRlZmF1bHQgaXRcbiAgICAgICAgbG9hZGluZzogKHBhcmFtKT0+e1xuICAgICAgICAgICAgbGV0IHsgZXJyb3IsIGlzTG9hZGluZywgcGFzdERlbGF5IH0gPSBwYXJhbTtcbiAgICAgICAgICAgIGlmICghcGFzdERlbGF5KSByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeHMpKFwicFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcImJyXCIsIHt9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvci5zdGFja1xuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKHR5cGVvZiBkeW5hbWljT3B0aW9ucyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGxvYWRhYmxlT3B0aW9ucy5sb2FkZXIgPSBkeW5hbWljT3B0aW9ucztcbiAgICB9XG4gICAgcmV0dXJuICgwLCBfbG9hZGFibGUuZGVmYXVsdCkoe1xuICAgICAgICAuLi5sb2FkYWJsZU9wdGlvbnMsXG4gICAgICAgIC4uLm9wdGlvbnNcbiAgICB9KTtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLWR5bmFtaWMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImR5bmFtaWMiLCJfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQiLCJyZXF1aXJlIiwiX2pzeHJ1bnRpbWUiLCJfcmVhY3QiLCJfIiwiX2xvYWRhYmxlIiwiZHluYW1pY09wdGlvbnMiLCJvcHRpb25zIiwibG9hZGFibGVPcHRpb25zIiwibG9hZGluZyIsInBhcmFtIiwiZXJyb3IiLCJpc0xvYWRpbmciLCJwYXN0RGVsYXkiLCJwcm9jZXNzIiwianN4cyIsImNoaWxkcmVuIiwibWVzc2FnZSIsImpzeCIsInN0YWNrIiwibG9hZGVyIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/app-dynamic.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js ***!
  \**********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"BailoutToCSR\", ({\n    enumerable: true,\n    get: function() {\n        return BailoutToCSR;\n    }\n}));\nconst _bailouttocsr = __webpack_require__(/*! ./bailout-to-csr */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/bailout-to-csr.js\");\nfunction BailoutToCSR(param) {\n    let { reason, children } = param;\n    if (false) {}\n    return children;\n} //# sourceMappingURL=dynamic-bailout-to-csr.js.map\n_c = BailoutToCSR;\nvar _c;\n$RefreshReg$(_c, \"BailoutToCSR\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvZHluYW1pYy1iYWlsb3V0LXRvLWNzci5qcyIsIm1hcHBpbmdzIjoicURBRWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILGdEQUErQztJQUMzQ0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGdCQUFnQkMsbUJBQU9BLENBQUMsZ0hBQWtCO0FBQ2hELFNBQVNGLGFBQWFHLEtBQUs7SUFDdkIsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRjtJQUMzQixJQUFJLEtBQTZCLEVBQUUsRUFFbEM7SUFDRCxPQUFPRTtBQUNYLEVBRUEsa0RBQWtEO0tBUnpDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvbGF6eS1keW5hbWljL2R5bmFtaWMtYmFpbG91dC10by1jc3IuanM/ZjY5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCYWlsb3V0VG9DU1JcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEJhaWxvdXRUb0NTUjtcbiAgICB9XG59KTtcbmNvbnN0IF9iYWlsb3V0dG9jc3IgPSByZXF1aXJlKFwiLi9iYWlsb3V0LXRvLWNzclwiKTtcbmZ1bmN0aW9uIEJhaWxvdXRUb0NTUihwYXJhbSkge1xuICAgIGxldCB7IHJlYXNvbiwgY2hpbGRyZW4gfSA9IHBhcmFtO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHRocm93IG5ldyBfYmFpbG91dHRvY3NyLkJhaWxvdXRUb0NTUkVycm9yKHJlYXNvbik7XG4gICAgfVxuICAgIHJldHVybiBjaGlsZHJlbjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHluYW1pYy1iYWlsb3V0LXRvLWNzci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiQmFpbG91dFRvQ1NSIiwiX2JhaWxvdXR0b2NzciIsInJlcXVpcmUiLCJwYXJhbSIsInJlYXNvbiIsImNoaWxkcmVuIiwiQmFpbG91dFRvQ1NSRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js ***!
  \********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst _dynamicbailouttocsr = __webpack_require__(/*! ./dynamic-bailout-to-csr */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.js\");\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule(mod) {\n    var _mod_default;\n    return {\n        default: (_mod_default = mod == null ? void 0 : mod.default) != null ? _mod_default : mod\n    };\n}\nconst defaultOptions = {\n    loader: ()=>Promise.resolve(convertModule(()=>null)),\n    loading: null,\n    ssr: true\n};\nfunction Loadable(options) {\n    const opts = {\n        ...defaultOptions,\n        ...options\n    };\n    const Lazy = /*#__PURE__*/ (0, _react.lazy)(()=>opts.loader().then(convertModule));\n    const Loading = opts.loading;\n    function LoadableComponent(props) {\n        const fallbackElement = Loading ? /*#__PURE__*/ (0, _jsxruntime.jsx)(Loading, {\n            isLoading: true,\n            pastDelay: true,\n            error: null\n        }) : null;\n        const children = opts.ssr ? /*#__PURE__*/ (0, _jsxruntime.jsx)(Lazy, {\n            ...props\n        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_dynamicbailouttocsr.BailoutToCSR, {\n            reason: \"next/dynamic\",\n            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Lazy, {\n                ...props\n            })\n        });\n        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Suspense, {\n            fallback: fallbackElement,\n            children: children\n        });\n    }\n    LoadableComponent.displayName = \"LoadableComponent\";\n    return LoadableComponent;\n}\n_c = Loadable;\nconst _default = Loadable; //# sourceMappingURL=loadable.js.map\nvar _c;\n$RefreshReg$(_c, \"Loadable\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvbG9hZGFibGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDJDQUEwQztJQUN0Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHFHQUFtQjtBQUMvQyxNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyxtRkFBTztBQUM5QixNQUFNRSx1QkFBdUJGLG1CQUFPQSxDQUFDLGdJQUEwQjtBQUMvRCx5RkFBeUY7QUFDekYscUdBQXFHO0FBQ3JHLHFFQUFxRTtBQUNyRSxTQUFTRyxjQUFjQyxHQUFHO0lBQ3RCLElBQUlDO0lBQ0osT0FBTztRQUNIQyxTQUFTLENBQUNELGVBQWVELE9BQU8sT0FBTyxLQUFLLElBQUlBLElBQUlFLE9BQU8sS0FBSyxPQUFPRCxlQUFlRDtJQUMxRjtBQUNKO0FBQ0EsTUFBTUcsaUJBQWlCO0lBQ25CQyxRQUFRLElBQUlDLFFBQVFDLE9BQU8sQ0FBQ1AsY0FBYyxJQUFJO0lBQzlDUSxTQUFTO0lBQ1RDLEtBQUs7QUFDVDtBQUNBLFNBQVNDLFNBQVNDLE9BQU87SUFDckIsTUFBTUMsT0FBTztRQUNULEdBQUdSLGNBQWM7UUFDakIsR0FBR08sT0FBTztJQUNkO0lBQ0EsTUFBTUUsT0FBcUIsV0FBSCxHQUFJLElBQUdmLE9BQU9nQixJQUFJLEVBQUUsSUFBSUYsS0FBS1AsTUFBTSxHQUFHVSxJQUFJLENBQUNmO0lBQ25FLE1BQU1nQixVQUFVSixLQUFLSixPQUFPO0lBQzVCLFNBQVNTLGtCQUFrQkMsS0FBSztRQUM1QixNQUFNQyxrQkFBa0JILFVBQXdCLFdBQUgsR0FBSSxJQUFHcEIsWUFBWXdCLEdBQUcsRUFBRUosU0FBUztZQUMxRUssV0FBVztZQUNYQyxXQUFXO1lBQ1hDLE9BQU87UUFDWCxLQUFLO1FBQ0wsTUFBTUMsV0FBV1osS0FBS0gsR0FBRyxHQUFpQixXQUFILEdBQUksSUFBR2IsWUFBWXdCLEdBQUcsRUFBRVAsTUFBTTtZQUNqRSxHQUFHSyxLQUFLO1FBQ1osS0FBbUIsV0FBSCxHQUFJLElBQUd0QixZQUFZd0IsR0FBRyxFQUFFckIscUJBQXFCMEIsWUFBWSxFQUFFO1lBQ3ZFQyxRQUFRO1lBQ1JGLFVBQXdCLFdBQUgsR0FBSSxJQUFHNUIsWUFBWXdCLEdBQUcsRUFBRVAsTUFBTTtnQkFDL0MsR0FBR0ssS0FBSztZQUNaO1FBQ0o7UUFDQSxPQUFxQixXQUFILEdBQUksSUFBR3RCLFlBQVl3QixHQUFHLEVBQUV0QixPQUFPNkIsUUFBUSxFQUFFO1lBQ3ZEQyxVQUFVVDtZQUNWSyxVQUFVQTtRQUNkO0lBQ0o7SUFDQVAsa0JBQWtCWSxXQUFXLEdBQUc7SUFDaEMsT0FBT1o7QUFDWDtLQTVCU1A7QUE2QlQsTUFBTWYsV0FBV2UsVUFFakIsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvbG9hZGFibGUuanM/MzA0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9kZWZhdWx0O1xuICAgIH1cbn0pO1xuY29uc3QgX2pzeHJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBfZHluYW1pY2JhaWxvdXR0b2NzciA9IHJlcXVpcmUoXCIuL2R5bmFtaWMtYmFpbG91dC10by1jc3JcIik7XG4vLyBOb3JtYWxpemUgbG9hZGVyIHRvIHJldHVybiB0aGUgbW9kdWxlIGFzIGZvcm0geyBkZWZhdWx0OiBDb21wb25lbnQgfSBmb3IgYFJlYWN0LmxhenlgLlxuLy8gQWxzbyBmb3IgYmFja3dhcmQgY29tcGF0aWJsZSBzaW5jZSBuZXh0L2R5bmFtaWMgYWxsb3dzIHRvIHJlc29sdmUgYSBjb21wb25lbnQgZGlyZWN0bHkgd2l0aCBsb2FkZXJcbi8vIENsaWVudCBjb21wb25lbnQgcmVmZXJlbmNlIHByb3h5IG5lZWQgdG8gYmUgY29udmVydGVkIHRvIGEgbW9kdWxlLlxuZnVuY3Rpb24gY29udmVydE1vZHVsZShtb2QpIHtcbiAgICB2YXIgX21vZF9kZWZhdWx0O1xuICAgIHJldHVybiB7XG4gICAgICAgIGRlZmF1bHQ6IChfbW9kX2RlZmF1bHQgPSBtb2QgPT0gbnVsbCA/IHZvaWQgMCA6IG1vZC5kZWZhdWx0KSAhPSBudWxsID8gX21vZF9kZWZhdWx0IDogbW9kXG4gICAgfTtcbn1cbmNvbnN0IGRlZmF1bHRPcHRpb25zID0ge1xuICAgIGxvYWRlcjogKCk9PlByb21pc2UucmVzb2x2ZShjb252ZXJ0TW9kdWxlKCgpPT5udWxsKSksXG4gICAgbG9hZGluZzogbnVsbCxcbiAgICBzc3I6IHRydWVcbn07XG5mdW5jdGlvbiBMb2FkYWJsZShvcHRpb25zKSB7XG4gICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgLi4uZGVmYXVsdE9wdGlvbnMsXG4gICAgICAgIC4uLm9wdGlvbnNcbiAgICB9O1xuICAgIGNvbnN0IExhenkgPSAvKiNfX1BVUkVfXyovICgwLCBfcmVhY3QubGF6eSkoKCk9Pm9wdHMubG9hZGVyKCkudGhlbihjb252ZXJ0TW9kdWxlKSk7XG4gICAgY29uc3QgTG9hZGluZyA9IG9wdHMubG9hZGluZztcbiAgICBmdW5jdGlvbiBMb2FkYWJsZUNvbXBvbmVudChwcm9wcykge1xuICAgICAgICBjb25zdCBmYWxsYmFja0VsZW1lbnQgPSBMb2FkaW5nID8gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShMb2FkaW5nLCB7XG4gICAgICAgICAgICBpc0xvYWRpbmc6IHRydWUsXG4gICAgICAgICAgICBwYXN0RGVsYXk6IHRydWUsXG4gICAgICAgICAgICBlcnJvcjogbnVsbFxuICAgICAgICB9KSA6IG51bGw7XG4gICAgICAgIGNvbnN0IGNoaWxkcmVuID0gb3B0cy5zc3IgPyAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKExhenksIHtcbiAgICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pIDogLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfZHluYW1pY2JhaWxvdXR0b2Nzci5CYWlsb3V0VG9DU1IsIHtcbiAgICAgICAgICAgIHJlYXNvbjogXCJuZXh0L2R5bmFtaWNcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKExhenksIHtcbiAgICAgICAgICAgICAgICAuLi5wcm9wc1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9yZWFjdC5TdXNwZW5zZSwge1xuICAgICAgICAgICAgZmFsbGJhY2s6IGZhbGxiYWNrRWxlbWVudCxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlblxuICAgICAgICB9KTtcbiAgICB9XG4gICAgTG9hZGFibGVDb21wb25lbnQuZGlzcGxheU5hbWUgPSBcIkxvYWRhYmxlQ29tcG9uZW50XCI7XG4gICAgcmV0dXJuIExvYWRhYmxlQ29tcG9uZW50O1xufVxuY29uc3QgX2RlZmF1bHQgPSBMb2FkYWJsZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZGFibGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIl9kZWZhdWx0IiwiX2pzeHJ1bnRpbWUiLCJyZXF1aXJlIiwiX3JlYWN0IiwiX2R5bmFtaWNiYWlsb3V0dG9jc3IiLCJjb252ZXJ0TW9kdWxlIiwibW9kIiwiX21vZF9kZWZhdWx0IiwiZGVmYXVsdCIsImRlZmF1bHRPcHRpb25zIiwibG9hZGVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJsb2FkaW5nIiwic3NyIiwiTG9hZGFibGUiLCJvcHRpb25zIiwib3B0cyIsIkxhenkiLCJsYXp5IiwidGhlbiIsIkxvYWRpbmciLCJMb2FkYWJsZUNvbXBvbmVudCIsInByb3BzIiwiZmFsbGJhY2tFbGVtZW50IiwianN4IiwiaXNMb2FkaW5nIiwicGFzdERlbGF5IiwiZXJyb3IiLCJjaGlsZHJlbiIsIkJhaWxvdXRUb0NTUiIsInJlYXNvbiIsIlN1c3BlbnNlIiwiZmFsbGJhY2siLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/lazy-dynamic/loadable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./utils/baseUrl.jsx":
/*!***************************!*\
  !*** ./utils/baseUrl.jsx ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   baseUrl: function() { return /* binding */ baseUrl; }\n/* harmony export */ });\nconst baseUrl = \"http://localhost:80\";\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL2Jhc2VVcmwuanN4IiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxVQUFVLHNCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi91dGlscy9iYXNlVXJsLmpzeD9kNDMxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBiYXNlVXJsID0gXCJodHRwOi8vbG9jYWxob3N0OjgwXCI7XHJcbiJdLCJuYW1lcyI6WyJiYXNlVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/baseUrl.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-cookie/esm/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/react-cookie/esm/index.mjs ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cookies: function() { return /* reexport safe */ universal_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   CookiesProvider: function() { return /* binding */ CookiesProvider; },\n/* harmony export */   useCookies: function() { return /* binding */ useCookies; },\n/* harmony export */   withCookies: function() { return /* binding */ withCookies; }\n/* harmony export */ });\n/* harmony import */ var universal_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! universal-cookie */ \"(app-pages-browser)/./node_modules/universal-cookie/esm/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hoist-non-react-statics */ \"(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst CookiesContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(new universal_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"]());\nconst { Provider, Consumer } = CookiesContext;\nclass CookiesProvider extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    render() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Provider, {\n            value: this.cookies\n        }, this.props.children);\n    }\n    constructor(props){\n        super(props);\n        if (props.cookies) {\n            this.cookies = props.cookies;\n        } else {\n            this.cookies = new universal_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"](undefined, props.defaultSetOptions);\n        }\n    }\n}\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ function __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction withCookies(WrappedComponent) {\n    // @ts-ignore\n    const name = WrappedComponent.displayName || WrappedComponent.name;\n    class CookieWrapper extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n        listen() {\n            this.props.cookies.addChangeListener(this.onChange);\n        }\n        unlisten(cookies) {\n            (cookies || this.props.cookies).removeChangeListener(this.onChange);\n        }\n        componentDidMount() {\n            this.listen();\n        }\n        componentDidUpdate(prevProps) {\n            if (prevProps.cookies !== this.props.cookies) {\n                this.unlisten(prevProps.cookies);\n                this.listen();\n            }\n        }\n        componentWillUnmount() {\n            this.unlisten();\n        }\n        render() {\n            const _a = this.props, { forwardedRef, cookies } = _a, restProps = __rest(_a, [\n                \"forwardedRef\",\n                \"cookies\"\n            ]);\n            const allCookies = cookies.getAll();\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(WrappedComponent, Object.assign({}, restProps, {\n                ref: forwardedRef,\n                cookies: cookies,\n                allCookies: allCookies\n            }));\n        }\n        constructor(){\n            super(...arguments);\n            this.onChange = ()=>{\n                // Make sure to update children with new values\n                this.forceUpdate();\n            };\n        }\n    }\n    CookieWrapper.displayName = \"withCookies(\".concat(name, \")\");\n    CookieWrapper.WrappedComponent = WrappedComponent;\n    const ForwardedComponent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref)=>{\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(Consumer, null, (cookies)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(CookieWrapper, Object.assign({\n                cookies: cookies\n            }, props, {\n                forwardedRef: ref\n            })));\n    });\n    ForwardedComponent.displayName = CookieWrapper.displayName;\n    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;\n    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__(ForwardedComponent, WrappedComponent);\n}\nfunction isInBrowser() {\n    return  true && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\n}\nfunction useCookies(dependencies) {\n    _s();\n    const cookies = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CookiesContext);\n    if (!cookies) {\n        throw new Error(\"Missing <CookiesProvider>\");\n    }\n    const [allCookies, setCookies] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>cookies.getAll());\n    if (isInBrowser()) {\n        (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n            function onChange() {\n                const newCookies = cookies.getAll({\n                    doNotUpdate: true\n                });\n                if (shouldUpdate(dependencies || null, newCookies, allCookies)) {\n                    setCookies(newCookies);\n                }\n            }\n            cookies.addChangeListener(onChange);\n            return ()=>{\n                cookies.removeChangeListener(onChange);\n            };\n        }, [\n            cookies,\n            allCookies\n        ]);\n    }\n    const setCookie = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>cookies.set.bind(cookies), [\n        cookies\n    ]);\n    const removeCookie = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>cookies.remove.bind(cookies), [\n        cookies\n    ]);\n    const updateCookies = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>cookies.update.bind(cookies), [\n        cookies\n    ]);\n    return [\n        allCookies,\n        setCookie,\n        removeCookie,\n        updateCookies\n    ];\n}\n_s(useCookies, \"fzQEVTBD07vEvpaRSkOAsyjvLvQ=\");\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\n    if (!dependencies) {\n        return true;\n    }\n    for (let dependency of dependencies){\n        if (newCookies[dependency] !== oldCookies[dependency]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-cookie/esm/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/universal-cookie/esm/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/universal-cookie/esm/index.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Cookies; }\n/* harmony export */ });\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(app-pages-browser)/./node_modules/cookie/index.js\");\n\nfunction hasDocumentCookie() {\n    const testingValue = typeof global === \"undefined\" ? undefined : global.TEST_HAS_DOCUMENT_COOKIE;\n    if (typeof testingValue === \"boolean\") {\n        return testingValue;\n    }\n    // Can we get/set cookies on document.cookie?\n    return typeof document === \"object\" && typeof document.cookie === \"string\";\n}\nfunction parseCookies(cookies) {\n    if (typeof cookies === \"string\") {\n        return cookie__WEBPACK_IMPORTED_MODULE_0__.parse(cookies);\n    } else if (typeof cookies === \"object\" && cookies !== null) {\n        return cookies;\n    } else {\n        return {};\n    }\n}\nfunction readCookie(value) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const cleanValue = cleanupCookieValue(value);\n    if (!options.doNotParse) {\n        try {\n            return JSON.parse(cleanValue);\n        } catch (e) {\n        // At least we tried\n        }\n    }\n    // Ignore clean value if we failed the deserialization\n    // It is not relevant anymore to trim those values\n    return value;\n}\nfunction cleanupCookieValue(value) {\n    // express prepend j: before serializing a cookie\n    if (value && value[0] === \"j\" && value[1] === \":\") {\n        return value.substr(2);\n    }\n    return value;\n}\nclass Cookies {\n    _emitChange(params) {\n        for(let i = 0; i < this.changeListeners.length; ++i){\n            this.changeListeners[i](params);\n        }\n    }\n    _checkChanges(previousCookies) {\n        const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n        names.forEach((name)=>{\n            if (previousCookies[name] !== this.cookies[name]) {\n                this._emitChange({\n                    name,\n                    value: readCookie(this.cookies[name])\n                });\n            }\n        });\n    }\n    _startPolling() {\n        this.pollingInterval = setInterval(this.update, 300);\n    }\n    _stopPolling() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n        }\n    }\n    get(name) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        return readCookie(this.cookies[name], options);\n    }\n    getAll() {\n        let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        const result = {};\n        for(let name in this.cookies){\n            result[name] = readCookie(this.cookies[name], options);\n        }\n        return result;\n    }\n    set(name, value, options) {\n        if (options) {\n            options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n        } else {\n            options = this.defaultSetOptions;\n        }\n        const stringValue = typeof value === \"string\" ? value : JSON.stringify(value);\n        this.cookies = Object.assign(Object.assign({}, this.cookies), {\n            [name]: stringValue\n        });\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie__WEBPACK_IMPORTED_MODULE_0__.serialize(name, stringValue, options);\n        }\n        this._emitChange({\n            name,\n            value,\n            options\n        });\n    }\n    remove(name, options) {\n        const finalOptions = options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), {\n            expires: new Date(1970, 1, 1, 0, 0, 1),\n            maxAge: 0\n        });\n        this.cookies = Object.assign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = cookie__WEBPACK_IMPORTED_MODULE_0__.serialize(name, \"\", finalOptions);\n        }\n        this._emitChange({\n            name,\n            value: undefined,\n            options\n        });\n    }\n    addChangeListener(callback) {\n        this.changeListeners.push(callback);\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n            if ( true && \"cookieStore\" in window) {\n                window.cookieStore.addEventListener(\"change\", this.update);\n            } else {\n                this._startPolling();\n            }\n        }\n    }\n    removeChangeListener(callback) {\n        const idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n            if ( true && \"cookieStore\" in window) {\n                window.cookieStore.removeEventListener(\"change\", this.update);\n            } else {\n                this._stopPolling();\n            }\n        }\n    }\n    constructor(cookies, defaultSetOptions = {}){\n        this.changeListeners = [];\n        this.HAS_DOCUMENT_COOKIE = false;\n        this.update = ()=>{\n            if (!this.HAS_DOCUMENT_COOKIE) {\n                return;\n            }\n            const previousCookies = this.cookies;\n            this.cookies = cookie__WEBPACK_IMPORTED_MODULE_0__.parse(document.cookie);\n            this._checkChanges(previousCookies);\n        };\n        const domCookies = typeof document === \"undefined\" ? \"\" : document.cookie;\n        this.cookies = parseCookies(cookies || domCookies);\n        this.defaultSetOptions = defaultSetOptions;\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/universal-cookie/esm/index.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Csirba%5COneDrive%5CDocuments%5Cequip-velo-for-nextjs%5Capp%5Cadmin%5Cwr%5Cpage.jsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);